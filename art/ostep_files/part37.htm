<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>4.2 Process API</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part36.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part38.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">4.2 Process API</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Though we defer discussion of a real process API until a subsequent chapter, here we first give some idea of what must be included in any interface of an operating system. These APIs, in some form, are available on any modern operating system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 64pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="s27">Create: </span><span class="p">An operating system must include some method to cre- ate new processes. When you type a command into the shell, or double-click on an application icon, the OS is invoked to create a new process to run the program you have indicated.</span></p><p class="s4" style="padding-left: 64pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="s27">Destroy: </span><span class="p">As there is an interface for process creation, systems also provide an interface to destroy processes forcefully. Of course, many processes will run and just exit by themselves when complete; when they don’t, however, the user may wish to kill them, and thus an in- terface to halt a runaway process is quite useful.</span></p><p class="s4" style="padding-left: 64pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="s27">Wait: </span><span class="p">Sometimes it is useful to wait for a process to stop running; thus some kind of waiting interface is often provided.</span></p><p class="s4" style="padding-left: 64pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="s27">Miscellaneous Control: </span><span class="p">Other than killing or waiting for a process, there are sometimes other controls that are possible. For example, most operating systems provide some kind of method to suspend a process (stop it from running for a while) and then resume it (con- tinue it running).</span></p><p class="s4" style="padding-left: 64pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="s27">Status: </span><span class="p">There are usually interfaces to get some status information about a process as well, such as how long it has run for, or what state it is in.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="251" height="276" alt="image" src="Image_021.png"/></span></p><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: center;">code</p><p class="s46" style="text-indent: 0pt;text-align: center;">static data heap</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: center;">stack</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="text-indent: 0pt;text-align: center;">Process</p><p style="text-indent: 0pt;text-align: left;"/><p class="s47" style="text-indent: 0pt;line-height: 7pt;text-align: left;">Program</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: center;">Loading:</p><p class="s46" style="text-indent: 0pt;text-align: center;">Takes on-disk program and reads it into the address space of process</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="padding-left: 6pt;text-indent: 7pt;text-align: left;">code static data</p><p style="text-indent: 0pt;text-align: left;"/><p class="s48" style="padding-bottom: 1pt;padding-left: 153pt;text-indent: 0pt;text-align: left;">CPU         Memory</p><p class="s48" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">Disk</p><p style="padding-top: 4pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">Figure 4.1: <b>Loading: From Program To Process</b></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part36.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part38.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
