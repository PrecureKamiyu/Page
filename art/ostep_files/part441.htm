<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>40.4 Directory Organization</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part440.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part442.htm">下一个 &gt;</a></p><p class="s40" style="padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">40.4 Directory Organization</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">In vsfs (as in many file systems), directories have a simple organiza- tion; a directory basically just contains a list of (entry name, inode num- ber) pairs. For each file or directory in a given directory, there is a string and a number in the data block(s) of the directory. For each string, there may also be a length (assuming variable-sized names).</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 88%;text-align: justify;">For example, assume a directory <span class="s41">dir </span>(inode number 5) has three files in it (<span class="s41">foo</span>, <span class="s41">bar</span>, and <span class="s41">foobar</span>), and their inode numbers are 12, 13, and 24 respectively. The on-disk data for <span class="s41">dir </span>might look like this:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">inum | reclen | strlen | name</p><table style="border-collapse:collapse;margin-left:51.0597pt" cellspacing="0"><tr style="height:8pt"><td style="width:26pt"><p class="s42" style="padding-right: 14pt;text-indent: 0pt;line-height: 6pt;text-align: right;">5</p></td><td style="width:35pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 6pt;text-align: center;">4</p></td><td style="width:32pt"><p class="s42" style="padding-right: 10pt;text-indent: 0pt;line-height: 6pt;text-align: right;">2</p></td><td style="width:38pt"><p class="s42" style="padding-left: 10pt;text-indent: 0pt;line-height: 6pt;text-align: left;">.</p></td></tr><tr style="height:8pt"><td style="width:26pt"><p class="s42" style="padding-right: 14pt;text-indent: 0pt;line-height: 7pt;text-align: right;">2</p></td><td style="width:35pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 7pt;text-align: center;">4</p></td><td style="width:32pt"><p class="s42" style="padding-right: 10pt;text-indent: 0pt;line-height: 7pt;text-align: right;">3</p></td><td style="width:38pt"><p class="s42" style="padding-left: 10pt;text-indent: 0pt;line-height: 7pt;text-align: left;">..</p></td></tr><tr style="height:8pt"><td style="width:26pt"><p class="s42" style="padding-right: 14pt;text-indent: 0pt;line-height: 7pt;text-align: right;">12</p></td><td style="width:35pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 7pt;text-align: center;">4</p></td><td style="width:32pt"><p class="s42" style="padding-right: 10pt;text-indent: 0pt;line-height: 7pt;text-align: right;">4</p></td><td style="width:38pt"><p class="s42" style="padding-left: 10pt;text-indent: 0pt;line-height: 7pt;text-align: left;">foo</p></td></tr><tr style="height:8pt"><td style="width:26pt"><p class="s42" style="padding-right: 14pt;text-indent: 0pt;line-height: 7pt;text-align: right;">13</p></td><td style="width:35pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 7pt;text-align: center;">4</p></td><td style="width:32pt"><p class="s42" style="padding-right: 10pt;text-indent: 0pt;line-height: 7pt;text-align: right;">4</p></td><td style="width:38pt"><p class="s42" style="padding-left: 10pt;text-indent: 0pt;line-height: 7pt;text-align: left;">bar</p></td></tr><tr style="height:8pt"><td style="width:26pt"><p class="s42" style="padding-right: 14pt;text-indent: 0pt;line-height: 6pt;text-align: right;">24</p></td><td style="width:35pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 6pt;text-align: center;">8</p></td><td style="width:32pt"><p class="s42" style="padding-right: 10pt;text-indent: 0pt;line-height: 6pt;text-align: right;">7</p></td><td style="width:38pt"><p class="s42" style="padding-left: 10pt;text-indent: 0pt;line-height: 6pt;text-align: left;">foobar</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">In this example, each entry has an inode number, record length (the total bytes for the name plus any left over space), string length (the actual length of the name), and finally the name of the entry. Note that each di- rectory has two extra entries, <span class="s41">. </span>“dot” and <span class="s41">.. </span>“dot-dot”; the dot directory is just the current directory (in this example, <span class="s41">dir</span>), whereas dot-dot is the parent directory (in this case, the root).</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Deleting a file (e.g., calling <span class="s41">unlink()</span>) can leave an empty space in the middle of the directory, and hence there should be some way to mark that as well (e.g., with a reserved inode number such as zero). Such a delete is one reason the record length is used: a new entry may reuse an old, bigger entry and thus have extra space within.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">You might be wondering where exactly directories are stored. Often, file systems treat directories as a special type of file. Thus, a directory has an inode, somewhere in the inode table (with the type field of the inode marked as “directory” instead of “regular file”). The directory has data blocks pointed to by the inode (and perhaps, indirect blocks); these data blocks live in the data block region of our simple file system. Our on-disk structure thus remains unchanged.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">We should also note again that this simple linear list of directory en- tries is not the only way to store such information. As before, any data structure is possible. For example, XFS [S+96] stores directories in B-tree form, making file create operations (which have to ensure that a file name has not been used before creating it) faster than systems with simple lists that must be scanned in their entirety.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part440.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part442.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
