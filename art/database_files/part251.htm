<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>13.6  Column-Oriented Storage</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part250.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part252.htm">下一个 &gt;</a></p><p class="s65" style="padding-top: 4pt;padding-left: 72pt;text-indent: 0pt;text-align: left;"><a name="bookmark270">13.6  </a><span style=" color: #00AEEF;">Column-Oriented Storage</span><a name="bookmark304">&zwnj;</a></p><p style="padding-top: 11pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Databases traditionally store all attributes of a tuple together in a record, and tuples are stored in a ﬁle as we have just seen. Such a storage layout is referred to as a <i>row-oriented storage</i>.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In contrast, in <span class="s63">column-oriented storage</span>, also called a <span class="s63">columnar storage</span>, each at- tribute of a relation is stored separately, with values of the attribute from successive tuples stored at successive positions in the ﬁle. Figure 13.14 shows how the <i>instructor </i>relation would be stored in column-oriented storage, with each attribute stored sepa- rately.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In the simplest form of column-oriented storage, each attribute is stored in a sepa- rate ﬁle. Further, each ﬁle is <i>compressed</i>, to reduce its size. (We discuss more complex schemes that store columns consecutively in a single ﬁle later in this section.)</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">If a query needs to access the entire contents of the <i>i</i>th row of a table, the values at the <i>i</i>th position in each of the columns are retrieved and used to reconstruct the row. Column-oriented storage thus has the drawback that fetching multiple attributes of a single tuple requires multiple <span class="s44">I/O </span>operations. Thus, it is not suitable for queries that fetch multiple attributes from a few rows of a relation.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">However, column-oriented storage is well suited for data analysis queries, which process many rows of a relation, but often only access some of the attributes. The reasons are as follows:</p><p style="padding-top: 2pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Reduced </b><span class="s47">I/O</span>. When a query needs to access only a few attributes of a relation with a large number of attributes, the remaining attributes need not be fetched from disk into memory. In contrast, in row-oriented storage, irrelevant attributes are fetched into memory from disk. The reduction in <span class="s44">I/O </span>can lead to signiﬁcant reduction in query execution cost.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:13pt"><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 11pt;text-align: center;">10101</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">12121</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">15151</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">22222</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">32343</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">33456</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">45565</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">58583</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">76543</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">76766</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">83821</p></td></tr><tr style="height:14pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;">98345</p></td></tr></table><p style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Srinivasan</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Wu Mozart Einstein El Said Gold Katz Caliﬁeri Singh Crick Brandt Kim</p><p style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Comp. Sci.</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Finance Music Physics History Physics Comp. Sci. History Finance Biology Comp. Sci. Elec. Eng.</p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:13pt"><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;">65000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">90000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">40000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">95000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">60000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">87000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">75000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">62000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">80000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">72000</p></td></tr><tr style="height:13pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">92000</p></td></tr><tr style="height:14pt"><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">80000</p></td></tr></table><p class="s258" style="padding-left: 150pt;text-indent: 0pt;text-align: left;">			</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-top: 4pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 13.14 </span>Columnar representation of the <span class="s91">instructor </span>relation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Improved </b><span class="s47">CPU </span><b>cache performance</b>. When the query processor fetches the con- tents of a particular attribute, with modern <span class="s44">CPU </span>architectures multiple consecutive bytes, called a cache line, are fetched from memory to <span class="s44">CPU </span>cache. If these bytes are accessed later, access is much faster if they are in cache than if they have to be fetched from main memory. However, if these adjacent bytes contain values for attributes that are not be needed by the query, fetching them into cache wastes memory bandwidth and uses up cache space that could have been used for other data. Column-oriented storage does not suﬀer from this problem, since adjacent bytes are from the same column, and data analysis queries usually access all these values consecutively.</p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Improved compression</span><span class="p">. Storing values of the same type together signiﬁcantly in- creases the eﬀectiveness of compression, when compared to compressing data stored in row format; in the latter case, adjacent attributes are of diﬀerent types, re- ducing the eﬃciency of compression. Compression signiﬁcantly reduces the time taken to retrieve data from disk, which is often the highest-cost component for many queries. If the compressed ﬁles are stored in memory, the in-memory stor- age space is also reduced correspondingly, which is particularly important since main memory is signiﬁcantly more expensive than disk storage.</span></p><p style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Vector processing</b>. Many modern <span class="s44">CPU </span>architectures support <span class="s63">vector processing</span>, which allows a <span class="s44">CPU </span>operation to be applied in parallel on a number of elements of an array. Storing data columnwise allows vector processing of operations such as comparing an attribute with a constant, which is important for applying selec- tion conditions on a relation. Vector processing can also be used to compute an aggregate of multiple values in parallel, instead of aggregating the values one at a time.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: right;">As a result of these beneﬁts, column-oriented storage is increasingly used in data- warehousing applications, where queries are primarily data analysis queries. It should be noted that indexing and query processing techniques need to be carefully designed to get the performance beneﬁts of column-oriented storage. We outline indexing and query processing techniques based on bitmap representations, which are well suited to column-oriented storage, in Section 14.9; further details are provided in Section 24.3.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: left;">Databases that use column-oriented storage are referred to as <span class="s63">column stores</span>, while databases that use row-oriented storage are referred to as <span class="s63">row stores</span>.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: left;">It should be noted that column-oriented storage does have several drawbacks, which make them unsuitable for transaction processing.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Cost of tuple reconstruction</span><span class="p">. As we saw earlier, reconstructing a tuple from the individual columns can be expensive, negating the beneﬁts of columnar represen- tation if many columns need to be reconstructed. While tuple reconstruction is common in transaction-processing applications, data analysis applications usually</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: 0pt;text-align: justify;">output only a few columns out of many that are stored in “fact tables” in data warehouses.</p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Cost of tuple deletion and update</span><span class="p">. Deleting or updating a single tuple in a com- pressed representation would require rewriting the entire sequence of tuples that are compressed as one unit. Since updates and deletes are common in transaction- processing applications, column-oriented storage would result in a high cost for these operations if a large number of tuples were compressed as one unit.</span></p><p style="padding-left: 139pt;text-indent: 15pt;text-align: justify;">In contrast, data-warehousing systems typically do not support updates to tu- ples, and instead support only insert of new tuples and bulk deletes of a large number of old tuples at a time. Inserts are done at the end of the relation repre- sentation, that is, new tuples are appended to the relation. Since small deletes and updates do not occur in a data warehouse, large sequences of attribute values can be stored and compressed together as one unit, allowing for better compression than with small sequences.</p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Cost of decompression</b>. Fetching data from a compressed representation requires <i>decompression</i>, which in the simplest compressed representations requires reading all the data from the beginning of a ﬁle. Transaction processing queries usually only need to fetch a few records; sequential access is expensive in such a scenario, since many irrelevant records may have to be decompressed to access a few relevant records.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Since data analysis queries tend to access many consecutive records, the time spent on decompression is typically not wasted. However, even data analysis queries do not need to access records that fail selection conditions, and attributes of such records should be skipped to reduce disk <span class="s44">I/O</span>.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">To allow skipping of attribute values from such records, compressed representa- tions for column stores allow decompression to start at any of a number of points in the ﬁle, skipping earlier parts of the ﬁle. This could be done by starting compression afresh after every 10,000 values (for example). By keeping track of where in the ﬁle the data start for each group of 10,000 values, it is possible to access the <i>i</i>th value by going</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌋</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 234pt;text-indent: 0pt;line-height: 6pt;text-align: left;">∕<span class="p">10000 and starting decompression from there.</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 6pt;text-align: left;">to the start of the group <span class="s15">⌊</span><i>i</i></p><p class="s42" style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">ORC <span class="s43">and Parquet are columnar ﬁle representations used in many big-data pro- cessing applications. In </span>ORC<span class="s43">, a row-oriented representation is converted to column- oriented representation as follows: A sequence of tuples occupying several hundred megabytes is broken up into a columnar representation called a </span><span class="s63">stripe</span><span class="p">. An </span><span class="s44">ORC </span><span class="p">ﬁle contains several such stripes, with each stripe occupying around 250 megabytes.</span></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Figure 13.15 illustrates some details of the <span class="s44">ORC </span>ﬁle format. Each stripe has index data followed by row data. The row data area stores a compressed representation of the sequence of value for the ﬁrst column, followed by the compressed representation of the second column, and so on. The index data region of a stripe stores for each attribute the starting point within the stripe for each group of (say) 10,000 values of</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="76" height="86" alt="image" src="Image_2596.png"/></span></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s321" style="padding-top: 2pt;padding-left: 5pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">Index Data</p></td></tr><tr style="height:51pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s321" style="padding-top: 8pt;padding-left: 5pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Row Data</p></td></tr><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s321" style="padding-top: 2pt;padding-left: 5pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">Stripe Footer</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: right;">Col1 Index</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 2pt;padding-right: 5pt;text-indent: 0pt;text-align: right;">Col2 Index</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 2pt;padding-right: 4pt;text-indent: 0pt;text-align: right;">Col3 Index</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 2pt;padding-right: 4pt;text-indent: 0pt;text-align: right;">Col4 Index</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 2pt;padding-right: 5pt;text-indent: 0pt;text-align: right;">Col5 Index</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s322" style="padding-top: 4pt;padding-left: 165pt;text-indent: 0pt;text-align: left;">Stripe 1</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="76" height="73" alt="image" src="Image_2597.png"/></span></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s321" style="padding-top: 2pt;padding-left: 5pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">Index Data</p></td></tr><tr style="height:51pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s321" style="padding-top: 8pt;padding-left: 5pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Row Data</p></td></tr><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s321" style="padding-top: 2pt;padding-left: 5pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">Stripe Footer</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s323" style="padding-top: 8pt;padding-left: 165pt;text-indent: 0pt;text-align: left;">Stripe 2          <span><img width="76" height="28" alt="image" src="Image_2598.png"/></span></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 1pt;padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">Col1 Data</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 1pt;padding-left: 4pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Col2 Data</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 1pt;padding-left: 4pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Col3 Data</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 1pt;padding-left: 4pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Col4 Data</p></td></tr><tr style="height:17pt"><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s321" style="padding-top: 1pt;padding-left: 4pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Col5 Data</p></td></tr></table><p class="s258" style="padding-left: 238pt;text-indent: 0pt;text-align: left;"><span><img width="2" height="58" alt="image" src="Image_2599.png"/></span>	</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s321" style="padding-top: 2pt;padding-left: 5pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">Index Data</p></td></tr><tr style="height:51pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s321" style="padding-top: 8pt;padding-left: 5pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Row Data</p></td></tr><tr style="height:18pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#656668;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s321" style="padding-top: 2pt;padding-left: 5pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">Stripe Footer</p></td></tr><tr style="height:18pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#656668;border-left-style:solid;border-left-width:1pt;border-left-color:#656668;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#656668;border-right-style:solid;border-right-width:1pt;border-right-color:#656668"><p class="s321" style="padding-top: 3pt;padding-left: 5pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">File Footer</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s322" style="padding-left: 165pt;text-indent: 0pt;text-align: left;">Stripe n</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 13.15 </span>Columnar data representation in the <span class="s157">ORC </span>file format.</p><p style="padding-top: 9pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">that attribute.<span class="s76">7</span> The index is useful for quick access to a desired tuple or sequence of tuples; the index also allows queries containing selections to skip groups of tuples if the query determines that no tuple in those groups satisﬁes the selections. <span class="s44">ORC </span>ﬁles store several other pieces of information in the stripe footer and ﬁle footer, which we skip here.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Some column-store systems allow groups of columns that are often accessed to- gether to be stored together, instead of breaking up each column into a diﬀerent ﬁle. Such systems thus allow a spectrum of choices that range from pure column-oriented storage, where every column is stored separately, to pure row-oriented storage, where all columns are stored together. The choice of which attributes to store together depends on the query workload.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="95" height="1" alt="image" src="Image_2600.png"/></span></p><p class="s77" style="padding-top: 3pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">7<span class="s153">ORC </span><span class="s78">ﬁles have some other information that we ignore here.</span></p><p class="s66" style="padding-top: 3pt;padding-left: 238pt;text-indent: 0pt;text-align: left;"><a name="bookmark271">13.7 </a><span style=" color: #00AEEF;">Storage Organization in Main-Memory Databases  </span><span class="s164">615</span><a name="bookmark305">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2601.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2602.png"/></span></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Some of the beneﬁts of column-oriented storage can be obtained even in a row- oriented storage system by logically decomposing a relation into multiple relations. For example, the <i>instructor </i>relation could be decomposed into three relations, containing (<span class="s69">ID</span>, <i>name</i>), (<span class="s69">ID</span>, <i>dept name</i>) and (<span class="s69">ID</span>, <i>salary</i>), respectively. Then, queries that access only the name do not have to fetch the <i>dept name </i>and <i>salary </i>attributes. However, in this case the same <span class="s69">ID </span>attribute occurs in three tuples, resulting in wasted space.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Some database systems use a column-oriented representation for data within a disk block, without using compression.<span class="s76">8</span> Thus, a block contains data for a set of tuples, and all attributes for that set of tuples are stored in the same block. Such a scheme is useful in transaction-processing systems, since retrieving all attribute values does not require multiple disk accesses. At the same time, using column-oriented storage within the block provides the beneﬁts of more eﬃcient memory access and cache usage, as well as the potential for using vector processing on the data. However, this scheme does not allow irrelevant disk blocks to be skipped when only a few attributes are retrieved, nor does it give the beneﬁts of compression. Thus, it represents a point in the space between pure row-oriented storage and pure column-oriented storage.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Some databases, such as <span class="s44">SAP HANA </span>support two underlying storage systems, one a row-oriented one designed for transaction processing, and the second a column- oriented one, designed for data analysis. Tuples are normally created in the row- oriented store but are later migrated to the column-oriented store when they are no longer likely to be accessed in a row-oriented manner. Such systems are called <span class="s63">hybrid row/column stores</span>.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In other cases, applications store transactional data in a row-oriented store, but copy data periodically (e.g., once a day or a few times a day) to a data warehouse, which may use a column-oriented storage system.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Sybase <span class="s44">IQ </span>was one of the early products to use column-oriented storage, but there are now several research projects and companies that have developed database systems based on column stores, including C-Store, Vertica, MonetDB, Vectorwise, among oth- ers. See Further Reading at the end of the chapter for more details.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part250.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part252.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
