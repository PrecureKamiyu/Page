<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>19.6 Issue: Replacement Policy</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part195.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part197.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">19.6 Issue: Replacement Policy</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">As with any cache, and thus also with the TLB, one more issue that we must consider is <b>cache replacement</b>. Specifically, when we are installing a new entry in the TLB, we have to <b>replace </b>an old one, and thus the question: which one to replace?</p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;">T<span class="s7">HE </span>C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>D<span class="s7">ESIGN </span>TLB R<span class="s7">EPLACEMENT </span>P<span class="s7">OLICY</span></p><p style="padding-left: 8pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Which TLB entry should be replaced when we add a new TLB entry? The goal, of course, being to minimize the <b>miss rate </b>(or increase <b>hit rate</b>) and thus improve performance.</p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"/><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">We will study such policies in some detail when we tackle the problem of swapping pages to disk in a virtual memory system; here we’ll just highlight a few of typical policies. One common approach is to evict the <b>least-recently-used </b>or <b>LRU </b>entry. The idea here is to take advantage of locality in the memory-reference stream; thus, it is likely that an entry that has not recently been used is a good candidate for eviction as (perhaps) it won’t soon be referenced again. Another typical approach is to use a <b>random </b>policy. Randomness sometimes makes a bad decision but has the nice property that there are not any weird corner case behaviors that can cause pessimal behavior, e.g., think of a loop accessing <span class="s43">n </span><span class="s44">+ 1 </span>pages, a TLB of size <span class="s43">n</span>, and an LRU replacement policy.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="340" height="22" alt="image" src="Image_257.png"/></span></p><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: left;">VPN</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: left;">G</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: left;">PFN</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: left;">ASID</p><p class="s46" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">C D V</p><p style="text-indent: 0pt;text-align: left;"/><p class="s109" style="padding-top: 4pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31</p><p style="padding-top: 3pt;padding-left: 122pt;text-indent: 0pt;text-align: left;">Figure 19.4: <b>A MIPS TLB Entry</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part195.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part197.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
