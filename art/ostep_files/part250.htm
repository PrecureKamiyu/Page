<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>23.2 Memory Management Hardware</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part249.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part251.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">23.2 Memory Management Hardware</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">The VAX-11 provided a 32-bit virtual address space per process, di- vided into 512-byte pages. Thus, a virtual address consisted of a 23-bit VPN and a 9-bit offset. Further, the upper two bits of the VPN were used to differentiate which segment the page resided within; thus, the system was a hybrid of paging and segmentation, as we saw previously.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 88%;text-align: justify;">The lower-half of the address space was known as “process space” and is unique to each process. In the first half of process space (known as <span class="s41">P0</span>), the user program is found, as well as a heap which grows downward. In the second half of process space (<span class="s41">P1</span>), we find the stack, which grows upwards. The upper-half of the address space is known as system space (<span class="s41">S</span>), although only half of it is used. Protected OS code and data reside here, and the OS is in this way shared across processes.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">One major concern of the VMS designers was the incredibly small size of pages in the VAX hardware (512 bytes). This size, chosen for historical reasons, has the fundamental problem of making simple linear page ta- bles excessively large. Thus, one of the first goals of the VMS designers was to make sure that VMS would not overwhelm memory with page tables.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">The system reduced the pressure page tables place on memory in two ways. First, by segmenting the user address space into two, the VAX-11 provides a page table for each of these regions (<span class="s41">P0 </span>and <span class="s41">P1</span>) per process; thus, no page-table space is needed for the unused portion of the address space between the stack and the heap. The base and bounds registers are used as you would expect; a base register holds the address of the page table for that segment, and the bounds holds its size (i.e., number of page-table entries).</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Second, the OS reduces memory pressure even further by placing user page tables (for <span class="s41">P0 </span>and <span class="s41">P1</span>, thus two per process) in kernel virtual mem- ory. Thus, when allocating or growing a page table, the kernel allocates space out of its own virtual memory, in segment <span class="s41">S</span>. If memory comes un- der severe pressure, the kernel can swap pages of these page tables out to disk, thus making physical memory available for other uses.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Putting page tables in kernel virtual memory means that address trans- lation is even further complicated. For example, to translate a virtual ad- dress in <span class="s41">P0 </span>or <span class="s41">P1</span>, the hardware has to first try to look up the page-table entry for that page in its page table (the <span class="s41">P0 </span>or <span class="s41">P1 </span>page table for that pro-</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:75pt" colspan="2" bgcolor="#000000"><p class="s130" style="padding-left: 17pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Page 0: Invalid</p></td></tr><tr style="height:22pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#D3D3D3"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s83" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">User Code</p></td></tr><tr style="height:15pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#D3D3D3"><p class="s83" style="padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">User Heap</p></td></tr><tr style="height:15pt"><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:2pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:2pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:75pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:45pt"><td style="width:75pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:37pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:2pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:38pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:14pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#D3D3D3"><p class="s83" style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">User Stack</p></td></tr><tr style="height:7pt"><td style="width:75pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#A8A8A8"><p class="s83" style="padding-left: 21pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Trap Tables</p></td></tr><tr style="height:7pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#A8A8A8"><p class="s83" style="padding-left: 21pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Kernel Data</p></td></tr><tr style="height:22pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#A8A8A8"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s83" style="padding-left: 20pt;text-indent: 0pt;text-align: left;">Kernel Code</p></td></tr><tr style="height:15pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" bgcolor="#A8A8A8"><p class="s83" style="padding-top: 3pt;padding-left: 20pt;text-indent: 0pt;text-align: left;">Kernel Heap</p></td></tr><tr style="height:15pt"><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:2pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:2pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:7pt"><td style="width:75pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:74pt"><td style="width:75pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s83" style="padding-left: 26pt;padding-right: 25pt;text-indent: 0pt;text-align: center;">Unused</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s77" style="padding-top: 3pt;padding-left: 137pt;text-indent: 0pt;text-align: left;">0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 187pt;text-indent: 0pt;line-height: 3pt;text-align: left;"><span><img width="4" height="5" alt="image" src="Image_301.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s131" style="padding-left: 137pt;text-indent: 0pt;text-align: left;">2<span class="s132">30</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 187pt;text-indent: 0pt;line-height: 3pt;text-align: left;"><span><img width="4" height="5" alt="image" src="Image_302.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s131" style="padding-left: 137pt;text-indent: 0pt;text-align: left;">2<span class="s132">31</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">User (P0)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="6" height="298" alt="image" src="Image_303.png"/></span></p><p class="s77" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">User (P1)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">System (S)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="103" height="112" alt="image" src="Image_304.png"/></span></p><p class="s131" style="padding-left: 53pt;text-indent: 0pt;text-align: center;">2<span class="s132">32</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 99pt;text-indent: 0pt;text-align: left;">Figure 23.1: <b>The VAX/VMS Address Space</b></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">cess); in doing so, however, the hardware may first have to consult the system page table (which lives in physical memory); with that transla- tion complete, the hardware can learn the address of the page of the page table, and then finally learn the address of the desired memory access. All of this, fortunately, is made faster by the VAX’s hardware-managed TLBs, which usually (hopefully) circumvent this laborious lookup.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part249.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part251.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
