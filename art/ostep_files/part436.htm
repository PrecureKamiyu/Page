<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>File System Implementation</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part435.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part437.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 3pt;padding-left: 151pt;text-indent: 0pt;text-align: left;">File System Implementation</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">In this chapter, we introduce a simple file system implementation, known as <b>vsfs </b>(the <b>Very Simple File System</b>). This file system is a simplified version of a typical U<span class="s7">NIX </span>file system and thus serves to introduce some of the basic on-disk structures, access methods, and various policies that you will find in many file systems today.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The file system is pure software; unlike our development of CPU and memory virtualization, we will not be adding hardware features to make some aspect of the file system work better (though we will want to pay at- tention to device characteristics to make sure the file system works well). Because of the great flexibility we have in building a file system, many different ones have been built, literally from AFS (the Andrew File Sys- tem) [H+88] to ZFS (Sun’s Zettabyte File System) [B07]. All of these file systems have different data structures and do some things better or worse than their peers. Thus, the way we will be learning about file systems is through case studies: first, a simple file system (vsfs) in this chapter to introduce most concepts, and then a series of studies of real file systems to understand how they can differ in practice.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;">T<span class="s7">HE </span>C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>I<span class="s7">MPLEMENT </span>A S<span class="s7">IMPLE </span>F<span class="s7">ILE </span>S<span class="s7">YSTEM</span></p><p style="padding-left: 9pt;text-indent: 11pt;line-height: 89%;text-align: left;">How can we build a simple file system? What structures are needed on the disk? What do they need to track? How are they accessed?</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part437.htm">40.1 The Way To Think</a><a class="toc0" href="part438.htm">40.2 Overall Organization</a><a class="toc0" href="part439.htm">40.3 File Organization: The Inode</a><a class="toc1" href="part440.htm">The Multi-Level Index</a><a class="toc0" href="part441.htm">40.4 Directory Organization</a><a class="toc0" href="part442.htm">40.5 Free Space Management</a><a class="toc0" href="part443.htm">40.6 Access Paths: Reading and Writing</a><a class="toc1" href="part444.htm">Reading A File From Disk</a><a class="toc1" href="part445.htm">Writing to Disk</a><a class="toc2" href="part446.htm">Table 40.4: File Creation Timeline (Time Increasing Downward)</a><a class="toc0" href="part447.htm">40.7 Caching and Buffering</a><a class="toc0" href="part448.htm">40.8 Summary</a><a class="toc0" href="part449.htm">References</a><a class="toc0" href="part450.htm">Homework</a><a class="toc1" href="part451.htm">Questions</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part435.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part437.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
