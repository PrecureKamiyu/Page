<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Practice Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part239.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part241.htm">下一个 &gt;</a></p><p class="s45" style="padding-top: 11pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Practice Exercises</p><p class="s42" style="padding-top: 11pt;padding-left: 124pt;text-indent: -30pt;text-align: justify;"><span class="s46">12.1  </span>SSDs <span class="s43">can be used as a storage layer between memory and magnetic disks, with some parts of the database (e.g., some relations) stored on </span>SSDs <span class="s43">and the rest on magnetic disks. Alternatively, </span>SSDs <span class="s43">can be used as a buﬀer or cache for magnetic disks; frequently used blocks would reside on the </span>SSD <span class="s43">layer, while infrequently used blocks would reside on magnetic disk.</span></p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -18pt;text-align: justify;">a. Which of the two alternatives would you choose if you need to support real-time queries that must be answered within a guaranteed short period of time? Explain why.</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -19pt;text-align: justify;">b. Which of the two alternatives would you choose if you had a very large <i>customer </i>relation, where only some disk blocks of the relation are ac- cessed frequently, with other blocks rarely accessed.</p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -30pt;text-align: justify;">12.2  <span class="p">Some databases use magnetic disks in a way that only sectors in outer tracks are used, while sectors in inner tracks are left unused. What might be the beneﬁts of doing so?</span></p><p class="s46" style="padding-top: 6pt;padding-left: 93pt;text-indent: 0pt;text-align: justify;">12.3 <span class="p">Flash storage:</span></p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -18pt;text-align: justify;">a.  How is the ﬂash translation table, which is used to map logical page numbers to physical page numbers, created in memory?</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -19pt;text-align: justify;">b. Suppose you have a 64-gigabyte ﬂash storage system, with a 4096-byte page size. How big would the ﬂash translation table be, assuming each page has a 32-bit address, and the table is stored as an array?</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -18pt;text-align: justify;">c.  Suggest how to reduce the size of the translation table if very often long ranges of consecutive logical page numbers are mapped to consecutive physical page numbers.</p><p class="s46" style="padding-top: 6pt;padding-left: 93pt;text-indent: 0pt;text-align: justify;">12.4  <span class="p">Consider the following data and parity-block arrangement on four disks:</span></p><p class="s64" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">Exercises  <span class="s164">583</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="227" height="100" alt="image" src="Image_2543.png"/></span></p><p class="s42" style="text-indent: 0pt;line-height: 11pt;text-align: left;">Disk 1  Disk 2  Disk 3</p><p class="s69" style="padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">B<span class="s176">1</span>    B<span class="s176">2</span>    B<span class="s176">3</span></p><p class="s69" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">P<span class="s176">1</span>    B<span class="s176">5</span>    B<span class="s176">6</span></p><p class="s69" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">B<span class="s176">8</span>    P<span class="s176">2</span>    B<span class="s176">9</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 8pt;text-indent: -8pt;line-height: 11pt;text-align: left;">Disk 4</p><p class="s69" style="padding-top: 3pt;padding-left: 6pt;text-indent: 1pt;line-height: 113%;text-align: justify;">B<span class="s176">4</span> B<span class="s176">7</span> <span class="s317">B</span><span class="s318">10</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">…</p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">…</p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">…</p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">…</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="padding-top: 5pt;padding-left: 155pt;text-indent: 0pt;line-height: 87%;text-align: justify;"><span class="p">The </span>B<span class="s97">i</span><span class="p">s represent data blocks; the </span>P<span class="s97">i</span><span class="p">s represent parity blocks. Parity block </span>P<span class="s97">i </span><span class="p">is the parity block for data blocks </span>B<span class="s130">4</span><span class="s149">i</span><span class="s136">−</span><span class="s130">3 </span><span class="s94">to </span>B<span class="s130">4</span><span class="s149">i</span><span class="p">. What, if any, problem might this arrangement present?</span></p><p style="padding-top: 6pt;padding-left: 155pt;text-indent: -30pt;text-align: justify;"><b>12.5  </b>A database administrator can choose how many disks are organized into a single <span class="s44">RAID </span>5 array. What are the trade-oﬀs between having fewer disks ver- sus more disks, in terms of cost, reliability, performance during failure, and performance during rebuild?</p><p style="padding-top: 6pt;padding-left: 155pt;text-indent: -30pt;text-align: justify;"><b>12.6 </b>A power failure that occurs while a disk block is being written could result in the block being only partially written. Assume that partially written blocks can be detected. An atomic block write is one where either the disk block is fully written or nothing is written (i.e., there are no partial writes). Suggest schemes for getting the eﬀect of atomic block writes with the following <span class="s44">RAID </span>schemes. Your schemes should involve work on recovery from failure.</p><p style="padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;">a. <span class="s44">RAID </span>level 1 (mirroring)</p><p style="padding-top: 6pt;padding-left: 162pt;text-indent: 0pt;text-align: left;">b. <span class="s44">RAID </span>level 5 (block interleaved, distributed parity)</p><p class="s46" style="padding-top: 7pt;padding-left: 155pt;text-indent: -30pt;text-align: justify;">12.7  <span class="p">Storing all blocks of a large ﬁle on consecutive disk blocks would minimize seeks during sequential ﬁle reads. Why is it impractical to do so? What do op- erating systems do instead, to minimize the number of seeks during sequential reads?</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part239.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part241.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
