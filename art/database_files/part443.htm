<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part442.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part444.htm">下一个 &gt;</a></p><p class="s45" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">Exercises</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 124pt;text-indent: -35pt;text-align: justify;"><b>24.10 </b>The stepped merge variant of the <span class="s44">LSM </span>tree allows multiple trees per level. What are the tradeoﬀs in having more trees per level?</p><p style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;"><b>24.11  </b>Suppose you want to use the idea of a quadtree for data in three dimensions. How would the resultant data structure (called an <i>octtree</i>) divide up space?</p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;">24.12  <span class="p">Explain the distinction between closed and open hashing. Discuss the relative merits of each technique in database applications.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;">24.13  <span class="p">What are the causes of bucket overﬂow in a hash ﬁle organization? What can be done to reduce the occurrence of bucket overﬂows?</span></p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;">24.14 <span class="p">Why is a hash structure not the best choice for a search key on which range queries are likely?</span></p><p style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;"><b>24.15  </b>Our description of static hashing assumes that a large contiguous stretch of disk blocks can be allocated to a static hash table. Suppose you can allocate only <i>C </i>contiguous blocks. Suggest how to implement the hash table, if it can be much larger than <i>C </i>blocks. Access to a block should still be eﬃcient.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part442.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part444.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
