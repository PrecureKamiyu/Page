<?xml version="1.0" encoding="utf-8"?><html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/"><head>
<meta name="dcterms.conformsTo" content="PXE Basic 1.0"></meta>
<meta name="generator" content="PXE Tools version 1.39.109"></meta>
<!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.109, partial=false-->
<title>6.6 Data Center Networking</title><link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/sepia.css"></link><link rel="alternate stylesheet" type="text/css" title="night" href="../css/night.css"></link><link rel="stylesheet" type="text/css" title="day" href="../css/main.css"></link><link rel="stylesheet" type="text/css" title="day" href="../css/print.css"></link>
<script src="js/format_lg_obj.js"></script>
</head><body epub:type="bodymatter">
<section id="P70010119520000000000000000026DA" class="level1"><header><h1 class="title" id="P700101195200000000000000000B15D" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B15D" epub:type="title"><span class="pagebreak" title="495" id="P70010119520000000000000000026DC" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026DC" epub:type="pagebreak" role="doc-pagebreak"></span><span class="number">6.6</span> Data Center Networking</h1></header>
<p id="P700101195200000000000000000B15E" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B15E">In recent years, Internet companies such as Google, Microsoft, Facebook, and ­Amazon (as well as their counterparts in Asia and Europe) have built massive data centers, each housing tens to hundreds of thousands of hosts, and concurrently supporting many distinct cloud applications (e.g., search, e-mail, social networking, and e-commerce). Each data center has its own <span class="keyword" id="P70010119520000000000000000026DE" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026DE"><b>data center network</b></span> that interconnects its hosts with each other and interconnects the data center with the Internet. In this section, we provide a brief introduction to data center networking for cloud applications.</p>
<p id="P700101195200000000000000000B15F" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B15F">The cost of a large data center is huge, exceeding $12 million per month for a 100,000 host data center <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392B" data-foobar="7">[Greenberg 2009a]</a>. Of these costs, about 45 percent can be attributed to the hosts themselves (which need to be replaced every 3–4 years); 25 percent to infrastructure, including transformers, uninterruptable power supplies (UPS) systems, generators for long-term outages, and cooling systems; 15 percent for electric utility costs for the power draw; and 15 percent for networking, including network gear (switches, routers and load balancers), external links, and transit traffic costs. (In these percentages, costs for equipment are amortized so that a common cost metric is applied for one-time purchases and ongoing expenses such as power.) While networking is not the largest cost, networking innovation is the key to reducing overall cost and maximizing performance <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392B" data-foobar="7">[Greenberg 2009a]</a>.</p>
<p id="P700101195200000000000000000B160" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B160">The worker bees in a data center are the hosts: They serve content (e.g., Web pages and videos), store e-mails and documents, and collectively perform massively distributed computations (e.g., distributed index computations for search engines). The hosts in data centers, called <span class="keyword" id="P70010119520000000000000000026E1" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026E1"><b>blades</b></span> and resembling pizza boxes, are generally commodity hosts that include CPU, memory, and disk storage. The hosts are stacked in racks, with each rack typically having 20 to 40 blades. At the top of each rack there is a switch, aptly named the <span class="keyword" id="P70010119520000000000000000026E2" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026E2"><b>Top of Rack (TOR) switch</b></span>, that interconnects the hosts in the rack with each other and with other switches in the data center. Specifically, each host in the rack has a network interface card that connects to its TOR switch, and each TOR switch has additional ports that can be connected to other switches. Today hosts typically have 40 Gbps Ethernet connections to their TOR switches <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003932" data-foobar="7">[Greenberg 2015]</a>. Each host is also assigned its own data-center-internal IP address.</p>
<p id="P700101195200000000000000000B161" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B161">The data center network supports two types of traffic: traffic flowing between external clients and internal hosts and traffic flowing between internal hosts. To handle flows between external clients and internal hosts, the data center network includes one or more <span class="keyword" id="P70010119520000000000000000026E4" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026E4"><b>border routers</b></span>, connecting the data center network to the public Internet. The data center network therefore interconnects the racks with each other and connects the racks to the border routers. <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a> shows an example of a data center network. <span class="keyword" id="P70010119520000000000000000026E5" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026E5"><b>Data center network design</b></span>, the art of designing the interconnection network and protocols that connect the racks with each other and with the border routers, has become an important branch of computer networking research in recent years <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003805" data-foobar="7">[Al-Fares 2008</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392B" data-foobar="7">Greenberg 2009a</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392D" data-foobar="7">Greenberg 2009b</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003A66" data-foobar="7">Mysore 2009</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000393C" data-foobar="7">Guo 2009</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003C71" data-foobar="7">Wang 2010]</a>.<span class="pagebreak" title="496" id="P70010119520000000000000000026E6" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026E6" epub:type="pagebreak" role="doc-pagebreak"></span></p>
<figure id="P70010119520000000000000000026E7" class="figure" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026E7">
<img alt="Illustration of a data center network with a hierarchical topology." height="524" width="861" aria-describedby="P70010119520000000000000000026EB" id="P700101195200000000000000000B162" data-uri="P70010119520000000000000000055E2" src="../images/4055106030.png"></img>
<figcaption id="P700101195200000000000000000B163" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B163"><header><h1 class="title" id="P700101195200000000000000000B164" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B164" epub:type="title"><span class="label">Figure </span> <span class="number">6.30</span> A data center network with a hierarchical topology</h1></header>

</figcaption>
</figure><div class="longdesc" id="P70010119520000000000000000026EB" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026EB" aria-hidden="false"><a class="xref" aria-hidden="false" href="../longalt/la_4055106030.xhtml#la_4055106030"><span class="label">Description</span></a></div>
<section id="P70010119520000000000000000026EE" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026EE" class="level2">
<section id="P70010119520000000000000000026EF" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026EF" class="level3"><header><h1 class="title" id="P700101195200000000000000000B167" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B167" epub:type="title">Load Balancing</h1></header>
<p id="P700101195200000000000000000B168" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B168">A cloud data center, such as a Google or Microsoft data center, provides many applications concurrently, such as search, e-mail, and video applications. To support requests from external clients, each application is associated with a publicly visible IP address to which clients send their requests and from which they receive responses. Inside the data center, the external requests are first directed to a <span class="keyword" id="P70010119520000000000000000026F2" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026F2"><b>load balancer</b></span> whose job it is to distribute requests to the hosts, balancing the load across the hosts as a function of their current load. A large data center will often have several load balancers, each one devoted to a set of specific cloud applications. Such a load balancer is sometimes referred to as a “layer-4 switch” since it makes decisions based on the destination port number (layer 4) as well as destination IP address in the packet. Upon receiving a request for a particular application, the load balancer forwards it to one of the hosts that handles the application. (A host may then invoke the services of other hosts to help process the request.) When the host finishes processing the request, it sends its response back to the load balancer, which in turn relays the response back to the external client. The load balancer not only balances <span class="pagebreak" title="497" id="P70010119520000000000000000026F3" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026F3" epub:type="pagebreak" role="doc-pagebreak"></span>the work load across hosts, but also provides a NAT-like function, translating the public external IP address to the internal IP address of the appropriate host, and then translating back for packets traveling in the reverse direction back to the clients. This prevents clients from contacting hosts directly, which has the security benefit of hiding the internal network structure and preventing clients from directly interacting with the hosts.</p>
</section>
<section id="P70010119520000000000000000026F4" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026F4" class="level3"><header><h1 class="title" id="P700101195200000000000000000B169" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B169" epub:type="title">Hierarchical Architecture</h1></header>
<p id="P700101195200000000000000000B16A" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B16A">For a small data center housing only a few thousand hosts, a simple network consisting of a border router, a load balancer, and a few tens of racks all interconnected by a single Ethernet switch could possibly suffice. But to scale to tens to hundreds of thousands of hosts, a data center often employs a <span class="keyword" id="P70010119520000000000000000026F7" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026F7"><b>hierarchy of routers and switches</b></span>, such as the topology shown in <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a>. At the top of the hierarchy, the border router connects to access routers (only two are shown in <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a>, but there can be many more). Below each access router there are three tiers of switches. Each access router connects to a top-tier switch, and each top-tier switch connects to multiple second-tier switches and a load balancer. Each second-tier switch in turn connects to multiple racks via the racks’ TOR switches (third-tier switches). All links typically use Ethernet for their link-layer and physical-layer protocols, with a mix of copper and fiber cabling. With such a hierarchical design, it is possible to scale a data center to hundreds of thousands of hosts.</p>
<p id="P700101195200000000000000000B16B" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B16B">Because it is critical for a cloud application provider to continually provide applications with high availability, data centers also include redundant network equipment and redundant links in their designs (not shown in <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a>). For example, each TOR switch can connect to two tier-2 switches, and each access router, tier-1 switch, and tier-2 switch can be duplicated and integrated into the design <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003890" data-foobar="7">[Cisco 2012</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392D" data-foobar="7">Greenberg 2009b]</a>. In the hierarchical design in <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a>, observe that the hosts below each access router form a single subnet. In order to localize ARP broadcast traffic, each of these subnets is further partitioned into smaller VLAN subnets, each comprising a few hundred hosts <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392B" data-foobar="7">[Greenberg 2009a]</a>.</p>
<p id="P700101195200000000000000000B16C" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B16C">Although the conventional hierarchical architecture just described solves the problem of scale, it suffers from <i>limited host-to-host capacity</i> <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392D" data-foobar="7">[Greenberg 2009b]</a>. To understand this limitation, consider again <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a>, and suppose each host connects to its TOR switch with a 1 Gbps link, whereas the links between switches are 10 Gbps Ethernet links. Two hosts in the same rack can always communicate at a full 1 Gbps, limited only by the rate of the hosts’ network interface cards. However, if there are many simultaneous flows in the data center network, the maximum rate between two hosts in <i>different</i> racks can be much less. To gain insight into this issue, consider a traffic pattern consisting of 40 simultaneous flows between 40 pairs of hosts in different racks. Specifically, suppose each of 10 hosts in rack 1 in <a class="xref" href="#P70010119520000000000000000026E7" data-foobar="1"><span class="label">Figure</span> <span class="number">6.30</span></a> sends a flow to a corresponding host in rack 5. Similarly, there are ten simultaneous flows between pairs of hosts in racks 2 and 6, ten simultaneous flows <span class="pagebreak" title="498" id="P70010119520000000000000000026FA" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026FA" epub:type="pagebreak" role="doc-pagebreak"></span>between racks 3 and 7, and ten simultaneous flows between racks 4 and 8. If each flow evenly shares a link’s capacity with other flows traversing that link, then the 40 flows crossing the 10 Gbps A-to-B link (as well as the 10 Gbps B-to-C link) will each only receive <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="217" altimg-height="17" altimg="../images/ch06math44.png"><m:mrow><m:mn>10</m:mn><m:mtext> Gbps</m:mtext><m:mo>/</m:mo><m:mn>40</m:mn><m:mo>=</m:mo><m:mn>250</m:mn><m:mtext> Mbps,</m:mtext></m:mrow></m:math></span> which is significantly less than the 1 Gbps network interface card rate. The problem becomes even more acute for flows between hosts that need to travel higher up the hierarchy. One possible solution to this limitation is to deploy higher-rate switches and routers. But this would significantly increase the cost of the data center, because switches and routers with high port speeds are very expensive.</p>
<p id="P700101195200000000000000000B16D" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B16D">Supporting high-bandwidth host-to-host communication is important because a key requirement in data centers is flexibility in placement of computation and services <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392D" data-foobar="7">[Greenberg 2009b</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P70010119520000000000000000038ED" data-foobar="7">Farrington 2010]</a>. For example, a large-scale Internet search engine may run on thousands of hosts spread across multiple racks with significant bandwidth requirements between all pairs of hosts. Similarly, a cloud computing service such as EC2 may wish to place the multiple virtual machines comprising a customer’s service on the physical hosts with the most capacity irrespective of their location in the data center. If these physical hosts are spread across multiple racks, network bottlenecks as described above may result in poor performance.</p>
</section>
<section id="P70010119520000000000000000026FC" data-uri="M06_KURO4140_07_SE_C06.xhtml#P70010119520000000000000000026FC" class="level3"><header><h1 class="title" id="P700101195200000000000000000B16E" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B16E" epub:type="title">Trends in Data Center Networking</h1></header>
<p id="P700101195200000000000000000B16F" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B16F">In order to reduce the cost of data centers, and at the same time improve their delay and throughput performance, Internet cloud giants such as Google, Facebook, ­Amazon, and Microsoft are continually deploying new data center network designs. Although these designs are proprietary, many important trends can nevertheless be identified.</p>
<p id="P700101195200000000000000000B170" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B170">One such trend is to deploy new interconnection architectures and network protocols that overcome the drawbacks of the traditional hierarchical designs. One such approach is to replace the hierarchy of switches and routers with a <span class="keyword" id="P7001011952000000000000000002700" data-uri="M06_KURO4140_07_SE_C06.xhtml#P7001011952000000000000000002700"><b>fully connected topology</b></span> <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P70010119520000000000000000038E9" data-foobar="7">[Facebook 2014</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003805" data-foobar="7">Al-Fares 2008</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392D" data-foobar="7">Greenberg 2009b</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000393C" data-foobar="7">Guo 2009]</a>, such as the topology shown in <a class="xref" href="#P7001011952000000000000000002703" data-foobar="1"><span class="label">Figure</span> <span class="number">6.31</span></a>. In this design, each tier-1 switch connects to all of the tier-2 switches so that (1) host-to-host traffic never has to rise above the switch tiers, and (2) with <i>n</i> tier-1 switches, between any two tier-2 switches there are <i>n</i> disjoint paths. Such a design can significantly improve the host-to-host capacity. To see this, consider again our example of 40 flows. The topology in <a class="xref" href="#P7001011952000000000000000002703" data-foobar="1"><span class="label">Figure</span> <span class="number">6.31</span></a> can handle such a flow pattern since there are four distinct paths between the first tier-2 switch and the second tier-2 switch, together providing an aggregate capacity of 40 Gbps between the first two tier-2 switches. Such a design not only alleviates the host-to-host capacity limitation, but also creates a more flexible computation and service environment in which communication between any two racks not connected to the same switch is logically equivalent, irrespective of their locations in the data center.</p>
<p id="P700101195200000000000000000B171" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B171">Another major trend is to employ shipping container–based modular data centers (MDCs) <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003C92" data-foobar="7">[YouTube 2009</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003C6B" data-foobar="7">Waldrop 2007]</a>. In an MDC, a factory builds, within a<span class="pagebreak" title="499" id="P7001011952000000000000000002702" data-uri="M06_KURO4140_07_SE_C06.xhtml#P7001011952000000000000000002702" epub:type="pagebreak" role="doc-pagebreak"></span></p>
<figure id="P7001011952000000000000000002703" class="figure" data-uri="M06_KURO4140_07_SE_C06.xhtml#P7001011952000000000000000002703">
<img alt="Illustration of a highly interconnected data network topology." height="284" width="859" aria-describedby="P7001011952000000000000000002707" id="P700101195200000000000000000B172" data-uri="P70010119520000000000000000055E3" src="../images/4055106031.png"></img>
<figcaption id="P700101195200000000000000000B173" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B173"><header><h1 class="title" id="P700101195200000000000000000B174" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B174" epub:type="title"><span class="label">Figure </span> <span class="number">6.31</span> Highly interconnected data network topology</h1></header>

</figcaption>
</figure><div class="longdesc" id="P7001011952000000000000000002707" data-uri="M06_KURO4140_07_SE_C06.xhtml#P7001011952000000000000000002707" aria-hidden="false"><a class="xref" aria-hidden="false" href="../longalt/la_4055106031.xhtml#la_4055106031"><span class="label">Description</span></a></div>
<p class="continued" id="P700101195200000000000000000B176" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B176">standard 12-meter shipping container, a “mini data center” and ships the container to the data center location. Each container has up to a few thousand hosts, stacked in tens of racks, which are packed closely together. At the data center location, multiple containers are interconnected with each other and also with the Internet. Once a prefabricated container is deployed at a data center, it is often difficult to service. Thus, each container is designed for graceful performance degradation: as components (servers and switches) fail over time, the container continues to operate but with degraded performance. When many components have failed and performance has dropped below a threshold, the entire container is removed and replaced with a fresh one.</p>
<p id="P700101195200000000000000000B177" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B177">Building a data center out of containers creates new networking challenges. With an MDC, there are two types of networks: the container-internal networks within each of the containers and the core network connecting each container <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000393C" data-foobar="7">[Guo 2009</a>; <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P70010119520000000000000000038ED" data-foobar="7">Farrington 2010]</a>. Within each container, at the scale of up to a few thousand hosts, it is possible to build a fully connected network (as described above) using inexpensive commodity Gigabit Ethernet switches. However, the design of the core network, interconnecting hundreds to thousands of containers while providing high host-to-host bandwidth across containers for typical workloads, remains a challenging problem. A hybrid electrical/optical switch architecture for interconnecting the containers is proposed in <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P70010119520000000000000000038ED" data-foobar="7">[Farrington 2010]</a>.</p>
<p id="P700101195200000000000000000B178" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B178">When using highly interconnected topologies, one of the major issues is designing routing algorithms among the switches. One possibility <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000392D" data-foobar="7">[Greenberg 2009b]</a> is to use a form of random routing. Another possibility <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P700101195200000000000000000393C" data-foobar="7">[Guo 2009]</a> is to deploy multiple network interface cards in each host, connect each host to multiple low-cost commodity switches, and allow the hosts themselves to intelligently route traffic among the switches. Variations and extensions of these approaches are currently being deployed in contemporary data centers.</p>
<p id="P700101195200000000000000000B179" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000B179"><span class="pagebreak" title="500" id="P700101195200000000000000000270D" data-uri="M06_KURO4140_07_SE_C06.xhtml#P700101195200000000000000000270D" epub:type="pagebreak" role="doc-pagebreak"></span>Another important trend is that large cloud providers are increasingly building or customizing just about everything that is in their data centers, including network adapters, switches routers, TORs, software, and networking protocols <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003932" data-foobar="7">[Greenberg 2015</a>, <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003C0F" data-foobar="7">Singh 2015]</a>. Another trend, pioneered by Amazon, is to improve reliability with “availability zones,” which essentially replicate distinct data centers in different nearby buildings. By having the buildings nearby (a few kilometers apart), transactional data can be synchronized across the data centers in the same availability zone while providing fault tolerance <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003807" data-foobar="7">[Amazon 2014]</a>. Many more innovations in data center design are likely to continue to come; interested readers are encouraged to see the recent papers and videos on data center network design.</p>
</section>
</section>
</section></body></html>