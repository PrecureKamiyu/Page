<?xml version="1.0" encoding="utf-8"?><html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/"><head>
<meta name="dcterms.conformsTo" content="PXE Basic 1.0"></meta>
<meta name="generator" content="PXE Tools version 1.39.109"></meta>
<!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.109, partial=false-->
<title>9.1 Multimedia Networking Applications</title><link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/sepia.css"></link><link rel="alternate stylesheet" type="text/css" title="night" href="../css/night.css"></link><link rel="stylesheet" type="text/css" title="day" href="../css/main.css"></link><link rel="stylesheet" type="text/css" title="day" href="../css/print.css"></link>
<script src="js/format_lg_obj.js"></script>
</head><body epub:type="bodymatter">
<section id="P70010119520000000000000000033DE" class="level1"><header><h1 class="title" id="P700101195200000000000000000BAFA" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BAFA" epub:type="title"><span class="number">9.1</span> Multimedia Networking Applications</h1></header>
<p id="P700101195200000000000000000BAFB" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BAFB">We define a multimedia network application as any network application that employs audio or video. In this section, we provide a taxonomy of multimedia applications. We’ll see that each class of applications in the taxonomy has its own unique set of service requirements and design issues. But before diving into an in-depth discussion of Internet multimedia applications, it is useful to consider the intrinsic characteristics of the audio and video media themselves.</p>
<section id="P70010119520000000000000000033E1" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033E1" class="level2"><header><h1 class="title" id="P700101195200000000000000000BAFC" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BAFC" epub:type="title"><span class="number">9.1.1</span> Properties of Video</h1></header>
<p id="P700101195200000000000000000BAFD" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BAFD">Perhaps the most salient characteristic of video is its <span class="keyword" id="P70010119520000000000000000033E4" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033E4"><b>high bit rate</b></span>. Video distributed over the Internet typically ranges from 100 kbps for low-quality video conferencing to over 3 Mbps for streaming high-definition movies. To get a sense of how video bandwidth demands compare with those of other Internet applications, let’s briefly consider three different users, each using a different Internet application. Our first user, Frank, is going quickly through photos posted on his friends’ Facebook pages. Let’s assume that Frank is looking at a new photo every 10 seconds, and that photos are on average 200 Kbytes in size. (As usual, throughout this discussion we make the simplifying assumption that <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="175" altimg-height="17" altimg="../images/ch09math01.png"><m:mrow><m:mn>1</m:mn><m:mtext> Kbyte</m:mtext><m:mo>=</m:mo><m:mn>8</m:mn><m:mo>,</m:mo><m:mn>000</m:mn><m:mtext> bits</m:mtext><m:mo>.</m:mo></m:mrow></m:math></span>) Our second user, Martha, is streaming music from the Internet (“the cloud”) to her smartphone. Let’s assume Martha is using a service such as Spotify to listen to many MP3 songs, one after the other, each encoded at a rate of 128 kbps. Our third user, Victor, is watching a video that has been encoded at 2 Mbps. Finally, let’s suppose that the session length for all three users is 4,000 seconds (approximately 67 minutes). <a class="xref" href="#P70010119520000000000000000033E6" data-foobar="1"><span class="label">Table</span> <span class="number">9.1</span></a> compares the bit rates and the total bytes transferred for these three users. We see that video streaming consumes by far the most bandwidth, having a bit rate of more than ten times greater than that of the Facebook and music-streaming applications. Therefore, when design<span class="pagebreak" title="677" id="P70010119520000000000000000033E5" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033E5" epub:type="pagebreak" role="doc-pagebreak"></span></p>
<figure id="P70010119520000000000000000033E6" class="table" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033E6">
<figcaption id="P700101195200000000000000000BAFE" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BAFE"><header><h1 class="title" id="P700101195200000000000000000BAFF" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BAFF" epub:type="title"><span class="label">Table </span><span class="number">9.1</span> Comparison of bit-rate requirements of three Internet applications</h1></header></figcaption>
<table id="P700101195200000000000000000BB00" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB00">
<thead>
<tr>
<th id="P700101195200000000000000000BB01" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB01"></th>
<th id="P700101195200000000000000000BB02" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB02">Bit rate</th>
<th id="P700101195200000000000000000BB03" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB03">Bytes transferred in 67 min</th>
</tr>
</thead>
<tbody>
<tr>
<td id="P700101195200000000000000000BB04" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB04"><b>Facebook Frank</b></td>
<td id="P700101195200000000000000000BB05" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB05">160 kbps</td>
<td id="P700101195200000000000000000BB06" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB06">80 Mbytes</td>
</tr>
<tr>
<td id="P700101195200000000000000000BB07" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB07"><b>Martha Music</b></td>
<td id="P700101195200000000000000000BB08" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB08">128 kbps</td>
<td id="P700101195200000000000000000BB09" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB09">64 Mbytes</td>
</tr>
<tr>
<td id="P700101195200000000000000000BB0A" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB0A"><b>Victor Video</b></td>
<td id="P700101195200000000000000000BB0B" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB0B">2 Mbps</td>
<td id="P700101195200000000000000000BB0C" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB0C">1 Gbyte</td>
</tr>
</tbody>
</table>
</figure>
<p class="continued" id="P700101195200000000000000000BB0D" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB0D">ing networked video applications, the first thing we must keep in mind is the high bit-rate requirements of video. Given the popularity of video and its high bit rate, it is perhaps not surprising that Cisco predicts <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003892" data-foobar="7">[Cisco 2015]</a> that streaming and stored video will be approximately 80 percent of global consumer Internet traffic by 2019.</p>
<p id="P700101195200000000000000000BB0E" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB0E">Another important characteristic of video is that it can be compressed, thereby trading off video quality with bit rate. A video is a sequence of images, typically being displayed at a constant rate, for example, at 24 or 30 images per second. An uncompressed, digitally encoded image consists of an array of pixels, with each pixel encoded into a number of bits to represent luminance and color. There are two types of redundancy in video, both of which can be exploited by <span class="keyword" id="P70010119520000000000000000033F8" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033F8"><b>video compression</b></span>. <i>Spatial redundancy</i> is the redundancy within a given image. Intuitively, an image that consists of mostly white space has a high degree of redundancy and can be efficiently compressed without significantly sacrificing image quality. <i>Temporal redundancy</i> reflects repetition from image to subsequent image. If, for example, an image and the subsequent image are exactly the same, there is no reason to re-encode the subsequent image; it is instead more efficient simply to indicate during encoding that the subsequent image is exactly the same. Today’s off-the-shelf compression algorithms can compress a video to essentially any bit rate desired. Of course, the higher the bit rate, the better the image quality and the better the overall user viewing experience.</p>
<p id="P700101195200000000000000000BB0F" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB0F">We can also use compression to create <span class="keyword" id="P70010119520000000000000000033FA" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033FA"><b>multiple versions</b></span> of the same video, each at a different quality level. For example, we can use compression to create, say, three versions of the same video, at rates of 300 kbps, 1 Mbps, and 3 Mbps. Users can then decide which version they want to watch as a function of their current available bandwidth. Users with high-speed Internet connections might choose the 3 Mbps version; users watching the video over 3G with a smartphone might choose the 300 kbps version. Similarly, the video in a video conference application can be compressed “on-the-fly” to provide the best video quality given the available end-to-end bandwidth between conversing users.</p>
</section>
<section id="P70010119520000000000000000033FB" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033FB" class="level2"><header><h1 class="title" id="P700101195200000000000000000BB10" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB10" epub:type="title"><span class="number">9.1.2</span> Properties of Audio</h1></header>
<p id="P700101195200000000000000000BB11" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB11">Digital audio (including digitized speech and music) has significantly lower bandwidth requirements than video. Digital audio, however, has its own unique properties that must be considered when designing multimedia network applications. <span class="pagebreak" title="678" id="P70010119520000000000000000033FE" data-uri="M09_KURO4140_07_SE_C09.xhtml#P70010119520000000000000000033FE" epub:type="pagebreak" role="doc-pagebreak"></span>To understand these properties, let’s first consider how analog audio (which humans and musical instruments generate) is converted to a digital signal:</p>
<ul id="P700101195200000000000000000BB12" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB12">
<li id="P700101195200000000000000000BB13" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB13"><p id="P700101195200000000000000000BB14" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB14">The analog audio signal is sampled at some fixed rate, for example, at 8,000 samples per second. The value of each sample will be some real number.</p></li>
<li id="P700101195200000000000000000BB15" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB15"><p id="P700101195200000000000000000BB16" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB16">Each of the samples is then rounded to one of a finite number of values. This operation is referred to as <span class="keyword" id="P7001011952000000000000000003404" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003404"><b>quantization</b></span>. The number of such finite values—called quantization values—is typically a power of two, for example, 256 quantization values.</p></li>
<li id="P700101195200000000000000000BB17" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB17"><p id="P700101195200000000000000000BB18" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB18">Each of the quantization values is represented by a fixed number of bits. For example, if there are 256 quantization values, then each value—and hence each audio sample—is represented by one byte. The bit representations of all the samples are then concatenated together to form the digital representation of the signal. As an example, if an analog audio signal is sampled at 8,000 samples per second and each sample is quantized and represented by 8 bits, then the resulting digital signal will have a rate of 64,000 bits per second. For playback through audio speakers, the digital signal can then be converted back—that is, decoded—to an analog signal. However, the decoded analog signal is only an approximation of the original signal, and the sound quality may be noticeably degraded (for example, high-frequency sounds may be missing in the decoded signal). By increasing the sampling rate and the number of quantization values, the decoded signal can better approximate the original analog signal. Thus (as with video), there is a trade-off between the quality of the decoded signal and the bit-rate and storage requirements of the digital signal.</p></li>
</ul>
<p class="continued" id="P700101195200000000000000000BB19" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB19">The basic encoding technique that we just described is called <span class="keyword" id="P7001011952000000000000000003408" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003408"><b>pulse code modulation (PCM)</b></span>. Speech encoding often uses PCM, with a sampling rate of 8,000 samples per second and 8 bits per sample, resulting in a rate of 64 kbps. The audio compact disk (CD) also uses PCM, with a sampling rate of 44,100 samples per second with 16 bits per sample; this gives a rate of 705.6 kbps for mono and 1.411 Mbps for stereo.</p>
<p id="P700101195200000000000000000BB1A" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB1A">PCM-encoded speech and music, however, are rarely used in the Internet. Instead, as with video, compression techniques are used to reduce the bit rates of the stream. Human speech can be compressed to less than 10 kbps and still be intelligible. A popular compression technique for near CD-quality stereo music is <span class="keyword" id="P700101195200000000000000000340A" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000340A"><b>MPEG 1 layer 3</b></span>, more commonly known as <span class="keyword" id="P700101195200000000000000000340B" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000340B"><b>MP3</b></span>. MP3 encoders can compress to many different rates; 128 kbps is the most common encoding rate and produces very little sound degradation. A related standard is <span class="keyword" id="P700101195200000000000000000340C" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000340C"><b>Advanced Audio Coding (AAC)</b></span>, which has been popularized by Apple. As with video, multiple versions of a prerecorded audio stream can be created, each at a different bit rate.</p>
<p id="P700101195200000000000000000BB1B" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB1B">Although audio bit rates are generally much less than those of video, users are generally much more sensitive to audio glitches than video glitches. Consider, for example, a video conference taking place over the Internet. If, from time to time, the video signal is lost for a few seconds, the video conference can likely proceed <span class="pagebreak" title="679" id="P700101195200000000000000000340E" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000340E" epub:type="pagebreak" role="doc-pagebreak"></span>without too much user frustration. If, however, the audio signal is frequently lost, the users may have to terminate the session.</p>
</section>
<section id="P700101195200000000000000000340F" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000340F" class="level2"><header><h1 class="title" id="P700101195200000000000000000BB1C" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB1C" epub:type="title"><span class="number">9.1.3</span> Types of Multimedia Network Applications</h1></header>
<p id="P700101195200000000000000000BB1D" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB1D">The Internet supports a large variety of useful and entertaining multimedia applications. In this subsection, we classify multimedia applications into three broad categories: <i>(i) streaming stored audio/video</i>, <i>(ii) conversational voice/video-over-IP</i>, and <i>(iii) streaming live audio/video</i>. As we will soon see, each of these application categories has its own set of service requirements and design issues.</p>
<section id="P7001011952000000000000000003412" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003412" class="level3"><header><h1 class="title" id="P700101195200000000000000000BB1E" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB1E" epub:type="title">Streaming Stored Audio and Video</h1></header>
<p id="P700101195200000000000000000BB1F" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB1F">To keep the discussion concrete, we focus here on streaming stored video, which typically combines video and audio components. Streaming stored audio (such as Spotify’s streaming music service) is very similar to streaming stored video, although the bit rates are typically much lower.</p>
<p id="P700101195200000000000000000BB20" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB20">In this class of applications, the underlying medium is prerecorded video, such as a movie, a television show, a prerecorded sporting event, or a prerecorded user-generated video (such as those commonly seen on YouTube). These prerecorded videos are placed on servers, and users send requests to the servers to view the videos <i>on demand</i>. Many Internet companies today provide streaming video, including YouTube (Google), Netflix, Amazon, and Hulu. Streaming stored video has three key distinguishing features.</p>
<ul id="P700101195200000000000000000BB21" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB21">
<li id="P700101195200000000000000000BB22" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB22"><p id="P700101195200000000000000000BB23" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB23"><span class="leadin">Streaming.</span> In a streaming stored video application, the client typically begins video playout within a few seconds after it begins receiving the video from the server. This means that the client will be playing out from one location in the video while at the same time receiving later parts of the video from the server. This technique, known as <span class="keyword" id="P7001011952000000000000000003419" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003419"><b>streaming</b></span>, avoids having to download the entire video file (and incurring a potentially long delay) before playout begins.</p></li>
<li id="P700101195200000000000000000BB24" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB24"><p id="P700101195200000000000000000BB25" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB25"><span class="leadin">Interactivity.</span> Because the media is prerecorded, the user may pause, reposition forward, reposition backward, fast-forward, and so on through the video content. The time from when the user makes such a request until the action manifests itself at the client should be less than a few seconds for acceptable responsiveness.</p></li>
<li id="P700101195200000000000000000BB26" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB26"><p id="P700101195200000000000000000BB27" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB27"><span class="leadin">Continuous playout.</span> Once playout of the video begins, it should proceed according to the original timing of the recording. Therefore, data must be received from the server in time for its playout at the client; otherwise, users experience video frame freezing (when the client waits for the delayed frames) or frame skipping (when the client skips over delayed frames).</p></li>
</ul>
<p class="continued" id="P700101195200000000000000000BB28" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB28">By far, the most important performance measure for streaming video is average throughput. In order to provide continuous playout, the network must provide an <span class="pagebreak" title="680" id="P700101195200000000000000000341F" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000341F" epub:type="pagebreak" role="doc-pagebreak"></span>average throughput to the streaming application that is at least as large the bit rate of the video itself. As we will see in <a class="xref" href="fileP700101195200000000000000000342F.xhtml#P700101195200000000000000000342F" data-foobar="7"><span class="label">Section</span> <span class="number">9.2</span></a>, by using buffering and prefetching, it is possible to provide continuous playout even when the throughput fluctuates, as long as the average throughput (averaged over 5–10 seconds) remains above the video rate <a class="biblioref" href="fileP70010119520000000000000000037E0.xhtml#P7001011952000000000000000003C6F" data-foobar="7">[Wang 2008]</a>.</p>
<p id="P700101195200000000000000000BB29" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB29">For many streaming video applications, prerecorded video is stored on, and streamed from, a CDN rather than from a single data center. There are also many P2P video streaming applications for which the video is stored on users’ hosts (peers), with different chunks of video arriving from different peers that may spread around the globe. Given the prominence of Internet video streaming, we will explore video streaming in some depth in <a class="xref" href="fileP700101195200000000000000000342F.xhtml#P700101195200000000000000000342F" data-foobar="7"><span class="label">Section</span> <span class="number">9.2</span></a>, paying particular attention to client buffering, prefetching, adapting quality to bandwidth availability, and CDN distribution.</p>
</section>
<section id="P7001011952000000000000000003421" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003421" class="level3"><header><h1 class="title" id="P700101195200000000000000000BB2A" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB2A" epub:type="title">Conversational Voice- and Video-over-IP</h1></header>
<p id="P700101195200000000000000000BB2B" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB2B">Real-time conversational voice over the Internet is often referred to as <span class="keyword" id="P7001011952000000000000000003424" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003424"><b>Internet telephony</b></span>, since, from the user’s perspective, it is similar to the traditional circuit-switched telephone service. It is also commonly called <span class="keyword" id="P7001011952000000000000000003425" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003425"><b>Voice-over-IP (VoIP)</b></span>. Conversational video is similar, except that it includes the video of the participants as well as their voices. Most of today’s voice and video conversational systems allow users to create conferences with three or more participants. Conversational voice and video are widely used in the Internet today, with the Internet companies Skype, QQ, and Google Talk boasting hundreds of millions of daily users.</p>
<p id="P700101195200000000000000000BB2C" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB2C">In our discussion of application service requirements in <a class="xref" href="fileP700101195200000000000000000096B.xhtml#P700101195200000000000000000096B" data-foobar="7"><span class="label">Chapter</span> <span class="number">2</span></a> (<a class="xref" href="fileP7001011952000000000000000000974.xhtml#P70010119520000000000000000009F6" data-foobar="7"><span class="label">Figure</span> <span class="number">2.4</span></a>), we identified a number of axes along which application requirements can be classified. Two of these axes—timing considerations and tolerance of data loss—are particularly important for conversational voice and video applications. Timing considerations are important because audio and video conversational applications are highly <span class="keyword" id="P7001011952000000000000000003427" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003427"><b>delay-sensitive</b></span>. For a conversation with two or more interacting speakers, the delay from when a user speaks or moves until the action is manifested at the other end should be less than a few hundred milliseconds. For voice, delays smaller than 150 milliseconds are not perceived by a human listener, delays between 150 and 400 milliseconds can be acceptable, and delays exceeding 400 milliseconds can result in frustrating, if not completely unintelligible, voice conversations.</p>
<p id="P700101195200000000000000000BB2D" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB2D">On the other hand, conversational multimedia applications are <span class="keyword" id="P7001011952000000000000000003429" data-uri="M09_KURO4140_07_SE_C09.xhtml#P7001011952000000000000000003429"><b>loss-tolerant</b></span>—occasional loss only causes occasional glitches in audio/video playback, and these losses can often be partially or fully concealed. These delay-sensitive but loss-tolerant characteristics are clearly different from those of elastic data applications such as Web browsing, e-mail, social networks, and remote login. For elastic applications, long delays are annoying but not particularly harmful; the completeness and integrity of the transferred data, however, are of paramount importance. We will explore conversational voice and video in more depth in <a class="xref" href="fileP7001011952000000000000000003477.xhtml#P7001011952000000000000000003477" data-foobar="7"><span class="label">Section</span> <span class="number">9.3</span></a>, paying particular attention <span class="pagebreak" title="681" id="P700101195200000000000000000342A" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000342A" epub:type="pagebreak" role="doc-pagebreak"></span>to how adaptive playout, forward error correction, and error concealment can mitigate against network-induced packet loss and delay.</p>
</section>
<section id="P700101195200000000000000000342B" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000342B" class="level3"><header><h1 class="title" id="P700101195200000000000000000BB2E" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB2E" epub:type="title">Streaming Live Audio and Video</h1></header>
<p id="P700101195200000000000000000BB2F" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB2F">This third class of applications is similar to traditional broadcast radio and television, except that transmission takes place over the Internet. These applications allow a user to receive a <i>live</i> radio or television transmission—such as a live sporting event or an ongoing news event—transmitted from any corner of the world. Today, thousands of radio and television stations around the world are broadcasting content over the Internet.</p>
<p id="P700101195200000000000000000BB30" data-uri="M09_KURO4140_07_SE_C09.xhtml#P700101195200000000000000000BB30">Live, broadcast-like applications often have many users who receive the same audio/video program at the same time. In the Internet today, this is typically done with CDNs (<a class="xref" href="fileP7001011952000000000000000000DC1.xhtml#P7001011952000000000000000000DC1" data-foobar="7"><span class="label">Section</span> <span class="number">2.6</span></a>). As with streaming stored multimedia, the network must provide each live multimedia flow with an average throughput that is larger than the video consumption rate. Because the event is live, delay can also be an issue, although the timing constraints are much less stringent than those for conversational voice. Delays of up to ten seconds or so from when the user chooses to view a live transmission to when playout begins can be tolerated. We will not cover streaming live media in this book because many of the techniques used for streaming live media—initial buffering delay, adaptive bandwidth use, and CDN distribution—are similar to those for streaming stored media.</p>
</section>
</section>
</section></body></html>