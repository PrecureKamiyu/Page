<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Interlude: File and Directories</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part415.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part417.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 2pt;padding-left: 140pt;text-indent: 0pt;text-align: left;">Interlude: File and Directories</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Thus far we have seen the development of two key operating system ab- stractions: the process, which is a virtualization of the CPU, and the ad- dress space, which is a virtualization of memory. In tandem, these two abstractions allow a program to run as if it is in its own private, isolated world; as if it has its own processor (or processors); as if it has its own memory. This illusion makes programming the system much easier and thus is prevalent today not only on desktops and servers but increasingly on all programmable platforms including mobile phones and the like.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">In this section, we add one more critical piece to the virtualization puz- zle: <b>persistent storage</b>. A persistent-storage device, such as a classic <b>hard disk drive </b>or a more modern <b>solid-state storage device</b>, stores informa- tion permanently (or at least, for a long time). Unlike memory, whose contents are lost when there is a power loss, a persistent-storage device keeps such data intact. Thus, the OS must take extra care with such a device: this is where users keep data that they really care about.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>M<span class="s7">ANAGE </span>A P<span class="s7">ERSISTENT </span>D<span class="s7">EVICE</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 89%;text-align: left;">How should the OS manage a persistent device? What are the APIs? What are the important aspects of the implementation?</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Thus, in the next few chapters, we will explore critical techniques for managing persistent data, focusing on methods to improve performance and reliability. We begin, however, with an overview of the API: the in- terfaces you’ll expect to see when interacting with a U<span class="s7">NIX </span>file system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part417.htm">39.1 Files and Directories</a><a class="toc0" href="part418.htm">39.2 The File System Interface</a><a class="toc0" href="part419.htm">39.3 Creating Files</a><a class="toc0" href="part420.htm">39.4 Reading and Writing Files</a><a class="toc0" href="part421.htm">39.5 Reading And Writing, But Not Sequentially</a><a class="toc0" href="part422.htm">39.6 Writing Immediately with fsync()</a><a class="toc0" href="part423.htm">39.7 Renaming Files</a><a class="toc0" href="part424.htm">39.8 Getting Information About Files</a><a class="toc0" href="part425.htm">39.9 Removing Files</a><a class="toc0" href="part426.htm">39.10 Making Directories</a><a class="toc0" href="part427.htm">39.11 Reading Directories</a><a class="toc0" href="part428.htm">39.12 Deleting Directories</a><a class="toc0" href="part429.htm">39.13 Hard Links</a><a class="toc0" href="part430.htm">39.14 Symbolic Links</a><a class="toc0" href="part431.htm">39.15 Making and Mounting a File System</a><a class="toc0" href="part432.htm">39.16 Summary</a><a class="toc0" href="part433.htm">References</a><a class="toc0" href="part434.htm">Homework</a><a class="toc1" href="part435.htm">Questions</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part415.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part417.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
