<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Practice Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part392.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part394.htm">下一个 &gt;</a></p><p class="s45" style="padding-top: 4pt;padding-left: 72pt;text-indent: 0pt;text-align: left;">Practice Exercises</p><p class="s46" style="padding-top: 11pt;padding-left: 155pt;text-indent: -29pt;text-align: justify;">21.1  <span class="p">In a range selection on a range-partitioned attribute, it is possible that only one disk may need to be accessed. Describe the beneﬁts and drawbacks of this property.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 155pt;text-indent: -30pt;text-align: justify;">21.2 <span class="p">Recall that histograms are used for constructing load-balanced range parti- tions.</span></p><p style="padding-top: 8pt;padding-left: 181pt;text-indent: -18pt;text-align: justify;">a. Suppose you have a histogram where values are between 1 and 100, and are partitioned into 10 ranges, 1– 10, 11– 20, <span class="s15">… </span>, 91– 100, with frequen- cies 15, 5, 20, 10, 10, 5, 5, 20, 5, and 5, respectively. Give a load-balanced range partitioning function to divide the values into ﬁve partitions.</p><p style="padding-top: 5pt;padding-left: 181pt;text-indent: -19pt;text-align: justify;">b.  Write an algorithm for computing a balanced range partition with <i>p </i>par- titions, given a histogram of frequency distributions containing <i>n </i>ranges.</p><p class="s46" style="padding-top: 8pt;padding-left: 155pt;text-indent: -30pt;text-align: justify;">21.3 <span class="p">Histograms are traditionally constructed on the values of a speciﬁc attribute (or set of attributes) of a relation. Such histograms are good for avoiding data</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 123pt;text-indent: 0pt;text-align: justify;">distribution skew but are not very useful for avoiding execution skew. Explain why.</p><p style="padding-left: 123pt;text-indent: 14pt;text-align: justify;">Now suppose you have a workload of queries that perform point lookups. Explain how you can use the queries in the workload to come up with a parti- tioning scheme that avoids execution skew.</p><p class="s46" style="padding-top: 6pt;padding-left: 93pt;text-indent: 0pt;text-align: justify;">21.4 <span class="p">Replication:</span></p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -18pt;text-align: justify;">a. Give two reasons for replicating data across geographically distributed data centers.</p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -19pt;text-align: justify;">b.  Centralized databases support replication using log records. How is the replication in centralized databases diﬀerent from that in paral- lel/distributed databases?</p><p class="s46" style="padding-top: 6pt;padding-left: 93pt;text-indent: 0pt;text-align: justify;">21.5 <span class="p">Parallel indices:</span></p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -18pt;text-align: justify;">a.  Secondary indices in a centralized database store the record identiﬁer. A global secondary index too could potentially store a partition num- ber holding the record, and a record identiﬁer within the partition. Why would this be a bad idea?</p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -19pt;text-align: justify;">b.  Global secondary indices are implemented in a way similar to local sec- ondary indices that are used when records are stored in a B<span class="s181">+</span>-tree ﬁle organization. Explain the similarities between the two scenarios that re- sult in a similar implementation of the secondary indices.</p><p class="s46" style="padding-top: 6pt;padding-left: 123pt;text-indent: -30pt;text-align: justify;">21.6  <span class="p">Parallel database systems store replicas of each data item (or partition) on more than one node.</span></p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -18pt;text-align: justify;">a.  Why is it a good idea to distribute the copies of the data items allocated to a node across multiple other nodes, instead of storing all the copies in the same node (or set of nodes).</p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -19pt;text-align: justify;">b. What are the beneﬁts and drawbacks of using <span class="s44">RAID </span>storage instead of storing an extra copy of each data item?</p><p class="s46" style="padding-top: 6pt;padding-left: 93pt;text-indent: 0pt;text-align: justify;">21.7 <span class="p">Partitioning and replication.</span></p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -18pt;text-align: justify;">a. Explain why range-partitioning gives better control on tablet sizes than hash partitioning. List an analogy between this case and the case of B<span class="s181">+</span>- tree indices versus hash indices.</p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -19pt;text-align: justify;">b.  Some systems ﬁrst perform hashing on the key, and then use range par- titioning on the hash values. What could be a motivation for this choice, and what are its drawbacks as compared to performing range partition direction on the key?</p><p style="padding-top: 6pt;padding-left: 149pt;text-indent: -18pt;text-align: justify;">c.  It is possible to horizontally partition data, and then perform vertical partitioning locally at each node. It is also possible to do the converse,</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 181pt;text-indent: 0pt;text-align: justify;">where vertical partitioning is done ﬁrst, and then each partition is then horizontally partitioned independently. What are are the beneﬁts of the ﬁrst option over the second one?</p><p class="s46" style="padding-top: 8pt;padding-left: 155pt;text-indent: -30pt;text-align: left;">21.8  <span class="p">In order to send a request to the master replica of a data item, a node must know which replica is the master for that data item.</span></p><p style="padding-top: 8pt;padding-left: 181pt;text-indent: -18pt;text-align: justify;">a.  Suppose that between the time the node identiﬁes which node is the master replica for a data item, and the time the request reaches the iden- tiﬁed node, the mastership has changed, and a diﬀerent node is now the master. How can such a situation be dealt with?</p><p style="padding-top: 6pt;padding-left: 181pt;text-indent: -19pt;text-align: justify;">b.  While the master replica could be chosen on a per-partition basis, some systems support a <i>per-record master replica</i>, where the records of a par- tition (or tablet) are replicated at some set of nodes, but each record’s master replica can be on any of the nodes from within this set of nodes, independent of the master replica of other records. List two beneﬁts of keeping track of master on a per-record basis.</p><p style="padding-top: 6pt;padding-left: 181pt;text-indent: -18pt;text-align: justify;">c. Suggest how to keep track of the master replica for each record, when there are a large number of records.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part392.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part394.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
