<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part393.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part395.htm">下一个 &gt;</a></p><p class="s45" style="padding-top: 11pt;padding-left: 72pt;text-indent: 0pt;text-align: left;">Exercises</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 8pt;padding-left: 28pt;text-indent: -28pt;text-align: justify;">21.9  <span class="p">For each of the three partitioning techniques, namely, round-robin, hash par- titioning, and range partitioning, give an example of a query for which that partitioning technique would provide the fastest response.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 155pt;text-indent: -34pt;text-align: justify;">21.10 <span class="p">What factors could result in skew when a relation is partitioned on one of its attributes by:</span></p><p style="padding-top: 8pt;padding-left: 162pt;text-indent: 0pt;text-align: left;">a. Hash partitioning?</p><p style="padding-top: 6pt;padding-left: 161pt;text-indent: 0pt;text-align: left;">b. Range partitioning?</p><p style="padding-top: 8pt;padding-left: 155pt;text-indent: 0pt;text-align: justify;">In each case, what can be done to reduce the skew?</p><p class="s46" style="padding-top: 6pt;padding-left: 155pt;text-indent: -34pt;text-align: justify;">21.11  <span class="p">What is the motivation for storing related records together in a key-value store? Explain the idea using the notion of an entity group.</span></p><p style="padding-top: 6pt;padding-left: 155pt;text-indent: -34pt;text-align: justify;"><b>21.12 </b>Why is it easier for a distributed ﬁle system such as <span class="s44">GFS </span>or <span class="s44">HDFS </span>to support replication than it is for a key-value store?</p><p style="padding-top: 6pt;padding-left: 155pt;text-indent: -34pt;text-align: justify;"><b>21.13 </b>Joins can be expensive in a key-value store, and diﬃcult to express if the system does not support <span class="s44">SQL </span>or a similar declarative query language. What can an application developer do to eﬃciently get results of join or aggregate queries in such a setting?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part393.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part395.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
