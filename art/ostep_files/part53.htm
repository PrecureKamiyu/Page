<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Table 6.1: Direction Execution Protocol (Without Limits)</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part52.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part54.htm">下一个 &gt;</a></p><p style="padding-top: 2pt;padding-left: 99pt;text-indent: 0pt;text-align: left;">Table 6.1: <b>Direction Execution Protocol (Without Limits)</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 88%;text-align: justify;">disk), locates its entry point (i.e., the <span class="s41">main() </span>routine or something simi- lar), jumps to it, and starts running the user’s code. Table <span style=" color: #00AEEF;">6.1 </span>shows this basic direct execution protocol (without any limits, yet), using a normal call and return to jump to the program’s <span class="s41">main() </span>and later to get back into the kernel.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Sounds simple, no? But this approach gives rise to a few problems in our quest to virtualize the CPU. The first is simple: if we just run a program, how can the OS make sure the program doesn’t do anything that we don’t want it to do, while still running it efficiently? The second: when we are running a process, how does the operating system stop it from running and switch to another process, thus implementing the <b>time sharing </b>we require to virtualize the CPU?</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">In answering these questions below, we’ll get a much better sense of what is needed to virtualize the CPU. In developing these techniques, we’ll also see where the “limited” part of the name arises from; without limits on running programs, the OS wouldn’t be in control of anything and thus would be “just a library” – a very sad state of affairs for an aspiring operating system!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part52.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part54.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
