<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>20.5  Distributed Systems</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part372.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part374.htm">下一个 &gt;</a></p><p class="s65" style="padding-top: 10pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">20.5  <span style=" color: #00AEEF;">Distributed Systems</span></p><p style="padding-top: 11pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">In a <span class="s63">distributed database system</span>, the database is stored on nodes located at geographi- cally separated <span class="s63">sites</span>. The nodes in a distributed system communicate with one another through various communication media, such as high-speed private networks or the in- ternet. They do not share main memory or disks. The general structure of a distributed system appears in Figure 20.9.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The main diﬀerences between shared-nothing parallel databases and distributed databases include the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="345" height="200" alt="image" src="Image_3132.png"/></span></p><p class="s467" style="text-indent: 0pt;line-height: 10pt;text-align: left;">network</p><p style="text-indent: 0pt;text-align: left;"/><p class="s467" style="padding-left: 7pt;text-indent: -7pt;text-align: left;">communication via network</p><p style="text-indent: 0pt;text-align: left;"/><p class="s467" style="padding-bottom: 3pt;padding-left: 84pt;text-indent: 0pt;text-align: center;">site A                     site C</p><p class="s467" style="padding-top: 2pt;padding-left: 84pt;text-indent: 0pt;text-align: center;">site B</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 230pt;text-indent: 0pt;text-align: left;">Figure 20.9 <span class="s74">A distributed system.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Distributed databases have sites that are geographically separated. As a result, the network connections have lower bandwidth, higher latency, and greater probability of failures, as compared to networks within a single data center.</span></p><p style="padding-left: 139pt;text-indent: 0pt;text-align: justify;">Systems built on distributed databases therefore need to be aware of network la- tency, and failures, as well as of physical data location. We discuss these issues later in this section. In particular, it is often desirable to keep a copy of the data at a data center close to the end user.</p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Parallel database systems address the problem of node failure. However, some fail- ures, particularly those due to earthquakes, ﬁres, or other natural disasters, may aﬀect an entire data center, causing failure of a large number of nodes. Distributed database systems need to continue working even in the event of failure of an en- tire data center, to ensure high availability. This requires replication of data across geographically separated data centers, to ensure that a common natural disaster does not aﬀect all the data centers. Replication and other techniques to ensure high availability are similar in both parallel and distributed databases, although implementation details may diﬀer.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Distributed databases may be separately administered, with each site retaining some degree of autonomy of operation. Such databases are often the result of the integration of existing databases to allow queries and transactions to cross database boundaries. However, distributed databases that are built for providing geographic distribution, versus those built by integrating existing databases, may be centrally administered.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Nodes in a distributed database tend to vary more in size and function, whereas parallel databases tend to have nodes that are of similar capacity.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">In a distributed database system, we diﬀerentiate between local and global trans- actions. A </span>local transaction <span class="p">is one that accesses data only from nodes where the transaction was initiated. A </span>global transaction<span class="p">, on the other hand, is one that ei- ther accesses data in a node diﬀerent from the one at which the transaction was initiated, or accesses data in several diﬀerent nodes.</span></p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">Web-scale applications today run on data management systems that combine sup- port for parallelism and distribution. Parallelism is used within a data center to handle high loads, while distribution across data centers is used to ensure high availability even in the event of natural disasters. At the lower end of functionality, such systems may be distributed data storage systems that support only limited functionality such as storage and retrieval of data by key, and they may not support schemas, query lan- guages, or transactions; all such higher-level functionality has to be managed by the applications. At the higher end of functionality, there are distributed database systems that support schemas, query language, and transactions. However, one characteristic of such systems is that they are centrally administered.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">In contrast, distributed databases that are built by integrating existing database systems have somewhat diﬀerent characteristics.</p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Sharing data. </span><span class="p">The major advantage in building a distributed database system is the provision of an environment where users at one site may be able to access the data residing at other sites. For instance, in a distributed university system, where each campus stores data related to that campus, it is possible for a user in one campus to access data in another campus. Without this capability, the transfer of student records from one campus to another campus would have to rely on some external mechanism.</span></p><p style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Autonomy. </b>The primary advantage of sharing data by means of data distribution is that each site can retain a degree of control over data that are stored locally. In a centralized system, the database administrator of the central site controls the database. In a distributed system, there is a global database administrator respon- sible for the entire system. A part of these responsibilities is delegated to the local database administrator for each site. Depending on the design of the distributed database system, each administrator may have a diﬀerent degree of <span class="s63">local autonomy</span>.</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">In a <span class="s63">homogeneous distributed database </span>system, nodes share a common global schema (although some relations may be stored only at some nodes), all nodes run the same distributed database-management software, and the nodes actively cooperate in processing transactions and queries.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">However, in many cases a distributed database has to be constructed by linking together multiple already-existing database systems, each with its own schema and pos- sibly running diﬀerent database-management software. The sites may not be aware of one another, and they may provide only limited facilities for cooperation in query and transaction processing. Such systems are sometimes called <span class="s63">federated database systems </span>or <span class="s63">heterogeneous distributed database systems</span>.</p><p class="s66" style="padding-top: 3pt;padding-left: 203pt;text-indent: 0pt;text-align: left;"><a name="bookmark455">20.6 </a><span style=" color: #00AEEF;">Transaction Processing in Parallel and Distributed Systems  </span><span class="s164">989</span><a name="bookmark502">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Nodes in a distributed database communicate over <i>wide-area networks </i>(<span class="s44">WAN</span>). Al- though wide-area networks have bandwidth much greater than local-area networks, the bandwidth is usually shared by multiple users/applications and is expensive relative to local-area network bandwidth. Thus, applications that communicate across wide-area networks usually have a lower bandwidth.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Communication in a <span class="s44">WAN </span>must also contend with signiﬁcant <span class="s63">latency</span>: a message may take up to a few hundred milliseconds to be delivered across the world, both due to speed-of-light delays, and due to queuing delays at a number of routers in the path of the message. Latency in a wide-area setting is a fundamental problem that cannot be reduced beyond a point. Thus, applications whose data and computing resources are distributed geographically have to be carefully designed to ensure that latency does not aﬀect system performance excessively.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Wide-area networks also have to contend with network-link failures, a problem that is relatively rare in local-area networks. In particular, network-link failures may result in two sites that are both alive having no way to communicate with each other, a situation referred to as a <span class="s63">network partition</span>.<span class="s76">5</span> In the event of a partition, it may not be possible for a user or an application to access required data. Thus, network partitioning aﬀects the <span class="s63">availability </span>of a system. Tradeoﬀs between availability and consistency of data in the event of network partitions are discussed in Section 23.4.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part372.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part374.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
