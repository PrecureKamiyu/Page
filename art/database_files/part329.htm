<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>18.1   Lock-Based Protocols</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part328.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part330.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 72pt;text-indent: 0pt;text-align: left;">18.1   <span style=" color: #00AEEF;">Lock-Based Protocols</span></p><p style="padding-top: 12pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">One way to ensure isolation is to require that data items be accessed in a mutually exclu- sive manner; that is, while one transaction is accessing a data item, no other transaction can modify that data item. The most common method used to implement this require- ment is to allow a transaction to access a data item only if it is currently holding a <span class="s63">lock </span>on that item. We introduced the concept of locking in Section 17.9.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">18.1.1 Locks</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">There are various modes in which a data item may be locked. In this section, we restrict our attention to two modes:</p><p style="padding-top: 8pt;padding-left: 145pt;text-indent: -16pt;line-height: 87%;text-align: left;"><span class="s63">1. </span><b>Shared</b>. If a transaction <i>T</i><span class="s97">i </span>has obtained a <span class="s63">shared-mode lock </span>(denoted by S) on item <i>Q</i>, then <i>T</i><span class="s97">i </span>can read, but cannot write, <i>Q</i>.</p><p style="padding-top: 5pt;padding-left: 145pt;text-indent: -17pt;line-height: 90%;text-align: left;"><span class="s63">2. </span><b>Exclusive</b>. Ifa transaction <i>T</i><span class="s145">i </span>has obtained an <span class="s63">exclusive-mode lock </span>(denoted by X) on item <i>Q</i>, then <i>T</i><span class="s145">i </span>can both read and write <i>Q</i>.</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">We require that every transaction <span class="s63">request </span>a lock in an appropriate mode on data item <i>Q</i>, depending on the types of operations that it will perform on <i>Q</i>. The transaction</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s20" style="padding-left: 119pt;text-indent: 0pt;text-align: right;">835</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:223.504pt" cellspacing="0"><tr style="height:17pt"><td style="width:26pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:34pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s154" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">S</p></td><td style="width:38pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s154" style="padding-top: 2pt;padding-right: 15pt;text-indent: 0pt;text-align: right;">X</p></td></tr><tr style="height:20pt"><td style="width:26pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s154" style="padding-top: 2pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">S</p></td><td style="width:34pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p class="s154" style="padding-top: 2pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">true</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p class="s154" style="padding-top: 2pt;padding-right: 12pt;text-indent: 0pt;text-align: right;">false</p></td></tr><tr style="height:18pt"><td style="width:26pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s154" style="padding-top: 2pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">X</p></td><td style="width:34pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p class="s154" style="padding-top: 2pt;padding-left: 5pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">false</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p class="s154" style="padding-top: 2pt;padding-right: 12pt;text-indent: 0pt;text-align: right;">false</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 18.1 </span>Lock-compatibility matrix <span class="s157">comp</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">makes the request to the concurrency-control manager. The transaction can proceed with the operation only after the concurrency-control manager <span class="s63">grants </span>the lock to the transaction. The use of these two lock modes allows multiple transactions to read a data item but limits write access to just one transaction at a time.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">To state this more generally, given a set of lock modes, we can deﬁne a <span class="s63">compatibility function </span>on them as follows: Let <i>A </i>and <i>B </i>represent arbitrary lock modes. Suppose that a transaction <i>T</i><span class="s145">i </span>requests a lock of mode <i>A </i>on item <i>Q </i>on which transaction <i>T</i><span class="s145">j </span>(<i>T</i><span class="s145">i</span></p><p class="s13" style="padding-left: 88pt;text-indent: 0pt;line-height: 12pt;text-align: justify;"><span class="s86">≠ </span>T<span class="s145">j </span><span class="p">) currently holds a lock of mode </span>B<span class="p">. If transaction </span>T<span class="s145">i </span><span class="p">can be granted a lock on</span></p><p class="s13" style="padding-left: 88pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">Q <span class="p">immediately, in spite of the presence of the mode </span>B <span class="p">lock, then we say mode </span>A <span class="p">is</span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;"><span class="s63">compatible </span>with mode <i>B</i>. Such a function can be represented conveniently by a matrix. The compatibility relation between the two modes of locking discussed in this section appears in the matrix <span class="s49">comp </span>of Figure 18.1. An element <span class="s49">comp</span>(<i>A, B</i>) of the matrix has the value <i>true </i>if and only if mode <i>A </i>is compatible with mode <i>B</i>.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Note that shared mode is compatible with shared mode, but not with exclusive mode. At any time, several shared-mode locks can be held simultaneously (by diﬀerent transactions) on a particular data item. A subsequent exclusive-mode lock request has to wait until the currently held shared-mode locks are released.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">A transaction requests a shared lock on data item <i>Q </i>by executing the <span class="s49">lock-S</span>(<i>Q</i>) instruction. Similarly, a transaction requests an exclusive lock through the <span class="s49">lock-X</span>(<i>Q</i>) instruction. A transaction can unlock a data item <i>Q </i>by the <span class="s49">unlock</span>(<i>Q</i>) instruction.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">To access a data item, transaction <i>T</i><span class="s145">i </span>must ﬁrst lock that item. If the data item is al- ready locked by another transaction in an incompatible mode, the concurrency-control manager will not grant the lock until all incompatible locks held by other transactions have been released. Thus, <i>T</i><span class="s97">i </span>is made to <span class="s63">wait </span>until all incompatible locks held by other transactions have been released.</p><p style="padding-left: 88pt;text-indent: 17pt;line-height: 94%;text-align: justify;">Transaction <i>T</i><span class="s97">i </span>may unlock a data item that it had locked at some earlier point. Note that a transaction must hold a lock on a data item as long as it accesses that item. Moreover, it is not necessarily desirable for a transaction to unlock a data item</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">immediately after its ﬁnal access of that data item, since serializability may not be ensured.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">As an illustration, consider again the banking example that we introduced in Chap- ter 17. Let <i>A </i>and <i>B </i>be two accounts that are accessed by transactions <i>T</i><span class="s98">1</span> and <i>T</i><span class="s98">2</span>. Trans- action <i>T</i><span class="s98">1</span> transfers $50 from account <i>B </i>to account <i>A </i>(Figure 18.2). Transaction <i>T</i><span class="s98">2</span> displays the total amount of money in accounts <i>A </i>and <i>B</i>—that is, the sum <i>A </i>+ <i>B </i>(Figure 18.3).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 290pt;text-indent: -18pt;text-align: left;"><i>T</i><span class="s98">1</span>: <span class="s49">lock-X</span>(<i>B</i>); <span class="s49">read</span>(<i>B</i>);</p><p class="s13" style="padding-left: 290pt;text-indent: 0pt;line-height: 13pt;text-align: left;">B <span class="p">:= </span>B <span class="s15">− </span><span class="p">50;</span></p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">write</span>(<i>B</i>); <span class="s49">unlock</span>(<i>B</i>); <span class="s49">lock-X</span>(<i>A</i>);</p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">read</span>(<i>A</i>);</p><p class="s13" style="padding-left: 290pt;text-indent: 0pt;text-align: left;">A <span class="p">:= </span>A <span class="p">+ 50;</span></p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">write</span>(<i>A</i>); <span class="s49">unlock</span>(<i>A</i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_3002.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 245pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 18.2 </span>Transaction <span class="s425">T</span><span class="s116">1</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Suppose that the values of accounts <i>A </i>and <i>B </i>are $100 and $200, respectively. If these two transactions are executed serially, either in the order <i>T</i><span class="s98">1</span>, <i>T</i><span class="s98">2</span> or the order <i>T</i><span class="s98">2</span>, <i>T</i><span class="s98">1</span>, then transaction <i>T</i><span class="s98">2</span> will display the value $300. If, however, these transactions are executed concurrently, then schedule 1, in Figure 18.4, is possible. In this case, trans- action <i>T</i><span class="s98">2</span> displays $250, which is incorrect. The reason for this mistake is that the transaction <i>T</i><span class="s98">1</span> unlocked data item <i>B </i>too early, as a result of which <i>T</i><span class="s98">2</span> saw an inconsis- tent state.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The schedule shows the actions executed by the transactions, as well as the points at which the concurrency-control manager grants the locks. The transaction making a lock request cannot execute its next action until the concurrency-control manager grants the lock. Hence, the lock must be granted in the interval of time between the lock-request operation and the following action of the transaction. Exactly when within this interval the lock is granted is not important; we can safely assume that the lock is granted just before the following action of the transaction. We shall therefore drop the</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_3003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 283pt;text-indent: -18pt;text-align: left;"><i>T</i><span class="s98">2</span>: <span class="s49">lock-S</span>(<i>A</i>); <span class="s49">read</span>(<i>A</i>); <span class="s49">unlock</span>(<i>A</i>); <span class="s49">lock-S</span>(<i>B</i>);</p><p style="padding-left: 283pt;text-indent: 0pt;text-align: left;"><span class="s49">read</span>(<i>B</i>); <span class="s49">unlock</span>(<i>B</i>); <span class="s49">display</span>(<i>A </i>+ <i>B</i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_3004.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 244pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 18.3 </span>Transaction <span class="s425">T</span><span class="s116">2</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:131.394pt" cellspacing="0"><tr style="height:18pt"><td style="width:64pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">1</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 33pt;padding-right: 33pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">2</span></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s72" style="padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">concurrency-control manager</p></td></tr><tr style="height:18pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>B</i>)</p></td><td style="width:79pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:26pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">grant-X</span>(<i>B, T</i><span class="s428">1</span>)</p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">− </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">unlock</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-S</span>(<i>A</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:26pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">grant-S</span>(<i>A, T</i><span class="s428">2</span>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">unlock</span>(<i>A</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-S</span>(<i>B</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:26pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">grant-S</span>(<i>B, T</i><span class="s428">2</span>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">unlock</span>(<i>B</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">display</span>(<i>A+ B</i>)</p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:26pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">grant-X</span>(<i>A, T</i><span class="s428">1</span>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A <span class="s72">:= </span>A+ 50</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">unlock</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 18.4 <span class="s74">Schedule 1.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">column depicting the actions of the concurrency-control manager from all schedules depicted in the rest of the chapter. We let you infer when locks are granted.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Suppose now that unlocking is delayed to the end of the transaction. Transaction <i>T</i><span class="s98">3</span> corresponds to <i>T</i><span class="s98">1</span> with unlocking delayed (Figure 18.5). Transaction <i>T</i><span class="s98">4</span> corresponds to <i>T</i><span class="s98">2</span> with unlocking delayed (Figure 18.6).</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">You should verify that the sequence of reads and writes in schedule 1, which lead to an incorrect total of $250 being displayed, is no longer possible with <i>T</i><span class="s98">3</span> and <i>T</i><span class="s98">4</span>. Other schedules are possible. <i>T</i><span class="s98">4</span> will not print out an inconsistent result in any of them; we shall see why later.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Unfortunately, locking can lead to an undesirable situation. Consider the partial schedule of Figure 18.7 for <i>T</i><span class="s98">3</span> and <i>T</i><span class="s98">4</span>. Since <i>T</i><span class="s98">3</span> is holding an exclusive-mode lock on <i>B </i>and <i>T</i><span class="s98">4</span> is requesting a shared-mode lock on <i>B</i>, <i>T</i><span class="s98">4</span> is waiting for <i>T</i><span class="s98">3</span> to unlock <i>B</i>. Similarly, since <i>T</i><span class="s98">4</span> is holding a shared-mode lock on <i>A </i>and <i>T</i><span class="s98">3</span> is requesting an exclusive- mode lock on <i>A</i>, <i>T</i><span class="s98">3</span> is waiting for <i>T</i><span class="s98">4</span> to unlock <i>A</i>. Thus, we have arrived at a state where neither of these transactions can ever proceed with its normal execution. This situation is called <span class="s63">deadlock</span>. When deadlock occurs, the system must roll back one of</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 290pt;text-indent: -18pt;text-align: left;"><i>T</i><span class="s98">3</span>: <span class="s49">lock-X</span>(<i>B</i>); <span class="s49">read</span>(<i>B</i>);</p><p class="s13" style="padding-left: 290pt;text-indent: 0pt;line-height: 13pt;text-align: left;">B <span class="p">:= </span>B <span class="s15">− </span><span class="p">50;</span></p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">write</span>(<i>B</i>);</p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">lock-X</span>(<i>A</i>);</p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">read</span>(<i>A</i>);</p><p class="s13" style="padding-left: 290pt;text-indent: 0pt;text-align: left;">A <span class="p">:= </span>A <span class="p">+ 50;</span></p><p style="padding-left: 290pt;text-indent: 0pt;text-align: left;"><span class="s49">write</span>(<i>A</i>); <span class="s49">unlock</span>(<i>B</i>); <span class="s49">unlock</span>(<i>A</i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_3005.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 157pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 18.5 </span>Transaction <span class="s425">T</span><span class="s116">3</span> (transaction <span class="s425">T</span><span class="s116">1</span> with unlocking delayed).</p><p style="padding-top: 10pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">the two transactions. Once a transaction has been rolled back, the data items that were locked by that transaction are unlocked. These data items are then available to the other transaction, which can continue with its execution. We shall return to the issue of deadlock handling in Section 18.2.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">If we do not use locking, or if we unlock data items too soon after reading or writing them, we may get inconsistent states. On the other hand, if we do not unlock a data item before requesting a lock on another data item, deadlocks may occur. There are ways to avoid deadlock in some situations, as we shall see in Section 18.1.5. However, in general, deadlocks are a necessary evil associated with locking, if we want to avoid inconsistent states. Deadlocks are deﬁnitely preferable to inconsistent states, since they can be handled by rolling back transactions, whereas inconsistent states may lead to real-world problems that cannot be handled by the database system.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">We shall require that each transaction in the system follow a set of rules, called a <span class="s63">locking protocol</span>, indicating when a transaction may lock and unlock each of the data items. Locking protocols restrict the number of possible schedules. The set of all such</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_3006.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 283pt;text-indent: -18pt;text-align: left;"><i>T</i><span class="s98">4</span>: <span class="s49">lock-S</span>(<i>A</i>); <span class="s49">read</span>(<i>A</i>);</p><p style="padding-left: 283pt;text-indent: 0pt;text-align: left;"><span class="s49">lock-S</span>(<i>B</i>);</p><p style="padding-left: 283pt;text-indent: 0pt;text-align: left;"><span class="s49">read</span>(<i>B</i>); <span class="s49">display</span>(<i>A </i>+ <i>B</i>); <span class="s49">unlock</span>(<i>A</i>); <span class="s49">unlock</span>(<i>B</i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_3007.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 156pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 18.6 </span>Transaction <span class="s425">T</span><span class="s116">4</span> (transaction <span class="s425">T</span><span class="s116">2</span> with unlocking delayed).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:213.354pt" cellspacing="0"><tr style="height:18pt"><td style="width:64pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 23pt;padding-right: 24pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">3</span></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">4</span></p></td></tr><tr style="height:109pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><span class="s424">lock-X</span>(<i>B</i>) <span class="s424">read</span>(<i>B</i>)</p><p class="s71" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">− </span><span class="s72">50</span></p><p class="s72" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span class="s424">lock-X</span>(<i>A</i>)</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;text-align: left;"><span class="s424">lock-S</span>(<i>A</i>) <span class="s424">read</span>(<i>A</i>) <span class="s424">lock-S</span>(<i>B</i>)</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 18.7 <span class="s74">Schedule 2.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">schedules is a proper subset of all possible serializable schedules. We shall present several locking protocols that allow only conﬂict-serializable schedules, and thereby ensure isolation. Before doing so, we introduce some terminology.</p><p class="s13" style="padding-top: 1pt;padding-left: 88pt;text-indent: 17pt;line-height: 84%;text-align: justify;"><span class="p">Let </span><span class="s95">{</span>T<span class="s98">0</span><span class="p">, </span>T<span class="s98">1</span><span class="p">, </span><span class="s15">… </span><span class="p">, </span>T<span class="s145">n</span><span class="s95">} </span><span class="p">be a set of transactions participating in a schedule </span>S<span class="p">. We say that </span>T<span class="s145">i </span><span class="s63">precedes </span>T<span class="s145">j </span><span class="p">in </span>S<span class="p">, written </span>T<span class="s145">i </span><span class="s86">→ </span>T<span class="s145">j </span><span class="p">, if there exists a data item </span>Q <span class="p">such that </span>T<span class="s145">i </span><span class="p">has held lock mode </span>A <span class="p">on </span>Q<span class="p">, and </span>T<span class="s145">j </span><span class="p">has held lock mode </span>B <span class="p">on </span>Q <span class="p">later, and </span><span class="s49">comp</span><span class="p">(</span>A,B<span class="p">)= false. If </span>T<span class="s97">i </span><span class="s86">→ </span>T<span class="s97">j </span><span class="p">, then that precedence implies that in any equivalent serial schedule, </span>T<span class="s97">i </span><span class="p">must appear before </span>T<span class="s97">j </span><span class="p">. Observe that this graph is similar to the precedence graph that we used in Section 17.6 to test for conﬂict serializability. Conﬂicts between instructions</span></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">correspond to noncompatibility of lock modes.</p><p style="padding-left: 88pt;text-indent: 17pt;line-height: 94%;text-align: justify;">We say that a schedule <i>S </i>is <span class="s63">legal </span>under a given locking protocol if <i>S </i>is a possible schedule for a set of transactions that follows the rules of the locking protocol. We say that a locking protocol <span class="s63">ensures </span>conﬂict serializability if and only if all legal schedules are conﬂict serializable; in other words, for all legal schedules the associated <span class="s86">→ </span>relation is acyclic.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">18.1.2 Granting of Locks</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">When a transaction requests a lock on a data item in a particular mode, and no other transaction has a lock on the same data item in a conﬂicting mode, the lock can be granted. However, care must be taken to avoid the following scenario. Suppose a trans- action <i>T</i><span class="s98">2</span> has a shared-mode lock on a data item, and another transaction <i>T</i><span class="s98">1</span> requests an exclusive-mode lock on the data item. <i>T</i><span class="s98">1</span> has to wait for <i>T</i><span class="s98">2</span> to release the shared- mode lock. Meanwhile, a transaction <i>T</i><span class="s98">3</span> may request a shared-mode lock on the same data item. The lock request is compatible with the lock granted to <i>T</i><span class="s98">2</span>, so <i>T</i><span class="s98">3</span> may be granted the shared-mode lock. At this point <i>T</i><span class="s98">2</span> may release the lock, but still <i>T</i><span class="s98">1</span> has to wait for <i>T</i><span class="s98">3</span> to ﬁnish. But again, there may be a new transaction <i>T</i><span class="s98">4</span> that requests a shared-mode lock on the same data item, and is granted the lock before <i>T</i><span class="s98">3</span> releases it. In fact, it is possible that there is a sequence of transactions that each requests a shared- mode lock on the data item, and each transaction releases the lock a short while after it</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">is granted, but <i>T</i><span class="s98">1</span> never gets the exclusive-mode lock on the data item. The transaction</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;"><i>T</i><span class="s98">1</span> may never make progress, and is said to be <span class="s63">starved</span>.</p><p style="padding-left: 119pt;text-indent: 17pt;line-height: 94%;text-align: justify;">We can avoid starvation of transactions by granting locks in the following manner: When a transaction <i>T</i><span class="s97">i </span>requests a lock on a data item <i>Q </i>in a particular mode <i>M </i>, the concurrency-control manager grants the lock provided that:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 123pt;text-indent: 0pt;text-align: left;"><span class="s39">• </span><span class="s40">There is no other transaction holding a lock on </span>Q <span class="p">in a mode that conﬂicts with </span>M <span class="p">.</span></p><p class="s13" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: left;"><span class="s39">• </span><span class="s40">There is no other transaction that is waiting for a lock on </span>Q <span class="p">and that made its lock request before </span>T<span class="s97">i</span><span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Thus, a lock request will never get blocked by a lock request that is made later.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">18.1.3 The Two-Phase Locking Protocol</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">One protocol that ensures serializability is the <span class="s63">two-phase locking protocol</span>. This protocol requires that each transaction issue lock and unlock requests in two phases:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 128pt;text-indent: 0pt;text-align: left;">1. Growing phase<span class="p">. A transaction may obtain locks, but may not release any lock.</span></p><p class="s63" style="padding-top: 6pt;padding-left: 145pt;text-indent: -17pt;text-align: left;">2. Shrinking phase<span class="p">. A transaction may release locks, but may not obtain any new locks.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Initially, a transaction is in the growing phase. The transaction acquires locks as needed. Once the transaction releases a lock, it enters the shrinking phase, and it can issue no more lock requests.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">For example, transactions <i>T</i><span class="s98">3</span> and <i>T</i><span class="s98">4</span> are two phase. On the other hand, transactions <i>T</i><span class="s98">1</span> and <i>T</i><span class="s98">2</span> are not two phase. Note that the unlock instructions do not need to appear at the end of the transaction. For example, in the case of transaction <i>T</i><span class="s98">3</span>, we could move the <span class="s49">unlock</span>(<i>B</i>) instruction to just after the <span class="s49">lock-X</span>(<i>A</i>) instruction and still retain the two-phase locking property.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">We can show that the two-phase locking protocol ensures conﬂict serializability. Consider any transaction. The point in the schedule where the transaction has obtained its ﬁnal lock (the end of its growing phase) is called the <span class="s63">lock point </span>of the transaction. Now, transactions can be ordered according to their lock points—this ordering is, in fact, a serializability ordering for the transactions. We leave the proof as an exercise for you to do (see Practice Exercise 18.1).</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Two-phase locking does <i>not </i>ensure freedom from deadlock. Observe that transac- tions <i>T</i><span class="s98">3</span> and <i>T</i><span class="s98">4</span> are two phase, but, in schedule 2 (Figure 18.7), they are deadlocked.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Recall from Section 17.7.2 that, in addition to being serializable, schedules should be cascadeless. Cascading rollback may occur under two-phase locking. As an illus- tration, consider the partial schedule of Figure 18.8. Each transaction observes the two-phase locking protocol, but the failure of <i>T</i><span class="s98">5</span> after the <span class="s49">read</span>(A) step of <i>T</i><span class="s98">7</span> leads to cascading rollback of <i>T</i><span class="s130">6 </span><span class="s94">and </span><i>T</i><span class="s130">7</span><span class="s94">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:186.954pt" cellspacing="0"><tr style="height:18pt"><td style="width:59pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 23pt;padding-right: 23pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">5</span></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">6</span></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">7</span></p></td></tr><tr style="height:18pt"><td style="width:59pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>A</i>)</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-S</span>(<i>B</i>)</p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">unlock</span>(<i>A</i>)</p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 5pt;padding-right: 6pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><span class="s424">lock-X</span>(<i>A</i>)</p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 5pt;padding-right: 14pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 1pt;padding-right: 7pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><span class="s424">write</span>(<i>A</i>)</p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><span class="s424">unlock</span>(<i>A</i>)</p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-S</span>(<i>A</i>)</p></td></tr><tr style="height:14pt"><td style="width:59pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 18.8 <span class="s74">Partial schedule under two-phase locking.</span></p><p style="padding-top: 8pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">Cascading rollbacks can be avoided by a modiﬁcation of two-phase locking called the <span class="s63">strict two-phase locking protocol</span>. This protocol requires not only that locking be two phase, but also that all exclusive-mode locks taken by a transaction be held until that transaction commits. This requirement ensures that any data written by an uncommit- ted transaction are locked in exclusive mode until the transaction commits, preventing any other transaction from reading the data.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Another variant of two-phase locking is the <span class="s63">rigorous two-phase locking protocol</span>, which requires that all locks be held until the transaction commits. We can easily verify that, with rigorous two-phase locking, transactions can be serialized in the order in which they commit.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Consider the following two transactions, for which we have shown only some of the signiﬁcant <span class="s49">read </span>and <span class="s49">write </span>operations:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: right;"><i>T</i><span class="s98">8</span>: <span class="s49">read</span>(<i>a</i><span class="s98">1</span>);</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: right;"><span class="s49">read</span>(<i>a</i><span class="s98">2</span>);</p><p style="padding-left: 244pt;text-indent: 0pt;text-align: left;">. . .</p><p style="padding-top: 1pt;padding-left: 244pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s49">read</span>(<i>a</i><span class="s145">n</span>); <span class="s49">write</span>(<i>a</i><span class="s98">1</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 226pt;text-indent: 0pt;text-align: left;"><i>T</i><span class="s98">9</span>: <span class="s49">read</span>(<i>a</i><span class="s98">1</span>);</p><p style="padding-left: 244pt;text-indent: 0pt;text-align: left;"><span class="s49">read</span>(<i>a</i><span class="s98">2</span>); <span class="s49">display</span>(<i>a</i><span class="s98">1</span> <span class="s15">+ </span><i>a</i><span class="s98">2</span>).</p><p style="padding-top: 11pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">If we employ the two-phase locking protocol, then <i>T</i><span class="s98">8</span> must lock <i>a</i><span class="s98">1</span> in exclusive mode. Therefore, any concurrent execution of both transactions amounts to a serial execution. Notice, however, that <i>T</i><span class="s98">8</span> needs an exclusive lock on <i>a</i><span class="s98">1</span> only at the end of</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:238.674pt" cellspacing="0"><tr style="height:18pt"><td style="width:71pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 29pt;padding-right: 29pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">8</span></p></td><td style="width:62pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 25pt;padding-right: 25pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">9</span></p></td></tr><tr style="height:135pt"><td style="width:71pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 6pt;padding-right: 18pt;text-indent: 0pt;line-height: 204%;text-align: left;"><span class="s424">lock-S</span>(<i>a</i><span class="s428">1</span>) <span class="s424">lock-S</span>(<i>a</i><span class="s428">2</span>)</p><p class="s72" style="padding-left: 6pt;padding-right: 18pt;text-indent: 0pt;text-align: left;"><span class="s424">lock-S</span>(<i>a</i><span class="s428">3</span>) <span class="s424">lock-S</span>(<i>a</i><span class="s428">4</span>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 87%;text-align: left;"><span class="s424">lock-S</span>(<i>a</i><span class="s364">n</span>) <span class="s424">upgrade</span>(<i>a</i><span class="s428">1</span>)</p></td><td style="width:62pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 7pt;padding-right: 9pt;text-indent: 0pt;line-height: 204%;text-align: left;"><span class="s424">lock-S</span>(<i>a</i><span class="s428">1</span>) <span class="s424">lock-S</span>(<i>a</i><span class="s428">2</span>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><span class="s424">unlock</span>(<i>a</i><span class="s428">1</span>) <span class="s424">unlock</span>(<i>a</i><span class="s428">2</span>)</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 181pt;text-indent: 0pt;text-align: left;">Figure 18.9 <span class="s74">Incomplete schedule with a lock conversion.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;"><span class="p">its execution, when it writes </span>a<span class="s98">1</span><span class="p">. Thus, if </span>T<span class="s98">8</span><span class="p"> could initially lock </span>a<span class="s98">1</span><span class="p"> in shared mode, and then could later change the lock to exclusive mode, we could get more concurrency, since </span>T<span class="s130">8 </span><span class="s94">and </span>T<span class="s130">9 </span><span class="s94">could access </span>a<span class="s130">1 </span><span class="s94">and </span>a<span class="s130">2 </span><span class="s94">simultaneously.</span></p><p style="padding-left: 137pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">This observation leads us to a reﬁnement of the basic two-phase locking protocol,</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">in which <span class="s63">lock conversions </span>are allowed. We shall provide a mechanism for upgrading a shared lock to an exclusive lock, and downgrading an exclusive lock to a shared lock. We denote conversion from shared to exclusive modes by <span class="s63">upgrade</span>, and from exclusive to shared by <span class="s63">downgrade</span>. Lock conversion cannot be allowed arbitrarily. Rather, upgrading can take place in only the growing phase, whereas downgrading can take place in only the shrinking phase.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Returning to our example, transactions <i>T</i><span class="s98">8</span> and <i>T</i><span class="s98">9</span> can run concurrently under the reﬁned two-phase locking protocol, as shown in the incomplete schedule of Figure 18.9, where only some of the locking instructions are shown.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Note that a transaction attempting to upgrade a lock on an item <i>Q </i>may be forced to wait. This enforced wait occurs if <i>Q </i>is currently locked by <i>another </i>transaction in shared mode.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Just like the basic two-phase locking protocol, two-phase locking with lock conver- sion generates only conﬂict-serializable schedules, and transactions can be serialized by their lock points. Further, if exclusive locks are held until the end of the transaction, the schedules are cascadeless.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">For a set of transactions, there may be conﬂict-serializable schedules that can- not be obtained through the two-phase locking protocol. However, to obtain conﬂict- serializable schedules through non-two-phase locking protocols, we need either to have additional information about the transactions or to impose some structure or ordering on the set of data items in the database. We shall see examples when we consider other locking protocols later in this chapter.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Strict two-phase locking and rigorous two-phase locking (with lock conversions) are used extensively in commercial database systems.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">A simple but widely used scheme automatically generates the appropriate lock and unlock instructions for a transaction, on the basis of read and write requests from the transaction:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 107pt;text-indent: -16pt;line-height: 87%;text-align: justify;"><span class="s39">• </span><span class="s40">When a transaction </span><i>T</i><span class="s97">i </span>issues a <span class="s49">read</span>(<i>Q</i>) operation, the system issues a <span class="s49">lock-S</span>(<i>Q</i>) instruction followed by the <span class="s49">read</span>(<i>Q</i>) instruction.</p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;line-height: 94%;text-align: justify;"><span class="s39">• </span><span class="s40">When </span><i>T</i><span class="s97">i </span>issues a <span class="s49">write</span>(<i>Q</i>) operation, the system checks to see whether <i>T</i><span class="s97">i </span>already holds a shared lock on <i>Q</i>. If it does, then the system issues an <span class="s49">upgrade</span>(<i>Q</i>) in- struction, followed by the <span class="s49">write</span>(<i>Q</i>) instruction. Otherwise, the system issues a</p><p style="padding-left: 107pt;text-indent: 0pt;text-align: justify;"><span class="s49">lock-X</span>(<i>Q</i>) instruction, followed by the <span class="s49">write</span>(<i>Q</i>) instruction.</p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">All locks obtained by a transaction are unlocked after that transaction commits or aborts.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">18.1.4 Implementation of Locking</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">A <span class="s63">lock manager </span>can be implemented as a process that receives messages from trans- actions and sends messages in reply. The lock-manager process replies to lock-request messages with lock-grant messages, or with messages requesting rollback of the trans- action (in case of deadlocks). Unlock messages require only an acknowledgment in response, but may result in a grant message to another waiting transaction.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The lock manager uses this data structure: For each data item that is currently locked, it maintains a linked list of records, one for each request, in the order in which the requests arrived. It uses a hash table, indexed on the name of a data item, to ﬁnd the linked list (if any) for a data item; this table is called the <span class="s63">lock table</span>. Each record of the linked list for a data item notes which transaction made the request, and what lock mode it requested. The record also notes if the request has currently been granted.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Figure 18.10 shows an example of a lock table. The table contains locks for ﬁve diﬀerent data items, I4, I7, I23, I44, and I912. The lock table uses overﬂow chaining, so there is a linked list of data items for each entry in the lock table. There is also a list of transactions that have been granted locks, or are waiting for locks, for each of the data items. Granted locks are the rectangles ﬁlled in a darker shade, while waiting requests are the rectangles ﬁlled in a lighter shade. We have omitted the lock mode to keep the ﬁgure simple. It can be seen, for example, that T23 has been granted locks on I912 and I7 and is waiting for a lock on I4.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Although the ﬁgure does not show it, the lock table should also maintain an index on transaction identiﬁers so that it is possible to determine eﬃciently the set of locks held by a given transaction.</p><p style="padding-left: 106pt;text-indent: 0pt;text-align: justify;">The lock manager processes requests this way:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">When a lock request message arrives, it adds a record to the end of the linked list for the data item, if the linked list is present. Otherwise it creates a new linked list, containing only the record for the request.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="276" height="391" alt="image" src="Image_3008.png"/></span></p><p class="s119" style="padding-left: 258pt;text-indent: 0pt;text-align: left;">I7           I23</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 257pt;text-indent: 0pt;text-align: left;">T23           T1   T8   T2</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-top: 5pt;padding-left: 254pt;text-indent: 0pt;text-align: left;">I912</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 39pt;text-indent: 0pt;text-align: center;">T23</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 35pt;text-indent: 0pt;text-align: center;">I4</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 68pt;text-indent: 0pt;text-align: center;">T1  T23</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 119pt;text-indent: 0pt;text-align: right;">I44</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 119pt;text-indent: 0pt;text-align: right;">T8</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s119" style="padding-left: 46pt;text-indent: 0pt;line-height: 180%;text-align: center;">granted waiting</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 251pt;text-indent: 0pt;text-align: left;">Figure 18.10 <span class="s74">Lock table.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 139pt;text-indent: 14pt;text-align: justify;">It always grants a lock request on a data item that is not currently locked. But if the transaction requests a lock on an item on which a lock is currently held, the lock manager grants the request only if it is compatible with the locks that are currently held, and all earlier requests have been granted already. Otherwise the request has to wait.</p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">When the lock manager receives an unlock message from a transaction, it deletes the record for that data item in the linked list corresponding to that transaction. It tests the record that follows, if any, as described in the previous paragraph, to see if that request can now be granted. If it can, the lock manager grants that request and processes the record following it, if any, similarly, and so on.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">If a transaction aborts, the lock manager deletes any waiting request made by the transaction. Once the database system has taken appropriate actions to undo the transaction (see Section 19.3), it releases all locks held by the aborted transaction.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">This algorithm guarantees freedom from starvation for lock requests, since a re- quest can never be granted while a request received earlier is waiting to be granted. We study how to detect and handle deadlocks later, in Section 18.2.2. Section 20.3.1 describes an alternative implementation— one that uses shared memory instead of mes- sage passing for lock request/grant.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">18.1.5 Graph-Based Protocols</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">As noted in Section 18.1.3, if we wish to develop protocols that are not two phase, we need additional information on how each transaction will access the database. There are various models that can give us the additional information, each diﬀering in the amount of information provided. The simplest model requires that we have prior knowl- edge about the order in which the database items will be accessed. Given such infor- mation, it is possible to construct locking protocols that are not two phase, but that, nevertheless, ensure conﬂict serializability.</p><p style="padding-left: 88pt;text-indent: 17pt;line-height: 83%;text-align: justify;">To acquire such prior knowledge, we impose a partial ordering <span class="s86">→ </span>on the set <b>D </b>= <span class="s95">{</span><i>d</i><span class="s130">1</span><span class="s94">, </span><i>d</i><span class="s130">2</span><span class="s94">, </span><span class="s15">… </span>, <i>d</i><span class="s97">h</span><span class="s95">} </span>of all data items. If <i>d</i><span class="s97">i </span><span class="s86">→ </span><i>d</i><span class="s97">j </span>, then any transaction accessing both <i>d</i><span class="s97">i </span>and <i>d</i><span class="s97">j </span>must access <i>d</i><span class="s97">i </span>before accessing <i>d</i><span class="s97">j </span>. This partial ordering may be the result of either the logical or the physical organization of the data, or it may be imposed solely</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">for the purpose of concurrency control.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The partial ordering implies that the set <b>D </b>may now be viewed as a directed acyclic graph, called a <span class="s63">database graph</span>. In this section, for the sake of simplicity, we will restrict our attention to only those graphs that are rooted trees. We shall present a simple protocol, called the <i>tree protocol</i>, which is restricted to employ only <i>exclusive </i>locks. References to other, more complex, graph-based locking protocols are in the online bibliographical notes.</p><p style="padding-left: 106pt;text-indent: 0pt;text-align: justify;">In the <span class="s63">tree protocol</span>, the only lock instruction allowed is <span class="s49">lock-X</span>. Each transaction</p><p class="s13" style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">T<span class="s145">i </span><span class="p">can lock a data item at most once, and must observe the following rules:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 97pt;text-indent: 0pt;text-align: left;"><span class="s63">1. </span>The ﬁrst lock by <i>T</i><span class="s145">i </span>may be on any data item.</p><p style="padding-top: 5pt;padding-left: 113pt;text-indent: -17pt;line-height: 87%;text-align: left;"><span class="s63">2. </span>Subsequently, a data item <i>Q </i>can be locked by <i>T</i><span class="s97">i </span>only if the parent of <i>Q </i>is currently locked by <i>T</i><span class="s97">i</span>.</p><p class="s63" style="padding-top: 4pt;padding-left: 96pt;text-indent: 0pt;text-align: left;">3. <span class="p">Data items may be unlocked at any time.</span></p><p style="padding-top: 7pt;padding-left: 113pt;text-indent: -17pt;line-height: 87%;text-align: left;"><span class="s63">4. </span>A data item that has been locked and unlocked by <i>T</i><span class="s97">i </span>cannot subsequently be relocked by <i>T</i><span class="s145">i</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">All schedules that are legal under the tree protocol are conﬂict serializable.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">To illustrate this protocol, consider the database graph of Figure 18.11. The follow- ing four transactions follow the tree protocol on this graph. We show only the lock and unlock instructions:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="266" height="241" alt="image" src="Image_3009.png"/></span></p><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">A</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">B</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">C</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">F</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">D</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">E</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">G</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">H</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">I</p><p style="text-indent: 0pt;text-align: left;"/><p class="s192" style="text-indent: 0pt;line-height: 11pt;text-align: left;">J</p><p style="text-indent: 0pt;text-align: left;"/><p class="s73" style="padding-top: 4pt;padding-left: 205pt;text-indent: 0pt;text-align: left;">Figure 18.11 <span class="s74">Tree-structured database graph.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 9pt;padding-left: 170pt;text-indent: -22pt;text-align: left;"><i>T</i><span class="s98">10</span>: <span class="s49">lock-X</span>(<i>B</i>); <span class="s49">lock-X</span>(<i>E</i>); <span class="s49">lock-X</span>(<i>D</i>); <span class="s49">unlock</span>(<i>B</i>); <span class="s49">unlock</span>(<i>E</i>); <span class="s49">lock-X</span>(<i>G</i>); <span class="s49">unlock</span>(<i>D</i>); <span class="s49">unlock</span>(<i>G</i>).</p><p style="padding-left: 31pt;text-indent: 0pt;text-align: center;"><i>T</i><span class="s98">11</span>: <span class="s49">lock-X</span>(<i>D</i>); <span class="s49">lock-X</span>(<i>H </i>); <span class="s49">unlock</span>(<i>D</i>); <span class="s49">unlock</span>(<i>H</i>).</p><p style="padding-left: 26pt;text-indent: 0pt;text-align: center;"><i>T</i><span class="s98">12</span>: <span class="s49">lock-X</span>(<i>B</i>); <span class="s49">lock-X</span>(<i>E</i>); <span class="s49">unlock</span>(<i>E</i>); <span class="s49">unlock</span>(<i>B</i>).</p><p style="padding-left: 31pt;text-indent: 0pt;text-align: center;"><i>T</i><span class="s98">13</span>: <span class="s49">lock-X</span>(<i>D</i>); <span class="s49">lock-X</span>(<i>H</i>); <span class="s49">unlock</span>(<i>D</i>); <span class="s49">unlock</span>(<i>H </i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">One possible schedule in which these four transactions participated appears in Figure 18.12. Note that, during its execution, transaction <i>T</i><span class="s98">10</span> holds locks on two <i>disjoint </i>subtrees.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Observe that the schedule of Figure 18.12 is conﬂict serializable. It can be shown not only that the tree protocol ensures conﬂict serializability, but also that this protocol ensures freedom from deadlock.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The tree protocol in Figure 18.12 does not ensure recoverability and cascadeless- ness. To ensure recoverability and cascadelessness, the protocol can be modiﬁed to not permit release of exclusive locks until the end of the transaction. Holding exclu- sive locks until the end of the transaction reduces concurrency. Here is an alternative that improves concurrency, but ensures only recoverability: For each data item with an uncommitted write, we record which transaction performed the last write to the</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 0pt;line-height: 91%;text-align: justify;">data item. Whenever a transaction <i>T</i><span class="s145">i </span>performs a read of an uncommitted data item, we record a <span class="s63">commit dependency </span>of <i>T</i><span class="s97">i </span>on the transaction that performed the last write to the data item. Transaction <i>T</i><span class="s97">i </span>is then not permitted to commit until the commit of all transactions on which it has a commit dependency. If any of these transactions aborts, <i>T</i><span class="s97">i </span>must also be aborted.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:154.194pt" cellspacing="0"><tr style="height:18pt"><td style="width:60pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s426" style="padding-top: 2pt;padding-left: 4pt;padding-right: 5pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s352">10</span></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s426" style="padding-top: 2pt;padding-left: 4pt;padding-right: 5pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s352">11</span></p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s426" style="padding-top: 2pt;padding-left: 21pt;padding-right: 22pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s352">12</span></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s426" style="padding-top: 2pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s352">13</span></p></td></tr><tr style="height:18pt"><td style="width:60pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 3pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><span class="s424">lock-X</span>(<i>B</i>)</p></td><td style="width:60pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:59pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:39pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>D</i>)</p><p class="s72" style="padding-left: 6pt;padding-right: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span class="s424">lock-X</span>(<i>H</i>) <span class="s424">unlock</span>(<i>D</i>)</p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:52pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>E</i>)</p><p class="s72" style="padding-left: 6pt;padding-right: 7pt;text-indent: 0pt;line-height: 13pt;text-align: justify;"><span class="s424">lock-X</span>(<i>D</i>) <span class="s424">unlock</span>(<i>B</i>) <span class="s424">unlock</span>(<i>E</i>)</p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:26pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>B</i>)</p><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>E</i>)</p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><span class="s424">unlock</span>(<i>H</i>)</p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:26pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>G</i>)</p><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">unlock</span>(<i>D</i>)</p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:52pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">lock-X</span>(<i>D</i>)</p><p class="s72" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;line-height: 13pt;text-align: justify;"><span class="s424">lock-X</span>(<i>H</i>) <span class="s424">unlock</span>(<i>D</i>) <span class="s424">unlock</span>(<i>H</i>)</p></td></tr><tr style="height:40pt"><td style="width:60pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;"><span class="s424">unlock</span>(<i>G</i>)</p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:59pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><span class="s424">unlock</span>(<i>E</i>) <span class="s424">unlock</span>(<i>B</i>)</p></td><td style="width:60pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 18.12 <span class="s74">Serializable schedule under the tree protocol.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The tree-locking protocol has an advantage over the two-phase locking protocol in that, unlike two-phase locking, it is deadlock-free, so no rollbacks are required. The tree-locking protocol has another advantage over the two-phase locking protocol in that unlocking may occur earlier. Earlier unlocking may lead to shorter waiting times and to an increase in concurrency.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">However, the protocol has the disadvantage that, in some cases, a transaction may have to lock data items that it does not access. For example, a transaction that needs to access data items <i>A </i>and <i>J </i>in the database graph of Figure 18.11 must lock not only <i>A </i>and <i>J</i>, but also data items <i>B</i>, <i>D</i>, and <i>H </i>. This additional locking results in increased locking overhead, the possibility of additional waiting time, and a potential decrease in concurrency. Further, without prior knowledge of what data items will need to be locked, transactions will have to lock the root of the tree, and that can reduce concur- rency greatly.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">For a set of transactions, there may be conﬂict-serializable schedules that cannot be obtained through the tree protocol. Indeed, there are schedules possible under the two-phase locking protocol that are not possible under the tree protocol, and vice versa. Examples of such schedules are explored in the exercises.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part328.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part330.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
