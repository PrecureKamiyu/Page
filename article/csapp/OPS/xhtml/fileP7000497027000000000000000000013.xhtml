<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>A.1 Error Handling in Unix Systems</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="backmatter" class="calibre pcalibre pcalibre1">
<section id="P7000497027000000000000000000013" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P700049702700000000000000003E431" data-uri="app01.xhtml#P700049702700000000000000003E431" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000015" title="1042" data-uri="app01.xhtml#P7000497027000000000000000000015" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">A.1 </span>Error Handling in Unix Systems</h1></header>
<p id="P700049702700000000000000003E432" data-uri="app01.xhtml#P700049702700000000000000003E432" class="pcalibre1 pcalibre calibre2">The systems-level function calls that we will encounter in this book use three different styles for returning errors: <i class="calibre5 pcalibre pcalibre1">Unix-style</i>, <i class="calibre5 pcalibre pcalibre1">Posix-style</i>, and <i class="calibre5 pcalibre pcalibre1">GAI-style</i>.</p>
<section id="P7000497027000000000000000000017" data-uri="app01.xhtml#P7000497027000000000000000000017" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003E433" data-uri="app01.xhtml#P700049702700000000000000003E433" epub:type="title">Unix-Style Error Handling</h1></header>
<p id="P700049702700000000000000003E434" data-uri="app01.xhtml#P700049702700000000000000003E434" class="pcalibre1 pcalibre calibre2">Functions such as <code id="P700049702700000000000000003E435" data-uri="app01.xhtml#P700049702700000000000000003E435" class="pcalibre1 calibre8 pcalibre">fork</code> and <code id="P700049702700000000000000003E436" data-uri="app01.xhtml#P700049702700000000000000003E436" class="pcalibre1 calibre8 pcalibre">wait</code> that were developed in the early days of Unix (as well as some older Posix functions) overload the function return value with both error codes <i class="calibre5 pcalibre pcalibre1">and</i> useful results. For example, when the Unix-style <code id="P700049702700000000000000003E437" data-uri="app01.xhtml#P700049702700000000000000003E437" class="pcalibre1 calibre8 pcalibre">wait</code> function encounters an error (e.g., there is no child process to reap), it returns -1 and sets the global variable <code id="P700049702700000000000000003E438" data-uri="app01.xhtml#P700049702700000000000000003E438" class="pcalibre1 calibre8 pcalibre">errno</code> to an error code that indicates the cause of the error. If <code id="P700049702700000000000000003E439" data-uri="app01.xhtml#P700049702700000000000000003E439" class="pcalibre1 calibre8 pcalibre">wait</code> completes successfully, then it returns the useful result, which is the PID of the reaped child. Unix-style error-handling code is typically of the following form:</p>
<pre id="P700049702700000000000000003E43A" data-uri="app01.xhtml#P700049702700000000000000003E43A" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003E43B" data-uri="app01.xhtml#P700049702700000000000000003E43B" class="calibre10 pcalibre pcalibre1">
1	if ((pid = wait(NULL)) &lt; 0) {
2	fprintf(stderr, "wait error: %s\n", strerror(errno));
3	exit(0);
4	}</code></pre>
<p id="P700049702700000000000000003E43C" data-uri="app01.xhtml#P700049702700000000000000003E43C" class="pcalibre1 pcalibre calibre2">The <code id="P700049702700000000000000003E43D" data-uri="app01.xhtml#P700049702700000000000000003E43D" class="pcalibre1 calibre8 pcalibre">strerror</code> function returns a text description for a particular value of <code id="P700049702700000000000000003E43E" data-uri="app01.xhtml#P700049702700000000000000003E43E" class="pcalibre1 calibre8 pcalibre">errno</code>.</p>
</section>
<section id="P7000497027000000000000000000024" data-uri="app01.xhtml#P7000497027000000000000000000024" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003E43F" data-uri="app01.xhtml#P700049702700000000000000003E43F" epub:type="title">Posix-Style Error Handling</h1></header>
<p id="P700049702700000000000000003E440" data-uri="app01.xhtml#P700049702700000000000000003E440" class="pcalibre1 pcalibre calibre2">Many of the newer Posix functions such as Pthreads use the return value only to indicate success (zero) or failure (nonzero). Any useful results are returned in function arguments that are passed by reference. We refer to this approach as <i class="calibre5 pcalibre pcalibre1">Posix-style error handling</i>. For example, the Posix-style <code id="P700049702700000000000000003E441" data-uri="app01.xhtml#P700049702700000000000000003E441" class="pcalibre1 calibre8 pcalibre">pthread_create</code> function indicates success or failure with its return value and returns the ID of the newly created thread (the useful result) by reference in its first argument. Posix-style error-handling code is typically of the following form:</p>
<pre id="P700049702700000000000000003E442" data-uri="app01.xhtml#P700049702700000000000000003E442" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003E443" data-uri="app01.xhtml#P700049702700000000000000003E443" class="calibre10 pcalibre pcalibre1">
1	if ((retcode = pthread_create(&amp;tid, NULL, thread, NULL)) != 0) {
2	fprintf(stderr, "pthread_create error: %s\n", strerror(retcode));
3	exit(0);
4	}</code></pre>
<p id="P700049702700000000000000003E444" data-uri="app01.xhtml#P700049702700000000000000003E444" class="pcalibre1 pcalibre calibre2">The <code id="P700049702700000000000000003E445" data-uri="app01.xhtml#P700049702700000000000000003E445" class="pcalibre1 calibre8 pcalibre">strerror</code> function returns a text description for a particular value of <code id="P700049702700000000000000003E446" data-uri="app01.xhtml#P700049702700000000000000003E446" class="pcalibre1 calibre8 pcalibre">retcode</code>.</p>
</section>
<section id="P700049702700000000000000000002D" data-uri="app01.xhtml#P700049702700000000000000000002D" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003E447" data-uri="app01.xhtml#P700049702700000000000000003E447" epub:type="title">GAI-Style Error Handling</h1></header>
<p id="P700049702700000000000000003E448" data-uri="app01.xhtml#P700049702700000000000000003E448" class="pcalibre1 pcalibre calibre2">The <code id="P700049702700000000000000003E449" data-uri="app01.xhtml#P700049702700000000000000003E449" class="pcalibre1 calibre8 pcalibre">getaddrinfo</code> (GAI) and <code id="P700049702700000000000000003E44A" data-uri="app01.xhtml#P700049702700000000000000003E44A" class="pcalibre1 calibre8 pcalibre">getnameinfo</code> functions return zero on success and a nonzero value on failure. GAI error-handling code is typically of the following form:</p>
<pre id="P700049702700000000000000003E44B" data-uri="app01.xhtml#P700049702700000000000000003E44B" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003E44C" data-uri="app01.xhtml#P700049702700000000000000003E44C" class="calibre10 pcalibre pcalibre1">
1	if ((retcode = getaddrinfo(host, service, &amp;hints, &amp;result)) != 0) {
2	fprintf(stderr, "getaddrinfo error: %s\n", gai_strerror(retcode));
3	exit(0);
4	}</code></pre>
<p id="P700049702700000000000000003E44D" data-uri="app01.xhtml#P700049702700000000000000003E44D" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000035" title="1043" data-uri="app01.xhtml#P7000497027000000000000000000035" epub:type="pagebreak"></span>The <code id="P700049702700000000000000003E44E" data-uri="app01.xhtml#P700049702700000000000000003E44E" class="pcalibre1 calibre8 pcalibre">gai_strerror</code> function returns a text description for a particular value of <code id="P700049702700000000000000003E44F" data-uri="app01.xhtml#P700049702700000000000000003E44F" class="pcalibre1 calibre8 pcalibre">retcode</code>.</p>
</section>
<section id="P7000497027000000000000000000038" data-uri="app01.xhtml#P7000497027000000000000000000038" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003E450" data-uri="app01.xhtml#P700049702700000000000000003E450" epub:type="title">Summary of Error-Reporting Functions</h1></header>
<p id="P700049702700000000000000003E451" data-uri="app01.xhtml#P700049702700000000000000003E451" class="pcalibre1 pcalibre calibre2">Thoughout this book, we use the following error-reporting functions to accommodate different error-handling styles.</p>
<pre id="P700049702700000000000000003E452" data-uri="app01.xhtml#P700049702700000000000000003E452" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003E453" data-uri="app01.xhtml#P700049702700000000000000003E453" class="calibre10 pcalibre pcalibre1">
#include "csapp.h"
void unix_error(char *msg);
void posix_error(int code, char *msg);
void gai_error(int code, char *msg);
void app_error(char *msg);
						Returns: nothing
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003E454" data-uri="app01.xhtml#P700049702700000000000000003E454">As their names suggest, the <code id="P700049702700000000000000003E455" data-uri="app01.xhtml#P700049702700000000000000003E455" class="pcalibre1 calibre8 pcalibre">unix_error, posix_error</code>, and <code id="P700049702700000000000000003E456" data-uri="app01.xhtml#P700049702700000000000000003E456" class="pcalibre1 calibre8 pcalibre">gai_error</code> functions report Unix-style, Posix-style, and GAI-style errors and then terminate. The <code id="P700049702700000000000000003E457" data-uri="app01.xhtml#P700049702700000000000000003E457" class="pcalibre1 calibre8 pcalibre">app_error</code> function is included as a convenience for application errors. It simply prints its input and then terminates. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000041.xhtml#P7000497027000000000000000000050"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">A.1</span></a> shows the code for the error-reporting functions.</p>
</section>
</section></body></html>
