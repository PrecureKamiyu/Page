<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part255.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part257.htm">下一个 &gt;</a></p><p class="s45" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Exercises</p><p class="s46" style="padding-top: 4pt;padding-left: 28pt;text-indent: -28pt;text-align: justify;">13.8  <span class="p">PostgreSQL normally uses a small buﬀer, leaving it to the operating system buﬀer manager to manage the rest of main memory available for ﬁle system buﬀering. Explain (a) what is the beneﬁt of this approach, and (b) one key limitation of this approach.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 4pt;padding-left: 124pt;text-indent: -30pt;text-align: justify;">13.9  <span class="p">In the variable-length record representation, a null bitmap is used to indicate if an attribute has the null value.</span></p><p style="padding-top: 8pt;padding-left: 150pt;text-indent: -18pt;text-align: justify;">a.  For variable-length ﬁelds, if the value is null, what would be stored in the oﬀset and length ﬁelds?</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -19pt;text-align: justify;">b.  In some applications, tuples have a very large number of attributes, most of which are null. Can you modify the record representation such that the only overhead for a null attribute is the single bit in the null bitmap?</p><p class="s46" style="padding-top: 8pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;">13.10 <span class="p">Explain why the allocation of records to blocks aﬀects database-system perfor- mance signiﬁcantly.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;">13.11  <span class="p">List two advantages and two disadvantages of each of the following strategies for storing a relational database:</span></p><p style="padding-top: 8pt;padding-left: 131pt;text-indent: 0pt;text-align: left;">a. Store each relation in one ﬁle.</p><p style="padding-top: 6pt;padding-left: 131pt;text-indent: 0pt;text-align: left;">b.  Store multiple relations (perhaps even the entire database) in one ﬁle.</p><p style="padding-top: 9pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;"><b>13.12  </b>In the sequential ﬁle organization, why is an overﬂow <i>block </i>used even if there is, at the moment, only one overﬂow record?</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2605.png"/></span></p><p style="padding-top: 6pt;padding-left: 124pt;text-indent: -35pt;text-align: justify;"><b>13.13 </b>Give a normalized version of the <i>Index metadata </i>relation, and explain why using the normalized version would result in worse performance.</p><p style="padding-top: 6pt;padding-left: 124pt;text-indent: -34pt;text-align: justify;"><b>13.14  </b>Standard buﬀer managers assume each block is of the same size and costs the same to read. Consider a buﬀer manager that, instead of <span class="s44">LRU</span>, uses the rate of reference to objects, that is, how often an object has been accessed in the last <i>n </i>seconds. Suppose we want to store in the buﬀer objects of varying sizes, and varying read costs (such as web pages, whose read cost depends on the site from which they are fetched). Suggest how a buﬀer manager may choose which block to evict from the buﬀer.</p><p class="s64" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;"><a name="bookmark274">Further Reading  </a><span class="s164">621</span><a name="bookmark308">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part255.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part257.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
