<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>9.3 VM as a Tool for Caching</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P7000497027000000000000000007062" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P700049702700000000000000004581C" data-uri="chapter09.xhtml#P700049702700000000000000004581C" epub:type="title"><span class="pcalibre label pcalibre1">9.3 </span>VM as a Tool for Caching</h1></header>
<p id="P700049702700000000000000004581D" data-uri="chapter09.xhtml#P700049702700000000000000004581D" class="pcalibre1 pcalibre calibre2">Conceptually, a virtual memory is organized as an array of <var class="calibre5 pcalibre pcalibre1">N</var> contiguous byte-size cells stored on disk. Each byte has a unique virtual address that serves as an index into the array. The contents of the array on disk are cached in main memory. As with any other cache in the memory hierarchy, the data on disk (the lower level) is partitioned into blocks that serve as the transfer units between the disk and the main memory (the upper level). VM systems handle this by partitioning the virtual memory into fixed-size blocks called <i class="calibre5 pcalibre pcalibre1">virtual pages (VPs).</i> Each virtual page is <var class="calibre5 pcalibre pcalibre1">P</var> = 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">P</var></sup> bytes in size. Similarly, physical memory is partitioned into <i class="calibre5 pcalibre pcalibre1">physical pages (PPs)</i>, also <var class="calibre5 pcalibre pcalibre1">P</var> bytes in size. (Physical pages are also referred to as <i class="calibre5 pcalibre pcalibre1">page frames.)</i></p>
<p id="P700049702700000000000000004581E" data-uri="chapter09.xhtml#P700049702700000000000000004581E" class="pcalibre1 pcalibre calibre2">At any point in time, the set of virtual pages is partitioned into three disjoint subsets:</p>
<ul class="pcalibre ul_none pcalibre1" id="P700049702700000000000000004581F" data-uri="chapter09.xhtml#P700049702700000000000000004581F">
<li id="P7000497027000000000000000045820" data-uri="chapter09.xhtml#P7000497027000000000000000045820" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045821" data-uri="chapter09.xhtml#P7000497027000000000000000045821" class="calibre13 pcalibre pcalibre1"><span class="pcalibre leadin pcalibre1">Unallocated. </span>Pages that have not yet been allocated (or created) by the VM system. Unallocated blocks do not have any data associated with them, and thus do not occupy any space on disk.</p></li>
<li id="P7000497027000000000000000045822" data-uri="chapter09.xhtml#P7000497027000000000000000045822" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045823" data-uri="chapter09.xhtml#P7000497027000000000000000045823" class="calibre13 pcalibre pcalibre1"><span class="pcalibre leadin pcalibre1">Cached. </span>Allocated pages that are currently cached in physical memory.</p></li>
<li id="P7000497027000000000000000045824" data-uri="chapter09.xhtml#P7000497027000000000000000045824" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045825" data-uri="chapter09.xhtml#P7000497027000000000000000045825" class="calibre13 pcalibre pcalibre1"><span class="pcalibre leadin pcalibre1">Uncached. </span>Allocated pages that are not cached in physical memory.</p></li>
</ul>
<p id="P7000497027000000000000000045826" data-uri="chapter09.xhtml#P7000497027000000000000000045826" class="pcalibre1 pcalibre calibre2">The example in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000706E"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.3</span></a> shows a small virtual memory with eight virtual pages. Virtual pages 0 and 3 have not been allocated yet, and thus do not yet exist</p>
<figure id="P700049702700000000000000000706E" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P700049702700000000000000000706E">
<span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000706F" title="806" data-uri="chapter09.xhtml#P700049702700000000000000000706F" epub:type="pagebreak"></span>
<img alt="A diagram shows links from pages of virtual memory to pages of physical memory." id="P7000497027000000000000000045827" data-uri="P700049702700000000000000000B77B" src="../images/p806-1.png" class="calibre261 pcalibre pcalibre1"/>
<figcaption id="P7000497027000000000000000045828" data-uri="chapter09.xhtml#P7000497027000000000000000045828" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000045829" data-uri="chapter09.xhtml#P7000497027000000000000000045829" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.3 </span>How a VM system uses main memory as a cache.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025B5D" data-uri="chapter09.xhtml#P7000497027000000000000000025B5D">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000004582A" data-uri="chapter09.xhtml#P700049702700000000000000004582A" class="pcalibre1 pcalibre calibre2">A diagram shows virtual memory, with virtual pages (VPs) stored on disk, and physical memory, with physical pages (PPs) cached in DRAM. The pages within each, and the interactions, are summarized below.</p>
<ul id="P700049702700000000000000004582B" data-uri="chapter09.xhtml#P700049702700000000000000004582B" class="pcalibre calibre31 pcalibre1">
<li id="P700049702700000000000000004582C" data-uri="chapter09.xhtml#P700049702700000000000000004582C" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004582D" data-uri="chapter09.xhtml#P700049702700000000000000004582D" class="pcalibre calibre3 pcalibre1">Virtual memory (from 0 to N minus 1)</p>
<ul id="P700049702700000000000000004582E" data-uri="chapter09.xhtml#P700049702700000000000000004582E" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000004582F" data-uri="chapter09.xhtml#P700049702700000000000000004582F" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045830" data-uri="chapter09.xhtml#P7000497027000000000000000045830" class="pcalibre calibre3 pcalibre1">VP 0: Unallocated</p></li>
<li id="P7000497027000000000000000045831" data-uri="chapter09.xhtml#P7000497027000000000000000045831" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045832" data-uri="chapter09.xhtml#P7000497027000000000000000045832" class="pcalibre calibre3 pcalibre1">VP 1: Cached (arrow to PP1 in physical memory)</p></li>
<li id="P7000497027000000000000000045833" data-uri="chapter09.xhtml#P7000497027000000000000000045833" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045834" data-uri="chapter09.xhtml#P7000497027000000000000000045834" class="pcalibre calibre3 pcalibre1">Uncached</p></li>
<li id="P7000497027000000000000000045835" data-uri="chapter09.xhtml#P7000497027000000000000000045835" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045836" data-uri="chapter09.xhtml#P7000497027000000000000000045836" class="pcalibre calibre3 pcalibre1">Unallocated</p></li>
<li id="P7000497027000000000000000045837" data-uri="chapter09.xhtml#P7000497027000000000000000045837" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045838" data-uri="chapter09.xhtml#P7000497027000000000000000045838" class="pcalibre calibre3 pcalibre1">Cached (arrow to PP 2<sup class="calibre51 pcalibre pcalibre1">m-p</sup> minus 1)</p></li>
<li id="P7000497027000000000000000045839" data-uri="chapter09.xhtml#P7000497027000000000000000045839" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004583A" data-uri="chapter09.xhtml#P700049702700000000000000004583A" class="pcalibre calibre3 pcalibre1">Uncached</p></li>
<li id="P700049702700000000000000004583B" data-uri="chapter09.xhtml#P700049702700000000000000004583B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004583C" data-uri="chapter09.xhtml#P700049702700000000000000004583C" class="pcalibre calibre3 pcalibre1">Cached (arrow between empty cells in physical memory)</p></li>
<li id="P700049702700000000000000004583D" data-uri="chapter09.xhtml#P700049702700000000000000004583D" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004583E" data-uri="chapter09.xhtml#P700049702700000000000000004583E" class="pcalibre calibre3 pcalibre1">VP 2<sup class="calibre51 pcalibre pcalibre1">n-p</sup> minus 1: Uncached</p></li>
</ul></li>
<li id="P700049702700000000000000004583F" data-uri="chapter09.xhtml#P700049702700000000000000004583F" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045840" data-uri="chapter09.xhtml#P7000497027000000000000000045840" class="pcalibre calibre3 pcalibre1">Physical memory (from 0 to M minus 1)</p>
<ul id="P7000497027000000000000000045841" data-uri="chapter09.xhtml#P7000497027000000000000000045841" class="pcalibre calibre39 pcalibre1">
<li id="P7000497027000000000000000045842" data-uri="chapter09.xhtml#P7000497027000000000000000045842" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045843" data-uri="chapter09.xhtml#P7000497027000000000000000045843" class="pcalibre calibre3 pcalibre1">PP 0: Empty</p></li>
<li id="P7000497027000000000000000045844" data-uri="chapter09.xhtml#P7000497027000000000000000045844" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045845" data-uri="chapter09.xhtml#P7000497027000000000000000045845" class="pcalibre calibre3 pcalibre1">PP 1 (arrow from cached VP 1)</p></li>
<li id="P7000497027000000000000000045846" data-uri="chapter09.xhtml#P7000497027000000000000000045846" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045847" data-uri="chapter09.xhtml#P7000497027000000000000000045847" class="pcalibre calibre3 pcalibre1">Empty</p></li>
<li id="P7000497027000000000000000045848" data-uri="chapter09.xhtml#P7000497027000000000000000045848" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045849" data-uri="chapter09.xhtml#P7000497027000000000000000045849" class="pcalibre calibre3 pcalibre1">(Arrow from third cache in viritual memory)</p></li>
<li id="P700049702700000000000000004584A" data-uri="chapter09.xhtml#P700049702700000000000000004584A" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004584B" data-uri="chapter09.xhtml#P700049702700000000000000004584B" class="pcalibre calibre3 pcalibre1">VP 2<sup class="calibre51 pcalibre pcalibre1">n-p</sup> minus 1 (arrow from second cache in virtual memory)</p></li>
</ul></li>
</ul>
</details>
</figcaption>
</figure>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000004584C" data-uri="chapter09.xhtml#P700049702700000000000000004584C">on disk. Virtual pages 1,4, and 6 are cached in physical memory. Pages 2,5, and 7 are allocated but are not currently cached in physical memory.</p>
<section id="P7000497027000000000000000007074" data-uri="chapter09.xhtml#P7000497027000000000000000007074" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004584D" data-uri="chapter09.xhtml#P700049702700000000000000004584D" epub:type="title"><span class="pcalibre label pcalibre1">9.3.1 </span>DRAM Cache Organization</h1></header>
<p id="P700049702700000000000000004584E" data-uri="chapter09.xhtml#P700049702700000000000000004584E" class="pcalibre1 pcalibre calibre2">To help us keep the different caches in the memory hierarchy straight, we will use the term <i class="calibre5 pcalibre pcalibre1">SRAM cache</i> to denote the L1, L2, and L3 cache memories between the CPU and main memory, and the term <i class="calibre5 pcalibre pcalibre1">DRAM cache</i> to denote the VM system's cache that caches virtual pages in main memory.</p>
<p id="P700049702700000000000000004584F" data-uri="chapter09.xhtml#P700049702700000000000000004584F" class="pcalibre1 pcalibre calibre2">The position of the DRAM cache in the memory hierarchy has a big impact on the way that it is organized. Recall that a DRAM is at least 10 times slower than an SRAM and that disk is about 100,000 times slower than a DRAM. Thus, misses in DRAM caches are very expensive compared to misses in SRAM caches because DRAM cache misses are served from disk, while SRAM cache misses are usually served from DRAM-based main memory. Further, the cost of reading the first byte from a disk sector is about 100,000 times slower than reading successive bytes in the sector. The bottom line is that the organization of the DRAM cache is driven entirely by the enormous cost of misses.</p>
<p id="P7000497027000000000000000045850" data-uri="chapter09.xhtml#P7000497027000000000000000045850" class="pcalibre1 pcalibre calibre2">Because of the large miss penalty and the expense of accessing the first byte, virtual pages tend to be large—typically 4 KB to 2 MB. Due to the large miss penalty, DRAM caches are fully associative; that is, any virtual page can be placed in any physical page. The replacement policy on misses also assumes greater importance, because the penalty associated with replacing the wrong virtual page is so high. Thus, operating systems use much more sophisticated replacement algorithms for DRAM caches than the hardware does for SRAM caches. (These replacement algorithms are beyond our scope here.) Finally, because of the large access time of disk, DRAM caches always use write-back instead of write-through.</p>
</section>
<section id="P7000497027000000000000000007079" data-uri="chapter09.xhtml#P7000497027000000000000000007079" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045851" data-uri="chapter09.xhtml#P7000497027000000000000000045851" epub:type="title"><span class="pcalibre label pcalibre1">9.3.2 </span>Page Tables</h1></header>
<p id="P7000497027000000000000000045852" data-uri="chapter09.xhtml#P7000497027000000000000000045852" class="pcalibre1 pcalibre calibre2">As with any cache, the VM system must have some way to determine if a virtual page is cached somewhere in DRAM. If so, the system must determine which physical page it is cached in. If there is a miss, the system must determine</p>
<figure id="P700049702700000000000000000707C" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P700049702700000000000000000707C">
<span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000707D" title="807" data-uri="chapter09.xhtml#P700049702700000000000000000707D" epub:type="pagebreak"></span>
<img alt="A diagram shows a page table, linked to physical memory and virtual memory." id="P7000497027000000000000000045853" data-uri="P700049702700000000000000000B77C" src="../images/p807-1.png" class="calibre262 pcalibre pcalibre1"/>
<figcaption id="P7000497027000000000000000045854" data-uri="chapter09.xhtml#P7000497027000000000000000045854" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000045855" data-uri="chapter09.xhtml#P7000497027000000000000000045855" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.4 </span>Page table.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025B8A" data-uri="chapter09.xhtml#P7000497027000000000000000025B8A">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P7000497027000000000000000045856" data-uri="chapter09.xhtml#P7000497027000000000000000045856" class="pcalibre1 pcalibre calibre2">A diagram shows a page table, linked to physical memory and virtual memory, each with pages summarized below.</p>
<ul id="P7000497027000000000000000045857" data-uri="chapter09.xhtml#P7000497027000000000000000045857" class="pcalibre calibre31 pcalibre1">
<li id="P7000497027000000000000000045858" data-uri="chapter09.xhtml#P7000497027000000000000000045858" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045859" data-uri="chapter09.xhtml#P7000497027000000000000000045859" class="pcalibre calibre3 pcalibre1">Memory-resident page table (DRAM), with physical page number or disk address from PTE 0 through PTE 7:</p>
<ul id="P700049702700000000000000004585A" data-uri="chapter09.xhtml#P700049702700000000000000004585A" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000004585B" data-uri="chapter09.xhtml#P700049702700000000000000004585B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004585C" data-uri="chapter09.xhtml#P700049702700000000000000004585C" class="pcalibre calibre3 pcalibre1">PTE 0: Valid 0: Null</p></li>
<li id="P700049702700000000000000004585D" data-uri="chapter09.xhtml#P700049702700000000000000004585D" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004585E" data-uri="chapter09.xhtml#P700049702700000000000000004585E" class="pcalibre calibre3 pcalibre1">PTE 1: Valid 1: Arrow to VP 1 in physical memory</p></li>
<li id="P700049702700000000000000004585F" data-uri="chapter09.xhtml#P700049702700000000000000004585F" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045860" data-uri="chapter09.xhtml#P7000497027000000000000000045860" class="pcalibre calibre3 pcalibre1">PTE 2: Valid 1: Arrow to VP 2 in physical memory</p></li>
<li id="P7000497027000000000000000045861" data-uri="chapter09.xhtml#P7000497027000000000000000045861" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045862" data-uri="chapter09.xhtml#P7000497027000000000000000045862" class="pcalibre calibre3 pcalibre1">PTE 3: Valid 0: Arrow to VP 3 in virtual memory</p></li>
<li id="P7000497027000000000000000045863" data-uri="chapter09.xhtml#P7000497027000000000000000045863" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045864" data-uri="chapter09.xhtml#P7000497027000000000000000045864" class="pcalibre calibre3 pcalibre1">PTE 4: Valid 1: Arrow to VP 4 in physical memory</p></li>
<li id="P7000497027000000000000000045865" data-uri="chapter09.xhtml#P7000497027000000000000000045865" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045866" data-uri="chapter09.xhtml#P7000497027000000000000000045866" class="pcalibre calibre3 pcalibre1">PTE 5: Valid 0: Null</p></li>
<li id="P7000497027000000000000000045867" data-uri="chapter09.xhtml#P7000497027000000000000000045867" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045868" data-uri="chapter09.xhtml#P7000497027000000000000000045868" class="pcalibre calibre3 pcalibre1">PTE 6: Valid 0: Arrow to VP 6 in virtual memory</p></li>
<li id="P7000497027000000000000000045869" data-uri="chapter09.xhtml#P7000497027000000000000000045869" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004586A" data-uri="chapter09.xhtml#P700049702700000000000000004586A" class="pcalibre calibre3 pcalibre1">PTE 7: Valid 1: Arrow to VP 7 (between VP 2 and 4) in physical memory</p></li>
</ul></li>
<li id="P700049702700000000000000004586B" data-uri="chapter09.xhtml#P700049702700000000000000004586B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004586C" data-uri="chapter09.xhtml#P700049702700000000000000004586C" class="pcalibre calibre3 pcalibre1">Physical memory (DRAM): VP 1 (PP 0), VP 2, VP 7, and VP 4 (PP3)</p></li>
<li id="P700049702700000000000000004586D" data-uri="chapter09.xhtml#P700049702700000000000000004586D" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004586E" data-uri="chapter09.xhtml#P700049702700000000000000004586E" class="pcalibre calibre3 pcalibre1">Virtual memory (disk): VP 1, VP 2, VP 3, BP 4, VP 6, and VP 7</p></li>
</ul>
</details>
</figcaption>
</figure>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000004586F" data-uri="chapter09.xhtml#P700049702700000000000000004586F">where the virtual page is stored on disk, select a victim page in physical memory, and copy the virtual page from disk to DRAM, replacing the victim page.</p>
<p id="P7000497027000000000000000045870" data-uri="chapter09.xhtml#P7000497027000000000000000045870" class="pcalibre1 pcalibre calibre2">These capabilities are provided by a combination of operating system software, address translation hardware in the MMU (memory management unit), and a data structure stored in physical memory known as a <i class="calibre5 pcalibre pcalibre1">page table</i> that maps virtual pages to physical pages. The address translation hardware reads the page table each time it converts a virtual address to a physical address. The operating system is responsible for maintaining the contents of the page table and transferring pages back and forth between disk and DRAM.</p>
<p id="P7000497027000000000000000045871" data-uri="chapter09.xhtml#P7000497027000000000000000045871" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000707C"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.4</span></a> shows the basic organization of a page table. A page table is an array of <i class="calibre5 pcalibre pcalibre1">page table entries (PTEs).</i> Each page in the virtual address space has a PTE at a fixed offset in the page table. For our purposes, we will assume that each PTE consists of a <i class="calibre5 pcalibre pcalibre1">valid bit</i> and an <var class="calibre5 pcalibre pcalibre1">n</var>-bit address field. The valid bit indicates whether the virtual page is currently cached in DRAM. If the valid bit is set, the address field indicates the start of the corresponding physical page in DRAM where the virtual page is cached. If the valid bit is not set, then a null address indicates that the virtual page has not yet been allocated. Otherwise, the address points to the start of the virtual page on disk.</p>
<p id="P7000497027000000000000000045872" data-uri="chapter09.xhtml#P7000497027000000000000000045872" class="pcalibre1 pcalibre calibre2">The example in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000707C"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.4</span></a> shows a page table for a system with eight virtual pages and four physical pages. Four virtual pages (VP 1, VP 2, VP 4, and VP 7) are currently cached in DRAM. Two pages (VP 0 and VP 5) have not yet been allocated, and the rest (VP 3 and VP 6) have been allocated but are not currently cached. An important point to notice about <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000707C"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.4</span></a> is that because the DRAM cache is fully associative, any physical page can contain any virtual page.</p>
<section id="P7000497027000000000000000007085" data-uri="chapter09.xhtml#P7000497027000000000000000007085" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P7000497027000000000000000045873" data-uri="chapter09.xhtml#P7000497027000000000000000045873" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">9.2 </span>(solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP700049702700000000000000000777C.xhtml#P7000497027000000000000000007785">881</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P7000497027000000000000000045874" data-uri="chapter09.xhtml#P7000497027000000000000000045874">
<li class="general-problem pcalibre pcalibre1" id="P7000497027000000000000000045875" data-uri="chapter09.xhtml#P7000497027000000000000000045875">
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000045876" data-uri="chapter09.xhtml#P7000497027000000000000000045876"><p id="P7000497027000000000000000045877" data-uri="chapter09.xhtml#P7000497027000000000000000045877" class="pcalibre calibre3 pcalibre1">Determine the number of page table entries (PTEs) that are needed for the following combinations of virtual address size (<var class="calibre5 pcalibre pcalibre1">n</var>) and page size (<var class="calibre5 pcalibre pcalibre1">P</var>):</p>
<table id="P7000497027000000000000000045878" data-uri="chapter09.xhtml#P7000497027000000000000000045878" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P7000497027000000000000000045879" data-uri="chapter09.xhtml#P7000497027000000000000000045879" class="calibre18 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000708D" title="808" data-uri="chapter09.xhtml#P700049702700000000000000000708D" epub:type="pagebreak"></span><var class="calibre5 pcalibre pcalibre1">n</var></th>
<th id="P700049702700000000000000004587A" data-uri="chapter09.xhtml#P700049702700000000000000004587A" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">P</var> = 2<i class="calibre5 pcalibre pcalibre1"><sup class="pcalibre1 calibre21 pcalibre">p</sup></i></th>
<th id="P700049702700000000000000004587B" data-uri="chapter09.xhtml#P700049702700000000000000004587B" class="calibre18 pcalibre pcalibre1">Number of PTEs</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004587C" data-uri="chapter09.xhtml#P700049702700000000000000004587C" class="calibre20 pcalibre pcalibre1">16</td>
<td id="P700049702700000000000000004587D" data-uri="chapter09.xhtml#P700049702700000000000000004587D" class="calibre20 pcalibre pcalibre1">4K</td>
<td id="P700049702700000000000000004587E" data-uri="chapter09.xhtml#P700049702700000000000000004587E" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004587F" data-uri="chapter09.xhtml#P700049702700000000000000004587F" class="calibre20 pcalibre pcalibre1">16</td>
<td id="P7000497027000000000000000045880" data-uri="chapter09.xhtml#P7000497027000000000000000045880" class="calibre20 pcalibre pcalibre1">8K</td>
<td id="P7000497027000000000000000045881" data-uri="chapter09.xhtml#P7000497027000000000000000045881" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000045882" data-uri="chapter09.xhtml#P7000497027000000000000000045882" class="calibre20 pcalibre pcalibre1">32</td>
<td id="P7000497027000000000000000045883" data-uri="chapter09.xhtml#P7000497027000000000000000045883" class="calibre20 pcalibre pcalibre1">4K</td>
<td id="P7000497027000000000000000045884" data-uri="chapter09.xhtml#P7000497027000000000000000045884" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000045885" data-uri="chapter09.xhtml#P7000497027000000000000000045885" class="calibre20 pcalibre pcalibre1">32</td>
<td id="P7000497027000000000000000045886" data-uri="chapter09.xhtml#P7000497027000000000000000045886" class="calibre20 pcalibre pcalibre1">8K</td>
<td id="P7000497027000000000000000045887" data-uri="chapter09.xhtml#P7000497027000000000000000045887" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
</tbody>
</table>
</div></li></ol>
</section>
</section>
<section id="P700049702700000000000000000709C" data-uri="chapter09.xhtml#P700049702700000000000000000709C" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045888" data-uri="chapter09.xhtml#P7000497027000000000000000045888" epub:type="title"><span class="pcalibre label pcalibre1">9.3.3 </span>Page Hits</h1></header>
<p id="P7000497027000000000000000045889" data-uri="chapter09.xhtml#P7000497027000000000000000045889" class="pcalibre1 pcalibre calibre2">Consider what happens when the CPU reads a word of virtual memory contained in VP 2, which is cached in DRAM (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000070A2"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.5</span></a>). Using a technique we will describe in detail in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000070F6.xhtml#P70004970270000000000000000070F6"><span class="pcalibre label pcalibre1">Section </span><span class="pcalibre label pcalibre1">9.6</span></a>, the address translation hardware uses the virtual address as an index to locate PTE 2 and read it from memory. Since the valid bit is set, the address translation hardware knows that VP 2 is cached in memory. So it uses the physical memory address in the PTE (which points to the start of the cached page in PP 1) to construct the physical address of the word.</p>
</section>
<section id="P700049702700000000000000000709F" data-uri="chapter09.xhtml#P700049702700000000000000000709F" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004588A" data-uri="chapter09.xhtml#P700049702700000000000000004588A" epub:type="title"><span class="pcalibre label pcalibre1">9.3.4 </span>Page Faults</h1></header>
<p id="P700049702700000000000000004588B" data-uri="chapter09.xhtml#P700049702700000000000000004588B" class="pcalibre1 pcalibre calibre2">In virtual memory parlance, a DRAM cache miss is known as a <i class="calibre5 pcalibre pcalibre1">page fault.</i> <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000070A8"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.6</span></a> shows the state of our example page table before the fault. The CPU has referenced a word in VP 3, which is not cached in DRAM. The address translation hardware reads PTE 3 from memory, infers from the valid bit that VP 3 is not cached, and triggers a page fault exception. The page fault exception invokes a page fault exception handler in the kernel, which selects a victim page—in this case, VP 4 stored in PP 3. If VP 4 has been modified, then the kernel copies it back to disk. In either case, the kernel modifies the page table entry for VP 4 to reflect the fact that VP 4 is no longer cached in main memory.</p>
<figure id="P70004970270000000000000000070A2" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P70004970270000000000000000070A2">
<img alt="A diagram shows a page table, linked to physical memory and virtual memory, with input from virtual address." id="P700049702700000000000000004588C" data-uri="P700049702700000000000000000B77D" src="../images/p808-1.png" class="calibre263 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000004588D" data-uri="chapter09.xhtml#P700049702700000000000000004588D" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000004588E" data-uri="chapter09.xhtml#P700049702700000000000000004588E" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.5 </span>VM page hit.</h1></header><div class="edition pcalibre pcalibre1" id="P700049702700000000000000004588F" data-uri="chapter09.xhtml#P700049702700000000000000004588F"><p id="P7000497027000000000000000045890" data-uri="chapter09.xhtml#P7000497027000000000000000045890" class="pcalibre calibre3 pcalibre1">The reference to a word in VP 2 is a hit.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025BC6" data-uri="chapter09.xhtml#P7000497027000000000000000025BC6">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P7000497027000000000000000045891" data-uri="chapter09.xhtml#P7000497027000000000000000045891" class="pcalibre1 pcalibre calibre2">A diagram shows a page table, with virtual address to PTE 2, linked to physical memory and virtual memory, each with pages summarized below.</p>
<ul id="P7000497027000000000000000045892" data-uri="chapter09.xhtml#P7000497027000000000000000045892" class="pcalibre calibre31 pcalibre1">
<li id="P7000497027000000000000000045893" data-uri="chapter09.xhtml#P7000497027000000000000000045893" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045894" data-uri="chapter09.xhtml#P7000497027000000000000000045894" class="pcalibre calibre3 pcalibre1">Memory-resident page table (DRAM), with physical page number or disk address from PTE 0 through PTE 7:</p>
<ul id="P7000497027000000000000000045895" data-uri="chapter09.xhtml#P7000497027000000000000000045895" class="pcalibre calibre39 pcalibre1">
<li id="P7000497027000000000000000045896" data-uri="chapter09.xhtml#P7000497027000000000000000045896" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045897" data-uri="chapter09.xhtml#P7000497027000000000000000045897" class="pcalibre calibre3 pcalibre1">PTE 0: Valid 0: Null</p></li>
<li id="P7000497027000000000000000045898" data-uri="chapter09.xhtml#P7000497027000000000000000045898" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045899" data-uri="chapter09.xhtml#P7000497027000000000000000045899" class="pcalibre calibre3 pcalibre1">PTE 1: Valid 1: Arrow to VP 1 in physical memory</p></li>
<li id="P700049702700000000000000004589A" data-uri="chapter09.xhtml#P700049702700000000000000004589A" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004589B" data-uri="chapter09.xhtml#P700049702700000000000000004589B" class="pcalibre calibre3 pcalibre1">PTE 2: Valid 1: Arrow to VP 2 in physical memory</p></li>
<li id="P700049702700000000000000004589C" data-uri="chapter09.xhtml#P700049702700000000000000004589C" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004589D" data-uri="chapter09.xhtml#P700049702700000000000000004589D" class="pcalibre calibre3 pcalibre1">PTE 3: Valid 0: Arrow to VP 3 in virtual memory</p></li>
<li id="P700049702700000000000000004589E" data-uri="chapter09.xhtml#P700049702700000000000000004589E" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004589F" data-uri="chapter09.xhtml#P700049702700000000000000004589F" class="pcalibre calibre3 pcalibre1">PTE 4: Valid 1: Arrow to VP 4 in physical memory</p></li>
<li id="P70004970270000000000000000458A0" data-uri="chapter09.xhtml#P70004970270000000000000000458A0" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458A1" data-uri="chapter09.xhtml#P70004970270000000000000000458A1" class="pcalibre calibre3 pcalibre1">PTE 5: Valid 0: Null</p></li>
<li id="P70004970270000000000000000458A2" data-uri="chapter09.xhtml#P70004970270000000000000000458A2" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458A3" data-uri="chapter09.xhtml#P70004970270000000000000000458A3" class="pcalibre calibre3 pcalibre1">PTE 6: Valid 0: Arrow to VP 6 in virtual memory</p></li>
<li id="P70004970270000000000000000458A4" data-uri="chapter09.xhtml#P70004970270000000000000000458A4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458A5" data-uri="chapter09.xhtml#P70004970270000000000000000458A5" class="pcalibre calibre3 pcalibre1">PTE 7: Valid 1: Arrow to VP 7 (between VP 2 and 4) in physical memory</p></li>
</ul></li>
<li id="P70004970270000000000000000458A6" data-uri="chapter09.xhtml#P70004970270000000000000000458A6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458A7" data-uri="chapter09.xhtml#P70004970270000000000000000458A7" class="pcalibre calibre3 pcalibre1">Physical memory (DRAM): VP 1 (PP 0), VP 2, VP 7, and VP 4 (PP3)</p></li>
<li id="P70004970270000000000000000458A8" data-uri="chapter09.xhtml#P70004970270000000000000000458A8" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458A9" data-uri="chapter09.xhtml#P70004970270000000000000000458A9" class="pcalibre calibre3 pcalibre1">Virtual memory (disk): VP 1, VP 2, VP 3, BP 4, VP 6, and VP 7</p></li>
</ul>
</details>
</figcaption>
</figure>
<figure id="P70004970270000000000000000070A8" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P70004970270000000000000000070A8">
<span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000070A9" title="809" data-uri="chapter09.xhtml#P70004970270000000000000000070A9" epub:type="pagebreak"></span>
<img alt="A diagram shows a page table, linked to physical memory and virtual memory, with input from virtual address." id="P70004970270000000000000000458AA" data-uri="P700049702700000000000000000B77E" src="../images/p809-1.png" class="calibre263 pcalibre pcalibre1"/>
<figcaption id="P70004970270000000000000000458AB" data-uri="chapter09.xhtml#P70004970270000000000000000458AB" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P70004970270000000000000000458AC" data-uri="chapter09.xhtml#P70004970270000000000000000458AC" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.6 </span>VM page fault (before).</h1></header><div class="edition pcalibre pcalibre1" id="P70004970270000000000000000458AD" data-uri="chapter09.xhtml#P70004970270000000000000000458AD"><p id="P70004970270000000000000000458AE" data-uri="chapter09.xhtml#P70004970270000000000000000458AE" class="pcalibre calibre3 pcalibre1">The reference to a word in VP 3 is a miss and triggers a page fault.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025BE5" data-uri="chapter09.xhtml#P7000497027000000000000000025BE5">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P70004970270000000000000000458AF" data-uri="chapter09.xhtml#P70004970270000000000000000458AF" class="pcalibre1 pcalibre calibre2">A diagram shows a page table, with virtual address to PTE 3, linked to physical memory and virtual memory, each with pages summarized below.</p>
<ul id="P70004970270000000000000000458B0" data-uri="chapter09.xhtml#P70004970270000000000000000458B0" class="pcalibre calibre31 pcalibre1">
<li id="P70004970270000000000000000458B1" data-uri="chapter09.xhtml#P70004970270000000000000000458B1" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458B2" data-uri="chapter09.xhtml#P70004970270000000000000000458B2" class="pcalibre calibre3 pcalibre1">Memory-resident page table (DRAM), with physical page number or disk address from PTE 0 through PTE 7:</p>
<ul id="P70004970270000000000000000458B3" data-uri="chapter09.xhtml#P70004970270000000000000000458B3" class="pcalibre calibre39 pcalibre1">
<li id="P70004970270000000000000000458B4" data-uri="chapter09.xhtml#P70004970270000000000000000458B4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458B5" data-uri="chapter09.xhtml#P70004970270000000000000000458B5" class="pcalibre calibre3 pcalibre1">PTE 0: Valid 0: Null</p></li>
<li id="P70004970270000000000000000458B6" data-uri="chapter09.xhtml#P70004970270000000000000000458B6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458B7" data-uri="chapter09.xhtml#P70004970270000000000000000458B7" class="pcalibre calibre3 pcalibre1">PTE 1: Valid 1: Arrow to VP 1 in physical memory</p></li>
<li id="P70004970270000000000000000458B8" data-uri="chapter09.xhtml#P70004970270000000000000000458B8" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458B9" data-uri="chapter09.xhtml#P70004970270000000000000000458B9" class="pcalibre calibre3 pcalibre1">PTE 2: Valid 1: Arrow to VP 2 in physical memory</p></li>
<li id="P70004970270000000000000000458BA" data-uri="chapter09.xhtml#P70004970270000000000000000458BA" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458BB" data-uri="chapter09.xhtml#P70004970270000000000000000458BB" class="pcalibre calibre3 pcalibre1">PTE 3: Valid 0: Arrow to VP 3 in virtual memory</p></li>
<li id="P70004970270000000000000000458BC" data-uri="chapter09.xhtml#P70004970270000000000000000458BC" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458BD" data-uri="chapter09.xhtml#P70004970270000000000000000458BD" class="pcalibre calibre3 pcalibre1">PTE 4: Valid 1: Arrow to VP 4 in physical memory</p></li>
<li id="P70004970270000000000000000458BE" data-uri="chapter09.xhtml#P70004970270000000000000000458BE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458BF" data-uri="chapter09.xhtml#P70004970270000000000000000458BF" class="pcalibre calibre3 pcalibre1">PTE 5: Valid 0: Null</p></li>
<li id="P70004970270000000000000000458C0" data-uri="chapter09.xhtml#P70004970270000000000000000458C0" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458C1" data-uri="chapter09.xhtml#P70004970270000000000000000458C1" class="pcalibre calibre3 pcalibre1">PTE 6: Valid 0: Arrow to VP 6 in virtual memory</p></li>
<li id="P70004970270000000000000000458C2" data-uri="chapter09.xhtml#P70004970270000000000000000458C2" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458C3" data-uri="chapter09.xhtml#P70004970270000000000000000458C3" class="pcalibre calibre3 pcalibre1">PTE 7: Valid 1: Arrow to VP 7 (between VP 2 and 4) in physical memory</p></li>
</ul></li>
<li id="P70004970270000000000000000458C4" data-uri="chapter09.xhtml#P70004970270000000000000000458C4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458C5" data-uri="chapter09.xhtml#P70004970270000000000000000458C5" class="pcalibre calibre3 pcalibre1">Physical memory (DRAM): VP 1 (PP 0), VP 2, VP 7, and VP 4 (PP3)</p></li>
<li id="P70004970270000000000000000458C6" data-uri="chapter09.xhtml#P70004970270000000000000000458C6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458C7" data-uri="chapter09.xhtml#P70004970270000000000000000458C7" class="pcalibre calibre3 pcalibre1">Virtual memory (disk): VP 1, VP 2, VP 3, BP 4, VP 6, and VP 7</p></li>
</ul>
</details>
</figcaption>
</figure>
<figure id="P70004970270000000000000000070AF" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P70004970270000000000000000070AF">
<img alt="A diagram shows a page table, linked to physical memory and virtual memory, with input from virtual address." id="P70004970270000000000000000458C8" data-uri="P700049702700000000000000000B77F" src="../images/p809-2.png" class="calibre263 pcalibre pcalibre1"/>
<figcaption id="P70004970270000000000000000458C9" data-uri="chapter09.xhtml#P70004970270000000000000000458C9" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P70004970270000000000000000458CA" data-uri="chapter09.xhtml#P70004970270000000000000000458CA" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.7 </span>VM page fault (after).</h1></header><div class="edition pcalibre pcalibre1" id="P70004970270000000000000000458CB" data-uri="chapter09.xhtml#P70004970270000000000000000458CB"><p id="P70004970270000000000000000458CC" data-uri="chapter09.xhtml#P70004970270000000000000000458CC" class="pcalibre calibre3 pcalibre1">The page fault handler selects VP 4 as the victim and replaces it with a copy of VP 3 from disk. After the page fault handler restarts the faulting instruction, it will read the word from memory normally, without generating an exception.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025C04" data-uri="chapter09.xhtml#P7000497027000000000000000025C04">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P70004970270000000000000000458CD" data-uri="chapter09.xhtml#P70004970270000000000000000458CD" class="pcalibre1 pcalibre calibre2">A diagram shows a page table, with virtual address to PTE 3, linked to physical memory and virtual memory, each with pages summarized below.</p>
<ul id="P70004970270000000000000000458CE" data-uri="chapter09.xhtml#P70004970270000000000000000458CE" class="pcalibre calibre31 pcalibre1">
<li id="P70004970270000000000000000458CF" data-uri="chapter09.xhtml#P70004970270000000000000000458CF" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458D0" data-uri="chapter09.xhtml#P70004970270000000000000000458D0" class="pcalibre calibre3 pcalibre1">Memory-resident page table (DRAM), with physical page number or disk address from PTE 0 through PTE 7:</p>
<ul id="P70004970270000000000000000458D1" data-uri="chapter09.xhtml#P70004970270000000000000000458D1" class="pcalibre calibre39 pcalibre1">
<li id="P70004970270000000000000000458D2" data-uri="chapter09.xhtml#P70004970270000000000000000458D2" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458D3" data-uri="chapter09.xhtml#P70004970270000000000000000458D3" class="pcalibre calibre3 pcalibre1">PTE 0: Valid 0: Null</p></li>
<li id="P70004970270000000000000000458D4" data-uri="chapter09.xhtml#P70004970270000000000000000458D4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458D5" data-uri="chapter09.xhtml#P70004970270000000000000000458D5" class="pcalibre calibre3 pcalibre1">PTE 1: Valid 1: Arrow to VP 1 in physical memory</p></li>
<li id="P70004970270000000000000000458D6" data-uri="chapter09.xhtml#P70004970270000000000000000458D6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458D7" data-uri="chapter09.xhtml#P70004970270000000000000000458D7" class="pcalibre calibre3 pcalibre1">PTE 2: Valid 1: Arrow to VP 2 in physical memory</p></li>
<li id="P70004970270000000000000000458D8" data-uri="chapter09.xhtml#P70004970270000000000000000458D8" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458D9" data-uri="chapter09.xhtml#P70004970270000000000000000458D9" class="pcalibre calibre3 pcalibre1">PTE 3: Valid 1: Arrow to VP 3 in physical memory</p></li>
<li id="P70004970270000000000000000458DA" data-uri="chapter09.xhtml#P70004970270000000000000000458DA" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458DB" data-uri="chapter09.xhtml#P70004970270000000000000000458DB" class="pcalibre calibre3 pcalibre1">PTE 4: Valid 1: Arrow to VP 4 in virtual memory</p></li>
<li id="P70004970270000000000000000458DC" data-uri="chapter09.xhtml#P70004970270000000000000000458DC" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458DD" data-uri="chapter09.xhtml#P70004970270000000000000000458DD" class="pcalibre calibre3 pcalibre1">PTE 5: Valid 0: Null</p></li>
<li id="P70004970270000000000000000458DE" data-uri="chapter09.xhtml#P70004970270000000000000000458DE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458DF" data-uri="chapter09.xhtml#P70004970270000000000000000458DF" class="pcalibre calibre3 pcalibre1">PTE 6: Valid 0: Arrow to VP 6 in virtual memory</p></li>
<li id="P70004970270000000000000000458E0" data-uri="chapter09.xhtml#P70004970270000000000000000458E0" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458E1" data-uri="chapter09.xhtml#P70004970270000000000000000458E1" class="pcalibre calibre3 pcalibre1">PTE 7: Valid 1: Arrow to VP 7 (between VP 2 and 4) in physical memory</p></li>
</ul></li>
<li id="P70004970270000000000000000458E2" data-uri="chapter09.xhtml#P70004970270000000000000000458E2" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458E3" data-uri="chapter09.xhtml#P70004970270000000000000000458E3" class="pcalibre calibre3 pcalibre1">Physical memory (DRAM): VP 1 (PP 0), VP 2, VP 7, and VP 4 (PP3)</p></li>
<li id="P70004970270000000000000000458E4" data-uri="chapter09.xhtml#P70004970270000000000000000458E4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458E5" data-uri="chapter09.xhtml#P70004970270000000000000000458E5" class="pcalibre calibre3 pcalibre1">Virtual memory (disk): VP 1, VP 2, VP 3, BP 4, VP 6, and VP 7</p></li>
</ul>
</details>
</figcaption>
</figure>
<p id="P70004970270000000000000000458E6" data-uri="chapter09.xhtml#P70004970270000000000000000458E6" class="pcalibre1 pcalibre calibre2">Next, the kernel copies VP 3 from disk to PP 3 in memory, updates PTE 3, and then returns. When the handler returns, it restarts the faulting instruction, which resends the faulting virtual address to the address translation hardware. But now, VP 3 is cached in main memory, and the page hit is handled normally by the address translation hardware. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000070AF"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.7</span></a> shows the state of our example page table after the page fault.</p>
<p id="P70004970270000000000000000458E7" data-uri="chapter09.xhtml#P70004970270000000000000000458E7" class="pcalibre1 pcalibre calibre2">Virtual memory was invented in the early 1960s, long before the widening CPU-memory gap spawned SRAM caches. As a result, virtual memory systems use a different terminology from SRAM caches, even though many of the ideas are similar. In virtual memory parlance, blocks are known as pages. The activity of transferring a page between disk and memory is known as <i class="calibre5 pcalibre pcalibre1">swapping</i> or <i class="calibre5 pcalibre pcalibre1">paging.</i> Pages are <i class="calibre5 pcalibre pcalibre1">swapped in (paged in)</i> from disk to DRAM, and <i class="calibre5 pcalibre pcalibre1">swapped out (paged out)</i> from DRAM to disk. The strategy of waiting until the last moment to swap</p>
<figure id="P70004970270000000000000000070B7" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P70004970270000000000000000070B7">
<span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000070B8" title="810" data-uri="chapter09.xhtml#P70004970270000000000000000070B8" epub:type="pagebreak"></span>
<img alt="A diagram shows a page table, linked to physical memory and virtual memory." id="P70004970270000000000000000458E8" data-uri="P700049702700000000000000000B780" src="../images/p810-1.png" class="pcalibre1 pcalibre calibre264"/>
<figcaption id="P70004970270000000000000000458E9" data-uri="chapter09.xhtml#P70004970270000000000000000458E9" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P70004970270000000000000000458EA" data-uri="chapter09.xhtml#P70004970270000000000000000458EA" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.8 </span>Allocating a new virtual page.</h1></header><div class="edition pcalibre pcalibre1" id="P70004970270000000000000000458EB" data-uri="chapter09.xhtml#P70004970270000000000000000458EB"><p id="P70004970270000000000000000458EC" data-uri="chapter09.xhtml#P70004970270000000000000000458EC" class="pcalibre calibre3 pcalibre1">The kernel allocates VP 5 on disk and points PTE 5 to this new location.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025C25" data-uri="chapter09.xhtml#P7000497027000000000000000025C25">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P70004970270000000000000000458ED" data-uri="chapter09.xhtml#P70004970270000000000000000458ED" class="pcalibre1 pcalibre calibre2">A diagram shows a page table, linked to physical memory and virtual memory, each with pages summarized below.</p>
<ul id="P70004970270000000000000000458EE" data-uri="chapter09.xhtml#P70004970270000000000000000458EE" class="pcalibre calibre31 pcalibre1">
<li id="P70004970270000000000000000458EF" data-uri="chapter09.xhtml#P70004970270000000000000000458EF" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458F0" data-uri="chapter09.xhtml#P70004970270000000000000000458F0" class="pcalibre calibre3 pcalibre1">Memory-resident page table (DRAM), with physical page number or disk address from PTE 0 through PTE 7:</p>
<ul id="P70004970270000000000000000458F1" data-uri="chapter09.xhtml#P70004970270000000000000000458F1" class="pcalibre calibre39 pcalibre1">
<li id="P70004970270000000000000000458F2" data-uri="chapter09.xhtml#P70004970270000000000000000458F2" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458F3" data-uri="chapter09.xhtml#P70004970270000000000000000458F3" class="pcalibre calibre3 pcalibre1">PTE 0: Valid 0: Null</p></li>
<li id="P70004970270000000000000000458F4" data-uri="chapter09.xhtml#P70004970270000000000000000458F4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458F5" data-uri="chapter09.xhtml#P70004970270000000000000000458F5" class="pcalibre calibre3 pcalibre1">PTE 1: Valid 1: Arrow to VP 1 in physical memory</p></li>
<li id="P70004970270000000000000000458F6" data-uri="chapter09.xhtml#P70004970270000000000000000458F6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458F7" data-uri="chapter09.xhtml#P70004970270000000000000000458F7" class="pcalibre calibre3 pcalibre1">PTE 2: Valid 1: Arrow to VP 2 in physical memory</p></li>
<li id="P70004970270000000000000000458F8" data-uri="chapter09.xhtml#P70004970270000000000000000458F8" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458F9" data-uri="chapter09.xhtml#P70004970270000000000000000458F9" class="pcalibre calibre3 pcalibre1">PTE 3: Valid 1: Arrow to VP 3 in physical memory</p></li>
<li id="P70004970270000000000000000458FA" data-uri="chapter09.xhtml#P70004970270000000000000000458FA" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458FB" data-uri="chapter09.xhtml#P70004970270000000000000000458FB" class="pcalibre calibre3 pcalibre1">PTE 4: Valid 0: Arrow to VP 4 in virtual memory</p></li>
<li id="P70004970270000000000000000458FC" data-uri="chapter09.xhtml#P70004970270000000000000000458FC" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458FD" data-uri="chapter09.xhtml#P70004970270000000000000000458FD" class="pcalibre calibre3 pcalibre1">PTE 5: Valid 0: Arrow to VP 5 in virtual memory</p></li>
<li id="P70004970270000000000000000458FE" data-uri="chapter09.xhtml#P70004970270000000000000000458FE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000458FF" data-uri="chapter09.xhtml#P70004970270000000000000000458FF" class="pcalibre calibre3 pcalibre1">PTE 6: Valid 0: Arrow to VP 6 in virtual memory</p></li>
<li id="P7000497027000000000000000045900" data-uri="chapter09.xhtml#P7000497027000000000000000045900" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045901" data-uri="chapter09.xhtml#P7000497027000000000000000045901" class="pcalibre calibre3 pcalibre1">PTE 7: Valid 1: Arrow to VP 7 (between VP 2 and 4) in physical memory</p></li>
</ul></li>
<li id="P7000497027000000000000000045902" data-uri="chapter09.xhtml#P7000497027000000000000000045902" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045903" data-uri="chapter09.xhtml#P7000497027000000000000000045903" class="pcalibre calibre3 pcalibre1">Physical memory (DRAM): VP 1 (PP 0), VP 2, VP 7, and VP 4 (PP3)</p></li>
<li id="P7000497027000000000000000045904" data-uri="chapter09.xhtml#P7000497027000000000000000045904" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045905" data-uri="chapter09.xhtml#P7000497027000000000000000045905" class="pcalibre calibre3 pcalibre1">Virtual memory (disk): VP 1 through VP 7</p></li>
</ul>
</details>
</figcaption>
</figure>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000045906" data-uri="chapter09.xhtml#P7000497027000000000000000045906">in a page, when a miss occurs, is known as <i class="calibre5 pcalibre pcalibre1">demand paging.</i> Other approaches, such as trying to predict misses and swap pages in before they are actually referenced, are possible. However, all modern systems use demand paging.</p>
</section>
<section id="P70004970270000000000000000070BF" data-uri="chapter09.xhtml#P70004970270000000000000000070BF" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045907" data-uri="chapter09.xhtml#P7000497027000000000000000045907" epub:type="title"><span class="pcalibre label pcalibre1">9.3.5 </span>Allocating Pages</h1></header>
<p id="P7000497027000000000000000045908" data-uri="chapter09.xhtml#P7000497027000000000000000045908" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000070B7"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">9.8</span></a> shows the effect on our example page table when the operating system allocates a new page of virtual memory—for example, as a result of calling <code id="P7000497027000000000000000045909" data-uri="chapter09.xhtml#P7000497027000000000000000045909" class="pcalibre1 calibre8 pcalibre">malloc</code>. In the example, VP 5 is allocated by creating room on disk and updating PTE 5 to point to the newly created page on disk.</p>
</section>
<section id="P70004970270000000000000000070C3" data-uri="chapter09.xhtml#P70004970270000000000000000070C3" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004590A" data-uri="chapter09.xhtml#P700049702700000000000000004590A" epub:type="title"><span class="pcalibre label pcalibre1">9.3.6 </span>Locality to the Rescue Again</h1></header>
<p id="P700049702700000000000000004590B" data-uri="chapter09.xhtml#P700049702700000000000000004590B" class="pcalibre1 pcalibre calibre2">When many of us learn about the idea of virtual memory, our first impression is often that it must be terribly inefficient. Given the large miss penalties, we worry that paging will destroy program performance. In practice, virtual memory works well, mainly because of our old friend <i class="calibre5 pcalibre pcalibre1">locality.</i></p>
<p id="P700049702700000000000000004590C" data-uri="chapter09.xhtml#P700049702700000000000000004590C" class="pcalibre1 pcalibre calibre2">Although the total number of distinct pages that programs reference during an entire run might exceed the total size of physical memory, the principle of locality promises that at any point in time they will tend to work on a smaller set of <i class="calibre5 pcalibre pcalibre1">active pages</i> known as the <i class="calibre5 pcalibre pcalibre1">working set</i> or <i class="calibre5 pcalibre pcalibre1">resident set.</i> After an initial overhead where the working set is paged into memory, subsequent references to the working set result in hits, with no additional disk traffic.</p>
<p id="P700049702700000000000000004590D" data-uri="chapter09.xhtml#P700049702700000000000000004590D" class="pcalibre1 pcalibre calibre2">As long as our programs have good temporal locality, virtual memory systems work quite well. But of course, not all programs exhibit good temporal locality. If the working set size exceeds the size of physical memory, then the program can produce an unfortunate situation known as <i class="calibre5 pcalibre pcalibre1">thrashing</i>, where pages are swapped in and out continuously. Although virtual memory is usually efficient, if a program's performance slows to a crawl, the wise programmer will consider the possibility that it is thrashing.</p>
<aside class="sidebar pcalibre5 pcalibre" id="P70004970270000000000000000070C8" data-uri="chapter09.xhtml#P70004970270000000000000000070C8"><header class="pcalibre halftitlepage pcalibre1"><h1 class="pcalibre1 title2 pcalibre" id="P700049702700000000000000004590E" data-uri="chapter09.xhtml#P700049702700000000000000004590E" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000070CA" title="811" data-uri="chapter09.xhtml#P70004970270000000000000000070CA" epub:type="pagebreak"></span><span class="pcalibre label1 pcalibre1">Aside </span>Counting page faults</h1></header>
<p id="P700049702700000000000000004590F" data-uri="chapter09.xhtml#P700049702700000000000000004590F" class="pcalibre calibre3 pcalibre1">You can monitor the number of page faults (and lots of other information) with the Linux <code id="P7000497027000000000000000045910" data-uri="chapter09.xhtml#P7000497027000000000000000045910" class="pcalibre1 calibre8 pcalibre">getrusage</code> function.</p>
</aside>
<figure id="P70004970270000000000000000070CD" class="pcalibre5 figure pcalibre" data-uri="chapter09.xhtml#P70004970270000000000000000070CD">
<img alt="A diagram illustrates connections between virtual address spaces and physical memory for two processes." id="P7000497027000000000000000045911" data-uri="P700049702700000000000000000B781" src="../images/p811-1.png" class="pcalibre calibre265 pcalibre1"/>
<figcaption id="P7000497027000000000000000045912" data-uri="chapter09.xhtml#P7000497027000000000000000045912" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000045913" data-uri="chapter09.xhtml#P7000497027000000000000000045913" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">9.9 </span>How VM provides processes with separate address spaces.</h1></header><div class="edition pcalibre pcalibre1" id="P7000497027000000000000000045914" data-uri="chapter09.xhtml#P7000497027000000000000000045914"><p id="P7000497027000000000000000045915" data-uri="chapter09.xhtml#P7000497027000000000000000045915" class="pcalibre calibre3 pcalibre1">The operating system maintains a separate page table for each process in the system.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025C4F" data-uri="chapter09.xhtml#P7000497027000000000000000025C4F">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<ul id="P7000497027000000000000000045916" data-uri="chapter09.xhtml#P7000497027000000000000000045916" class="pcalibre calibre31 pcalibre1">
<li id="P7000497027000000000000000045917" data-uri="chapter09.xhtml#P7000497027000000000000000045917" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045918" data-uri="chapter09.xhtml#P7000497027000000000000000045918" class="pcalibre calibre3 pcalibre1">Process i: address translation from VP 1 address space to PP 2 in physical memory, and from VP 2 to PP 7.</p></li>
<li id="P7000497027000000000000000045919" data-uri="chapter09.xhtml#P7000497027000000000000000045919" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004591A" data-uri="chapter09.xhtml#P700049702700000000000000004591A" class="pcalibre calibre3 pcalibre1">Process j: translation from VP 1 to PP 7 (shared page), and from VP 2 to PP 10.</p></li>
</ul>
</details>
</figcaption>
</figure>
</section>
</section></body></html>
