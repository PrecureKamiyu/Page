<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>7.7 Relocation</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P700049702700000000000000000627E" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P7000497027000000000000000044A14" data-uri="chapter07.xhtml#P7000497027000000000000000044A14" epub:type="title"><span class="pcalibre label pcalibre1">7.7 </span>Relocation</h1></header>
<p id="P7000497027000000000000000044A15" data-uri="chapter07.xhtml#P7000497027000000000000000044A15" class="pcalibre1 pcalibre calibre2">Once the linker has completed the symbol resolution step, it has associated each symbol reference in the code with exactly one symbol definition (i.e., a symbol table entry in one of its input object modules). At this point, the linker knows the exact sizes of the code and data sections in its input object modules. It is now ready to begin the relocation step, where it merges the input modules and assigns run-time addresses to each symbol. Relocation consists of two steps:</p>
<ol id="P7000497027000000000000000044A16" data-uri="chapter07.xhtml#P7000497027000000000000000044A16" class="calibre72 pcalibre pcalibre1">
<li id="P7000497027000000000000000044A17" data-uri="chapter07.xhtml#P7000497027000000000000000044A17" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044A18" data-uri="chapter07.xhtml#P7000497027000000000000000044A18" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Relocating sections and symbol definitions. </span>In this step, the linker merges all sections of the same type into a new aggregate section of the same type. For example, the <code id="P7000497027000000000000000044A19" data-uri="chapter07.xhtml#P7000497027000000000000000044A19" class="pcalibre1 calibre8 pcalibre">.data</code> sections from the input modules are all merged into one section that will become the <code id="P7000497027000000000000000044A1A" data-uri="chapter07.xhtml#P7000497027000000000000000044A1A" class="pcalibre1 calibre8 pcalibre">.data</code> section for the output executable object <span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006286" title="690" data-uri="chapter07.xhtml#P7000497027000000000000000006286" epub:type="pagebreak"></span>file. The linker then assigns run-time memory addresses to the new aggregate sections, to each section defined by the input modules, and to each symbol defined by the input modules. When this step is complete, each instruction and global variable in the program has a unique run-time memory address.</p></li>
<li id="P7000497027000000000000000044A1B" data-uri="chapter07.xhtml#P7000497027000000000000000044A1B" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044A1C" data-uri="chapter07.xhtml#P7000497027000000000000000044A1C" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Relocating symbol references within sections. </span>In this step, the linker modifies every symbol reference in the bodies of the code and data sections so that they point to the correct run-time addresses. To perform this step, the linker relies on data structures in the relocatable object modules known as relocation entries, which we describe next.</p></li>
</ol>
<section id="P7000497027000000000000000006289" data-uri="chapter07.xhtml#P7000497027000000000000000006289" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000044A1D" data-uri="chapter07.xhtml#P7000497027000000000000000044A1D" epub:type="title"><span class="pcalibre label pcalibre1">7.7.1 </span>Relocation Entries</h1></header>
<p id="P7000497027000000000000000044A1E" data-uri="chapter07.xhtml#P7000497027000000000000000044A1E" class="pcalibre1 pcalibre calibre2">When an assembler generates an object module, it does not know where the code and data will ultimately be stored in memory. Nor does it know the locations of any externally defined functions or global variables that are referenced by the module. So whenever the assembler encounters a reference to an object whose ultimate location is unknown, it generates a <i class="calibre5 pcalibre pcalibre1">relocation entry</i> that tells the linker how to modify the reference when it merges the object file into an executable. Relocation entries for code are placed in <code id="P7000497027000000000000000044A1F" data-uri="chapter07.xhtml#P7000497027000000000000000044A1F" class="pcalibre1 calibre8 pcalibre">.rel.text</code>. Relocation entries for data are placed in <code id="P7000497027000000000000000044A20" data-uri="chapter07.xhtml#P7000497027000000000000000044A20" class="pcalibre1 calibre8 pcalibre">.rel.data.</code></p>
<p id="P7000497027000000000000000044A21" data-uri="chapter07.xhtml#P7000497027000000000000000044A21" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000006298"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.9</span></a> shows the format of an ELF relocation entry. The <code id="P7000497027000000000000000044A22" data-uri="chapter07.xhtml#P7000497027000000000000000044A22" class="pcalibre1 calibre8 pcalibre">offset</code> is the section offset of the reference that will need to be modified. The <code id="P7000497027000000000000000044A23" data-uri="chapter07.xhtml#P7000497027000000000000000044A23" class="pcalibre1 calibre8 pcalibre">symbol</code> identifies the symbol that the modified reference should point to. The <code id="P7000497027000000000000000044A24" data-uri="chapter07.xhtml#P7000497027000000000000000044A24" class="pcalibre1 calibre8 pcalibre">type</code> tells the linker how to modify the new reference. The <code id="P7000497027000000000000000044A25" data-uri="chapter07.xhtml#P7000497027000000000000000044A25" class="pcalibre1 calibre8 pcalibre">addend</code> is a signed constant that is used by some types of relocations to bias the value of the modified reference.</p>
<p id="P7000497027000000000000000044A26" data-uri="chapter07.xhtml#P7000497027000000000000000044A26" class="pcalibre1 pcalibre calibre2">ELF defines 32 different relocation types, many quite arcane. We are concerned with only the two most basic relocation types:</p>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000044A27" data-uri="chapter07.xhtml#P7000497027000000000000000044A27">
<li id="P7000497027000000000000000044A28" data-uri="chapter07.xhtml#P7000497027000000000000000044A28" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044A29" data-uri="chapter07.xhtml#P7000497027000000000000000044A29" class="calibre13 pcalibre pcalibre1"><code id="P7000497027000000000000000044A2A" data-uri="chapter07.xhtml#P7000497027000000000000000044A2A" class="pcalibre1 calibre8 pcalibre">R_X86_64_PC32.</code> Relocate a reference that uses a 32-bit PC-relative address. Recall from <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000244A"><span class="pcalibre label pcalibre1">Section </span><span class="pcalibre label pcalibre1">3.6.3</span></a> that a PC-relative address is an offset from the current run-time value of the program counter (PC). When the CPU executes an instruction using PC-relative addressing, it forms the <i class="calibre5 pcalibre pcalibre1">effective address</i> (e.g., the target of the call instruction) by adding the 32-bit value</p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000006298" data-uri="chapter07.xhtml#P7000497027000000000000000006298">
<p id="P7000497027000000000000000044A2B" data-uri="chapter07.xhtml#P7000497027000000000000000044A2B" class="calibre13 pcalibre pcalibre1">-------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/link/elfstructs.c</i></p>
<pre id="P7000497027000000000000000044A2C" data-uri="chapter07.xhtml#P7000497027000000000000000044A2C" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A2D" data-uri="chapter07.xhtml#P7000497027000000000000000044A2D" class="calibre10 pcalibre pcalibre1">
1	typedef struct {
2		long offset;		/* Offset of the reference to relocate */
3		long type:32,		/* Relocation type */
4			symbol:32;	/* Symbol table index */
5		long addend;		/* Constant part of relocation expression */
6	} Elf64_Rela;
</code></pre>
<p id="P7000497027000000000000000044A2E" data-uri="chapter07.xhtml#P7000497027000000000000000044A2E" class="calibre13 pcalibre pcalibre1">-------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/link/elfstructs.c</i></p>
<figcaption id="P7000497027000000000000000044A2F" data-uri="chapter07.xhtml#P7000497027000000000000000044A2F" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000044A30" data-uri="chapter07.xhtml#P7000497027000000000000000044A30" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">7.9 </span>ELF relocation entry.</h1></header>
<div class="caption pcalibre pcalibre1" id="P7000497027000000000000000044A31" data-uri="chapter07.xhtml#P7000497027000000000000000044A31"><p id="P7000497027000000000000000044A32" data-uri="chapter07.xhtml#P7000497027000000000000000044A32" class="pcalibre calibre3 pcalibre1">Each entry identifies a reference that must be relocated and specifies how to compute the modified reference.</p></div></figcaption>
</figure>
<p class="calibre13 pcalibre pcalibre1" id="P7000497027000000000000000044A33" data-uri="chapter07.xhtml#P7000497027000000000000000044A33"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000062A2" title="691" data-uri="chapter07.xhtml#P70004970270000000000000000062A2" epub:type="pagebreak"></span>encoded in the instruction to the current run-time value of the PC, which is always the address of the next instruction in memory.</p></li>
<li id="P7000497027000000000000000044A34" data-uri="chapter07.xhtml#P7000497027000000000000000044A34" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044A35" data-uri="chapter07.xhtml#P7000497027000000000000000044A35" class="calibre13 pcalibre pcalibre1"><code id="P7000497027000000000000000044A36" data-uri="chapter07.xhtml#P7000497027000000000000000044A36" class="pcalibre1 calibre8 pcalibre">R_X86_64_32</code>. Relocate a reference that uses a 32-bit absolute address. With absolute addressing, the CPU directly uses the 32-bit value encoded in the instruction as the effective address, without further modifications.</p></li>
</ul>
<p id="P7000497027000000000000000044A37" data-uri="chapter07.xhtml#P7000497027000000000000000044A37" class="pcalibre1 pcalibre calibre2">These two relocation types support the x86-64 <i class="calibre5 pcalibre pcalibre1">small code model</i>, which assumes that the total size of the code and data in the executable object file is smaller than 2 GB, and thus can be accessed at run-time using 32-bit PC-relative addresses. The small code model is the default for <code id="P7000497027000000000000000044A38" data-uri="chapter07.xhtml#P7000497027000000000000000044A38" class="pcalibre1 calibre8 pcalibre"><span class="smallcaps pcalibre pcalibre1">gcc</span></code>. Programs larger than 2 GB can be compiled using the <code id="P7000497027000000000000000044A39" data-uri="chapter07.xhtml#P7000497027000000000000000044A39" class="pcalibre1 calibre8 pcalibre">-mcmodel=medium</code> (<i class="calibre5 pcalibre pcalibre1">medium code model</i>) and <code id="P7000497027000000000000000044A3A" data-uri="chapter07.xhtml#P7000497027000000000000000044A3A" class="pcalibre1 calibre8 pcalibre">-mcmodel=large</code> (<i class="calibre5 pcalibre pcalibre1">large code model</i>) flags, but we won't discuss those.</p>
</section>
<section id="P70004970270000000000000000062AA" data-uri="chapter07.xhtml#P70004970270000000000000000062AA" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000044A3B" data-uri="chapter07.xhtml#P7000497027000000000000000044A3B" epub:type="title"><span class="pcalibre label pcalibre1">7.7.2 </span>Relocating Symbol References</h1></header>
<p id="P7000497027000000000000000044A3C" data-uri="chapter07.xhtml#P7000497027000000000000000044A3C" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000062B6"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.10</span></a> shows the pseudocode for the linker's relocation algorithm. Lines 1 and 2 iterate over each section <code id="P7000497027000000000000000044A3D" data-uri="chapter07.xhtml#P7000497027000000000000000044A3D" class="pcalibre1 calibre8 pcalibre">s</code> and each relocation entry <code id="P7000497027000000000000000044A3E" data-uri="chapter07.xhtml#P7000497027000000000000000044A3E" class="pcalibre1 calibre8 pcalibre">r</code> associated with each section. For concreteness, assume that each section <code id="P7000497027000000000000000044A3F" data-uri="chapter07.xhtml#P7000497027000000000000000044A3F" class="pcalibre1 calibre8 pcalibre">s</code> is an array of bytes and that each relocation entry <code id="P7000497027000000000000000044A40" data-uri="chapter07.xhtml#P7000497027000000000000000044A40" class="pcalibre1 calibre8 pcalibre">r</code> is a <code id="P7000497027000000000000000044A41" data-uri="chapter07.xhtml#P7000497027000000000000000044A41" class="pcalibre1 calibre8 pcalibre">struct</code> of type <code id="P7000497027000000000000000044A42" data-uri="chapter07.xhtml#P7000497027000000000000000044A42" class="pcalibre1 calibre8 pcalibre">Elf64_Rela</code>, as defined in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000006298"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.9</span></a>. Also, assume that when the algorithm runs, the linker has already chosen runtime addresses for each section (denoted <code id="P7000497027000000000000000044A43" data-uri="chapter07.xhtml#P7000497027000000000000000044A43" class="pcalibre1 calibre8 pcalibre">ADDR(s)</code>) and each symbol (denoted <code id="P7000497027000000000000000044A44" data-uri="chapter07.xhtml#P7000497027000000000000000044A44" class="pcalibre1 calibre8 pcalibre">ADDR(r.symbol)</code>). Line 3 computes the address in the <code id="P7000497027000000000000000044A45" data-uri="chapter07.xhtml#P7000497027000000000000000044A45" class="pcalibre1 calibre8 pcalibre">s</code> array of the 4-byte reference that needs to be relocated. If this reference uses PC-relative addressing, then it is relocated by lines 5−9. If the reference uses absolute addressing, then it is relocated by lines 11−13.</p>
<figure class="pcalibre5 figure pcalibre" id="P70004970270000000000000000062B6" data-uri="chapter07.xhtml#P70004970270000000000000000062B6">
<pre id="P7000497027000000000000000044A46" data-uri="chapter07.xhtml#P7000497027000000000000000044A46" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A47" data-uri="chapter07.xhtml#P7000497027000000000000000044A47" class="calibre10 pcalibre pcalibre1">
1	foreach section s {
2		foreach relocation entry r {
3			refptr = s + r.offset; /* ptr to reference to be relocated */
4
5			/* Relocate a PC-relative reference */
6			if (r.type == R_X86_64_PC32) {
7				refaddr = ADDR(s) + r.offset; /* ref's run-time address */
8				*refptr = (unsigned) (ADDR(r.symbol) + r.addend - refaddr);
9			}
10
11			/* Relocate an absolute reference */
12			if (r.type == R_X86_64_32)
13				*refptr = (unsigned) (ADDR(r.symbol) + r.addend);
14		}
15	}
</code></pre>

<figcaption id="P7000497027000000000000000044A48" data-uri="chapter07.xhtml#P7000497027000000000000000044A48" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000044A49" data-uri="chapter07.xhtml#P7000497027000000000000000044A49" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">7.10 </span>Relocation algorithm.</h1></header>
</figcaption>
</figure>
<figure class="pcalibre5 figure pcalibre" id="P70004970270000000000000000062BC" data-uri="chapter07.xhtml#P70004970270000000000000000062BC">
<p id="P7000497027000000000000000044A4A" data-uri="chapter07.xhtml#P7000497027000000000000000044A4A" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000062B9" title="692" data-uri="chapter07.xhtml#P70004970270000000000000000062B9" epub:type="pagebreak"></span>-------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/link/main-relo.d</i></p>
<pre id="P7000497027000000000000000044A4B" data-uri="chapter07.xhtml#P7000497027000000000000000044A4B" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A4C" data-uri="chapter07.xhtml#P7000497027000000000000000044A4C" class="calibre10 pcalibre pcalibre1">
1	0000000000000000 &lt;main&gt;:
2	0: 4883ec08		sub		$0x8, %rsp
3	4: be 02 00 00 00	mov		$0x2, %esi
4	9: bf 00 00 00 00	mov		$0x0, %edi		<i class="calibre5 pcalibre pcalibre1">%edi = &amp;array</i>
5			a: R_X86_64_32 array				<i class="calibre5 pcalibre pcalibre1">Relocation entry</i>
6	e: e8 00 00 00 00	callq		13 &lt;main+0x13&gt;		<i class="calibre5 pcalibre pcalibre1">sum()</i>
7			f: R_X86_64_PC32 sum-0x4			<i class="calibre5 pcalibre pcalibre1">Relocation entry</i>
8	13: 4883c408		add		$0x8, %rsp
9	17:c3			retq
</code></pre>
<p id="P7000497027000000000000000044A4D" data-uri="chapter07.xhtml#P7000497027000000000000000044A4D" class="pcalibre1 pcalibre calibre2">-------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/link/main-relo.d</i></p>
<figcaption id="P7000497027000000000000000044A4E" data-uri="chapter07.xhtml#P7000497027000000000000000044A4E" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000044A4F" data-uri="chapter07.xhtml#P7000497027000000000000000044A4F" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">7.11 </span>Code and relocation entries from <code id="P7000497027000000000000000044A50" data-uri="chapter07.xhtml#P7000497027000000000000000044A50" class="pcalibre1 calibre8 pcalibre">main.o.</code></h1></header>
<div class="caption pcalibre pcalibre1" id="P7000497027000000000000000044A51" data-uri="chapter07.xhtml#P7000497027000000000000000044A51"><p id="P7000497027000000000000000044A52" data-uri="chapter07.xhtml#P7000497027000000000000000044A52" class="pcalibre calibre3 pcalibre1">The original C code is in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000005FB4.xhtml#P7000497027000000000000000005FF0"><span class="pcalibre label pcalibre1">Figure </span><span class="number pcalibre pcalibre1">7.1</span></a>.</p></div></figcaption>
</figure>
<p id="P7000497027000000000000000044A53" data-uri="chapter07.xhtml#P7000497027000000000000000044A53" class="pcalibre1 pcalibre calibre2">Let's see how the linker uses this algorithm to relocate the references in our example program in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000005FB4.xhtml#P7000497027000000000000000005FF0"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.1</span></a>. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000062BC"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.11</span></a> shows the disassembled code from <code id="P7000497027000000000000000044A54" data-uri="chapter07.xhtml#P7000497027000000000000000044A54" class="pcalibre1 calibre8 pcalibre">main.o</code>, as generated by the GNU <span class="smallcaps pcalibre pcalibre1">objdump </span>tool (<code id="P7000497027000000000000000044A55" data-uri="chapter07.xhtml#P7000497027000000000000000044A55" class="pcalibre1 calibre8 pcalibre">objdump -dx main.o</code>).</p>
<p id="P7000497027000000000000000044A56" data-uri="chapter07.xhtml#P7000497027000000000000000044A56" class="pcalibre1 pcalibre calibre2">The main function references two global symbols, <code id="P7000497027000000000000000044A57" data-uri="chapter07.xhtml#P7000497027000000000000000044A57" class="pcalibre1 calibre8 pcalibre">array</code> and <code id="P7000497027000000000000000044A58" data-uri="chapter07.xhtml#P7000497027000000000000000044A58" class="pcalibre1 calibre8 pcalibre">sum</code>. For each reference, the assembler has generated a relocation entry, which is displayed on the following line.<a class="noteref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" id="r__P7000497027000000000000000006664" epub:type="noteref" href="#P7000497027000000000000000006664">2</a> The relocation entries tell the linker that the reference to <code id="P7000497027000000000000000044A59" data-uri="chapter07.xhtml#P7000497027000000000000000044A59" class="pcalibre1 calibre8 pcalibre">sum</code> should be relocated using a 32-bit PC-relative address, and the reference to <code id="P7000497027000000000000000044A5A" data-uri="chapter07.xhtml#P7000497027000000000000000044A5A" class="pcalibre1 calibre8 pcalibre">array</code> should be relocated using a 32-bit absolute address. The next two sections detail how the linker relocates these references.</p><aside class="footnote pcalibre5 pcalibre" id="P7000497027000000000000000006664" data-uri="chapter07.xhtml#P7000497027000000000000000006664" epub:type="footnote"><p class="pcalibre calibre3 pcalibre1"><span class="pcalibre1 number2 pcalibre"><a href="#r__P7000497027000000000000000006664" class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1">2. </a></span>Recall that relocation entries and instructions are actually stored in different sections of the object file. The <code id="P7000497027000000000000000044E55" data-uri="chapter07.xhtml#P7000497027000000000000000044E55" class="calibre10 pcalibre pcalibre1"><span class="smallcaps pcalibre pcalibre1">objdump</span></code> tool displays them together for convenience.</p></aside>
<section id="P70004970270000000000000000062CE" data-uri="chapter07.xhtml#P70004970270000000000000000062CE" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P7000497027000000000000000044A5B" data-uri="chapter07.xhtml#P7000497027000000000000000044A5B" epub:type="title">Relocating PC-Relative References</h1></header>
<p id="P7000497027000000000000000044A5C" data-uri="chapter07.xhtml#P7000497027000000000000000044A5C" class="pcalibre1 pcalibre calibre2">In line 6 in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000062BC"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.11</span></a>, function <code id="P7000497027000000000000000044A5D" data-uri="chapter07.xhtml#P7000497027000000000000000044A5D" class="pcalibre1 calibre8 pcalibre">main</code> calls the <code id="P7000497027000000000000000044A5E" data-uri="chapter07.xhtml#P7000497027000000000000000044A5E" class="pcalibre1 calibre8 pcalibre">sum</code> function, which is defined in module <code id="P7000497027000000000000000044A5F" data-uri="chapter07.xhtml#P7000497027000000000000000044A5F" class="pcalibre1 calibre8 pcalibre">sum.o</code>. The <code id="P7000497027000000000000000044A60" data-uri="chapter07.xhtml#P7000497027000000000000000044A60" class="pcalibre1 calibre8 pcalibre">call</code> instruction begins at section offset <code id="P7000497027000000000000000044A61" data-uri="chapter07.xhtml#P7000497027000000000000000044A61" class="pcalibre1 calibre8 pcalibre">0xe</code> and consists of the 1-byte opcode <code id="P7000497027000000000000000044A62" data-uri="chapter07.xhtml#P7000497027000000000000000044A62" class="pcalibre1 calibre8 pcalibre">0xe8</code>, followed by a placeholder for the 32-bit PC-relative reference to the target <code id="P7000497027000000000000000044A63" data-uri="chapter07.xhtml#P7000497027000000000000000044A63" class="pcalibre1 calibre8 pcalibre">sum</code>.</p>
<p id="P7000497027000000000000000044A64" data-uri="chapter07.xhtml#P7000497027000000000000000044A64" class="pcalibre1 pcalibre calibre2">The corresponding relocation entry <code id="P7000497027000000000000000044A65" data-uri="chapter07.xhtml#P7000497027000000000000000044A65" class="pcalibre1 calibre8 pcalibre">r</code> consists of four fields:</p>
<pre id="P7000497027000000000000000044A66" data-uri="chapter07.xhtml#P7000497027000000000000000044A66" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A67" data-uri="chapter07.xhtml#P7000497027000000000000000044A67" class="calibre10 pcalibre pcalibre1">
r.offset = 0xf
r.symbol = sum
r.type = R_X86_64_PC32
r.addend = -4
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044A68" data-uri="chapter07.xhtml#P7000497027000000000000000044A68">These fields tell the linker to modify the 32-bit PC-relative reference starting at offset <code id="P7000497027000000000000000044A69" data-uri="chapter07.xhtml#P7000497027000000000000000044A69" class="pcalibre1 calibre8 pcalibre">0xf</code> so that it will point to the <code id="P7000497027000000000000000044A6A" data-uri="chapter07.xhtml#P7000497027000000000000000044A6A" class="pcalibre1 calibre8 pcalibre">sum</code> routine at run time. Now, suppose that the linker has determined that</p>
<pre id="P7000497027000000000000000044A6B" data-uri="chapter07.xhtml#P7000497027000000000000000044A6B" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A6C" data-uri="chapter07.xhtml#P7000497027000000000000000044A6C" class="calibre10 pcalibre pcalibre1">
ADDR(s) = ADDR(.text) = 0x4004d0
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044A6D" data-uri="chapter07.xhtml#P7000497027000000000000000044A6D"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000062E2" title="693" data-uri="chapter07.xhtml#P70004970270000000000000000062E2" epub:type="pagebreak"></span>and</p>
<pre id="P7000497027000000000000000044A6E" data-uri="chapter07.xhtml#P7000497027000000000000000044A6E" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A6F" data-uri="chapter07.xhtml#P7000497027000000000000000044A6F" class="calibre10 pcalibre pcalibre1">ADDR(r.symbol) = ADDR(sum) = 0x4004e8</code></pre>
<p id="P7000497027000000000000000044A70" data-uri="chapter07.xhtml#P7000497027000000000000000044A70" class="pcalibre1 pcalibre calibre2">Using the algorithm in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000062B6"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.10</span></a>, the linker first computes the run-time address of the reference (line 7):</p>
<pre id="P7000497027000000000000000044A71" data-uri="chapter07.xhtml#P7000497027000000000000000044A71" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A72" data-uri="chapter07.xhtml#P7000497027000000000000000044A72" class="calibre10 pcalibre pcalibre1">
refaddr = ADDR(s) + r.offset
	= 0x4004d0 + 0xf
	= 0x4004df</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044A73" data-uri="chapter07.xhtml#P7000497027000000000000000044A73">It then updates the reference so that it will point to the sum routine at run time (line 8):</p>
<pre id="P7000497027000000000000000044A74" data-uri="chapter07.xhtml#P7000497027000000000000000044A74" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A75" data-uri="chapter07.xhtml#P7000497027000000000000000044A75" class="calibre10 pcalibre pcalibre1">
*refptr = (unsigned) (ADDR(r.symbol)	+ r.addend - refaddr)
	= (unsigned) (0x4004e8	+ (-4) - 0x4004df)
	= (unsigned) (0x5)</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044A76" data-uri="chapter07.xhtml#P7000497027000000000000000044A76">In the resulting executable object file, the call instruction has the following relocated form:</p>
<pre id="P7000497027000000000000000044A77" data-uri="chapter07.xhtml#P7000497027000000000000000044A77" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A78" data-uri="chapter07.xhtml#P7000497027000000000000000044A78" class="calibre10 pcalibre pcalibre1">4004de: e8 05 00 00 00	callq 4004e8 &lt;sum&gt;	<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">sum()</i></b></code></pre>
<p id="P7000497027000000000000000044A79" data-uri="chapter07.xhtml#P7000497027000000000000000044A79" class="pcalibre1 pcalibre calibre2">At run time, the call instruction will be located at address <code id="P7000497027000000000000000044A7A" data-uri="chapter07.xhtml#P7000497027000000000000000044A7A" class="pcalibre1 calibre8 pcalibre">0x4004de</code>. When the CPU executes the call instruction, the PC has a value of <code id="P7000497027000000000000000044A7B" data-uri="chapter07.xhtml#P7000497027000000000000000044A7B" class="pcalibre1 calibre8 pcalibre">0x4004e3</code>, which is the address of the instruction immediately following the <code id="P7000497027000000000000000044A7C" data-uri="chapter07.xhtml#P7000497027000000000000000044A7C" class="pcalibre1 calibre8 pcalibre">call</code> instruction. To execute the call instruction, the CPU performs the following steps:</p>
<ol id="P7000497027000000000000000044A7D" data-uri="chapter07.xhtml#P7000497027000000000000000044A7D" class="calibre72 pcalibre pcalibre1">
<li id="P7000497027000000000000000044A7E" data-uri="chapter07.xhtml#P7000497027000000000000000044A7E" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044A7F" data-uri="chapter07.xhtml#P7000497027000000000000000044A7F" class="pcalibre calibre3 pcalibre1">Push PC onto stack</p></li>
<li id="P7000497027000000000000000044A80" data-uri="chapter07.xhtml#P7000497027000000000000000044A80" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044A81" data-uri="chapter07.xhtml#P7000497027000000000000000044A81" class="pcalibre calibre3 pcalibre1">PC ← PC + <code id="P7000497027000000000000000044A82" data-uri="chapter07.xhtml#P7000497027000000000000000044A82" class="pcalibre1 calibre8 pcalibre">0x5 = 0x4004e3 + 0x5 = 0x4004e8</code></p></li>
</ol>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044A83" data-uri="chapter07.xhtml#P7000497027000000000000000044A83">Thus, the next instruction to execute is the first instruction of the <code id="P7000497027000000000000000044A84" data-uri="chapter07.xhtml#P7000497027000000000000000044A84" class="pcalibre1 calibre8 pcalibre">sum</code> routine, which of course is what we want!</p>
</section>
<section id="P70004970270000000000000000062FA" data-uri="chapter07.xhtml#P70004970270000000000000000062FA" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P7000497027000000000000000044A85" data-uri="chapter07.xhtml#P7000497027000000000000000044A85" epub:type="title">Relocating Absolute References</h1></header>
<p id="P7000497027000000000000000044A86" data-uri="chapter07.xhtml#P7000497027000000000000000044A86" class="pcalibre1 pcalibre calibre2">Relocating absolute references is straightforward. For example, in line 4 in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000062BC"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.11</span></a>, the <code id="P7000497027000000000000000044A87" data-uri="chapter07.xhtml#P7000497027000000000000000044A87" class="pcalibre1 calibre8 pcalibre">mov</code> instruction copies the address of <code id="P7000497027000000000000000044A88" data-uri="chapter07.xhtml#P7000497027000000000000000044A88" class="pcalibre1 calibre8 pcalibre">array</code> (a 32-bit immediate value) into register <code id="P7000497027000000000000000044A89" data-uri="chapter07.xhtml#P7000497027000000000000000044A89" class="pcalibre1 calibre8 pcalibre">%edi</code>. The <code id="P7000497027000000000000000044A8A" data-uri="chapter07.xhtml#P7000497027000000000000000044A8A" class="pcalibre1 calibre8 pcalibre">mov</code> instruction begins at section offset <code id="P7000497027000000000000000044A8B" data-uri="chapter07.xhtml#P7000497027000000000000000044A8B" class="pcalibre1 calibre8 pcalibre">0x9</code> and consists of the 1-byte opcode <code id="P7000497027000000000000000044A8C" data-uri="chapter07.xhtml#P7000497027000000000000000044A8C" class="pcalibre1 calibre8 pcalibre">0xbf</code>, followed by a placeholder for the 32-bit absolute reference to <code id="P7000497027000000000000000044A8D" data-uri="chapter07.xhtml#P7000497027000000000000000044A8D" class="pcalibre1 calibre8 pcalibre">array</code>.</p>
<p id="P7000497027000000000000000044A8E" data-uri="chapter07.xhtml#P7000497027000000000000000044A8E" class="pcalibre1 pcalibre calibre2">The corresponding relocation entry <code id="P7000497027000000000000000044A8F" data-uri="chapter07.xhtml#P7000497027000000000000000044A8F" class="pcalibre1 calibre8 pcalibre">r</code> consists of four fields:</p>
<pre id="P7000497027000000000000000044A90" data-uri="chapter07.xhtml#P7000497027000000000000000044A90" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A91" data-uri="chapter07.xhtml#P7000497027000000000000000044A91" class="calibre10 pcalibre pcalibre1">r.offset = 0xa
r.symbol = array
r.type = R_X86_64_32
r.addend = 0</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044A92" data-uri="chapter07.xhtml#P7000497027000000000000000044A92">These fields tell the linker to modify the absolute reference starting at offset <code id="P7000497027000000000000000044A93" data-uri="chapter07.xhtml#P7000497027000000000000000044A93" class="pcalibre1 calibre8 pcalibre">0xa</code> so that it will point to the first byte of <code id="P7000497027000000000000000044A94" data-uri="chapter07.xhtml#P7000497027000000000000000044A94" class="pcalibre1 calibre8 pcalibre">array</code> at run time. Now, suppose that the linker has determined that</p>
<figure class="pcalibre5 figure pcalibre" id="P700049702700000000000000000630B" data-uri="chapter07.xhtml#P700049702700000000000000000630B">
<span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000630C" title="694" data-uri="chapter07.xhtml#P700049702700000000000000000630C" epub:type="pagebreak"></span>
<p id="P7000497027000000000000000044A95" data-uri="chapter07.xhtml#P7000497027000000000000000044A95" class="pcalibre1 pcalibre calibre2">(a) Relocated <code id="P7000497027000000000000000044A96" data-uri="chapter07.xhtml#P7000497027000000000000000044A96" class="pcalibre1 calibre8 pcalibre">.text</code> section</p>
<pre id="P7000497027000000000000000044A97" data-uri="chapter07.xhtml#P7000497027000000000000000044A97" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A98" data-uri="chapter07.xhtml#P7000497027000000000000000044A98" class="calibre10 pcalibre pcalibre1">
1	00000000004004d0 &lt;main&gt;:
2	4004d0: 48 83 ec 08		sub	$0x8, %rsp
3	4004d4: be 02 00 00 00		mov	$0x2, %esi
4	4004d9: bf 18 10 60 00		mov	$0x601018, %edi	<i class="calibre5 pcalibre pcalibre1">%edi = &amp;array</i>
5	4004de: e8 05 00 00 00		callq	4004e8 &lt;sum&gt;	<i class="calibre5 pcalibre pcalibre1">sum()</i>
6	4004e3: 48 83 c4 08		add	$0x8, %rsp
7	4004e7: c3			retq	
8	00000000004004e8 &lt;sum&gt;:
9	4004e8: b8 00 00 00 00		mov	$0x0, %eax
10	4004ed: ba 00 00 00 00		mov	$0x0, %edx
11	4004f2: eb 09			jmp	4004fd &lt;sum+0x15&gt;
12	4004f4: 48 63 ca		movslq	%edx, %rcx
13	4004f7: 03 04 8f		add	(%rdi, %rcx,4), %eax
14	4004fa: 83 c2 01		add	$0x1, %edx
15	4004fd: 39 f2			cmp	%esi, %edx
16	4004ff: 7c f3			jl	4004f4 &lt;sum+0xc&gt;
17	400501: f3 c3			repz retq
</code></pre>
<p id="P7000497027000000000000000044A99" data-uri="chapter07.xhtml#P7000497027000000000000000044A99" class="pcalibre1 pcalibre calibre2">(b) Relocated .data section</p>
<pre id="P7000497027000000000000000044A9A" data-uri="chapter07.xhtml#P7000497027000000000000000044A9A" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044A9B" data-uri="chapter07.xhtml#P7000497027000000000000000044A9B" class="calibre10 pcalibre pcalibre1">
1	0000000000601018 &lt;array&gt;:
2	  601018: 01 00 00 00 02 00 00 00
</code></pre>
<figcaption id="P7000497027000000000000000044A9C" data-uri="chapter07.xhtml#P7000497027000000000000000044A9C" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000044A9D" data-uri="chapter07.xhtml#P7000497027000000000000000044A9D" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">7.12 </span>Relocated <code id="P7000497027000000000000000044A9E" data-uri="chapter07.xhtml#P7000497027000000000000000044A9E" class="pcalibre1 calibre8 pcalibre">.text</code> and <code id="P7000497027000000000000000044A9F" data-uri="chapter07.xhtml#P7000497027000000000000000044A9F" class="pcalibre1 calibre8 pcalibre">.data</code> sections for the executable file <code id="P7000497027000000000000000044AA0" data-uri="chapter07.xhtml#P7000497027000000000000000044AA0" class="pcalibre1 calibre8 pcalibre">prog.</code></h1></header>
<div class="caption pcalibre pcalibre1" id="P7000497027000000000000000044AA1" data-uri="chapter07.xhtml#P7000497027000000000000000044AA1"><p id="P7000497027000000000000000044AA2" data-uri="chapter07.xhtml#P7000497027000000000000000044AA2" class="pcalibre calibre3 pcalibre1">The original C code is in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000005FB4.xhtml#P7000497027000000000000000005FF0"><span class="pcalibre label pcalibre1">Figure </span><span class="number pcalibre pcalibre1">7.1</span></a>.</p></div></figcaption>
</figure>
<pre id="P7000497027000000000000000044AA3" data-uri="chapter07.xhtml#P7000497027000000000000000044AA3" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044AA4" data-uri="chapter07.xhtml#P7000497027000000000000000044AA4" class="calibre10 pcalibre pcalibre1">ADDR(r.symbol) = ADDR(array) = 0x601018</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044AA5" data-uri="chapter07.xhtml#P7000497027000000000000000044AA5">The linker updates the reference using line 13 of the algorithm in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000062B6"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.10</span></a>:</p>
<pre id="P7000497027000000000000000044AA6" data-uri="chapter07.xhtml#P7000497027000000000000000044AA6" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044AA7" data-uri="chapter07.xhtml#P7000497027000000000000000044AA7" class="calibre10 pcalibre pcalibre1">*refptr = (unsigned) (ADDR(r.symbol) + r.addend)
	= (unsigned) (0x601018 + 0)
	= (unsigned) (0x601018)</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044AA8" data-uri="chapter07.xhtml#P7000497027000000000000000044AA8">In the resulting executable object file, the reference has the following relocated form:</p>
<pre id="P7000497027000000000000000044AA9" data-uri="chapter07.xhtml#P7000497027000000000000000044AA9" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044AAA" data-uri="chapter07.xhtml#P7000497027000000000000000044AAA" class="calibre10 pcalibre pcalibre1">4004d9: bf 18 10 60 00		mov	$0x601018, %edi	  <b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">%edi = &amp;array</i></b></code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044AAB" data-uri="chapter07.xhtml#P7000497027000000000000000044AAB">Putting it all together, <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000630B"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.12</span></a> shows the relocated <code id="P7000497027000000000000000044AAC" data-uri="chapter07.xhtml#P7000497027000000000000000044AAC" class="pcalibre1 calibre8 pcalibre">.text</code> and <code id="P7000497027000000000000000044AAD" data-uri="chapter07.xhtml#P7000497027000000000000000044AAD" class="pcalibre1 calibre8 pcalibre">.data</code> sections in the final executable object file. At load time, the loader can copy the bytes from these sections directly into memory and execute the instructions without any further modifications.</p>
<section id="P7000497027000000000000000006326" data-uri="chapter07.xhtml#P7000497027000000000000000006326" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title10 pcalibre pcalibre1" id="P7000497027000000000000000044AAE" data-uri="chapter07.xhtml#P7000497027000000000000000044AAE" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">7.4 </span>(solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000065E7.xhtml#P70004970270000000000000000065EF">718</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P7000497027000000000000000044AAF" data-uri="chapter07.xhtml#P7000497027000000000000000044AAF">
<li class="general-problem pcalibre pcalibre1" id="P7000497027000000000000000044AB0" data-uri="chapter07.xhtml#P7000497027000000000000000044AB0">
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000044AB1" data-uri="chapter07.xhtml#P7000497027000000000000000044AB1"><p id="P7000497027000000000000000044AB2" data-uri="chapter07.xhtml#P7000497027000000000000000044AB2" class="pcalibre calibre3 pcalibre1">This problem concerns the relocated program in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000630B"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.12(a)</span></a>.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000044AB3" data-uri="chapter07.xhtml#P7000497027000000000000000044AB3">
<li id="P7000497027000000000000000044AB4" data-uri="chapter07.xhtml#P7000497027000000000000000044AB4" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044AB5" data-uri="chapter07.xhtml#P7000497027000000000000000044AB5" class="pcalibre calibre3 pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000632F" title="695" data-uri="chapter07.xhtml#P700049702700000000000000000632F" epub:type="pagebreak"></span>What is the hex address of the relocated reference to <code id="P7000497027000000000000000044AB6" data-uri="chapter07.xhtml#P7000497027000000000000000044AB6" class="pcalibre1 calibre8 pcalibre">sum</code> in line 5?</p></li>
<li id="P7000497027000000000000000044AB7" data-uri="chapter07.xhtml#P7000497027000000000000000044AB7" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044AB8" data-uri="chapter07.xhtml#P7000497027000000000000000044AB8" class="pcalibre calibre3 pcalibre1">What is the hex value of the relocated reference to <code id="P7000497027000000000000000044AB9" data-uri="chapter07.xhtml#P7000497027000000000000000044AB9" class="pcalibre1 calibre8 pcalibre">sum</code> in line 5?</p></li>
</ol></div></li>
</ol>
</section>
<section id="P7000497027000000000000000006334" data-uri="chapter07.xhtml#P7000497027000000000000000006334" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title10 pcalibre pcalibre1" id="P7000497027000000000000000044ABA" data-uri="chapter07.xhtml#P7000497027000000000000000044ABA" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">7.5 </span>(solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000065E7.xhtml#P70004970270000000000000000065EF">718</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P7000497027000000000000000044ABB" data-uri="chapter07.xhtml#P7000497027000000000000000044ABB">
<li class="general-problem pcalibre pcalibre1" id="P7000497027000000000000000044ABC" data-uri="chapter07.xhtml#P7000497027000000000000000044ABC">
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000044ABD" data-uri="chapter07.xhtml#P7000497027000000000000000044ABD"><p id="P7000497027000000000000000044ABE" data-uri="chapter07.xhtml#P7000497027000000000000000044ABE" class="pcalibre calibre3 pcalibre1">Consider the call to function <code id="P7000497027000000000000000044ABF" data-uri="chapter07.xhtml#P7000497027000000000000000044ABF" class="pcalibre1 calibre8 pcalibre">swap</code> in object file <code id="P7000497027000000000000000044AC0" data-uri="chapter07.xhtml#P7000497027000000000000000044AC0" class="pcalibre1 calibre8 pcalibre">m.o</code> (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000608B.xhtml#P700049702700000000000000000612D"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">7.5</span></a>).</p>
<pre id="P7000497027000000000000000044AC1" data-uri="chapter07.xhtml#P7000497027000000000000000044AC1" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044AC2" data-uri="chapter07.xhtml#P7000497027000000000000000044AC2" class="calibre10 pcalibre pcalibre1">9: e8 00 00 00 00	callq	e &lt;main+0xe&gt;	<i class="calibre5 pcalibre pcalibre1">swap()</i></code></pre>
<p class="pcalibre calibre3 pcalibre1" id="P7000497027000000000000000044AC3" data-uri="chapter07.xhtml#P7000497027000000000000000044AC3">with the following relocation entry:</p>
<pre id="P7000497027000000000000000044AC4" data-uri="chapter07.xhtml#P7000497027000000000000000044AC4" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000044AC5" data-uri="chapter07.xhtml#P7000497027000000000000000044AC5" class="calibre10 pcalibre pcalibre1">r.offset = 0xa
r.symbol = swap
r.type = R_X86_64_PC32
r.addend = -4</code></pre>
<p class="pcalibre calibre3 pcalibre1" id="P7000497027000000000000000044AC6" data-uri="chapter07.xhtml#P7000497027000000000000000044AC6">Now suppose that the linker relocates <code id="P7000497027000000000000000044AC7" data-uri="chapter07.xhtml#P7000497027000000000000000044AC7" class="pcalibre1 calibre8 pcalibre">.text</code> in <code id="P7000497027000000000000000044AC8" data-uri="chapter07.xhtml#P7000497027000000000000000044AC8" class="pcalibre1 calibre8 pcalibre">m.o</code> to address <code id="P7000497027000000000000000044AC9" data-uri="chapter07.xhtml#P7000497027000000000000000044AC9" class="pcalibre1 calibre8 pcalibre">0x4004d0</code> and swap to address <code id="P7000497027000000000000000044ACA" data-uri="chapter07.xhtml#P7000497027000000000000000044ACA" class="pcalibre1 calibre8 pcalibre">0x4004e8</code>. Then what is the value of the relocated reference to <code id="P7000497027000000000000000044ACB" data-uri="chapter07.xhtml#P7000497027000000000000000044ACB" class="pcalibre1 calibre8 pcalibre">swap</code> in the <code id="P7000497027000000000000000044ACC" data-uri="chapter07.xhtml#P7000497027000000000000000044ACC" class="pcalibre1 calibre8 pcalibre">callq</code> instruction?</p></div></li>
</ol>
</section>
</section>
</section>
</section></body></html>
