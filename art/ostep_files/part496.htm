<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>44.3 Detecting Corruption: The Checksum</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part495.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part497.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">44.3 Detecting Corruption: The Checksum</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Let’s now tackle the more challenging problem, that of silent failures via data corruption. How can we prevent users from getting bad data when corruption arises, and thus leads to disks returning bad data?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;">C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>P<span class="s7">RESERVE </span>D<span class="s7">ATA </span>I<span class="s7">NTEGRITY </span>D<span class="s7">ESPITE </span>C<span class="s7">ORRUPTION</span></p><p style="padding-left: 8pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Given the silent nature of such failures, what can a storage system do to detect when corruption arises? What techniques are needed? How can one implement them efficiently?</p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Unlike latent sector errors, <i>detection </i>of corruption is a key problem. How can a client tell that a block has gone bad? Once it is known that a particular block is bad, <i>recovery </i>is the same as before: you need to have some other copy of the block around (and hopefully, one that is not cor- rupt!). Thus, we focus here on detection techniques.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">The primary mechanism used by modern storage systems to preserve data integrity is called the <b>checksum</b>. A checksum is simply the result of a function that takes a chunk of data (say a 4KB block) as input and computes a function over said data, producing a small summary of the contents of the data (say 4 or 8 bytes). This summary is referred to as the checksum. The goal of such a computation is to enable a system to detect if data has somehow been corrupted or altered by storing the checksum with the data and then confirming upon later access that the data’s cur- rent checksum matches the original storage value.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">T<span class="s7">IP</span>: T<span class="s7">HERE</span>’<span class="s7">S </span>N<span class="s7">O </span>F<span class="s7">REE </span>L<span class="s7">UNCH</span></p><p style="padding-left: 9pt;text-indent: 11pt;line-height: 89%;text-align: justify;">There’s No Such Thing As A Free Lunch, or TNSTAAFL for short, is an old American idiom that implies that when you are seemingly get- ting something for free, in actuality you are likely paying some cost for it. It comes from the old days when diners would advertise a free lunch for customers, hoping to draw them in; only when you went in, did you realize that to acquire the “free” lunch, you had to purchase one or more alcoholic beverages. Of course, this may not actually be a problem, partic- ularly if you are an aspiring alcoholic (or typical undergraduate student).</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part497.htm">Common Checksum Functions</a><a class="toc0" href="part498.htm">Checksum Layout</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part495.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part497.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
