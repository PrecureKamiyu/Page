<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>Solutions to Practice Problems </title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P700049702700000000000000000344D" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P7000497027000000000000000041667" data-uri="chapter03.xhtml#P7000497027000000000000000041667" epub:type="title"><span class="pcalibre label pcalibre1">Solutions to Practice Problems </span></h1></header>
<section id="P700049702700000000000000000344F" data-uri="chapter03.xhtml#P700049702700000000000000000344F" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041668" data-uri="chapter03.xhtml#P7000497027000000000000000041668" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000001FB4"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.1 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000001FB3">182</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041669" data-uri="chapter03.xhtml#P7000497027000000000000000041669">
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004166A" data-uri="chapter03.xhtml#P700049702700000000000000004166A"><p id="P700049702700000000000000004166B" data-uri="chapter03.xhtml#P700049702700000000000000004166B" class="calibre13 pcalibre pcalibre1">This exercise gives you practice with the different operand forms.</p>
<table id="P700049702700000000000000004166C" data-uri="chapter03.xhtml#P700049702700000000000000004166C" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000004166D" data-uri="chapter03.xhtml#P700049702700000000000000004166D" class="calibre18 pcalibre pcalibre1">Operand</th>
<th id="P700049702700000000000000004166E" data-uri="chapter03.xhtml#P700049702700000000000000004166E" class="calibre18 pcalibre pcalibre1">Value</th>
<th id="P700049702700000000000000004166F" data-uri="chapter03.xhtml#P700049702700000000000000004166F" class="calibre18 pcalibre pcalibre1">Comment</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041670" data-uri="chapter03.xhtml#P7000497027000000000000000041670" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041671" data-uri="chapter03.xhtml#P7000497027000000000000000041671" class="calibre10 pcalibre pcalibre1">%rax</code></td>
<td id="P7000497027000000000000000041672" data-uri="chapter03.xhtml#P7000497027000000000000000041672" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041673" data-uri="chapter03.xhtml#P7000497027000000000000000041673" class="calibre10 pcalibre pcalibre1">0x100</code></td>
<td id="P7000497027000000000000000041674" data-uri="chapter03.xhtml#P7000497027000000000000000041674" class="calibre20 pcalibre pcalibre1">Register</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041675" data-uri="chapter03.xhtml#P7000497027000000000000000041675" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041676" data-uri="chapter03.xhtml#P7000497027000000000000000041676" class="calibre10 pcalibre pcalibre1">0x104</code></td>
<td id="P7000497027000000000000000041677" data-uri="chapter03.xhtml#P7000497027000000000000000041677" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041678" data-uri="chapter03.xhtml#P7000497027000000000000000041678" class="calibre10 pcalibre pcalibre1">0xAB</code></td>
<td id="P7000497027000000000000000041679" data-uri="chapter03.xhtml#P7000497027000000000000000041679" class="calibre20 pcalibre pcalibre1">Absolute address</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004167A" data-uri="chapter03.xhtml#P700049702700000000000000004167A" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004167B" data-uri="chapter03.xhtml#P700049702700000000000000004167B" class="calibre10 pcalibre pcalibre1">$0x108</code></td>
<td id="P700049702700000000000000004167C" data-uri="chapter03.xhtml#P700049702700000000000000004167C" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004167D" data-uri="chapter03.xhtml#P700049702700000000000000004167D" class="calibre10 pcalibre pcalibre1">0x108</code></td>
<td id="P700049702700000000000000004167E" data-uri="chapter03.xhtml#P700049702700000000000000004167E" class="calibre20 pcalibre pcalibre1">Immediate</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004167F" data-uri="chapter03.xhtml#P700049702700000000000000004167F" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041680" data-uri="chapter03.xhtml#P7000497027000000000000000041680" class="calibre10 pcalibre pcalibre1">(%rax)</code></td>
<td id="P7000497027000000000000000041681" data-uri="chapter03.xhtml#P7000497027000000000000000041681" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041682" data-uri="chapter03.xhtml#P7000497027000000000000000041682" class="calibre10 pcalibre pcalibre1">0xFF</code></td>
<td id="P7000497027000000000000000041683" data-uri="chapter03.xhtml#P7000497027000000000000000041683" class="calibre20 pcalibre pcalibre1">Address <code id="P7000497027000000000000000041684" data-uri="chapter03.xhtml#P7000497027000000000000000041684" class="calibre10 pcalibre pcalibre1">0x100</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041685" data-uri="chapter03.xhtml#P7000497027000000000000000041685" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041686" data-uri="chapter03.xhtml#P7000497027000000000000000041686" class="calibre10 pcalibre pcalibre1">4(%rax)</code></td>
<td id="P7000497027000000000000000041687" data-uri="chapter03.xhtml#P7000497027000000000000000041687" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041688" data-uri="chapter03.xhtml#P7000497027000000000000000041688" class="calibre10 pcalibre pcalibre1">0xAB</code></td>
<td id="P7000497027000000000000000041689" data-uri="chapter03.xhtml#P7000497027000000000000000041689" class="calibre20 pcalibre pcalibre1">Address <code id="P700049702700000000000000004168A" data-uri="chapter03.xhtml#P700049702700000000000000004168A" class="calibre10 pcalibre pcalibre1">0x104</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004168B" data-uri="chapter03.xhtml#P700049702700000000000000004168B" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004168C" data-uri="chapter03.xhtml#P700049702700000000000000004168C" class="calibre10 pcalibre pcalibre1">9(%rax,%rdx)</code></td>
<td id="P700049702700000000000000004168D" data-uri="chapter03.xhtml#P700049702700000000000000004168D" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004168E" data-uri="chapter03.xhtml#P700049702700000000000000004168E" class="calibre10 pcalibre pcalibre1">0x11</code></td>
<td id="P700049702700000000000000004168F" data-uri="chapter03.xhtml#P700049702700000000000000004168F" class="calibre20 pcalibre pcalibre1">Address <code id="P7000497027000000000000000041690" data-uri="chapter03.xhtml#P7000497027000000000000000041690" class="calibre10 pcalibre pcalibre1">0x10C</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041691" data-uri="chapter03.xhtml#P7000497027000000000000000041691" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041692" data-uri="chapter03.xhtml#P7000497027000000000000000041692" class="calibre10 pcalibre pcalibre1">260(%rcx,%rdx)</code></td>
<td id="P7000497027000000000000000041693" data-uri="chapter03.xhtml#P7000497027000000000000000041693" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041694" data-uri="chapter03.xhtml#P7000497027000000000000000041694" class="calibre10 pcalibre pcalibre1">0x13</code></td>
<td id="P7000497027000000000000000041695" data-uri="chapter03.xhtml#P7000497027000000000000000041695" class="calibre20 pcalibre pcalibre1">Address <code id="P7000497027000000000000000041696" data-uri="chapter03.xhtml#P7000497027000000000000000041696" class="calibre10 pcalibre pcalibre1">0x108</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041697" data-uri="chapter03.xhtml#P7000497027000000000000000041697" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041698" data-uri="chapter03.xhtml#P7000497027000000000000000041698" class="calibre10 pcalibre pcalibre1">0xFC(,%rcx,4)</code></td>
<td id="P7000497027000000000000000041699" data-uri="chapter03.xhtml#P7000497027000000000000000041699" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004169A" data-uri="chapter03.xhtml#P700049702700000000000000004169A" class="calibre10 pcalibre pcalibre1">0xFF</code></td>
<td id="P700049702700000000000000004169B" data-uri="chapter03.xhtml#P700049702700000000000000004169B" class="calibre20 pcalibre pcalibre1">Address <code id="P700049702700000000000000004169C" data-uri="chapter03.xhtml#P700049702700000000000000004169C" class="calibre10 pcalibre pcalibre1">0x100</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004169D" data-uri="chapter03.xhtml#P700049702700000000000000004169D" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004169E" data-uri="chapter03.xhtml#P700049702700000000000000004169E" class="calibre10 pcalibre pcalibre1">(%rax,%rdx,4)</code></td>
<td id="P700049702700000000000000004169F" data-uri="chapter03.xhtml#P700049702700000000000000004169F" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416A0" data-uri="chapter03.xhtml#P70004970270000000000000000416A0" class="calibre10 pcalibre pcalibre1">0x11</code></td>
<td id="P70004970270000000000000000416A1" data-uri="chapter03.xhtml#P70004970270000000000000000416A1" class="calibre20 pcalibre pcalibre1">Address <code id="P70004970270000000000000000416A2" data-uri="chapter03.xhtml#P70004970270000000000000000416A2" class="calibre10 pcalibre pcalibre1">0x10C</code></td>
</tr>
</tbody>
</table>
</li></ul>
</section>
<section id="P700049702700000000000000000348B" data-uri="chapter03.xhtml#P700049702700000000000000000348B" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000416A3" data-uri="chapter03.xhtml#P70004970270000000000000000416A3" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000002087"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.2 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000001F3C.xhtml#P700049702700000000000000000205C">185</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000416A4" data-uri="chapter03.xhtml#P70004970270000000000000000416A4">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000416A5" data-uri="chapter03.xhtml#P70004970270000000000000000416A5"><p id="P70004970270000000000000000416A6" data-uri="chapter03.xhtml#P70004970270000000000000000416A6" class="calibre13 pcalibre pcalibre1">As we have seen, the assembly code generated by <span class="smallcaps pcalibre pcalibre1">gcc </span>includes suffixes on the instructions, while the disassembler does not. Being able to switch between these <span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003490" title="326" data-uri="chapter03.xhtml#P7000497027000000000000000003490" epub:type="pagebreak"></span>two forms is an important skill to learn. One important feature is that memory references in x86-64 are always given with quad word registers, such as <code id="P70004970270000000000000000416A7" data-uri="chapter03.xhtml#P70004970270000000000000000416A7" class="pcalibre1 calibre8 pcalibre">%rax</code>, even if the operand is a byte, single word, or double word.</p>
<p id="P70004970270000000000000000416A8" data-uri="chapter03.xhtml#P70004970270000000000000000416A8" class="calibre15 pcalibre pcalibre1">Here is the code written with suffixes:</p>
<pre id="P70004970270000000000000000416A9" data-uri="chapter03.xhtml#P70004970270000000000000000416A9" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000416AA" data-uri="chapter03.xhtml#P70004970270000000000000000416AA" class="calibre10 pcalibre pcalibre1">
movl	%eax, (%rsp)
movw	(%rax), %dx
movb	$0xFF, %bl
movb	(%rsp,%rdx,4), %dl
movq	(%rdx), %rax
movw	%dx, (%rax)
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003495" data-uri="chapter03.xhtml#P7000497027000000000000000003495" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000416AB" data-uri="chapter03.xhtml#P70004970270000000000000000416AB" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001F3C.xhtml#P70004970270000000000000000020A3"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.3 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000002093">186</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000416AC" data-uri="chapter03.xhtml#P70004970270000000000000000416AC">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000416AD" data-uri="chapter03.xhtml#P70004970270000000000000000416AD"><p id="P70004970270000000000000000416AE" data-uri="chapter03.xhtml#P70004970270000000000000000416AE" class="calibre13 pcalibre pcalibre1">Since we will rely on <span class="smallcaps pcalibre pcalibre1">gcc </span>to generate most of our assembly code, being able to write correct assembly code is not a critical skill. Nonetheless, this exercise will help you become more familiar with the different instruction and operand types.</p>
<p id="P70004970270000000000000000416AF" data-uri="chapter03.xhtml#P70004970270000000000000000416AF" class="calibre15 pcalibre pcalibre1">Here is the code with explanations of the errors:</p>
<pre id="P70004970270000000000000000416B0" data-uri="chapter03.xhtml#P70004970270000000000000000416B0" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000416B1" data-uri="chapter03.xhtml#P70004970270000000000000000416B1" class="calibre10 pcalibre pcalibre1">
movb	$0xF, (%ebx)	<i class="calibre5 pcalibre pcalibre1">Cannot use %ebx as address register</i>
movl	%rax, (%rsp)	<i class="calibre5 pcalibre pcalibre1">Mismatch between instruction suffix and register ID</i>
movw	(%rax),4(%rsp)	<i class="calibre5 pcalibre pcalibre1">Cannot have both source and destination be memory references</i>
movb	%al,%sl		<i class="calibre5 pcalibre pcalibre1">No register named %sl</i>
movl	%eax,$0x123	<i class="calibre5 pcalibre pcalibre1">Cannot have immediate as destination</i>
movl	%eax,%dx	<i class="calibre5 pcalibre pcalibre1">Destination operand incorrect size</i>
movb	%si, 8(%rbp)	<i class="calibre5 pcalibre pcalibre1">Mismatch between instruction suffix and register ID</i>
</code></pre>
</li></ul>
</section>
<section id="P700049702700000000000000000349D" data-uri="chapter03.xhtml#P700049702700000000000000000349D" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000416B2" data-uri="chapter03.xhtml#P70004970270000000000000000416B2" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001F3C.xhtml#P70004970270000000000000000020D5"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.4 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000001F3C.xhtml#P70004970270000000000000000020B6">187</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000416B3" data-uri="chapter03.xhtml#P70004970270000000000000000416B3">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000416B4" data-uri="chapter03.xhtml#P70004970270000000000000000416B4"><p id="P70004970270000000000000000416B5" data-uri="chapter03.xhtml#P70004970270000000000000000416B5" class="calibre13 pcalibre pcalibre1">This exercise gives you more experience with the different data movement instructions and how they relate to the data types and conversion rules of C. The nuances of conversions of both signedness and size, as well as integral promotion, add challenge to this problem.</p>
<table class="informaltable pcalibre pcalibre1" id="P70004970270000000000000000416B6" data-uri="chapter03.xhtml#P70004970270000000000000000416B6">
<thead class="pcalibre1 pcalibre calibre16"><tr class="pcalibre calibre17 pcalibre1">
<th id="P70004970270000000000000000416B7" data-uri="chapter03.xhtml#P70004970270000000000000000416B7" class="calibre18 pcalibre pcalibre1"><code id="P70004970270000000000000000416B8" data-uri="chapter03.xhtml#P70004970270000000000000000416B8" class="calibre10 pcalibre pcalibre1">src_t</code></th>
<th id="P70004970270000000000000000416B9" data-uri="chapter03.xhtml#P70004970270000000000000000416B9" class="calibre18 pcalibre pcalibre1"><code id="P70004970270000000000000000416BA" data-uri="chapter03.xhtml#P70004970270000000000000000416BA" class="calibre10 pcalibre pcalibre1">dest_t</code></th>
<th id="P70004970270000000000000000416BB" data-uri="chapter03.xhtml#P70004970270000000000000000416BB" class="calibre18 pcalibre pcalibre1">Instruction</th>
<th id="P70004970270000000000000000416BC" data-uri="chapter03.xhtml#P70004970270000000000000000416BC" class="calibre18 pcalibre pcalibre1">Comments</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416BD" data-uri="chapter03.xhtml#P70004970270000000000000000416BD" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416BE" data-uri="chapter03.xhtml#P70004970270000000000000000416BE" class="calibre10 pcalibre pcalibre1">long</code></td>
<td id="P70004970270000000000000000416BF" data-uri="chapter03.xhtml#P70004970270000000000000000416BF" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416C0" data-uri="chapter03.xhtml#P70004970270000000000000000416C0" class="calibre10 pcalibre pcalibre1">long</code></td>
<td id="P70004970270000000000000000416C1" data-uri="chapter03.xhtml#P70004970270000000000000000416C1" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416C2" data-uri="chapter03.xhtml#P70004970270000000000000000416C2" class="calibre10 pcalibre pcalibre1">movq (%rdi), %rax</code></td>
<td id="P70004970270000000000000000416C3" data-uri="chapter03.xhtml#P70004970270000000000000000416C3" class="calibre20 pcalibre pcalibre1">Read 8 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P70004970270000000000000000416C4" data-uri="chapter03.xhtml#P70004970270000000000000000416C4" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416C5" data-uri="chapter03.xhtml#P70004970270000000000000000416C5" class="calibre10 pcalibre pcalibre1">movq %rax, (%rsi)</code></td>
<td id="P70004970270000000000000000416C6" data-uri="chapter03.xhtml#P70004970270000000000000000416C6" class="calibre20 pcalibre pcalibre1">Store 8 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416C7" data-uri="chapter03.xhtml#P70004970270000000000000000416C7" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416C8" data-uri="chapter03.xhtml#P70004970270000000000000000416C8" class="calibre10 pcalibre pcalibre1">char</code></td>
<td id="P70004970270000000000000000416C9" data-uri="chapter03.xhtml#P70004970270000000000000000416C9" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416CA" data-uri="chapter03.xhtml#P70004970270000000000000000416CA" class="calibre10 pcalibre pcalibre1">int</code></td>
<td id="P70004970270000000000000000416CB" data-uri="chapter03.xhtml#P70004970270000000000000000416CB" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416CC" data-uri="chapter03.xhtml#P70004970270000000000000000416CC" class="calibre10 pcalibre pcalibre1">movsbl (%rdi), %eax</code></td>
<td id="P70004970270000000000000000416CD" data-uri="chapter03.xhtml#P70004970270000000000000000416CD" class="calibre20 pcalibre pcalibre1">Convert char to int</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P70004970270000000000000000416CE" data-uri="chapter03.xhtml#P70004970270000000000000000416CE" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416CF" data-uri="chapter03.xhtml#P70004970270000000000000000416CF" class="calibre10 pcalibre pcalibre1">movl %eax, (%rsi)</code></td>
<td id="P70004970270000000000000000416D0" data-uri="chapter03.xhtml#P70004970270000000000000000416D0" class="calibre20 pcalibre pcalibre1">Store 4 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416D1" data-uri="chapter03.xhtml#P70004970270000000000000000416D1" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416D2" data-uri="chapter03.xhtml#P70004970270000000000000000416D2" class="calibre10 pcalibre pcalibre1">char</code></td>
<td id="P70004970270000000000000000416D3" data-uri="chapter03.xhtml#P70004970270000000000000000416D3" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416D4" data-uri="chapter03.xhtml#P70004970270000000000000000416D4" class="calibre10 pcalibre pcalibre1">unsigned</code></td>
<td id="P70004970270000000000000000416D5" data-uri="chapter03.xhtml#P70004970270000000000000000416D5" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416D6" data-uri="chapter03.xhtml#P70004970270000000000000000416D6" class="calibre10 pcalibre pcalibre1">movsbl (%rdi), %eax</code></td>
<td id="P70004970270000000000000000416D7" data-uri="chapter03.xhtml#P70004970270000000000000000416D7" class="calibre20 pcalibre pcalibre1">Convert char to int</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P70004970270000000000000000416D8" data-uri="chapter03.xhtml#P70004970270000000000000000416D8" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416D9" data-uri="chapter03.xhtml#P70004970270000000000000000416D9" class="calibre10 pcalibre pcalibre1">movl %eax, (%rsi)</code></td>
<td id="P70004970270000000000000000416DA" data-uri="chapter03.xhtml#P70004970270000000000000000416DA" class="calibre20 pcalibre pcalibre1">Store 4 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416DB" data-uri="chapter03.xhtml#P70004970270000000000000000416DB" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416DC" data-uri="chapter03.xhtml#P70004970270000000000000000416DC" class="calibre10 pcalibre pcalibre1">unsigned char</code></td>
<td id="P70004970270000000000000000416DD" data-uri="chapter03.xhtml#P70004970270000000000000000416DD" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416DE" data-uri="chapter03.xhtml#P70004970270000000000000000416DE" class="calibre10 pcalibre pcalibre1">long</code></td>
<td id="P70004970270000000000000000416DF" data-uri="chapter03.xhtml#P70004970270000000000000000416DF" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416E0" data-uri="chapter03.xhtml#P70004970270000000000000000416E0" class="calibre10 pcalibre pcalibre1">movzbl (%rdi), %eax</code></td>
<td id="P70004970270000000000000000416E1" data-uri="chapter03.xhtml#P70004970270000000000000000416E1" class="calibre20 pcalibre pcalibre1">Read byte and zero-extend</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P70004970270000000000000000416E2" data-uri="chapter03.xhtml#P70004970270000000000000000416E2" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416E3" data-uri="chapter03.xhtml#P70004970270000000000000000416E3" class="calibre10 pcalibre pcalibre1">movq %rax, (%rsi)</code></td>
<td id="P70004970270000000000000000416E4" data-uri="chapter03.xhtml#P70004970270000000000000000416E4" class="calibre20 pcalibre pcalibre1">Store 8 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416E5" data-uri="chapter03.xhtml#P70004970270000000000000000416E5" class="calibre20 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000034D2" title="327" data-uri="chapter03.xhtml#P70004970270000000000000000034D2" epub:type="pagebreak"></span><code id="P70004970270000000000000000416E6" data-uri="chapter03.xhtml#P70004970270000000000000000416E6" class="calibre10 pcalibre pcalibre1">int</code></td>
<td id="P70004970270000000000000000416E7" data-uri="chapter03.xhtml#P70004970270000000000000000416E7" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416E8" data-uri="chapter03.xhtml#P70004970270000000000000000416E8" class="calibre10 pcalibre pcalibre1">char</code></td>
<td id="P70004970270000000000000000416E9" data-uri="chapter03.xhtml#P70004970270000000000000000416E9" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416EA" data-uri="chapter03.xhtml#P70004970270000000000000000416EA" class="calibre10 pcalibre pcalibre1">movl (%rdi), %eax</code></td>
<td id="P70004970270000000000000000416EB" data-uri="chapter03.xhtml#P70004970270000000000000000416EB" class="calibre20 pcalibre pcalibre1">Read 4 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P70004970270000000000000000416EC" data-uri="chapter03.xhtml#P70004970270000000000000000416EC" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416ED" data-uri="chapter03.xhtml#P70004970270000000000000000416ED" class="calibre10 pcalibre pcalibre1">movb %al, (%rsi)</code></td>
<td id="P70004970270000000000000000416EE" data-uri="chapter03.xhtml#P70004970270000000000000000416EE" class="calibre20 pcalibre pcalibre1">Store low-order byte</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416EF" data-uri="chapter03.xhtml#P70004970270000000000000000416EF" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416F0" data-uri="chapter03.xhtml#P70004970270000000000000000416F0" class="calibre10 pcalibre pcalibre1">unsigned</code></td>
<td id="P70004970270000000000000000416F1" data-uri="chapter03.xhtml#P70004970270000000000000000416F1" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416F2" data-uri="chapter03.xhtml#P70004970270000000000000000416F2" class="calibre10 pcalibre pcalibre1">unsigned</code></td>
<td id="P70004970270000000000000000416F3" data-uri="chapter03.xhtml#P70004970270000000000000000416F3" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416F4" data-uri="chapter03.xhtml#P70004970270000000000000000416F4" class="calibre10 pcalibre pcalibre1">movl (%rdi), %eax</code></td>
<td id="P70004970270000000000000000416F5" data-uri="chapter03.xhtml#P70004970270000000000000000416F5" class="calibre20 pcalibre pcalibre1">Read 4 bytes</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P70004970270000000000000000416F6" data-uri="chapter03.xhtml#P70004970270000000000000000416F6" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416F7" data-uri="chapter03.xhtml#P70004970270000000000000000416F7" class="calibre10 pcalibre pcalibre1">char</code></td>
<td id="P70004970270000000000000000416F8" data-uri="chapter03.xhtml#P70004970270000000000000000416F8" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416F9" data-uri="chapter03.xhtml#P70004970270000000000000000416F9" class="calibre10 pcalibre pcalibre1">movb %al, (%rsi)</code></td>
<td id="P70004970270000000000000000416FA" data-uri="chapter03.xhtml#P70004970270000000000000000416FA" class="calibre20 pcalibre pcalibre1">Store low-order byte</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000416FB" data-uri="chapter03.xhtml#P70004970270000000000000000416FB" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416FC" data-uri="chapter03.xhtml#P70004970270000000000000000416FC" class="calibre10 pcalibre pcalibre1">char</code></td>
<td id="P70004970270000000000000000416FD" data-uri="chapter03.xhtml#P70004970270000000000000000416FD" class="calibre20 pcalibre pcalibre1"><code id="P70004970270000000000000000416FE" data-uri="chapter03.xhtml#P70004970270000000000000000416FE" class="calibre10 pcalibre pcalibre1">short</code></td>
<td id="P70004970270000000000000000416FF" data-uri="chapter03.xhtml#P70004970270000000000000000416FF" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041700" data-uri="chapter03.xhtml#P7000497027000000000000000041700" class="calibre10 pcalibre pcalibre1">movsbw (%rdi), %ax</code></td>
<td id="P7000497027000000000000000041701" data-uri="chapter03.xhtml#P7000497027000000000000000041701" class="calibre20 pcalibre pcalibre1">Read byte and sign-extend</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P7000497027000000000000000041702" data-uri="chapter03.xhtml#P7000497027000000000000000041702" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041703" data-uri="chapter03.xhtml#P7000497027000000000000000041703" class="calibre10 pcalibre pcalibre1">movw %ax, (%rsi)</code></td>
<td id="P7000497027000000000000000041704" data-uri="chapter03.xhtml#P7000497027000000000000000041704" class="calibre20 pcalibre pcalibre1">Store 2 bytes</td>
</tr>
</tbody>
</table>
</li></ul>
</section>
<section id="P70004970270000000000000000034F2" data-uri="chapter03.xhtml#P70004970270000000000000000034F2" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041705" data-uri="chapter03.xhtml#P7000497027000000000000000041705" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000002131"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.5 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000002118">189</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041706" data-uri="chapter03.xhtml#P7000497027000000000000000041706">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041707" data-uri="chapter03.xhtml#P7000497027000000000000000041707"><p id="P7000497027000000000000000041708" data-uri="chapter03.xhtml#P7000497027000000000000000041708" class="calibre13 pcalibre pcalibre1">Reverse engineering is a good way to understand systems. In this case, we want to reverse the effect of the C compiler to determine what C code gave rise to this assembly code. The best way is to run a "simulation," starting with values <code id="P7000497027000000000000000041709" data-uri="chapter03.xhtml#P7000497027000000000000000041709" class="pcalibre1 calibre8 pcalibre">x, y</code>, and <code id="P700049702700000000000000004170A" data-uri="chapter03.xhtml#P700049702700000000000000004170A" class="pcalibre1 calibre8 pcalibre">z</code> at the locations designated by pointers <code id="P700049702700000000000000004170B" data-uri="chapter03.xhtml#P700049702700000000000000004170B" class="pcalibre1 calibre8 pcalibre">xp, yp</code>, and <code id="P700049702700000000000000004170C" data-uri="chapter03.xhtml#P700049702700000000000000004170C" class="pcalibre1 calibre8 pcalibre">zp</code>, respectively. We would then get the following behavior:</p>
<pre id="P700049702700000000000000004170D" data-uri="chapter03.xhtml#P700049702700000000000000004170D" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004170E" data-uri="chapter03.xhtml#P700049702700000000000000004170E" class="calibre10 pcalibre pcalibre1">
	<i class="calibre5 pcalibre pcalibre1">void decode1(long *xp, long *yp, long *zp)</i>
	<i class="calibre5 pcalibre pcalibre1">xp in %rdi, yp in %rsi, zp in %rdx</i>
decode1:
	movq	(%rdi), %r8	<i class="calibre5 pcalibre pcalibre1">Get x = *xp</i>
	movq	(%rsi), %rcx	<i class="calibre5 pcalibre pcalibre1">Get y = *yp</i>
	movq	(%rdx), %rax	<i class="calibre5 pcalibre pcalibre1">Get z = *zp</i>
	movq	%r8, (%rsi)	<i class="calibre5 pcalibre pcalibre1">Store x at yp</i>
	movq	%rcx, (%rdx)	<i class="calibre5 pcalibre pcalibre1">Store y at zp</i>
	movq	%rax, (%rdi)	<i class="calibre5 pcalibre pcalibre1">Store z at xp</i>
	ret
</code></pre>
<p class="calibre13 pcalibre pcalibre1" id="P700049702700000000000000004170F" data-uri="chapter03.xhtml#P700049702700000000000000004170F">From this, we can generate the following C code:</p>
<pre id="P7000497027000000000000000041710" data-uri="chapter03.xhtml#P7000497027000000000000000041710" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041711" data-uri="chapter03.xhtml#P7000497027000000000000000041711" class="calibre10 pcalibre pcalibre1">
void decode1(long *xp, long *yp, long *zp)
{
	long x = *xp;
	long y = *yp;
	long z = *zp;

	*yp = x;
	*zp = y;
	*xp = z;
}
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003500" data-uri="chapter03.xhtml#P7000497027000000000000000003500" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041712" data-uri="chapter03.xhtml#P7000497027000000000000000041712" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P70004970270000000000000000021DE"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.6 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P70004970270000000000000000021F7">192</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041713" data-uri="chapter03.xhtml#P7000497027000000000000000041713">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041714" data-uri="chapter03.xhtml#P7000497027000000000000000041714"><p id="P7000497027000000000000000041715" data-uri="chapter03.xhtml#P7000497027000000000000000041715" class="calibre13 pcalibre pcalibre1">This exercise demonstrates the versatility of the <code id="P7000497027000000000000000041716" data-uri="chapter03.xhtml#P7000497027000000000000000041716" class="pcalibre1 calibre8 pcalibre">leaq</code> instruction and gives you more practice in deciphering the different operand forms. Although the operand forms are classified as type "Memory" in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001F3C.xhtml#P7000497027000000000000000001F57"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">3.3</span></a>, no memory access occurs.</p>
<table id="P7000497027000000000000000041717" data-uri="chapter03.xhtml#P7000497027000000000000000041717" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P7000497027000000000000000041718" data-uri="chapter03.xhtml#P7000497027000000000000000041718" class="calibre18 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003508" title="328" data-uri="chapter03.xhtml#P7000497027000000000000000003508" epub:type="pagebreak"></span>Instruction</th>
<th id="P7000497027000000000000000041719" data-uri="chapter03.xhtml#P7000497027000000000000000041719" class="calibre18 pcalibre pcalibre1">Result</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004171A" data-uri="chapter03.xhtml#P700049702700000000000000004171A" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004171B" data-uri="chapter03.xhtml#P700049702700000000000000004171B" class="calibre10 pcalibre pcalibre1">leaq 6(%rax), %rdx</code></td>
<td id="P700049702700000000000000004171C" data-uri="chapter03.xhtml#P700049702700000000000000004171C" class="calibre20 pcalibre pcalibre1">6+<var class="calibre5 pcalibre pcalibre1">x</var></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004171D" data-uri="chapter03.xhtml#P700049702700000000000000004171D" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004171E" data-uri="chapter03.xhtml#P700049702700000000000000004171E" class="calibre10 pcalibre pcalibre1">leaq (%rax,%rcx), %rdx</code></td>
<td id="P700049702700000000000000004171F" data-uri="chapter03.xhtml#P700049702700000000000000004171F" class="calibre20 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">x</var> +<var class="calibre5 pcalibre pcalibre1">y</var></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041720" data-uri="chapter03.xhtml#P7000497027000000000000000041720" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041721" data-uri="chapter03.xhtml#P7000497027000000000000000041721" class="calibre10 pcalibre pcalibre1">leaq (%rax,%rcx,4), %rdx</code></td>
<td id="P7000497027000000000000000041722" data-uri="chapter03.xhtml#P7000497027000000000000000041722" class="calibre20 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">x</var> + 4<var class="calibre5 pcalibre pcalibre1">y</var></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041723" data-uri="chapter03.xhtml#P7000497027000000000000000041723" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041724" data-uri="chapter03.xhtml#P7000497027000000000000000041724" class="calibre10 pcalibre pcalibre1">leaq 7(%rax,%rax,8), %rdx</code></td>
<td id="P7000497027000000000000000041725" data-uri="chapter03.xhtml#P7000497027000000000000000041725" class="calibre20 pcalibre pcalibre1">7 + 9<var class="calibre5 pcalibre pcalibre1">x</var></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041726" data-uri="chapter03.xhtml#P7000497027000000000000000041726" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041727" data-uri="chapter03.xhtml#P7000497027000000000000000041727" class="calibre10 pcalibre pcalibre1">leaq 0xA(,%rcx,4), %rdx</code></td>
<td id="P7000497027000000000000000041728" data-uri="chapter03.xhtml#P7000497027000000000000000041728" class="calibre20 pcalibre pcalibre1">10 + 4<var class="calibre5 pcalibre pcalibre1">y</var></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041729" data-uri="chapter03.xhtml#P7000497027000000000000000041729" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004172A" data-uri="chapter03.xhtml#P700049702700000000000000004172A" class="calibre10 pcalibre pcalibre1">leaq 9(%rax,%rcx,2), %rdx</code></td>
<td id="P700049702700000000000000004172B" data-uri="chapter03.xhtml#P700049702700000000000000004172B" class="calibre20 pcalibre pcalibre1">9 +<var class="calibre5 pcalibre pcalibre1">x</var> + 2<var class="calibre5 pcalibre pcalibre1">y</var></td>
</tr>
</tbody>
</table>
</li></ul>
</section>
<section id="P700049702700000000000000000351C" data-uri="chapter03.xhtml#P700049702700000000000000000351C" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004172C" data-uri="chapter03.xhtml#P700049702700000000000000004172C" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002208"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.7 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P70004970270000000000000000021FE">193</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P700049702700000000000000004172D" data-uri="chapter03.xhtml#P700049702700000000000000004172D">
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004172E" data-uri="chapter03.xhtml#P700049702700000000000000004172E"><p id="P700049702700000000000000004172F" data-uri="chapter03.xhtml#P700049702700000000000000004172F" class="calibre13 pcalibre pcalibre1">Again, reverse engineering proves to be a useful way to learn the relationship between C code and the generated assembly code.</p>
<p id="P7000497027000000000000000041730" data-uri="chapter03.xhtml#P7000497027000000000000000041730" class="calibre15 pcalibre pcalibre1">The best way to solve problems of this type is to annotate the lines of assembly code with information about the operations being performed. Here is a sample:</p>
<pre id="P7000497027000000000000000041731" data-uri="chapter03.xhtml#P7000497027000000000000000041731" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041732" data-uri="chapter03.xhtml#P7000497027000000000000000041732" class="calibre10 pcalibre pcalibre1">
	<i class="calibre5 pcalibre pcalibre1">long scale2(long x, long y, long z)</i>
	<i class="calibre5 pcalibre pcalibre1">x in %rdi, y in %rsi, z in %rdx</i>
scale2:
  leaq	(%rdi,%rdi,4), %rax	<i class="calibre5 pcalibre pcalibre1">5*x</i>
  leaq	(%rax,%rsi,2), %rax	<i class="calibre5 pcalibre pcalibre1">5*x+2*y</i>
  leaq	(%rax,%rdx,8), %rax	<i class="calibre5 pcalibre pcalibre1">5*x+2*y+8*z</i>
  ret
</code></pre>
<p class="calibre13 pcalibre pcalibre1" id="P7000497027000000000000000041733" data-uri="chapter03.xhtml#P7000497027000000000000000041733">From this, it is easy to generate the missing expression:</p>
<pre id="P7000497027000000000000000041734" data-uri="chapter03.xhtml#P7000497027000000000000000041734" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041735" data-uri="chapter03.xhtml#P7000497027000000000000000041735" class="calibre10 pcalibre pcalibre1">
long t = 5 * x + 2 * y + 8 * z;
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003527" data-uri="chapter03.xhtml#P7000497027000000000000000003527" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041736" data-uri="chapter03.xhtml#P7000497027000000000000000041736" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002220"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.8 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002216">194</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041737" data-uri="chapter03.xhtml#P7000497027000000000000000041737">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041738" data-uri="chapter03.xhtml#P7000497027000000000000000041738"><p id="P7000497027000000000000000041739" data-uri="chapter03.xhtml#P7000497027000000000000000041739" class="calibre13 pcalibre pcalibre1">This problem gives you a chance to test your understanding of operands and the arithmetic instructions. The instruction sequence is designed so that the result of each instruction does not affect the behavior of subsequent ones.</p>
<table id="P700049702700000000000000004173A" data-uri="chapter03.xhtml#P700049702700000000000000004173A" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000004173B" data-uri="chapter03.xhtml#P700049702700000000000000004173B" class="calibre18 pcalibre pcalibre1">Instruction</th>
<th id="P700049702700000000000000004173C" data-uri="chapter03.xhtml#P700049702700000000000000004173C" class="calibre18 pcalibre pcalibre1">Destination</th>
<th id="P700049702700000000000000004173D" data-uri="chapter03.xhtml#P700049702700000000000000004173D" class="calibre18 pcalibre pcalibre1">Value</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004173E" data-uri="chapter03.xhtml#P700049702700000000000000004173E" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004173F" data-uri="chapter03.xhtml#P700049702700000000000000004173F" class="calibre10 pcalibre pcalibre1">addq %rcx,(%rax)</code></td>
<td id="P7000497027000000000000000041740" data-uri="chapter03.xhtml#P7000497027000000000000000041740" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041741" data-uri="chapter03.xhtml#P7000497027000000000000000041741" class="calibre10 pcalibre pcalibre1">0x100</code></td>
<td id="P7000497027000000000000000041742" data-uri="chapter03.xhtml#P7000497027000000000000000041742" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041743" data-uri="chapter03.xhtml#P7000497027000000000000000041743" class="calibre10 pcalibre pcalibre1">0x100</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041744" data-uri="chapter03.xhtml#P7000497027000000000000000041744" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041745" data-uri="chapter03.xhtml#P7000497027000000000000000041745" class="calibre10 pcalibre pcalibre1">subq %rdx,8(%rax)</code></td>
<td id="P7000497027000000000000000041746" data-uri="chapter03.xhtml#P7000497027000000000000000041746" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041747" data-uri="chapter03.xhtml#P7000497027000000000000000041747" class="calibre10 pcalibre pcalibre1">0x108</code></td>
<td id="P7000497027000000000000000041748" data-uri="chapter03.xhtml#P7000497027000000000000000041748" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041749" data-uri="chapter03.xhtml#P7000497027000000000000000041749" class="calibre10 pcalibre pcalibre1">0xA8</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004174A" data-uri="chapter03.xhtml#P700049702700000000000000004174A" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004174B" data-uri="chapter03.xhtml#P700049702700000000000000004174B" class="calibre10 pcalibre pcalibre1">imulq $16,(%rax,%rdx,8)</code></td>
<td id="P700049702700000000000000004174C" data-uri="chapter03.xhtml#P700049702700000000000000004174C" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004174D" data-uri="chapter03.xhtml#P700049702700000000000000004174D" class="calibre10 pcalibre pcalibre1">0x118</code></td>
<td id="P700049702700000000000000004174E" data-uri="chapter03.xhtml#P700049702700000000000000004174E" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004174F" data-uri="chapter03.xhtml#P700049702700000000000000004174F" class="calibre10 pcalibre pcalibre1">0x110</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041750" data-uri="chapter03.xhtml#P7000497027000000000000000041750" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041751" data-uri="chapter03.xhtml#P7000497027000000000000000041751" class="calibre10 pcalibre pcalibre1">incq 16(%rax)</code></td>
<td id="P7000497027000000000000000041752" data-uri="chapter03.xhtml#P7000497027000000000000000041752" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041753" data-uri="chapter03.xhtml#P7000497027000000000000000041753" class="calibre10 pcalibre pcalibre1">0x110</code></td>
<td id="P7000497027000000000000000041754" data-uri="chapter03.xhtml#P7000497027000000000000000041754" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041755" data-uri="chapter03.xhtml#P7000497027000000000000000041755" class="calibre10 pcalibre pcalibre1">0x14</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041756" data-uri="chapter03.xhtml#P7000497027000000000000000041756" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041757" data-uri="chapter03.xhtml#P7000497027000000000000000041757" class="calibre10 pcalibre pcalibre1">decq %rcx</code></td>
<td id="P7000497027000000000000000041758" data-uri="chapter03.xhtml#P7000497027000000000000000041758" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041759" data-uri="chapter03.xhtml#P7000497027000000000000000041759" class="calibre10 pcalibre pcalibre1">%rcx</code></td>
<td id="P700049702700000000000000004175A" data-uri="chapter03.xhtml#P700049702700000000000000004175A" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004175B" data-uri="chapter03.xhtml#P700049702700000000000000004175B" class="calibre10 pcalibre pcalibre1">0x0</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004175C" data-uri="chapter03.xhtml#P700049702700000000000000004175C" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004175D" data-uri="chapter03.xhtml#P700049702700000000000000004175D" class="calibre10 pcalibre pcalibre1">subq %rdx,%rax</code></td>
<td id="P700049702700000000000000004175E" data-uri="chapter03.xhtml#P700049702700000000000000004175E" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004175F" data-uri="chapter03.xhtml#P700049702700000000000000004175F" class="calibre10 pcalibre pcalibre1">%rax</code></td>
<td id="P7000497027000000000000000041760" data-uri="chapter03.xhtml#P7000497027000000000000000041760" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000041761" data-uri="chapter03.xhtml#P7000497027000000000000000041761" class="calibre10 pcalibre pcalibre1">0xFD</code></td>
</tr>
</tbody>
</table>
</li></ul>
</section>
<section id="P7000497027000000000000000003554" data-uri="chapter03.xhtml#P7000497027000000000000000003554" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041762" data-uri="chapter03.xhtml#P7000497027000000000000000041762" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002273"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.9 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002267">195</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041763" data-uri="chapter03.xhtml#P7000497027000000000000000041763">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041764" data-uri="chapter03.xhtml#P7000497027000000000000000041764"><p id="P7000497027000000000000000041765" data-uri="chapter03.xhtml#P7000497027000000000000000041765" class="calibre13 pcalibre pcalibre1">This exercise gives you a chance to generate a little bit of assembly code. The solution code was generated by <span class="smallcaps pcalibre pcalibre1">gcc</span>. By loading parameter <code id="P7000497027000000000000000041766" data-uri="chapter03.xhtml#P7000497027000000000000000041766" class="pcalibre1 calibre8 pcalibre">n</code> in register <code id="P7000497027000000000000000041767" data-uri="chapter03.xhtml#P7000497027000000000000000041767" class="pcalibre1 calibre8 pcalibre">%ecx</code>, it can then use byte register <code id="P7000497027000000000000000041768" data-uri="chapter03.xhtml#P7000497027000000000000000041768" class="pcalibre1 calibre8 pcalibre">%cl</code> to specify the shift amount for the <code id="P7000497027000000000000000041769" data-uri="chapter03.xhtml#P7000497027000000000000000041769" class="pcalibre1 calibre8 pcalibre">sarq</code> instruction. It might seem odd to use a <code id="P700049702700000000000000004176A" data-uri="chapter03.xhtml#P700049702700000000000000004176A" class="pcalibre1 calibre8 pcalibre">movl</code> instruction, given that <code id="P700049702700000000000000004176B" data-uri="chapter03.xhtml#P700049702700000000000000004176B" class="pcalibre1 calibre8 pcalibre">n</code> is eight bytes long, but keep in mind that only the least significant byte is required to specify the shift amount.</p>
<pre id="P700049702700000000000000004176C" data-uri="chapter03.xhtml#P700049702700000000000000004176C" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004176D" data-uri="chapter03.xhtml#P700049702700000000000000004176D" class="calibre10 pcalibre pcalibre1">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003561" title="329" data-uri="chapter03.xhtml#P7000497027000000000000000003561" epub:type="pagebreak"></span>	<i class="calibre5 pcalibre pcalibre1">long shift_left4_rightn(long x, long n)</i>
	<i class="calibre5 pcalibre pcalibre1">x in %rdi, n in %rsi</i>
shift_left4_rightn:
	movq	%rdi, %rax	<i class="calibre5 pcalibre pcalibre1">Get x</i>
	salq	$4, %rax	<i class="calibre5 pcalibre pcalibre1">x &lt;&lt;= 4</i>
	movl	%esi, %ecx	<i class="calibre5 pcalibre pcalibre1">Get n (4 bytes)</i>
	sarq	%cl, %rax	<i class="calibre5 pcalibre pcalibre1">x &gt;&gt;= n</i>
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003562" data-uri="chapter03.xhtml#P7000497027000000000000000003562" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004176E" data-uri="chapter03.xhtml#P700049702700000000000000004176E" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P70004970270000000000000000022A1"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.10 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002286">196</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P700049702700000000000000004176F" data-uri="chapter03.xhtml#P700049702700000000000000004176F">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041770" data-uri="chapter03.xhtml#P7000497027000000000000000041770"><p id="P7000497027000000000000000041771" data-uri="chapter03.xhtml#P7000497027000000000000000041771" class="calibre13 pcalibre pcalibre1">This problem is fairly straightforward, since the assembly code follows the structure of the C code closely.</p>
<pre id="P7000497027000000000000000041772" data-uri="chapter03.xhtml#P7000497027000000000000000041772" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041773" data-uri="chapter03.xhtml#P7000497027000000000000000041773" class="calibre10 pcalibre pcalibre1">
long t1 = x | y;
long t2 = t1 &lt;&lt; 3;
long t3 = ~t2;
long t4 = z-t3;
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003569" data-uri="chapter03.xhtml#P7000497027000000000000000003569" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041774" data-uri="chapter03.xhtml#P7000497027000000000000000041774" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P70004970270000000000000000022AE"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.11 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P70004970270000000000000000022A9">197</a>)</h1></header>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000041775" data-uri="chapter03.xhtml#P7000497027000000000000000041775">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041776" data-uri="chapter03.xhtml#P7000497027000000000000000041776"><p id="P7000497027000000000000000041777" data-uri="chapter03.xhtml#P7000497027000000000000000041777" class="pcalibre calibre3 pcalibre1">This instruction is used to set register <code id="P7000497027000000000000000041778" data-uri="chapter03.xhtml#P7000497027000000000000000041778" class="pcalibre1 calibre8 pcalibre">%rdx</code> to zero, exploiting the property that <var class="calibre5 pcalibre pcalibre1">x</var> ^ <var class="calibre5 pcalibre pcalibre1">x</var> = 0 for any <var class="calibre5 pcalibre pcalibre1">x</var>. It corresponds to the C statement <code id="P7000497027000000000000000041779" data-uri="chapter03.xhtml#P7000497027000000000000000041779" class="pcalibre1 calibre8 pcalibre">x</code> = 0.</p></li>
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004177A" data-uri="chapter03.xhtml#P700049702700000000000000004177A"><p id="P700049702700000000000000004177B" data-uri="chapter03.xhtml#P700049702700000000000000004177B" class="pcalibre calibre3 pcalibre1">A more direct way of setting register <code id="P700049702700000000000000004177C" data-uri="chapter03.xhtml#P700049702700000000000000004177C" class="pcalibre1 calibre8 pcalibre">%rdx</code> to zero is with the instruction <code id="P700049702700000000000000004177D" data-uri="chapter03.xhtml#P700049702700000000000000004177D" class="pcalibre1 calibre8 pcalibre">movq $0,%rdx.</code></p></li>
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004177E" data-uri="chapter03.xhtml#P700049702700000000000000004177E"><p id="P700049702700000000000000004177F" data-uri="chapter03.xhtml#P700049702700000000000000004177F" class="pcalibre calibre3 pcalibre1">Assembling and disassembling this code, however, we find that the version with <code id="P7000497027000000000000000041780" data-uri="chapter03.xhtml#P7000497027000000000000000041780" class="pcalibre1 calibre8 pcalibre">xorq</code> requires only 3 bytes, while the version with <code id="P7000497027000000000000000041781" data-uri="chapter03.xhtml#P7000497027000000000000000041781" class="pcalibre1 calibre8 pcalibre">movq</code> requires 7. Other ways to set <code id="P7000497027000000000000000041782" data-uri="chapter03.xhtml#P7000497027000000000000000041782" class="pcalibre1 calibre8 pcalibre">%rdx</code> to zero rely on the property that any instruction that updates the lower 4 bytes will cause the high-order bytes to be set to zero. Thus, we could use either <code id="P7000497027000000000000000041783" data-uri="chapter03.xhtml#P7000497027000000000000000041783" class="pcalibre1 calibre8 pcalibre">xorl %edx,%edx</code> (2 bytes) or <code id="P7000497027000000000000000041784" data-uri="chapter03.xhtml#P7000497027000000000000000041784" class="pcalibre1 calibre8 pcalibre">movl $0,%edx</code> (5 bytes).</p></li>
</ol>
</section>
<section id="P700049702700000000000000000357B" data-uri="chapter03.xhtml#P700049702700000000000000000357B" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041785" data-uri="chapter03.xhtml#P7000497027000000000000000041785" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002330"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.12 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002185.xhtml#P7000497027000000000000000002324">200</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041786" data-uri="chapter03.xhtml#P7000497027000000000000000041786">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041787" data-uri="chapter03.xhtml#P7000497027000000000000000041787"><p id="P7000497027000000000000000041788" data-uri="chapter03.xhtml#P7000497027000000000000000041788" class="calibre13 pcalibre pcalibre1">We can simply replace the <code id="P7000497027000000000000000041789" data-uri="chapter03.xhtml#P7000497027000000000000000041789" class="pcalibre1 calibre8 pcalibre">cqto</code> instruction with one that sets register <code id="P700049702700000000000000004178A" data-uri="chapter03.xhtml#P700049702700000000000000004178A" class="pcalibre1 calibre8 pcalibre">%rdx</code> to <code id="P700049702700000000000000004178B" data-uri="chapter03.xhtml#P700049702700000000000000004178B" class="pcalibre1 calibre8 pcalibre">zero</code>, and use <code id="P700049702700000000000000004178C" data-uri="chapter03.xhtml#P700049702700000000000000004178C" class="pcalibre1 calibre8 pcalibre">divq</code> rather than <code id="P700049702700000000000000004178D" data-uri="chapter03.xhtml#P700049702700000000000000004178D" class="pcalibre1 calibre8 pcalibre">idivq</code> as our division instruction, yielding the following code:</p>
<pre id="P700049702700000000000000004178E" data-uri="chapter03.xhtml#P700049702700000000000000004178E" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004178F" data-uri="chapter03.xhtml#P700049702700000000000000004178F" class="calibre10 pcalibre pcalibre1">
	<i class="calibre5 pcalibre pcalibre1">void uremdiv(unsigned long x, unsigned long y</i>, <i class="calibre5 pcalibre pcalibre1">unsigned long *qp, unsigned long *rp)</i>
	<i class="calibre5 pcalibre pcalibre1">x in %rdi, y in %rsi, qp in %rdx, rp in %rcx</i>
1	uremdiv:
2	  movq	%rdx, %r8	<i class="calibre5 pcalibre pcalibre1">Copy qp</i>
3	  movq	%rdi, %rax	<i class="calibre5 pcalibre pcalibre1">Move x to lower 8 bytes of dividend</i>
4	  movl	$0, %edx	<i class="calibre5 pcalibre pcalibre1">Set upper 8 bytes of dividend to 0</i>
5	  divq	%rsi		<i class="calibre5 pcalibre pcalibre1">Divide by y</i>
6	  movq	%rax, (%r8)	<i class="calibre5 pcalibre pcalibre1">Store quotient at qp</i>
7	  movq	%rdx, (%rcx)	<i class="calibre5 pcalibre pcalibre1">Store remainder at rp</i>
8	  ret
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003587" data-uri="chapter03.xhtml#P7000497027000000000000000003587" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041790" data-uri="chapter03.xhtml#P7000497027000000000000000041790" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003589" title="330" data-uri="chapter03.xhtml#P7000497027000000000000000003589" epub:type="pagebreak"></span><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P7000497027000000000000000002406"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.13 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P70004970270000000000000000023FC">204</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041791" data-uri="chapter03.xhtml#P7000497027000000000000000041791">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041792" data-uri="chapter03.xhtml#P7000497027000000000000000041792"><p id="P7000497027000000000000000041793" data-uri="chapter03.xhtml#P7000497027000000000000000041793" class="calibre13 pcalibre pcalibre1">It is important to understand that assembly code does not keep track of the type of a program value. Instead, the different instructions determine the operand sizes and whether they are signed or unsigned. When mapping from instruction sequences back to C code, we must do a bit of detective work to infer the data types of the program values.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000041794" data-uri="chapter03.xhtml#P7000497027000000000000000041794">
<li id="P7000497027000000000000000041795" data-uri="chapter03.xhtml#P7000497027000000000000000041795" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041796" data-uri="chapter03.xhtml#P7000497027000000000000000041796" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P7000497027000000000000000041797" data-uri="chapter03.xhtml#P7000497027000000000000000041797" class="pcalibre1 calibre8 pcalibre">l</code>' and the register identifiers indicate 32-bit operands, while the comparison is for a two's-complement &lt;. We can infer that <code id="P7000497027000000000000000041798" data-uri="chapter03.xhtml#P7000497027000000000000000041798" class="pcalibre1 calibre8 pcalibre">data_t</code> must be <code id="P7000497027000000000000000041799" data-uri="chapter03.xhtml#P7000497027000000000000000041799" class="pcalibre1 calibre8 pcalibre">int.</code></p></li>
<li id="P700049702700000000000000004179A" data-uri="chapter03.xhtml#P700049702700000000000000004179A" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004179B" data-uri="chapter03.xhtml#P700049702700000000000000004179B" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P700049702700000000000000004179C" data-uri="chapter03.xhtml#P700049702700000000000000004179C" class="pcalibre1 calibre8 pcalibre">w</code>' and the register identifiers indicate 16-bit operands, while the comparison is for a two's-complement &gt;=. We can infer that <code id="P700049702700000000000000004179D" data-uri="chapter03.xhtml#P700049702700000000000000004179D" class="pcalibre1 calibre8 pcalibre">data_t</code> must be <code id="P700049702700000000000000004179E" data-uri="chapter03.xhtml#P700049702700000000000000004179E" class="pcalibre1 calibre8 pcalibre">short.</code></p></li>
<li id="P700049702700000000000000004179F" data-uri="chapter03.xhtml#P700049702700000000000000004179F" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417A0" data-uri="chapter03.xhtml#P70004970270000000000000000417A0" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P70004970270000000000000000417A1" data-uri="chapter03.xhtml#P70004970270000000000000000417A1" class="pcalibre1 calibre8 pcalibre">b</code>' and the register identifiers indicate 8-bit operands, while the comparison is for an unsigned &lt;=. We can infer that <code id="P70004970270000000000000000417A2" data-uri="chapter03.xhtml#P70004970270000000000000000417A2" class="pcalibre1 calibre8 pcalibre">data_t</code> must be <code id="P70004970270000000000000000417A3" data-uri="chapter03.xhtml#P70004970270000000000000000417A3" class="pcalibre1 calibre8 pcalibre">unsigned char.</code></p></li>
<li id="P70004970270000000000000000417A4" data-uri="chapter03.xhtml#P70004970270000000000000000417A4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417A5" data-uri="chapter03.xhtml#P70004970270000000000000000417A5" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P70004970270000000000000000417A6" data-uri="chapter03.xhtml#P70004970270000000000000000417A6" class="pcalibre1 calibre8 pcalibre">q</code>' and the register identifiers indicate 64-bit operands, while the comparison is for !=, which is the same whether the arguments are signed, unsigned, or pointers. We can infer that <code id="P70004970270000000000000000417A7" data-uri="chapter03.xhtml#P70004970270000000000000000417A7" class="pcalibre1 calibre8 pcalibre">data_t</code> could be either <code id="P70004970270000000000000000417A8" data-uri="chapter03.xhtml#P70004970270000000000000000417A8" class="pcalibre1 calibre8 pcalibre">long, unsigned long</code>, or some form of pointer.</p></li>
</ol></li></ul>
</section>
<section id="P70004970270000000000000000035A2" data-uri="chapter03.xhtml#P70004970270000000000000000035A2" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000417A9" data-uri="chapter03.xhtml#P70004970270000000000000000417A9" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000242B"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.14 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P7000497027000000000000000002424">205</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000417AA" data-uri="chapter03.xhtml#P70004970270000000000000000417AA">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000417AB" data-uri="chapter03.xhtml#P70004970270000000000000000417AB"><p id="P70004970270000000000000000417AC" data-uri="chapter03.xhtml#P70004970270000000000000000417AC" class="calibre13 pcalibre pcalibre1">This problem is similar to <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P7000497027000000000000000002406"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">3.13</span></a>, except that it involves <span class="smallcaps pcalibre pcalibre1">test </span>instructions rather than <span class="smallcaps pcalibre pcalibre1">cmp </span>instructions.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P70004970270000000000000000417AD" data-uri="chapter03.xhtml#P70004970270000000000000000417AD">
<li id="P70004970270000000000000000417AE" data-uri="chapter03.xhtml#P70004970270000000000000000417AE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417AF" data-uri="chapter03.xhtml#P70004970270000000000000000417AF" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P70004970270000000000000000417B0" data-uri="chapter03.xhtml#P70004970270000000000000000417B0" class="pcalibre1 calibre8 pcalibre">q</code>' and the register identifiers indicate a 64-bit operand, while the comparison is for &gt;=, which must be signed. We can infer that <code id="P70004970270000000000000000417B1" data-uri="chapter03.xhtml#P70004970270000000000000000417B1" class="pcalibre1 calibre8 pcalibre">data_t</code> must be <code id="P70004970270000000000000000417B2" data-uri="chapter03.xhtml#P70004970270000000000000000417B2" class="pcalibre1 calibre8 pcalibre">long</code>.</p></li>
<li id="P70004970270000000000000000417B3" data-uri="chapter03.xhtml#P70004970270000000000000000417B3" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417B4" data-uri="chapter03.xhtml#P70004970270000000000000000417B4" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P70004970270000000000000000417B5" data-uri="chapter03.xhtml#P70004970270000000000000000417B5" class="pcalibre1 calibre8 pcalibre">w</code>' and the register identifier indicate a 16-bit operand, while the comparison is for ==, which is the same for signed or unsigned. We can infer that <code id="P70004970270000000000000000417B6" data-uri="chapter03.xhtml#P70004970270000000000000000417B6" class="pcalibre1 calibre8 pcalibre">data_t</code> must be either <code id="P70004970270000000000000000417B7" data-uri="chapter03.xhtml#P70004970270000000000000000417B7" class="pcalibre1 calibre8 pcalibre">short or unsigned short.</code></p></li>
<li id="P70004970270000000000000000417B8" data-uri="chapter03.xhtml#P70004970270000000000000000417B8" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417B9" data-uri="chapter03.xhtml#P70004970270000000000000000417B9" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P70004970270000000000000000417BA" data-uri="chapter03.xhtml#P70004970270000000000000000417BA" class="pcalibre1 calibre8 pcalibre">b</code>' and the register identifier indicate an 8-bit operand, while the comparison is for unsigned &gt;. We can infer that <code id="P70004970270000000000000000417BB" data-uri="chapter03.xhtml#P70004970270000000000000000417BB" class="pcalibre1 calibre8 pcalibre">data_t</code> must be <code id="P70004970270000000000000000417BC" data-uri="chapter03.xhtml#P70004970270000000000000000417BC" class="pcalibre1 calibre8 pcalibre">unsigned char.</code></p></li>
<li id="P70004970270000000000000000417BD" data-uri="chapter03.xhtml#P70004970270000000000000000417BD" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417BE" data-uri="chapter03.xhtml#P70004970270000000000000000417BE" class="calibre13 pcalibre pcalibre1">The suffix `<code id="P70004970270000000000000000417BF" data-uri="chapter03.xhtml#P70004970270000000000000000417BF" class="pcalibre1 calibre8 pcalibre">l</code>' and the register identifier indicate 32-bit operands, while the comparison is for &lt;. We can infer that <code id="P70004970270000000000000000417C0" data-uri="chapter03.xhtml#P70004970270000000000000000417C0" class="pcalibre1 calibre8 pcalibre">data_t</code> must be <code id="P70004970270000000000000000417C1" data-uri="chapter03.xhtml#P70004970270000000000000000417C1" class="pcalibre1 calibre8 pcalibre">int.</code></p></li>
</ol></li></ul>
</section>
<section id="P70004970270000000000000000035BC" data-uri="chapter03.xhtml#P70004970270000000000000000035BC" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000417C2" data-uri="chapter03.xhtml#P70004970270000000000000000417C2" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P70004970270000000000000000024F9"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.15 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P70004970270000000000000000024FB">209</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000417C3" data-uri="chapter03.xhtml#P70004970270000000000000000417C3">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000417C4" data-uri="chapter03.xhtml#P70004970270000000000000000417C4"><p id="P70004970270000000000000000417C5" data-uri="chapter03.xhtml#P70004970270000000000000000417C5" class="calibre13 pcalibre pcalibre1">This exercise requires you to examine disassembled code in detail and reason about the encodings for jump targets. It also gives you practice in hexadecimal arithmetic.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P70004970270000000000000000417C6" data-uri="chapter03.xhtml#P70004970270000000000000000417C6">
<li id="P70004970270000000000000000417C7" data-uri="chapter03.xhtml#P70004970270000000000000000417C7" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417C8" data-uri="chapter03.xhtml#P70004970270000000000000000417C8" class="calibre13 pcalibre pcalibre1">The <code id="P70004970270000000000000000417C9" data-uri="chapter03.xhtml#P70004970270000000000000000417C9" class="pcalibre1 calibre8 pcalibre">je</code> instruction has as its target <code id="P70004970270000000000000000417CA" data-uri="chapter03.xhtml#P70004970270000000000000000417CA" class="pcalibre1 calibre8 pcalibre">0x4003fc + 0x02.</code> As the original disassembled code shows, this is <code id="P70004970270000000000000000417CB" data-uri="chapter03.xhtml#P70004970270000000000000000417CB" class="pcalibre1 calibre8 pcalibre">0x4003fe:</code></p>
<pre id="P70004970270000000000000000417CC" data-uri="chapter03.xhtml#P70004970270000000000000000417CC" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417CD" data-uri="chapter03.xhtml#P70004970270000000000000000417CD" class="calibre10 pcalibre pcalibre1">
4003fa:7402		je	4003fe
4003fc:ffd0		callq	*%rax
</code></pre>
</li>
<li id="P70004970270000000000000000417CE" data-uri="chapter03.xhtml#P70004970270000000000000000417CE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417CF" data-uri="chapter03.xhtml#P70004970270000000000000000417CF" class="calibre13 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000035CB" title="331" data-uri="chapter03.xhtml#P70004970270000000000000000035CB" epub:type="pagebreak"></span>The <code id="P70004970270000000000000000417D0" data-uri="chapter03.xhtml#P70004970270000000000000000417D0" class="pcalibre1 calibre8 pcalibre">je</code> instruction has as its target <code id="P70004970270000000000000000417D1" data-uri="chapter03.xhtml#P70004970270000000000000000417D1" class="pcalibre1 calibre8 pcalibre">0x0x400431</code> – 12 (since <code id="P70004970270000000000000000417D2" data-uri="chapter03.xhtml#P70004970270000000000000000417D2" class="pcalibre1 calibre8 pcalibre">0xf4</code> is the 1-byte two's-complement representation of – 12). As the original disassembled code shows, this is <code id="P70004970270000000000000000417D3" data-uri="chapter03.xhtml#P70004970270000000000000000417D3" class="pcalibre1 calibre8 pcalibre">0x400425:</code></p>
<pre id="P70004970270000000000000000417D4" data-uri="chapter03.xhtml#P70004970270000000000000000417D4" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417D5" data-uri="chapter03.xhtml#P70004970270000000000000000417D5" class="calibre10 pcalibre pcalibre1">
40042f:74f4		je	400425
400431: 5d		pop	%rbp
</code></pre>
</li>
<li id="P70004970270000000000000000417D6" data-uri="chapter03.xhtml#P70004970270000000000000000417D6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417D7" data-uri="chapter03.xhtml#P70004970270000000000000000417D7" class="calibre13 pcalibre pcalibre1">According to the annotation produced by the disassembler, the jump target is at absolute address <code id="P70004970270000000000000000417D8" data-uri="chapter03.xhtml#P70004970270000000000000000417D8" class="pcalibre1 calibre8 pcalibre">0x400547</code>. According to the byte encoding, this must be at an address <code id="P70004970270000000000000000417D9" data-uri="chapter03.xhtml#P70004970270000000000000000417D9" class="pcalibre1 calibre8 pcalibre">0x2</code> bytes beyond that of the pop instruction. Subtracting these gives address <code id="P70004970270000000000000000417DA" data-uri="chapter03.xhtml#P70004970270000000000000000417DA" class="pcalibre1 calibre8 pcalibre">0x400545</code>. Noting that the encoding of the <code id="P70004970270000000000000000417DB" data-uri="chapter03.xhtml#P70004970270000000000000000417DB" class="pcalibre1 calibre8 pcalibre">ja</code> instruction requires 2 bytes, it must be located at address <code id="P70004970270000000000000000417DC" data-uri="chapter03.xhtml#P70004970270000000000000000417DC" class="pcalibre1 calibre8 pcalibre">0x400543</code>. These are confirmed by examining the original disassembly:</p>
<pre id="P70004970270000000000000000417DD" data-uri="chapter03.xhtml#P70004970270000000000000000417DD" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417DE" data-uri="chapter03.xhtml#P70004970270000000000000000417DE" class="calibre10 pcalibre pcalibre1">
400543:77 02	ja	400547
400545: 5d	pop	%rbp
</code></pre>
</li>
<li id="P70004970270000000000000000417DF" data-uri="chapter03.xhtml#P70004970270000000000000000417DF" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417E0" data-uri="chapter03.xhtml#P70004970270000000000000000417E0" class="calibre13 pcalibre pcalibre1">Reading the bytes in reverse order, we can see that the target offset is <code id="P70004970270000000000000000417E1" data-uri="chapter03.xhtml#P70004970270000000000000000417E1" class="pcalibre1 calibre8 pcalibre">0xffffff73</code>, or decimal -141. Adding this to <code id="P70004970270000000000000000417E2" data-uri="chapter03.xhtml#P70004970270000000000000000417E2" class="pcalibre1 calibre8 pcalibre">0x0x4005ed</code> (the address of the nop instruction) gives address <code id="P70004970270000000000000000417E3" data-uri="chapter03.xhtml#P70004970270000000000000000417E3" class="pcalibre1 calibre8 pcalibre">0x400560:</code></p>
<pre id="P70004970270000000000000000417E4" data-uri="chapter03.xhtml#P70004970270000000000000000417E4" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417E5" data-uri="chapter03.xhtml#P70004970270000000000000000417E5" class="calibre10 pcalibre pcalibre1">
4005e8: e9 73 ff ff ff	jmpq	400560
4005ed:90		nop
</code></pre>
</li></ol></li></ul>
</section>
<section id="P70004970270000000000000000035E2" data-uri="chapter03.xhtml#P70004970270000000000000000035E2" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000417E6" data-uri="chapter03.xhtml#P70004970270000000000000000417E6" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000254C"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.16 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000254B">212</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000417E7" data-uri="chapter03.xhtml#P70004970270000000000000000417E7">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000417E8" data-uri="chapter03.xhtml#P70004970270000000000000000417E8"><p id="P70004970270000000000000000417E9" data-uri="chapter03.xhtml#P70004970270000000000000000417E9" class="calibre13 pcalibre pcalibre1">Annotating assembly code and writing C code that mimics its control flow are good first steps in understanding assembly-language programs. This problem gives you practice for an example with simple control flow. It also gives you a chance to examine the implementation of logical operations.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P70004970270000000000000000417EA" data-uri="chapter03.xhtml#P70004970270000000000000000417EA">
<li id="P70004970270000000000000000417EB" data-uri="chapter03.xhtml#P70004970270000000000000000417EB" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417EC" data-uri="chapter03.xhtml#P70004970270000000000000000417EC" class="calibre13 pcalibre pcalibre1">Here is the C code:</p>
<pre id="P70004970270000000000000000417ED" data-uri="chapter03.xhtml#P70004970270000000000000000417ED" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417EE" data-uri="chapter03.xhtml#P70004970270000000000000000417EE" class="calibre10 pcalibre pcalibre1">
void goto_cond(long a, long *p) {
	if (p == 0)
	  goto done;
	if (*p &gt;= a)
	  goto done;
	*p = a;
done:
	return;
}
</code></pre>
</li>
<li id="P70004970270000000000000000417EF" data-uri="chapter03.xhtml#P70004970270000000000000000417EF" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417F0" data-uri="chapter03.xhtml#P70004970270000000000000000417F0" class="calibre13 pcalibre pcalibre1">The first conditional branch is part of the implementation of the &amp;&amp; expression. If the test for <code id="P70004970270000000000000000417F1" data-uri="chapter03.xhtml#P70004970270000000000000000417F1" class="pcalibre1 calibre8 pcalibre">p</code> being non-null fails, the code will skip the test of a &gt; *p.</p></li>
</ol></li></ul>
</section>
<section id="P70004970270000000000000000035EF" data-uri="chapter03.xhtml#P70004970270000000000000000035EF" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000417F2" data-uri="chapter03.xhtml#P70004970270000000000000000417F2" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000255C"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.17 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000254B">212</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000417F3" data-uri="chapter03.xhtml#P70004970270000000000000000417F3">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000417F4" data-uri="chapter03.xhtml#P70004970270000000000000000417F4"><p id="P70004970270000000000000000417F5" data-uri="chapter03.xhtml#P70004970270000000000000000417F5" class="calibre13 pcalibre pcalibre1">This is an exercise to help you think about the idea of a general translation rule and how to apply it.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P70004970270000000000000000417F6" data-uri="chapter03.xhtml#P70004970270000000000000000417F6">
<li id="P70004970270000000000000000417F7" data-uri="chapter03.xhtml#P70004970270000000000000000417F7" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417F8" data-uri="chapter03.xhtml#P70004970270000000000000000417F8" class="calibre13 pcalibre pcalibre1">Converting to this alternate form involves only switching around a few lines of the code:</p>
<pre id="P70004970270000000000000000417F9" data-uri="chapter03.xhtml#P70004970270000000000000000417F9" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417FA" data-uri="chapter03.xhtml#P70004970270000000000000000417FA" class="calibre10 pcalibre pcalibre1">
<span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000035F9" title="332" data-uri="chapter03.xhtml#P70004970270000000000000000035F9" epub:type="pagebreak"></span>long gotodiff_se_alt(long x, long y) {
	long result;
	if (x &lt; y)
	  goto x_lt_y;
	ge_cnt++;
	result = x - y;
	return result;
x_lt_y:
	lt_cnt++;
	result = y - x;
	return result;
}
</code></pre>
</li>
<li id="P70004970270000000000000000417FB" data-uri="chapter03.xhtml#P70004970270000000000000000417FB" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000417FC" data-uri="chapter03.xhtml#P70004970270000000000000000417FC" class="calibre13 pcalibre pcalibre1">In most respects, the choice is arbitrary. But the original rule works better for the common case where there is no else statement. For this case, we can simply modify the translation rule to be as follows:</p>
<pre id="P70004970270000000000000000417FD" data-uri="chapter03.xhtml#P70004970270000000000000000417FD" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000417FE" data-uri="chapter03.xhtml#P70004970270000000000000000417FE" class="calibre10 pcalibre pcalibre1">
	t = <i class="calibre5 pcalibre pcalibre1">test-expr</i>;
	if (!t)
	  goto done;
<i class="calibre5 pcalibre pcalibre1">then-statement</i>
done:
</code></pre>
<p class="calibre13 pcalibre pcalibre1" id="P70004970270000000000000000417FF" data-uri="chapter03.xhtml#P70004970270000000000000000417FF">A translation based on the alternate rule is more cumbersome.</p>
</li></ol></li></ul>
</section>
<section id="P70004970270000000000000000035FF" data-uri="chapter03.xhtml#P70004970270000000000000000035FF" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041800" data-uri="chapter03.xhtml#P7000497027000000000000000041800" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000256C"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.18 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P7000497027000000000000000002568">213</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041801" data-uri="chapter03.xhtml#P7000497027000000000000000041801">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041802" data-uri="chapter03.xhtml#P7000497027000000000000000041802"><p id="P7000497027000000000000000041803" data-uri="chapter03.xhtml#P7000497027000000000000000041803" class="calibre13 pcalibre pcalibre1">This problem requires that you work through a nested branch structure, where you will see how our rule for translating <code id="P7000497027000000000000000041804" data-uri="chapter03.xhtml#P7000497027000000000000000041804" class="pcalibre1 calibre8 pcalibre">if</code> statements has been applied. On the whole, the machine code is a straightforward translation of the C code.</p>
<pre id="P7000497027000000000000000041805" data-uri="chapter03.xhtml#P7000497027000000000000000041805" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041806" data-uri="chapter03.xhtml#P7000497027000000000000000041806" class="calibre10 pcalibre pcalibre1">
long test(long x, long y, long z) {
	long val = x+y+z;
	if (x &lt; -3) {
	  if (y &lt; z)
	  	val = x*y;
	  else
	  	val = y*z;
	} else if (x &gt; 2)
	  val = x*z;
	return val;
}
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003607" data-uri="chapter03.xhtml#P7000497027000000000000000003607" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041807" data-uri="chapter03.xhtml#P7000497027000000000000000041807" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P70004970270000000000000000025A8"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.19 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_000.xhtml#P70004970270000000000000000025A5">216</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041808" data-uri="chapter03.xhtml#P7000497027000000000000000041808">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041809" data-uri="chapter03.xhtml#P7000497027000000000000000041809"><p id="P700049702700000000000000004180A" data-uri="chapter03.xhtml#P700049702700000000000000004180A" class="calibre13 pcalibre pcalibre1">This problem reinforces our method of computing the misprediction penalty.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000004180B" data-uri="chapter03.xhtml#P700049702700000000000000004180B">
<li id="P700049702700000000000000004180C" data-uri="chapter03.xhtml#P700049702700000000000000004180C" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004180D" data-uri="chapter03.xhtml#P700049702700000000000000004180D" class="calibre13 pcalibre pcalibre1">We can apply our formula directly to get <var class="calibre5 pcalibre pcalibre1">T</var><sub class="pcalibre1 calibre47 pcalibre">MP</sub> = 2(31 – 16) = 30.</p></li>
<li id="P700049702700000000000000004180E" data-uri="chapter03.xhtml#P700049702700000000000000004180E" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004180F" data-uri="chapter03.xhtml#P700049702700000000000000004180F" class="calibre13 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003611" title="333" data-uri="chapter03.xhtml#P7000497027000000000000000003611" epub:type="pagebreak"></span>When misprediction occurs, the function will require around <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="108" altimg-height="16" altimg="../images/ch03-neweq3.png"><m:mrow><m:mn>16</m:mn><m:mo>+</m:mo><m:mn>30</m:mn><m:mo>=</m:mo><m:mn>46</m:mn></m:mrow></m:math></span> cycles.</p></li>
</ol></li></ul>
</section>
<section id="P7000497027000000000000000003612" data-uri="chapter03.xhtml#P7000497027000000000000000003612" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041810" data-uri="chapter03.xhtml#P7000497027000000000000000041810" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000263D"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.20 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000263F">219</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041811" data-uri="chapter03.xhtml#P7000497027000000000000000041811">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041812" data-uri="chapter03.xhtml#P7000497027000000000000000041812"><p id="P7000497027000000000000000041813" data-uri="chapter03.xhtml#P7000497027000000000000000041813" class="calibre13 pcalibre pcalibre1">This problem provides a chance to study the use of conditional moves.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000041814" data-uri="chapter03.xhtml#P7000497027000000000000000041814">
<li id="P7000497027000000000000000041815" data-uri="chapter03.xhtml#P7000497027000000000000000041815" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041816" data-uri="chapter03.xhtml#P7000497027000000000000000041816" class="calibre13 pcalibre pcalibre1">The operator is `/'. We see this is an example of dividing by a power of 3 by right shifting (see <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000FF6"><span class="pcalibre label pcalibre1">Section </span><span class="pcalibre label pcalibre1">2.3.7</span></a>). Before shifting by <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="42" altimg-height="15" altimg="../images/ch03-neweq4.png"><m:mrow><m:mi>k</m:mi><m:mo>=</m:mo><m:mn>3</m:mn></m:mrow></m:math></span>, we must add a bias of <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="86" altimg-height="18" altimg="../images/ch03-neweq5.png"><m:mrow><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup><m:mo>−</m:mo><m:mn>1</m:mn><m:mo>=</m:mo><m:mn>7</m:mn></m:mrow></m:math></span> when the dividend is negative.</p></li>
<li id="P7000497027000000000000000041817" data-uri="chapter03.xhtml#P7000497027000000000000000041817" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041818" data-uri="chapter03.xhtml#P7000497027000000000000000041818" class="calibre13 pcalibre pcalibre1">Here is an annotated version of the assembly code:</p>
<pre id="P7000497027000000000000000041819" data-uri="chapter03.xhtml#P7000497027000000000000000041819" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004181A" data-uri="chapter03.xhtml#P700049702700000000000000004181A" class="calibre10 pcalibre pcalibre1">
	<i class="calibre5 pcalibre pcalibre1">long arith(long x)</i>
	<i class="calibre5 pcalibre pcalibre1">x in %rdi</i>
arith:
  leaq	7(%rdi), %rax	<i class="calibre5 pcalibre pcalibre1">temp = x+7</i>
  testq	%rdi, %rdi	<i class="calibre5 pcalibre pcalibre1">Text x</i>
  cmovns	%rdi, %rax	<i class="calibre5 pcalibre pcalibre1">If x&gt;= 0, temp = x</i>
  sarq	$3, %rax	<i class="calibre5 pcalibre pcalibre1">result = temp &gt;&gt; 3 (= x/8)</i>
  ret
</code></pre>
<p class="calibre13 pcalibre pcalibre1" id="P700049702700000000000000004181B" data-uri="chapter03.xhtml#P700049702700000000000000004181B">The program creates a temporary value equal to <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="46" altimg-height="16" altimg="../images/ch03-neweq6.png"><m:mrow><m:mi>x</m:mi><m:mo>+</m:mo><m:mn>7</m:mn></m:mrow></m:math></span>, in anticipation of <var class="calibre5 pcalibre pcalibre1">x</var> being negative and therefore requiring biasing. The <code id="P700049702700000000000000004181C" data-uri="chapter03.xhtml#P700049702700000000000000004181C" class="pcalibre1 calibre8 pcalibre">cmovns</code> instruction conditionally changes this number to <var class="calibre5 pcalibre pcalibre1">x</var> when <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="27" altimg-height="17" altimg="../images/ch03-neweq7.png"><m:mrow><m:mi>x</m:mi><m:mo>≥</m:mo><m:mn>0</m:mn></m:mrow></m:math></span>, and then it is shifted by 3 to generate <var class="calibre5 pcalibre pcalibre1">x</var>/8.</p>
</li></ol></li></ul>
</section>
<section id="P7000497027000000000000000003620" data-uri="chapter03.xhtml#P7000497027000000000000000003620" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004181D" data-uri="chapter03.xhtml#P700049702700000000000000004181D" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002651"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.21 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000263F">219</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P700049702700000000000000004181E" data-uri="chapter03.xhtml#P700049702700000000000000004181E">
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004181F" data-uri="chapter03.xhtml#P700049702700000000000000004181F"><p id="P7000497027000000000000000041820" data-uri="chapter03.xhtml#P7000497027000000000000000041820" class="calibre13 pcalibre pcalibre1">This problem is similar to <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_000.xhtml#P700049702700000000000000000256C"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">3.18</span></a>, except that some of the conditionals have been implemented by conditional data transfers. Although it might seem daunting to fit this code into the framework of the original C code, you will find that it follows the translation rules fairly closely.</p>
<pre id="P7000497027000000000000000041821" data-uri="chapter03.xhtml#P7000497027000000000000000041821" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041822" data-uri="chapter03.xhtml#P7000497027000000000000000041822" class="calibre10 pcalibre pcalibre1">
long test(long x, long y) {
	long val = 8*x;
	if (y &gt; 0) {
	  if (x &lt; y)
	  	val = y-x;
	  else
	  	val = x&amp;y;
	} else if (y &lt;= -2)
	  val = x+y;
	return val;
}
</code></pre>
</li></ul>
</section>
<section id="P7000497027000000000000000003627" data-uri="chapter03.xhtml#P7000497027000000000000000003627" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041823" data-uri="chapter03.xhtml#P7000497027000000000000000041823" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002683"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.22 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002674">221</a>)</h1></header>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000041824" data-uri="chapter03.xhtml#P7000497027000000000000000041824">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041825" data-uri="chapter03.xhtml#P7000497027000000000000000041825"><p id="P7000497027000000000000000041826" data-uri="chapter03.xhtml#P7000497027000000000000000041826" class="pcalibre calibre3 pcalibre1">If we build up a table of factorials computed with data type <code id="P7000497027000000000000000041827" data-uri="chapter03.xhtml#P7000497027000000000000000041827" class="pcalibre1 calibre8 pcalibre">int</code>, we get the following:</p>
<table class="informaltable pcalibre pcalibre1" id="P7000497027000000000000000041828" data-uri="chapter03.xhtml#P7000497027000000000000000041828">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P7000497027000000000000000041829" data-uri="chapter03.xhtml#P7000497027000000000000000041829" class="calibre18 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000362F" title="334" data-uri="chapter03.xhtml#P700049702700000000000000000362F" epub:type="pagebreak"></span><var class="calibre5 pcalibre pcalibre1">n</var></th>
<th id="P700049702700000000000000004182A" data-uri="chapter03.xhtml#P700049702700000000000000004182A" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">n</var>!</th>
<th id="P700049702700000000000000004182B" data-uri="chapter03.xhtml#P700049702700000000000000004182B" class="calibre18 pcalibre pcalibre1">OK?</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004182C" data-uri="chapter03.xhtml#P700049702700000000000000004182C" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000004182D" data-uri="chapter03.xhtml#P700049702700000000000000004182D" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000004182E" data-uri="chapter03.xhtml#P700049702700000000000000004182E" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004182F" data-uri="chapter03.xhtml#P700049702700000000000000004182F" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P7000497027000000000000000041830" data-uri="chapter03.xhtml#P7000497027000000000000000041830" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P7000497027000000000000000041831" data-uri="chapter03.xhtml#P7000497027000000000000000041831" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041832" data-uri="chapter03.xhtml#P7000497027000000000000000041832" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P7000497027000000000000000041833" data-uri="chapter03.xhtml#P7000497027000000000000000041833" class="calibre20 pcalibre pcalibre1">6</td>
<td id="P7000497027000000000000000041834" data-uri="chapter03.xhtml#P7000497027000000000000000041834" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041835" data-uri="chapter03.xhtml#P7000497027000000000000000041835" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P7000497027000000000000000041836" data-uri="chapter03.xhtml#P7000497027000000000000000041836" class="calibre20 pcalibre pcalibre1">24</td>
<td id="P7000497027000000000000000041837" data-uri="chapter03.xhtml#P7000497027000000000000000041837" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041838" data-uri="chapter03.xhtml#P7000497027000000000000000041838" class="calibre20 pcalibre pcalibre1">5</td>
<td id="P7000497027000000000000000041839" data-uri="chapter03.xhtml#P7000497027000000000000000041839" class="calibre20 pcalibre pcalibre1">120</td>
<td id="P700049702700000000000000004183A" data-uri="chapter03.xhtml#P700049702700000000000000004183A" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004183B" data-uri="chapter03.xhtml#P700049702700000000000000004183B" class="calibre20 pcalibre pcalibre1">6</td>
<td id="P700049702700000000000000004183C" data-uri="chapter03.xhtml#P700049702700000000000000004183C" class="calibre20 pcalibre pcalibre1">720</td>
<td id="P700049702700000000000000004183D" data-uri="chapter03.xhtml#P700049702700000000000000004183D" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004183E" data-uri="chapter03.xhtml#P700049702700000000000000004183E" class="calibre20 pcalibre pcalibre1">7</td>
<td id="P700049702700000000000000004183F" data-uri="chapter03.xhtml#P700049702700000000000000004183F" class="calibre20 pcalibre pcalibre1">5,040</td>
<td id="P7000497027000000000000000041840" data-uri="chapter03.xhtml#P7000497027000000000000000041840" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041841" data-uri="chapter03.xhtml#P7000497027000000000000000041841" class="calibre20 pcalibre pcalibre1">8</td>
<td id="P7000497027000000000000000041842" data-uri="chapter03.xhtml#P7000497027000000000000000041842" class="calibre20 pcalibre pcalibre1">40,320</td>
<td id="P7000497027000000000000000041843" data-uri="chapter03.xhtml#P7000497027000000000000000041843" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041844" data-uri="chapter03.xhtml#P7000497027000000000000000041844" class="calibre20 pcalibre pcalibre1">9</td>
<td id="P7000497027000000000000000041845" data-uri="chapter03.xhtml#P7000497027000000000000000041845" class="calibre20 pcalibre pcalibre1">362,880</td>
<td id="P7000497027000000000000000041846" data-uri="chapter03.xhtml#P7000497027000000000000000041846" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041847" data-uri="chapter03.xhtml#P7000497027000000000000000041847" class="calibre20 pcalibre pcalibre1">10</td>
<td id="P7000497027000000000000000041848" data-uri="chapter03.xhtml#P7000497027000000000000000041848" class="calibre20 pcalibre pcalibre1">3,628,800</td>
<td id="P7000497027000000000000000041849" data-uri="chapter03.xhtml#P7000497027000000000000000041849" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004184A" data-uri="chapter03.xhtml#P700049702700000000000000004184A" class="calibre20 pcalibre pcalibre1">11</td>
<td id="P700049702700000000000000004184B" data-uri="chapter03.xhtml#P700049702700000000000000004184B" class="calibre20 pcalibre pcalibre1">39,916,800</td>
<td id="P700049702700000000000000004184C" data-uri="chapter03.xhtml#P700049702700000000000000004184C" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004184D" data-uri="chapter03.xhtml#P700049702700000000000000004184D" class="calibre20 pcalibre pcalibre1">12</td>
<td id="P700049702700000000000000004184E" data-uri="chapter03.xhtml#P700049702700000000000000004184E" class="calibre20 pcalibre pcalibre1">479,001,600</td>
<td id="P700049702700000000000000004184F" data-uri="chapter03.xhtml#P700049702700000000000000004184F" class="calibre20 pcalibre pcalibre1">Y</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000041850" data-uri="chapter03.xhtml#P7000497027000000000000000041850" class="calibre20 pcalibre pcalibre1">13</td>
<td id="P7000497027000000000000000041851" data-uri="chapter03.xhtml#P7000497027000000000000000041851" class="calibre20 pcalibre pcalibre1">1,932,053,504</td>
<td id="P7000497027000000000000000041852" data-uri="chapter03.xhtml#P7000497027000000000000000041852" class="calibre20 pcalibre pcalibre1">N</td>
</tr>
</tbody>
</table>
<p class="pcalibre calibre3 pcalibre1" id="P7000497027000000000000000041853" data-uri="chapter03.xhtml#P7000497027000000000000000041853">We can see that the computation of 13! has overflowed. As we learned in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000F42"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">2.35</span></a>, when we get value <var class="calibre5 pcalibre pcalibre1">x</var> while attempting to compute <var class="calibre5 pcalibre pcalibre1">n</var>!, we can test for overflow by computing <i class="calibre5 pcalibre pcalibre1">x/n</i> and seeing whether it equals (<var class="calibre5 pcalibre pcalibre1">n</var> - 1)! (assuming that we have already ensured that the computation of (<var class="calibre5 pcalibre pcalibre1">n</var> - 1) !did not overflow). In this case we get 1,932,053,504/13 = 161,004,458.667. As a second test, we can see that any factorial beyond 10! must be a multiple of 100 and therefore have zeros for the last two digits. The correct value of 13! is 6,227,020,800.</p></li>
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041854" data-uri="chapter03.xhtml#P7000497027000000000000000041854"><p id="P7000497027000000000000000041855" data-uri="chapter03.xhtml#P7000497027000000000000000041855" class="pcalibre calibre3 pcalibre1">Doing the computation with data type long lets us go up to 20!, yielding 2,432,902,008,176,640,000.</p></li>
</ol>
</section>
<section id="P700049702700000000000000000365C" data-uri="chapter03.xhtml#P700049702700000000000000000365C" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041856" data-uri="chapter03.xhtml#P7000497027000000000000000041856" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P70004970270000000000000000026A1"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.23 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002693">222</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041857" data-uri="chapter03.xhtml#P7000497027000000000000000041857">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041858" data-uri="chapter03.xhtml#P7000497027000000000000000041858"><p id="P7000497027000000000000000041859" data-uri="chapter03.xhtml#P7000497027000000000000000041859" class="calibre13 pcalibre pcalibre1">The code generated when compiling loops can be tricky to analyze, because the compiler can perform many different optimizations on loop code, and because it can be difficult to match program variables with registers. This particular example demonstrates several places where the assembly code is not just a direct translation of the C code.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000004185A" data-uri="chapter03.xhtml#P700049702700000000000000004185A">
<li id="P700049702700000000000000004185B" data-uri="chapter03.xhtml#P700049702700000000000000004185B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004185C" data-uri="chapter03.xhtml#P700049702700000000000000004185C" class="calibre13 pcalibre pcalibre1">Although parameter <code id="P700049702700000000000000004185D" data-uri="chapter03.xhtml#P700049702700000000000000004185D" class="pcalibre1 calibre8 pcalibre">x</code> is passed to the function in register <code id="P700049702700000000000000004185E" data-uri="chapter03.xhtml#P700049702700000000000000004185E" class="pcalibre1 calibre8 pcalibre">%rdi</code>, we can see that the register is never referenced once the loop is entered. Instead, we can see that registers <code id="P700049702700000000000000004185F" data-uri="chapter03.xhtml#P700049702700000000000000004185F" class="pcalibre1 calibre8 pcalibre">%rax, %rcx</code>, and <code id="P7000497027000000000000000041860" data-uri="chapter03.xhtml#P7000497027000000000000000041860" class="pcalibre1 calibre8 pcalibre">%rdx</code> are initialized in lines 2–5 to <code id="P7000497027000000000000000041861" data-uri="chapter03.xhtml#P7000497027000000000000000041861" class="pcalibre1 calibre8 pcalibre">x, x*x</code>, and <code id="P7000497027000000000000000041862" data-uri="chapter03.xhtml#P7000497027000000000000000041862" class="pcalibre1 calibre8 pcalibre">x+x</code>. We can conclude, therefore, that these registers contain the program variables.</p></li>
<li id="P7000497027000000000000000041863" data-uri="chapter03.xhtml#P7000497027000000000000000041863" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041864" data-uri="chapter03.xhtml#P7000497027000000000000000041864" class="calibre13 pcalibre pcalibre1">The compiler determines that pointer <code id="P7000497027000000000000000041865" data-uri="chapter03.xhtml#P7000497027000000000000000041865" class="pcalibre1 calibre8 pcalibre">p</code> always points to <code id="P7000497027000000000000000041866" data-uri="chapter03.xhtml#P7000497027000000000000000041866" class="pcalibre1 calibre8 pcalibre">x</code>, and hence the expression (*<code id="P7000497027000000000000000041867" data-uri="chapter03.xhtml#P7000497027000000000000000041867" class="pcalibre1 calibre8 pcalibre">p</code>)++ simply increments <code id="P7000497027000000000000000041868" data-uri="chapter03.xhtml#P7000497027000000000000000041868" class="pcalibre1 calibre8 pcalibre">x</code>. It combines this incrementing by 1 with the increment by <code id="P7000497027000000000000000041869" data-uri="chapter03.xhtml#P7000497027000000000000000041869" class="pcalibre1 calibre8 pcalibre">y</code>, via the <code id="P700049702700000000000000004186A" data-uri="chapter03.xhtml#P700049702700000000000000004186A" class="pcalibre1 calibre8 pcalibre">leaq</code> instruction of line 7.</p></li>
<li id="P700049702700000000000000004186B" data-uri="chapter03.xhtml#P700049702700000000000000004186B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004186C" data-uri="chapter03.xhtml#P700049702700000000000000004186C" class="calibre13 pcalibre pcalibre1">The annotated code is as follows:</p>
<pre id="P700049702700000000000000004186D" data-uri="chapter03.xhtml#P700049702700000000000000004186D" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004186E" data-uri="chapter03.xhtml#P700049702700000000000000004186E" class="calibre10 pcalibre pcalibre1">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003676" title="335" data-uri="chapter03.xhtml#P7000497027000000000000000003676" epub:type="pagebreak"></span>	<i class="calibre5 pcalibre pcalibre1">long dw_loop(long x)</i>
	<i class="calibre5 pcalibre pcalibre1">x initially in %rdi</i>
1	dw_loop:
2	movq	%rdi, %rax		<i class="calibre5 pcalibre pcalibre1">Copy x to %rax</i>
3	movq	%rdi, %rcx
4	imulq	%rdi, %rcx		<i class="calibre5 pcalibre pcalibre1">Compute y = x*x</i>
5	leaq	(%rdi,%rdi), %rdx	<i class="calibre5 pcalibre pcalibre1">Compute n = 2*x</i>
6	.L2:			    <b class="calibre4 pcalibre pcalibre1">loop:</b>
7	leaq	1(%rcx,%rax), %rax	<i class="calibre5 pcalibre pcalibre1">Compute x += y + 1</i>
8	subq $1, %rdx			<i class="calibre5 pcalibre pcalibre1">Decrement n</i>
9	testq	%rdx, %rdx		<i class="calibre5 pcalibre pcalibre1">Test n</i>
10	jg	.L2			<i class="calibre5 pcalibre pcalibre1">If &gt; 0, goto</i> <b class="calibre4 pcalibre pcalibre1">loop</b>
11	rep;	ret			<i class="calibre5 pcalibre pcalibre1">Return</i>
</code></pre>
</li></ol></li></ul>
</section>
<section id="P7000497027000000000000000003677" data-uri="chapter03.xhtml#P7000497027000000000000000003677" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004186F" data-uri="chapter03.xhtml#P700049702700000000000000004186F" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P70004970270000000000000000026E2"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.24 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P70004970270000000000000000026C9">224</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041870" data-uri="chapter03.xhtml#P7000497027000000000000000041870">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041871" data-uri="chapter03.xhtml#P7000497027000000000000000041871"><p id="P7000497027000000000000000041872" data-uri="chapter03.xhtml#P7000497027000000000000000041872" class="calibre13 pcalibre pcalibre1">This assembly code is a fairly straightforward translation of the loop using the jump-to-middle method. The full C code is as follows:</p>
<pre id="P7000497027000000000000000041873" data-uri="chapter03.xhtml#P7000497027000000000000000041873" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041874" data-uri="chapter03.xhtml#P7000497027000000000000000041874" class="calibre10 pcalibre pcalibre1">
long loop_while(long a, long b)
{
	long result = 1;
	while (a &lt; b) {
	  result = result * (a+b);
	  a = a+1;
	}
	return result;
}
</code></pre>
</li></ul>
</section>
<section id="P700049702700000000000000000367E" data-uri="chapter03.xhtml#P700049702700000000000000000367E" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041875" data-uri="chapter03.xhtml#P7000497027000000000000000041875" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P70004970270000000000000000026FF"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.25 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P70004970270000000000000000026FC">226</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041876" data-uri="chapter03.xhtml#P7000497027000000000000000041876">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041877" data-uri="chapter03.xhtml#P7000497027000000000000000041877"><p id="P7000497027000000000000000041878" data-uri="chapter03.xhtml#P7000497027000000000000000041878" class="calibre13 pcalibre pcalibre1">While the generated code does not follow the exact pattern of the guarded-do translation, we can see that it is equivalent to the following C code:</p>
<pre id="P7000497027000000000000000041879" data-uri="chapter03.xhtml#P7000497027000000000000000041879" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004187A" data-uri="chapter03.xhtml#P700049702700000000000000004187A" class="calibre10 pcalibre pcalibre1">
long loop_while2(long a, long b)
{
	long result = b;
	while (b &gt; 0) {
	  result = result * a;
	  b = b-a;
	}
	return result;
}
</code></pre>
<p id="P700049702700000000000000004187B" data-uri="chapter03.xhtml#P700049702700000000000000004187B" class="calibre13 pcalibre pcalibre1">We will often see cases, especially when compiling with higher levels of optimization, where <span class="smallcaps pcalibre pcalibre1">gcc </span>takes some liberties in the exact form of the code it generates, while preserving the required functionality.</p>
</li></ul>
</section>
<section id="P7000497027000000000000000003686" data-uri="chapter03.xhtml#P7000497027000000000000000003686" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004187C" data-uri="chapter03.xhtml#P700049702700000000000000004187C" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000003688" title="336" data-uri="chapter03.xhtml#P7000497027000000000000000003688" epub:type="pagebreak"></span><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002720"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.26 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000271F">228</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P700049702700000000000000004187D" data-uri="chapter03.xhtml#P700049702700000000000000004187D">
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004187E" data-uri="chapter03.xhtml#P700049702700000000000000004187E"><p id="P700049702700000000000000004187F" data-uri="chapter03.xhtml#P700049702700000000000000004187F" class="calibre13 pcalibre pcalibre1">Being able to work backward from assembly code to C code is a prime example of reverse engineering.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000041880" data-uri="chapter03.xhtml#P7000497027000000000000000041880">
<li id="P7000497027000000000000000041881" data-uri="chapter03.xhtml#P7000497027000000000000000041881" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041882" data-uri="chapter03.xhtml#P7000497027000000000000000041882" class="calibre13 pcalibre pcalibre1">We can see that the code uses the jump-to-middle translation, using the <code id="P7000497027000000000000000041883" data-uri="chapter03.xhtml#P7000497027000000000000000041883" class="pcalibre1 calibre8 pcalibre">jmp</code> instruction on line 3.</p></li>
<li id="P7000497027000000000000000041884" data-uri="chapter03.xhtml#P7000497027000000000000000041884" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041885" data-uri="chapter03.xhtml#P7000497027000000000000000041885" class="calibre13 pcalibre pcalibre1">Here is the original C code:</p>
<pre id="P7000497027000000000000000041886" data-uri="chapter03.xhtml#P7000497027000000000000000041886" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041887" data-uri="chapter03.xhtml#P7000497027000000000000000041887" class="calibre10 pcalibre pcalibre1">
long fun_a(unsigned long x) {
	long val = 0;
	while (x) {
	  val ^= x;
	  x &gt;&gt;= 1;
	}
	return val &amp; 0x1;
}
</code></pre>
</li>
<li id="P7000497027000000000000000041888" data-uri="chapter03.xhtml#P7000497027000000000000000041888" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041889" data-uri="chapter03.xhtml#P7000497027000000000000000041889" class="calibre13 pcalibre pcalibre1">This code computes the <i class="calibre5 pcalibre pcalibre1">parity</i> of argument <code id="P700049702700000000000000004188A" data-uri="chapter03.xhtml#P700049702700000000000000004188A" class="pcalibre1 calibre8 pcalibre">x</code>. That is, it returns 1 if there is an odd number of ones in <code id="P700049702700000000000000004188B" data-uri="chapter03.xhtml#P700049702700000000000000004188B" class="pcalibre1 calibre8 pcalibre">x</code> and 0 if there is an even number.</p></li>
</ol></li></ul>
</section>
<section id="P7000497027000000000000000003698" data-uri="chapter03.xhtml#P7000497027000000000000000003698" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004188C" data-uri="chapter03.xhtml#P700049702700000000000000004188C" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002762"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.27 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000275E">231</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P700049702700000000000000004188D" data-uri="chapter03.xhtml#P700049702700000000000000004188D">
<li class="calibre12 pcalibre pcalibre1" id="P700049702700000000000000004188E" data-uri="chapter03.xhtml#P700049702700000000000000004188E"><p id="P700049702700000000000000004188F" data-uri="chapter03.xhtml#P700049702700000000000000004188F" class="calibre13 pcalibre pcalibre1">This exercise is intended to reinforce your understanding of how loops are implemented.</p>
<pre id="P7000497027000000000000000041890" data-uri="chapter03.xhtml#P7000497027000000000000000041890" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000041891" data-uri="chapter03.xhtml#P7000497027000000000000000041891" class="calibre10 pcalibre pcalibre1">
long fact_for_gd_goto(long n)
{
	long i = 2;
	long result = 1;
	if (n &lt;= 1)
	  goto done;
loop:
	result *= i;
	i++;
	if (i &lt;= n)
	  goto loop;
done:
	return result;
}
</code></pre>
</li></ul>
</section>
<section id="P700049702700000000000000000369F" data-uri="chapter03.xhtml#P700049702700000000000000000369F" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000041892" data-uri="chapter03.xhtml#P7000497027000000000000000041892" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000276D"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">3.28 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000275E">231</a>)</h1></header>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000041893" data-uri="chapter03.xhtml#P7000497027000000000000000041893">
<li class="calibre12 pcalibre pcalibre1" id="P7000497027000000000000000041894" data-uri="chapter03.xhtml#P7000497027000000000000000041894"><p id="P7000497027000000000000000041895" data-uri="chapter03.xhtml#P7000497027000000000000000041895" class="calibre13 pcalibre pcalibre1">This problem is trickier than <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P7000497027000000000000000002720"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">3.26</span></a>, since the code within the loop is more complex and the overall operation is less familiar.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000041896" data-uri="chapter03.xhtml#P7000497027000000000000000041896">
<li id="P7000497027000000000000000041897" data-uri="chapter03.xhtml#P7000497027000000000000000041897" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000041898" data-uri="chapter03.xhtml#P7000497027000000000000000041898" class="calibre13 pcalibre pcalibre1">Here is the original C code:</p>
<pre id="P7000497027000000000000000041899" data-uri="chapter03.xhtml#P7000497027000000000000000041899" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004189A" data-uri="chapter03.xhtml#P700049702700000000000000004189A" class="calibre10 pcalibre pcalibre1">
long fun_b(unsigned long x) {
	long val = 0;
	long i;
<span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000036A9" title="337" data-uri="chapter03.xhtml#P70004970270000000000000000036A9" epub:type="pagebreak"></span>	for (i = 64; i != 0; i–) {
	  val = (val &lt;&lt; 1) | (x &amp; 0x1);
	  x &gt;&gt;= 1;
	}
	return val;
}
</code></pre>
</li>
<li id="P700049702700000000000000004189B" data-uri="chapter03.xhtml#P700049702700000000000000004189B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004189C" data-uri="chapter03.xhtml#P700049702700000000000000004189C" class="calibre13 pcalibre pcalibre1">The code was generated using the guarded-do transformation, but the compiler detected that, since <var class="calibre5 pcalibre pcalibre1">i</var> is initialized to 64, it will satisfy the test <var class="calibre5 pcalibre pcalibre1">i</var> ≠ 0, and therefore the initial test is not required.</p></li>
<li id="P700049702700000000000000004189D" data-uri="chapter03.xhtml#P700049702700000000000000004189D" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004189E" data-uri="chapter03.xhtml#P700049702700000000000000004189E" class="calibre13 pcalibre pcalibre1">This code reverses the bits in <code id="P700049702700000000000000004189F" data-uri="chapter03.xhtml#P700049702700000000000000004189F" class="pcalibre1 calibre8 pcalibre">x</code>, creating a mirror image. It does this by shifting the bits of <code id="P70004970270000000000000000418A0" data-uri="chapter03.xhtml#P70004970270000000000000000418A0" class="pcalibre1 calibre8 pcalibre">x</code> from left to right, and then filling these bits in as it shifts <code id="P70004970270000000000000000418A1" data-uri="chapter03.xhtml#P70004970270000000000000000418A1" class="pcalibre1 calibre8 pcalibre">val</code> from right to left.</p></li>
</ol></li></ul>
</section>
</section></body></html>
