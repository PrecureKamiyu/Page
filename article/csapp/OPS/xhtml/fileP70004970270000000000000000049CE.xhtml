<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>5.4 Eliminating Loop Inefficiencies</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P70004970270000000000000000049CE" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P7000497027000000000000000043106" data-uri="chapter05.xhtml#P7000497027000000000000000043106" epub:type="title"><span class="pcalibre label pcalibre1">5.4 </span>Eliminating Loop Inefficiencies</h1></header>
<p id="P7000497027000000000000000043107" data-uri="chapter05.xhtml#P7000497027000000000000000043107" class="pcalibre1 pcalibre calibre2">Observe that procedure <code id="P7000497027000000000000000043108" data-uri="chapter05.xhtml#P7000497027000000000000000043108" class="pcalibre1 calibre8 pcalibre">combine1</code>, as shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000496E.xhtml#P700049702700000000000000000499B"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.5</span></a>, calls function <code id="P7000497027000000000000000043109" data-uri="chapter05.xhtml#P7000497027000000000000000043109" class="pcalibre1 calibre8 pcalibre">vec_length</code> as the test condition of the <code id="P700049702700000000000000004310A" data-uri="chapter05.xhtml#P700049702700000000000000004310A" class="pcalibre1 calibre8 pcalibre">for</code> loop. Recall from our discussion of how to translate code containing loops into machine-level programs (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000002339_split_001.xhtml#P700049702700000000000000000265F"><span class="pcalibre label pcalibre1">Section </span><span class="pcalibre label pcalibre1">3.6.7</span></a>) that the test condition must be evaluated on every iteration of the loop. On the other hand, the length of the vector does not change as the loop proceeds. We could therefore compute the vector length only once and use this value in our test condition.</p>
<p id="P700049702700000000000000004310B" data-uri="chapter05.xhtml#P700049702700000000000000004310B" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000049F6"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.6</span></a> shows a modified version called <code id="P700049702700000000000000004310C" data-uri="chapter05.xhtml#P700049702700000000000000004310C" class="pcalibre1 calibre8 pcalibre">combine2</code>. It calls <code id="P700049702700000000000000004310D" data-uri="chapter05.xhtml#P700049702700000000000000004310D" class="pcalibre1 calibre8 pcalibre">vec_length</code> at the beginning and assigns the result to a local variable length. This transformation has noticeable effect on the overall performance for some data types and operations, and minimal or even none for others. In any case, this transformation is required to eliminate inefficiencies that would become bottlenecks as we attempt further optimizations.</p>
<table id="P700049702700000000000000004310E" data-uri="chapter05.xhtml#P700049702700000000000000004310E" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000004310F" data-uri="chapter05.xhtml#P700049702700000000000000004310F" class="calibre18 pcalibre pcalibre1"/>
<th id="P7000497027000000000000000043110" data-uri="chapter05.xhtml#P7000497027000000000000000043110" class="calibre18 pcalibre pcalibre1"/>
<th id="P7000497027000000000000000043111" data-uri="chapter05.xhtml#P7000497027000000000000000043111" class="calibre18 pcalibre pcalibre1"/>
<th colspan="2" id="P7000497027000000000000000043112" data-uri="chapter05.xhtml#P7000497027000000000000000043112" class="calibre18 pcalibre pcalibre1">Integer</th>
<th colspan="2" id="P7000497027000000000000000043113" data-uri="chapter05.xhtml#P7000497027000000000000000043113" class="calibre18 pcalibre pcalibre1">Floating point</th>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<th id="P7000497027000000000000000043114" data-uri="chapter05.xhtml#P7000497027000000000000000043114" class="calibre18 pcalibre pcalibre1">Function</th>
<th id="P7000497027000000000000000043115" data-uri="chapter05.xhtml#P7000497027000000000000000043115" class="calibre18 pcalibre pcalibre1">Page</th>
<th id="P7000497027000000000000000043116" data-uri="chapter05.xhtml#P7000497027000000000000000043116" class="calibre18 pcalibre pcalibre1">Method</th>
<th id="P7000497027000000000000000043117" data-uri="chapter05.xhtml#P7000497027000000000000000043117" class="calibre18 pcalibre pcalibre1">+</th>
<th id="P7000497027000000000000000043118" data-uri="chapter05.xhtml#P7000497027000000000000000043118" class="calibre18 pcalibre pcalibre1">*</th>
<th id="P7000497027000000000000000043119" data-uri="chapter05.xhtml#P7000497027000000000000000043119" class="calibre18 pcalibre pcalibre1">+</th>
<th id="P700049702700000000000000004311A" data-uri="chapter05.xhtml#P700049702700000000000000004311A" class="calibre18 pcalibre pcalibre1">*</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004311B" data-uri="chapter05.xhtml#P700049702700000000000000004311B" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004311C" data-uri="chapter05.xhtml#P700049702700000000000000004311C" class="calibre10 pcalibre pcalibre1">combine1</code></td>
<td id="P700049702700000000000000004311D" data-uri="chapter05.xhtml#P700049702700000000000000004311D" class="calibre20 pcalibre pcalibre1">507	Abstract <code id="P700049702700000000000000004311E" data-uri="chapter05.xhtml#P700049702700000000000000004311E" class="calibre10 pcalibre pcalibre1">âˆ’01</code></td>
<td id="P700049702700000000000000004311F" data-uri="chapter05.xhtml#P700049702700000000000000004311F" class="calibre20 pcalibre pcalibre1">10.12</td>
<td id="P7000497027000000000000000043120" data-uri="chapter05.xhtml#P7000497027000000000000000043120" class="calibre20 pcalibre pcalibre1">10.12</td>
<td id="P7000497027000000000000000043121" data-uri="chapter05.xhtml#P7000497027000000000000000043121" class="calibre20 pcalibre pcalibre1">10.17</td>
<td id="P7000497027000000000000000043122" data-uri="chapter05.xhtml#P7000497027000000000000000043122" class="calibre20 pcalibre pcalibre1">11.14</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000043123" data-uri="chapter05.xhtml#P7000497027000000000000000043123" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000043124" data-uri="chapter05.xhtml#P7000497027000000000000000043124" class="calibre10 pcalibre pcalibre1">combine2</code></td>
<td id="P7000497027000000000000000043125" data-uri="chapter05.xhtml#P7000497027000000000000000043125" class="calibre20 pcalibre pcalibre1">509</td>
<td id="P7000497027000000000000000043126" data-uri="chapter05.xhtml#P7000497027000000000000000043126" class="calibre20 pcalibre pcalibre1">Move <code id="P7000497027000000000000000043127" data-uri="chapter05.xhtml#P7000497027000000000000000043127" class="calibre10 pcalibre pcalibre1">vec_length</code></td>
<td id="P7000497027000000000000000043128" data-uri="chapter05.xhtml#P7000497027000000000000000043128" class="calibre20 pcalibre pcalibre1">7.02</td>
<td id="P7000497027000000000000000043129" data-uri="chapter05.xhtml#P7000497027000000000000000043129" class="calibre20 pcalibre pcalibre1">9.03</td>
<td id="P700049702700000000000000004312A" data-uri="chapter05.xhtml#P700049702700000000000000004312A" class="calibre20 pcalibre pcalibre1">9.02</td>
<td id="P700049702700000000000000004312B" data-uri="chapter05.xhtml#P700049702700000000000000004312B" class="calibre20 pcalibre pcalibre1">11.03</td>
</tr>
</tbody>
</table>
<p id="P700049702700000000000000004312C" data-uri="chapter05.xhtml#P700049702700000000000000004312C" class="pcalibre1 pcalibre calibre2">This optimization is an instance of a general class of optimizations known as <i class="calibre5 pcalibre pcalibre1">code motion.</i> They involve identifying a computation that is performed multiple</p>
<figure class="pcalibre5 figure pcalibre" id="P70004970270000000000000000049F6" data-uri="chapter05.xhtml#P70004970270000000000000000049F6">
<pre id="P700049702700000000000000004312D" data-uri="chapter05.xhtml#P700049702700000000000000004312D" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004312E" data-uri="chapter05.xhtml#P700049702700000000000000004312E" class="calibre10 pcalibre pcalibre1">
<span class="pcalibre pagebreak1 pcalibre1" id="P70004970270000000000000000049F9" title="509" data-uri="chapter05.xhtml#P70004970270000000000000000049F9" epub:type="pagebreak"></span>1	/* Move call to vec_length out of loop */
2	void combine2(vec_ptr v, data_t *dest)
3	{
4		long i;
5		long length = vec_length(v);
6	
7		*dest = IDENT;
8		for (i = 0; i &lt; length; i++) {
9			data_t val;
10			get_vec_element(v, i, &amp;val);
11			*dest = *dest OP val;
12		}
13	}
</code></pre>
<figcaption id="P700049702700000000000000004312F" data-uri="chapter05.xhtml#P700049702700000000000000004312F" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000043130" data-uri="chapter05.xhtml#P7000497027000000000000000043130" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">5.6 </span>Improving the efficiency of the loop test.</h1></header>
<div class="caption pcalibre pcalibre1" id="P7000497027000000000000000043131" data-uri="chapter05.xhtml#P7000497027000000000000000043131"><p id="P7000497027000000000000000043132" data-uri="chapter05.xhtml#P7000497027000000000000000043132" class="pcalibre calibre3 pcalibre1">By moving the call to <code id="P7000497027000000000000000043133" data-uri="chapter05.xhtml#P7000497027000000000000000043133" class="pcalibre1 calibre8 pcalibre">vec_length</code> out of the loop test, we eliminate the need to execute it on every iteration.</p></div></figcaption></figure>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000043134" data-uri="chapter05.xhtml#P7000497027000000000000000043134">times, (e.g., within a loop), but such that the result of the computation will not change. We can therefore move the computation to an earlier section of the code that does not get evaluated as often. In this case, we moved the call to <code id="P7000497027000000000000000043135" data-uri="chapter05.xhtml#P7000497027000000000000000043135" class="pcalibre1 calibre8 pcalibre">vec_length</code> from within the loop to just before the loop.</p>
<p id="P7000497027000000000000000043136" data-uri="chapter05.xhtml#P7000497027000000000000000043136" class="pcalibre1 pcalibre calibre2">Optimizing compilers attempt to perform code motion. Unfortunately, as discussed previously, they are typically very cautious about making transformations that change where or how many times a procedure is called. They cannot reliably detect whether or not a function will have side effects, and so they assume that it might. For example, if <code id="P7000497027000000000000000043137" data-uri="chapter05.xhtml#P7000497027000000000000000043137" class="pcalibre1 calibre8 pcalibre">vec_length</code> had some side effect, then <code id="P7000497027000000000000000043138" data-uri="chapter05.xhtml#P7000497027000000000000000043138" class="pcalibre1 calibre8 pcalibre">combine1</code> and <code id="P7000497027000000000000000043139" data-uri="chapter05.xhtml#P7000497027000000000000000043139" class="pcalibre1 calibre8 pcalibre">combine2</code> could have different behaviors. To improve the code, the programmer must often help the compiler by explicitly performing code motion.</p>
<p id="P700049702700000000000000004313A" data-uri="chapter05.xhtml#P700049702700000000000000004313A" class="pcalibre1 pcalibre calibre2">As an extreme example of the loop inefficiency seen in <code id="P700049702700000000000000004313B" data-uri="chapter05.xhtml#P700049702700000000000000004313B" class="pcalibre1 calibre8 pcalibre">combine1</code>, consider the procedure <code id="P700049702700000000000000004313C" data-uri="chapter05.xhtml#P700049702700000000000000004313C" class="pcalibre1 calibre8 pcalibre">lower1</code> shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000004A11"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.7</span></a>. This procedure is styled after routines submitted by several students as part of a network programming project. Its purpose is to convert all of the uppercase letters in a string to lowercase. The procedure steps through the string, converting each uppercase character to lowercase. The case conversion involves shifting characters in the range `A' to `Z' to the range `a' to `z'.</p>
<p id="P700049702700000000000000004313D" data-uri="chapter05.xhtml#P700049702700000000000000004313D" class="pcalibre1 pcalibre calibre2">The library function <code id="P700049702700000000000000004313E" data-uri="chapter05.xhtml#P700049702700000000000000004313E" class="pcalibre1 calibre8 pcalibre">strlen</code> is called as part of the loop test of <code id="P700049702700000000000000004313F" data-uri="chapter05.xhtml#P700049702700000000000000004313F" class="pcalibre1 calibre8 pcalibre">lower1</code>. Although <code id="P7000497027000000000000000043140" data-uri="chapter05.xhtml#P7000497027000000000000000043140" class="pcalibre1 calibre8 pcalibre">strlen</code> is typically implemented with special x86 string-processing instructions, its overall execution is similar to the simple version that is also shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000004A11"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.7</span></a>. Since strings in C are null-terminated character sequences, <code id="P7000497027000000000000000043141" data-uri="chapter05.xhtml#P7000497027000000000000000043141" class="pcalibre1 calibre8 pcalibre">strlen</code> can only determine the length of a string by stepping through the sequence until it hits a null character. For a string of length <var class="calibre5 pcalibre pcalibre1">n</var>, <code id="P7000497027000000000000000043142" data-uri="chapter05.xhtml#P7000497027000000000000000043142" class="pcalibre1 calibre8 pcalibre">strlen</code> takes time proportional to <i class="calibre5 pcalibre pcalibre1">n.</i> Since <code id="P7000497027000000000000000043143" data-uri="chapter05.xhtml#P7000497027000000000000000043143" class="pcalibre1 calibre8 pcalibre">strlen</code> is called in each of the <var class="calibre5 pcalibre pcalibre1">n</var> iterations of <code id="P7000497027000000000000000043144" data-uri="chapter05.xhtml#P7000497027000000000000000043144" class="pcalibre1 calibre8 pcalibre">lower1</code>, the overall run time of <code id="P7000497027000000000000000043145" data-uri="chapter05.xhtml#P7000497027000000000000000043145" class="pcalibre1 calibre8 pcalibre">lower1</code> is quadratic in the string length, proportional to <var class="calibre5 pcalibre pcalibre1">n</var><sup class="calibre51 pcalibre pcalibre1">2</sup>.</p>

<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000004A11" data-uri="chapter05.xhtml#P7000497027000000000000000004A11">

<pre id="P7000497027000000000000000043146" data-uri="chapter05.xhtml#P7000497027000000000000000043146" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000043147" data-uri="chapter05.xhtml#P7000497027000000000000000043147" class="calibre10 pcalibre pcalibre1">
<span class="pcalibre pagebreak1 pcalibre1" id="P7000497027000000000000000004A14" title="510" data-uri="chapter05.xhtml#P7000497027000000000000000004A14" epub:type="pagebreak"></span>1	/* Convert string to lowercase: slow */
2	void lower1(char *s)
3	{
4		long i;
5	
6		for (i = 0; i &lt; strlen(s); i++)
7			if (s[i] &gt;= `A' &amp;&amp; s[i] &lt;= `Z')
8				s[i] -= (`A' - `a');
9	}
10	
11	/* Convert string to lowercase: faster */
12	void lower2(char *s)
13	{
14		long i;
15		long len = strlen(s);
16	
17		for (i = 0; i &lt; len; i++)
18			if (s[i] &gt;= `A' &amp;&amp; s[i] &lt;= `Z')
19				s[i] -= (`A' - `a');
20	}
21	
22	/* Sample implementation of library function strlen */
23	/* Compute length of string */
24	size_t strlen(const char *s)
25	{
26		long length = 0;
27		while (*s != `\0') {
28				s++;
29				length++;
30		}
31		return length;
32	}
</code></pre>
<figcaption id="P7000497027000000000000000043148" data-uri="chapter05.xhtml#P7000497027000000000000000043148" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000043149" data-uri="chapter05.xhtml#P7000497027000000000000000043149" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">5.7 </span>Lowercase conversion routines.</h1></header>
<div class="caption pcalibre pcalibre1" id="P700049702700000000000000004314A" data-uri="chapter05.xhtml#P700049702700000000000000004314A"><p id="P700049702700000000000000004314B" data-uri="chapter05.xhtml#P700049702700000000000000004314B" class="pcalibre calibre3 pcalibre1">The two procedures have radically different performance.</p></div></figcaption></figure>
<p id="P700049702700000000000000004314C" data-uri="chapter05.xhtml#P700049702700000000000000004314C" class="pcalibre1 pcalibre calibre2">This analysis is confirmed by actual measurements of the functions for different length strings, as shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000004A1E"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.8</span></a> (and using the library version of <code id="P700049702700000000000000004314D" data-uri="chapter05.xhtml#P700049702700000000000000004314D" class="pcalibre1 calibre8 pcalibre">strlen</code>). The graph of the run time for <code id="P700049702700000000000000004314E" data-uri="chapter05.xhtml#P700049702700000000000000004314E" class="pcalibre1 calibre8 pcalibre">lower1</code> rises steeply as the string length increases (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000004A1E"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.8(a)</span></a>). <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000004A1E"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.8(b)</span></a> shows the run times for seven different lengths (not the same as shown in the graph), each of which is a power of 2. Observe that for <code id="P700049702700000000000000004314F" data-uri="chapter05.xhtml#P700049702700000000000000004314F" class="pcalibre1 calibre8 pcalibre">lower1</code> each doubling of the string length causes a quadrupling of the run time. This is a clear indicator of a quadratic run time. For a string of length 1,048,576, <code id="P7000497027000000000000000043150" data-uri="chapter05.xhtml#P7000497027000000000000000043150" class="pcalibre1 calibre8 pcalibre">lower1</code> requires over 17 minutes of CPU time.</p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000004A1E" data-uri="chapter05.xhtml#P7000497027000000000000000004A1E">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000004A1F" title="511" data-uri="chapter05.xhtml#P7000497027000000000000000004A1F" epub:type="pagebreak"></span>
<img alt="A graph and table depict CPU seconds versus string length for lower1 and lower2." id="P7000497027000000000000000043151" data-uri="P700049702700000000000000000B710" src="../images/p511-1.png" class="pcalibre1 pcalibre calibre170"/>
<table class="pcalibre largetable pcalibre1" id="P7000497027000000000000000043152" data-uri="chapter05.xhtml#P7000497027000000000000000043152">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th colspan="8" id="P7000497027000000000000000043153" data-uri="chapter05.xhtml#P7000497027000000000000000043153" class="calibre18 pcalibre pcalibre1">String length</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000043154" data-uri="chapter05.xhtml#P7000497027000000000000000043154" class="calibre20 pcalibre pcalibre1">Function</td>
<td id="P7000497027000000000000000043155" data-uri="chapter05.xhtml#P7000497027000000000000000043155" class="calibre20 pcalibre pcalibre1">16,384</td>
<td id="P7000497027000000000000000043156" data-uri="chapter05.xhtml#P7000497027000000000000000043156" class="calibre20 pcalibre pcalibre1">32,768</td>
<td id="P7000497027000000000000000043157" data-uri="chapter05.xhtml#P7000497027000000000000000043157" class="calibre20 pcalibre pcalibre1">65,536</td>
<td id="P7000497027000000000000000043158" data-uri="chapter05.xhtml#P7000497027000000000000000043158" class="calibre20 pcalibre pcalibre1">131,072</td>
<td id="P7000497027000000000000000043159" data-uri="chapter05.xhtml#P7000497027000000000000000043159" class="calibre20 pcalibre pcalibre1">262,144</td>
<td id="P700049702700000000000000004315A" data-uri="chapter05.xhtml#P700049702700000000000000004315A" class="calibre20 pcalibre pcalibre1">524,288</td>
<td id="P700049702700000000000000004315B" data-uri="chapter05.xhtml#P700049702700000000000000004315B" class="calibre20 pcalibre pcalibre1">1,048,576</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004315C" data-uri="chapter05.xhtml#P700049702700000000000000004315C" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000004315D" data-uri="chapter05.xhtml#P700049702700000000000000004315D" class="calibre10 pcalibre pcalibre1">lower1</code></td>
<td id="P700049702700000000000000004315E" data-uri="chapter05.xhtml#P700049702700000000000000004315E" class="calibre20 pcalibre pcalibre1">0.26</td>
<td id="P700049702700000000000000004315F" data-uri="chapter05.xhtml#P700049702700000000000000004315F" class="calibre20 pcalibre pcalibre1">1.03</td>
<td id="P7000497027000000000000000043160" data-uri="chapter05.xhtml#P7000497027000000000000000043160" class="calibre20 pcalibre pcalibre1">4.10</td>
<td id="P7000497027000000000000000043161" data-uri="chapter05.xhtml#P7000497027000000000000000043161" class="calibre20 pcalibre pcalibre1">16.41</td>
<td id="P7000497027000000000000000043162" data-uri="chapter05.xhtml#P7000497027000000000000000043162" class="calibre20 pcalibre pcalibre1">65.62</td>
<td id="P7000497027000000000000000043163" data-uri="chapter05.xhtml#P7000497027000000000000000043163" class="calibre20 pcalibre pcalibre1">262.48</td>
<td id="P7000497027000000000000000043164" data-uri="chapter05.xhtml#P7000497027000000000000000043164" class="calibre20 pcalibre pcalibre1">1,049.89</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000043165" data-uri="chapter05.xhtml#P7000497027000000000000000043165" class="calibre20 pcalibre pcalibre1"><code id="P7000497027000000000000000043166" data-uri="chapter05.xhtml#P7000497027000000000000000043166" class="calibre10 pcalibre pcalibre1">lower2</code></td>
<td id="P7000497027000000000000000043167" data-uri="chapter05.xhtml#P7000497027000000000000000043167" class="calibre20 pcalibre pcalibre1">0.0000</td>
<td id="P7000497027000000000000000043168" data-uri="chapter05.xhtml#P7000497027000000000000000043168" class="calibre20 pcalibre pcalibre1">0.0001</td>
<td id="P7000497027000000000000000043169" data-uri="chapter05.xhtml#P7000497027000000000000000043169" class="calibre20 pcalibre pcalibre1">0.0001</td>
<td id="P700049702700000000000000004316A" data-uri="chapter05.xhtml#P700049702700000000000000004316A" class="calibre20 pcalibre pcalibre1">0.0003</td>
<td id="P700049702700000000000000004316B" data-uri="chapter05.xhtml#P700049702700000000000000004316B" class="calibre20 pcalibre pcalibre1">0.0005</td>
<td id="P700049702700000000000000004316C" data-uri="chapter05.xhtml#P700049702700000000000000004316C" class="calibre20 pcalibre pcalibre1">0.0010</td>
<td id="P700049702700000000000000004316D" data-uri="chapter05.xhtml#P700049702700000000000000004316D" class="calibre20 pcalibre pcalibre1">0.0020</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td colspan="8" id="P700049702700000000000000004316E" data-uri="chapter05.xhtml#P700049702700000000000000004316E" class="calibre20 pcalibre pcalibre1">(b)</td>
</tr>
</tbody>
</table>
<figcaption id="P700049702700000000000000004316F" data-uri="chapter05.xhtml#P700049702700000000000000004316F" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000043170" data-uri="chapter05.xhtml#P7000497027000000000000000043170" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">5.8 </span>Comparative performance of lowercase conversion routines.</h1></header>
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000043171" data-uri="chapter05.xhtml#P7000497027000000000000000043171"><p id="P7000497027000000000000000043172" data-uri="chapter05.xhtml#P7000497027000000000000000043172" class="pcalibre calibre3 pcalibre1">The original code <code id="P7000497027000000000000000043173" data-uri="chapter05.xhtml#P7000497027000000000000000043173" class="pcalibre1 calibre8 pcalibre">lower1</code> has a quadratic run time due to an inefficient loop structure. The modified code <code id="P7000497027000000000000000043174" data-uri="chapter05.xhtml#P7000497027000000000000000043174" class="pcalibre1 calibre8 pcalibre">lower2</code> has a linear run time.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000023453" data-uri="chapter05.xhtml#P7000497027000000000000000023453">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<ol class="pcalibre1 ol_lower-alpha pcalibre" id="P7000497027000000000000000043175" data-uri="chapter05.xhtml#P7000497027000000000000000043175">
<li id="P7000497027000000000000000043176" data-uri="chapter05.xhtml#P7000497027000000000000000043176" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000043177" data-uri="chapter05.xhtml#P7000497027000000000000000043177" class="pcalibre calibre3 pcalibre1">A graph of GPU seconds versus string length shows lower1 increasing exponentially and lower2 remaining nearly horizontal around 0 cpu seconds.</p></li>
<li id="P7000497027000000000000000043178" data-uri="chapter05.xhtml#P7000497027000000000000000043178" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000043179" data-uri="chapter05.xhtml#P7000497027000000000000000043179" class="pcalibre calibre3 pcalibre1">A table depicts the data in the graph:</p></li>
</ol>
<table class="pcalibre largetable pcalibre1" id="P700049702700000000000000004317A" data-uri="chapter05.xhtml#P700049702700000000000000004317A">
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004317B" data-uri="chapter05.xhtml#P700049702700000000000000004317B" class="calibre20 pcalibre pcalibre1">Function</td>
<td colspan="7" id="P700049702700000000000000004317C" data-uri="chapter05.xhtml#P700049702700000000000000004317C" class="calibre20 pcalibre pcalibre1">String length</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td class="calibre20 pcalibre pcalibre1"/>
<td id="P700049702700000000000000004317D" data-uri="chapter05.xhtml#P700049702700000000000000004317D" class="calibre20 pcalibre pcalibre1">16,384</td>
<td id="P700049702700000000000000004317E" data-uri="chapter05.xhtml#P700049702700000000000000004317E" class="calibre20 pcalibre pcalibre1">32,768</td>
<td id="P700049702700000000000000004317F" data-uri="chapter05.xhtml#P700049702700000000000000004317F" class="calibre20 pcalibre pcalibre1">65,536</td>
<td id="P7000497027000000000000000043180" data-uri="chapter05.xhtml#P7000497027000000000000000043180" class="calibre20 pcalibre pcalibre1">131,072</td>
<td id="P7000497027000000000000000043181" data-uri="chapter05.xhtml#P7000497027000000000000000043181" class="calibre20 pcalibre pcalibre1">262,144</td>
<td id="P7000497027000000000000000043182" data-uri="chapter05.xhtml#P7000497027000000000000000043182" class="calibre20 pcalibre pcalibre1">524,288</td>
<td id="P7000497027000000000000000043183" data-uri="chapter05.xhtml#P7000497027000000000000000043183" class="calibre20 pcalibre pcalibre1">1,048,576</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000043184" data-uri="chapter05.xhtml#P7000497027000000000000000043184" class="calibre20 pcalibre pcalibre1">Lower1</td>
<td id="P7000497027000000000000000043185" data-uri="chapter05.xhtml#P7000497027000000000000000043185" class="calibre20 pcalibre pcalibre1">0.26</td>
<td id="P7000497027000000000000000043186" data-uri="chapter05.xhtml#P7000497027000000000000000043186" class="calibre20 pcalibre pcalibre1">1.03</td>
<td id="P7000497027000000000000000043187" data-uri="chapter05.xhtml#P7000497027000000000000000043187" class="calibre20 pcalibre pcalibre1">4.10</td>
<td id="P7000497027000000000000000043188" data-uri="chapter05.xhtml#P7000497027000000000000000043188" class="calibre20 pcalibre pcalibre1">16.41</td>
<td id="P7000497027000000000000000043189" data-uri="chapter05.xhtml#P7000497027000000000000000043189" class="calibre20 pcalibre pcalibre1">65.62</td>
<td id="P700049702700000000000000004318A" data-uri="chapter05.xhtml#P700049702700000000000000004318A" class="calibre20 pcalibre pcalibre1">262.48</td>
<td id="P700049702700000000000000004318B" data-uri="chapter05.xhtml#P700049702700000000000000004318B" class="calibre20 pcalibre pcalibre1">1,049.89</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000004318C" data-uri="chapter05.xhtml#P700049702700000000000000004318C" class="calibre20 pcalibre pcalibre1">Lower2</td>
<td id="P700049702700000000000000004318D" data-uri="chapter05.xhtml#P700049702700000000000000004318D" class="calibre20 pcalibre pcalibre1">0.0000</td>
<td id="P700049702700000000000000004318E" data-uri="chapter05.xhtml#P700049702700000000000000004318E" class="calibre20 pcalibre pcalibre1">0.0001</td>
<td id="P700049702700000000000000004318F" data-uri="chapter05.xhtml#P700049702700000000000000004318F" class="calibre20 pcalibre pcalibre1">0.0001</td>
<td id="P7000497027000000000000000043190" data-uri="chapter05.xhtml#P7000497027000000000000000043190" class="calibre20 pcalibre pcalibre1">0.0003</td>
<td id="P7000497027000000000000000043191" data-uri="chapter05.xhtml#P7000497027000000000000000043191" class="calibre20 pcalibre pcalibre1">0.0005</td>
<td id="P7000497027000000000000000043192" data-uri="chapter05.xhtml#P7000497027000000000000000043192" class="calibre20 pcalibre pcalibre1">0.0010</td>
<td id="P7000497027000000000000000043193" data-uri="chapter05.xhtml#P7000497027000000000000000043193" class="calibre20 pcalibre pcalibre1">0.0020</td>
</tr>
</tbody>
</table>
</details>

</figcaption></figure>
<p id="P7000497027000000000000000043194" data-uri="chapter05.xhtml#P7000497027000000000000000043194" class="pcalibre1 pcalibre calibre2">Function <code id="P7000497027000000000000000043195" data-uri="chapter05.xhtml#P7000497027000000000000000043195" class="pcalibre1 calibre8 pcalibre">lower2</code> shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000004A11"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">5.7</span></a> is identical to that of <code id="P7000497027000000000000000043196" data-uri="chapter05.xhtml#P7000497027000000000000000043196" class="pcalibre1 calibre8 pcalibre">lower1</code>, except that we have moved the call to <code id="P7000497027000000000000000043197" data-uri="chapter05.xhtml#P7000497027000000000000000043197" class="pcalibre1 calibre8 pcalibre">strlen</code> out of the loop. The performance improves dramatically. For a string length of 1,048,576, the function requires just 2.0 millisecondsâ€”over 500,000 times faster than <code id="P7000497027000000000000000043198" data-uri="chapter05.xhtml#P7000497027000000000000000043198" class="pcalibre1 calibre8 pcalibre">lower1</code>. Each doubling of the string length causes a doubling of the run timeâ€”a clear indicator of linear run time. For longer strings, the run-time improvement will be even greater.</p>
<p id="P7000497027000000000000000043199" data-uri="chapter05.xhtml#P7000497027000000000000000043199" class="pcalibre1 pcalibre calibre2">In an ideal world, a compiler would recognize that each call to <code id="P700049702700000000000000004319A" data-uri="chapter05.xhtml#P700049702700000000000000004319A" class="pcalibre1 calibre8 pcalibre">strlen</code> in the loop test will return the same result, and thus the call could be moved out of the loop. This would require a very sophisticated analysis, since <code id="P700049702700000000000000004319B" data-uri="chapter05.xhtml#P700049702700000000000000004319B" class="pcalibre1 calibre8 pcalibre">strlen</code> checks the elements of the string and these values are changing as <code id="P700049702700000000000000004319C" data-uri="chapter05.xhtml#P700049702700000000000000004319C" class="pcalibre1 calibre8 pcalibre">lower1</code> proceeds. The compiler would need to detect that even though the characters within the string are changing, none are being set from nonzero to zero, or vice versa. Such an analysis is well beyond the ability of even the most sophisticated compilers, even if they employ inlining, and so programmers must do such transformations themselves.</p>
<p id="P700049702700000000000000004319D" data-uri="chapter05.xhtml#P700049702700000000000000004319D" class="pcalibre1 pcalibre calibre2">This example illustrates a common problem in writing programs, in which a seemingly trivial piece of code has a hidden asymptotic inefficiency. One would not expect a lowercase conversion routine to be a limiting factor in a program's performance. Typically, programs are tested and analyzed on small data sets, for which the performance of <code id="P700049702700000000000000004319E" data-uri="chapter05.xhtml#P700049702700000000000000004319E" class="pcalibre1 calibre8 pcalibre">lower1</code> is adequate. When the program is ultimately <span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000004A4F" title="512" data-uri="chapter05.xhtml#P7000497027000000000000000004A4F" epub:type="pagebreak"></span>deployed, however, it is entirely possible that the procedure could be applied to strings of over one million characters. All of a sudden this benign piece of code has become a major performance bottleneck. By contrast, the performance of <code id="P700049702700000000000000004319F" data-uri="chapter05.xhtml#P700049702700000000000000004319F" class="pcalibre1 calibre8 pcalibre">lower2</code> will be adequate for strings of arbitrary length. Stories abound of major programming projects in which problems of this sort occur. Part of the job of a competent programmer is to avoid ever introducing such asymptotic inefficiency.</p>
<section id="P7000497027000000000000000004A51" data-uri="chapter05.xhtml#P7000497027000000000000000004A51" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000431A0" data-uri="chapter05.xhtml#P70004970270000000000000000431A0" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">5.3 </span>(solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000005090.xhtml#P70004970270000000000000000050DD">573</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P70004970270000000000000000431A1" data-uri="chapter05.xhtml#P70004970270000000000000000431A1">
<li class="general-problem pcalibre pcalibre1" id="P70004970270000000000000000431A2" data-uri="chapter05.xhtml#P70004970270000000000000000431A2">
<div class="edition pcalibre pcalibre1" id="P70004970270000000000000000431A3" data-uri="chapter05.xhtml#P70004970270000000000000000431A3"><p id="P70004970270000000000000000431A4" data-uri="chapter05.xhtml#P70004970270000000000000000431A4" class="pcalibre calibre3 pcalibre1">Consider the following functions:</p>
<pre id="P70004970270000000000000000431A5" data-uri="chapter05.xhtml#P70004970270000000000000000431A5" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000431A6" data-uri="chapter05.xhtml#P70004970270000000000000000431A6" class="calibre10 pcalibre pcalibre1">
long min(long x, long y) { return x &lt; y ? x : y; }
long max(long x, long y) { return x &lt; y ? y : x; }
void incr(long *xp, long v) { *xp += v; }
long square(long x) { return x*x; }
</code></pre>
<p id="P70004970270000000000000000431A7" data-uri="chapter05.xhtml#P70004970270000000000000000431A7" class="pcalibre calibre3 pcalibre1">The following three code fragments call these functions:</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P70004970270000000000000000431A8" data-uri="chapter05.xhtml#P70004970270000000000000000431A8">
<li id="P70004970270000000000000000431A9" data-uri="chapter05.xhtml#P70004970270000000000000000431A9" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000431AA" data-uri="chapter05.xhtml#P70004970270000000000000000431AA" class="pcalibre calibre3 pcalibre1"></p>
<pre id="P70004970270000000000000000431AB" data-uri="chapter05.xhtml#P70004970270000000000000000431AB" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000431AC" data-uri="chapter05.xhtml#P70004970270000000000000000431AC" class="calibre10 pcalibre pcalibre1">for (i = min(x, y); i &lt; max(x, y); incr(&amp;i, 1))
    t += square(i);
</code></pre>
<p id="P70004970270000000000000000431AD" data-uri="chapter05.xhtml#P70004970270000000000000000431AD" class="pcalibre calibre3 pcalibre1">Â </p>
</li>
<li id="P70004970270000000000000000431AE" data-uri="chapter05.xhtml#P70004970270000000000000000431AE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000431AF" data-uri="chapter05.xhtml#P70004970270000000000000000431AF" class="pcalibre calibre3 pcalibre1"></p>
<pre id="P70004970270000000000000000431B0" data-uri="chapter05.xhtml#P70004970270000000000000000431B0" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000431B1" data-uri="chapter05.xhtml#P70004970270000000000000000431B1" class="calibre10 pcalibre pcalibre1">for (i = max(x, y) - 1; i &gt;= min(x, y); incr(&amp;i, âˆ’1))
    t += square(i);
</code></pre>
<p id="P70004970270000000000000000431B2" data-uri="chapter05.xhtml#P70004970270000000000000000431B2" class="pcalibre calibre3 pcalibre1">Â </p>
</li>
<li id="P70004970270000000000000000431B3" data-uri="chapter05.xhtml#P70004970270000000000000000431B3" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000431B4" data-uri="chapter05.xhtml#P70004970270000000000000000431B4" class="pcalibre calibre3 pcalibre1"></p>
<pre id="P70004970270000000000000000431B5" data-uri="chapter05.xhtml#P70004970270000000000000000431B5" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000431B6" data-uri="chapter05.xhtml#P70004970270000000000000000431B6" class="calibre10 pcalibre pcalibre1">long low = min(x, y);
long high = max(x, y);</code></pre>
<p id="P70004970270000000000000000431B7" data-uri="chapter05.xhtml#P70004970270000000000000000431B7" class="pcalibre calibre3 pcalibre1">Â </p>
<pre id="P70004970270000000000000000431B8" data-uri="chapter05.xhtml#P70004970270000000000000000431B8" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000431B9" data-uri="chapter05.xhtml#P70004970270000000000000000431B9" class="calibre10 pcalibre pcalibre1">for (i = low; i &lt; high; incr(&amp;i, 1))
    t += square(i);
</code></pre>
</li></ol>
<p class="pcalibre calibre3 pcalibre1" id="P70004970270000000000000000431BA" data-uri="chapter05.xhtml#P70004970270000000000000000431BA">Assume <code id="P70004970270000000000000000431BB" data-uri="chapter05.xhtml#P70004970270000000000000000431BB" class="pcalibre1 calibre8 pcalibre">x</code> equals 10 and <code id="P70004970270000000000000000431BC" data-uri="chapter05.xhtml#P70004970270000000000000000431BC" class="pcalibre1 calibre8 pcalibre">y</code> equals 100. Fill in the following table indicating the number of times each of the four functions is called in code fragments Aâ€“C:</p></div></li>
</ol>
<table id="P70004970270000000000000000431BD" data-uri="chapter05.xhtml#P70004970270000000000000000431BD" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P70004970270000000000000000431BE" data-uri="chapter05.xhtml#P70004970270000000000000000431BE" class="calibre18 pcalibre pcalibre1">Code</th>
<th id="P70004970270000000000000000431BF" data-uri="chapter05.xhtml#P70004970270000000000000000431BF" class="calibre18 pcalibre pcalibre1"><code id="P70004970270000000000000000431C0" data-uri="chapter05.xhtml#P70004970270000000000000000431C0" class="calibre10 pcalibre pcalibre1">min</code></th>
<th id="P70004970270000000000000000431C1" data-uri="chapter05.xhtml#P70004970270000000000000000431C1" class="calibre18 pcalibre pcalibre1"><code id="P70004970270000000000000000431C2" data-uri="chapter05.xhtml#P70004970270000000000000000431C2" class="calibre10 pcalibre pcalibre1">max</code></th>
<th id="P70004970270000000000000000431C3" data-uri="chapter05.xhtml#P70004970270000000000000000431C3" class="calibre18 pcalibre pcalibre1"><code id="P70004970270000000000000000431C4" data-uri="chapter05.xhtml#P70004970270000000000000000431C4" class="calibre10 pcalibre pcalibre1">incr</code></th>
<th id="P70004970270000000000000000431C5" data-uri="chapter05.xhtml#P70004970270000000000000000431C5" class="calibre18 pcalibre pcalibre1"><code id="P70004970270000000000000000431C6" data-uri="chapter05.xhtml#P70004970270000000000000000431C6" class="calibre10 pcalibre pcalibre1">square</code></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000431C7" data-uri="chapter05.xhtml#P70004970270000000000000000431C7" class="calibre20 pcalibre pcalibre1">A.</td>
<td id="P70004970270000000000000000431C8" data-uri="chapter05.xhtml#P70004970270000000000000000431C8" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431C9" data-uri="chapter05.xhtml#P70004970270000000000000000431C9" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431CA" data-uri="chapter05.xhtml#P70004970270000000000000000431CA" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431CB" data-uri="chapter05.xhtml#P70004970270000000000000000431CB" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000431CC" data-uri="chapter05.xhtml#P70004970270000000000000000431CC" class="calibre20 pcalibre pcalibre1">B.</td>
<td id="P70004970270000000000000000431CD" data-uri="chapter05.xhtml#P70004970270000000000000000431CD" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431CE" data-uri="chapter05.xhtml#P70004970270000000000000000431CE" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431CF" data-uri="chapter05.xhtml#P70004970270000000000000000431CF" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431D0" data-uri="chapter05.xhtml#P70004970270000000000000000431D0" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000431D1" data-uri="chapter05.xhtml#P70004970270000000000000000431D1" class="calibre20 pcalibre pcalibre1">C.</td>
<td id="P70004970270000000000000000431D2" data-uri="chapter05.xhtml#P70004970270000000000000000431D2" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431D3" data-uri="chapter05.xhtml#P70004970270000000000000000431D3" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431D4" data-uri="chapter05.xhtml#P70004970270000000000000000431D4" class="calibre20 pcalibre pcalibre1">_____</td>
<td id="P70004970270000000000000000431D5" data-uri="chapter05.xhtml#P70004970270000000000000000431D5" class="calibre20 pcalibre pcalibre1">_____</td>
</tr>
</tbody>
</table>
</section>
</section></body></html>
