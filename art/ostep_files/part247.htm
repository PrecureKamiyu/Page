<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Questions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part246.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part248.htm">下一个 &gt;</a></p><p class="s32" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">Questions</p><p class="s4" style="padding-top: 4pt;padding-left: 82pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">• <span class="p">Generate random addresses with the following arguments: </span><span class="s41">-s 0</span></p><p class="s41" style="padding-left: 91pt;text-indent: 0pt;line-height: 88%;text-align: justify;">-n 10<span class="p">, </span>-s 1 -n 10<span class="p">, and </span>-s 2 -n 10<span class="p">. Change the policy from FIFO, to LRU, to OPT. Compute whether each access in said address traces are hits or misses.</span></p><p class="s4" style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="p">For a cache of size 5, generate worst-case address reference streams for each of the following policies: FIFO, LRU, and MRU (worst-case reference streams cause the most misses possible. For the worst case reference streams, how much bigger of a cache is needed to improve performance dramatically and approach OPT?</span></p><p class="s4" style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="p">Generate a random trace (use python or perl). How would you expect the different policies to perform on such a trace?</span></p><p class="s4" style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="p">Now generate a trace with some locality. How can you generate such a trace? How does LRU perform on it? How much better than RAND is LRU? How does CLOCK do? How about CLOCK with different numbers of clock bits?</span></p><p style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;"><span class="s4">• </span>Use a program like <span class="s41">valgrind </span>to instrument a real application and generate a virtual page reference stream. For example, running <span class="s41">valgrind --tool=lackey --trace-mem=yes ls </span>will output a nearly-complete reference trace of every instruction and data ref- erence made by the program <span class="s41">ls</span>. To make this useful for the sim- ulator above, you’ll have to first transform each virtual memory reference into a virtual page-number reference (done by masking off the offset and shifting the resulting bits downward). How big of a cache is needed for your application trace in order to satisfy a large fraction of requests? Plot a graph of its working set as the size of the cache increases.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="430" height="57" alt="image" src="Image_300.png"/></span></p><p class="s50" style="padding-top: 7pt;text-indent: 0pt;text-align: right;">23</p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part246.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part248.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
