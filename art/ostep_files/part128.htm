<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Forgetting To Allocate Memory</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part127.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part129.htm">下一个 &gt;</a></p><p class="s32" style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;text-align: justify;">Forgetting To Allocate Memory</p><p style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Many routines expect memory to be allocated before you call them. For example, the routine <span class="s41">strcpy(dst, src) </span>copies a string from a source pointer to a destination pointer. However, if you are not careful, you might do this:</p><p class="s38" style="padding-top: 4pt;padding-left: 85pt;text-indent: 0pt;line-height: 8pt;text-align: left;">char <span class="s39">*</span>src = &quot;hello&quot;;</p><p class="s38" style="padding-left: 85pt;text-indent: 0pt;line-height: 90%;text-align: left;">char <span class="s39">*</span>dst;   // oops! unallocated strcpy(dst, src); // segfault and die</p><p style="padding-top: 5pt;padding-left: 68pt;text-indent: 12pt;line-height: 90%;text-align: justify;">When you run this code, it will likely lead to a <b>segmentation fault</b><span class="s35">3</span>, which is a fancy term for <b>YOU DID SOMETHING WRONG WITH MEMORY YOU FOOLISH PROGRAMMER AND I AM ANGRY.</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="154" height="1" alt="image" src="Image_137.png"/></span></p><p class="s11" style="padding-top: 2pt;padding-left: 68pt;text-indent: 13pt;line-height: 92%;text-align: justify;">3<span class="s12">Although it sounds arcane, you will soon learn why such an illegal memory access is called a segmentation fault; if that isn’t incentive to read on, what is?</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 58pt;text-indent: 0pt;line-height: 11pt;text-align: left;">T<span class="s7">IP</span>: I<span class="s7">T </span>C<span class="s7">OMPILED OR </span>I<span class="s7">T </span>R<span class="s7">AN </span><span class="s4">/</span><span class="s44">= </span>I<span class="s7">T </span>I<span class="s7">S </span>C<span class="s7">ORRECT</span></p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Just because a program compiled(!) or even ran once or many times cor- rectly does not mean the program is correct. Many events may have con- spired to get you to a point where you believe it works, but then some- thing changes and it stops. A common student reaction is to say (or yell) “But it worked before!” and then blame the compiler, operating system, hardware, or even (dare we say it) the professor. But the problem is usu- ally right where you think it would be, in your code. Get to work and debug it before you blame those other components.</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 52pt;text-indent: 0pt;text-align: left;">In this case, the proper code might instead look like this:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 57pt;text-indent: 0pt;line-height: 8pt;text-align: left;">char <span class="s39">*</span>src = &quot;hello&quot;;</p><p class="s38" style="padding-left: 57pt;text-indent: 0pt;line-height: 90%;text-align: left;">char <span class="s39">*</span>dst = (char <span class="s39">*</span>) malloc(strlen(src) + 1); strcpy(dst, src); // work properly</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 52pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Alternately, you could use <span class="s41">strdup() </span>and make your life even easier.</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Read the <span class="s41">strdup </span>man page for more information.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part127.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part129.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
