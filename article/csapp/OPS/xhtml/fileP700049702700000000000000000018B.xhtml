<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>1.6 Storage Devices Form a Hierarchy</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P700049702700000000000000000018B" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P700049702700000000000000003E59F" data-uri="chapter01.xhtml#P700049702700000000000000003E59F" epub:type="title"><span class="pcalibre label pcalibre1">1.6 </span>Storage Devices Form a Hierarchy</h1></header>
<p id="P700049702700000000000000003E5A0" data-uri="chapter01.xhtml#P700049702700000000000000003E5A0" class="pcalibre1 pcalibre calibre2">This notion of inserting a smaller, faster storage device (e.g., cache memory) between the processor and a larger, slower device (e.g., main memory) turns out to be a general idea. In fact, the storage devices in every computer system are organized as a <i class="calibre5 pcalibre pcalibre1">memory hierarchy</i> similar to <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000016E.xhtml#P7000497027000000000000000000186"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">1.9</span></a>. As we move from the top of the hierarchy to the bottom, the devices become slower, larger, and less costly per byte. The register file occupies the top level in the hierarchy, which is known as level 0 or L0. We show three levels of caching L1 to L3, occupying memory hierarchy levels 1 to 3. Main memory occupies level 4, and so on.</p>
<p id="P700049702700000000000000003E5A1" data-uri="chapter01.xhtml#P700049702700000000000000003E5A1" class="pcalibre1 pcalibre calibre2">The main idea of a memory hierarchy is that storage at one level serves as a cache for storage at the next lower level. Thus, the register file is a cache for the L1 cache. Caches L1 and L2 are caches for L2 and L3, respectively. The L3 cache is a cache for the main memory, which is a cache for the disk. On some networked systems with distributed file systems, the local disk serves as a cache for data stored on the disks of other systems.</p>
<p id="P700049702700000000000000003E5A2" data-uri="chapter01.xhtml#P700049702700000000000000003E5A2" class="pcalibre1 pcalibre calibre2">Just as programmers can exploit knowledge of the different caches to improve performance, programmers can exploit their understanding of the entire memory hierarchy. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000005190.xhtml#P7000497027000000000000000005190"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">6</span></a> will have much more to say about this.</p>
</section></body></html>
