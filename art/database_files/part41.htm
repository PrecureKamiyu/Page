<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Content of This Book</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part40.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part42.htm">下一个 &gt;</a></p><p class="s45" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">Content of This Book</p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">The text is organized in eleven major parts.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Overview </span><span class="p">(Chapter 1). Chapter 1 provides a general overview of the nature and pur- pose of database systems. We explain how the concept of a database system has developed, what the common features of database systems are, what a database system does for the user, and how a database system interfaces with operating systems. We also introduce an example database application: a university organi- zation consisting of multiple departments, instructors, students, and courses. This application is used as a running example throughout the book. This chapter is motivational, historical, and explanatory in nature.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 1: Relational Model and </b><span class="s47">SQL </span>(Chapter 2 through Chapter 5). Chapter 2 in- troduces the relational model of data, covering basic concepts such as the struc- ture of relational databases, database schemas, keys, schema diagrams, relational query languages, relational operations, and the relational algebra. Chapter 3, Chap- ter 4, and Chapter 5 focus on the most inﬂuential of the user-oriented relational languages: <span class="s44">SQL</span>. The chapters in this part describe data manipulation: queries, updates, insertions, and deletions, assuming a schema design has been provided. Although data-deﬁnition syntax is covered in detail here, schema design issues are deferred to Part 2.</p><p style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 2: Database Design </b>(Chapter 6 and Chapter 7). Chapter 6 provides an overview of the database-design process and a detailed description of the entity- relationship data model. The entity-relationship data model provides a high-level view of the issues in database design and of the problems encountered in capturing the semantics of realistic applications within the constraints of a data model. <span class="s44">UML </span>class-diagram notation is also covered in this chapter. Chapter 7 introduces rela- tional database design. The theory of functional dependencies and normalization is covered, with emphasis on the motivation and intuitive understanding of each normal form. This chapter begins with an overview of relational design and relies on an intuitive understanding of logical implication of functional dependencies. This allows the concept of normalization to be introduced prior to full coverage of functional-dependency theory, which is presented later in the chapter. Instructors may choose to use only this initial coverage without loss of continuity. Instructors covering the entire chapter will beneﬁt from students having a good understand- ing of normalization concepts to motivate them to learn some of the challenging concepts of functional-dependency theory. The chapter ends with a section on modeling of temporal data.</p><p style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 3: Application Design and Development </b>(Chapter 8 and Chapter 9). Chapter 8 discusses several complex data types that are particularly important for appli- cation design and development, including semi-structured data, object-based data, textual data, and spatial data. Although the popularity of <span class="s44">XML </span>in a database con- text has been diminishing, we retain an introduction to <span class="s44">XML</span>, while adding coverage of <span class="s44">JSON</span>, <span class="s44">RDF</span>, and <span class="s44">SPARQL</span>. Chapter 9 discusses tools and technologies that are used to build interactive web-based and mobile database applications. This chap- ter includes detailed coverage on both the server side and the client side. Among the topics covered are servlets, <span class="s44">JSP</span>, Django, JavaScript, and web services. Also discussed are application architecture, object-relational mapping systems includ- ing Hibernate and Django, performance (including caching using memcached and Redis), and the unique challenges in ensuring web-application security.</p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Part 4: Big Data Analytics </span><span class="p">(Chapter 10 and Chapter 11). Chapter 10 provides an overview of large-scale data-analytic applications, with a focus on how those applications place distinct demands on data management compared with the de-</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: 0pt;text-align: justify;">mands of traditional database applications. The chapter then discusses how those demands are addressed. Among the topics covered are Big Data storage systems including distributed ﬁle systems, key-value stores and No<span class="s44">SQL </span>systems, MapRe- duce, Apache Spark, streaming data, and graph databases. The connection of these systems and concepts with database concepts introduced earlier is emphasized. Chapter 11 discusses the structure and use of systems designed for large-scale data analysis. After ﬁrst explaining the concepts of data analytics, business intelligence, and decision support, the chapter discusses the structure of a data warehouse and the process of gathering data into a warehouse. The chapter next covers usage of warehouse data in <span class="s44">OLAP </span>applications followed by a survey of data-mining algo- rithms and techniques.</p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 5: Storage Management and Indexing </b>(Chapter 12 through Chapter 14). Chap- ter 12 deals with storage devices and how the properties of those devices inﬂu- ence database physical organization and performance. Chapter 13 deals with data- storage structures, including ﬁle organization and buﬀer management. A variety of data-access techniques are presented in Chapter 14. Multilevel index-based access is described, culminating in detailed coverage of B<span class="s48">+</span>-trees. The chapter then covers index structures for applications where the B<span class="s48">+</span>-tree structure is less appropriate, in- cluding write-optimized indices such as <span class="s44">LSM </span>trees and buﬀer trees, bitmap indices,</p><p style="padding-left: 107pt;text-indent: 0pt;text-align: justify;">and the indexing of spatial data using k-d trees, quadtrees and R-trees.</p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Part 6: Query Processing and Optimization </span><span class="p">(Chapter 15 and Chapter 16). Chap- ter 15 and Chapter 16 address query-evaluation algorithms and query optimiza- tion. Chapter 15 focuses on algorithms for the implementation of database opera- tions, particularly the wide range of join algorithms, which are designed to work on very large data that may not ﬁt in main-memory. Query processing techniques for main-memory databases are also covered in this chapter. Chapter 16 covers query optimization, starting by showing how query plans can be transformed to other equivalent plans by using transformation rules. The chapter then describes how to generate estimates of query execution costs, and how to eﬃciently ﬁnd query execution plans with the lowest cost.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Part 7: Transaction Management </span><span class="p">(Chapter 17 through Chapter 19). Chapter 17 focuses on the fundamentals of a transaction-processing system: atomicity, con- sistency, isolation, and durability. It provides an overview of the methods used to ensure these properties, including log-based recovery and concurrency control using locking, timestamp-based techniques, and snapshot isolation. Courses re- quiring only a survey of the transaction concept can use Chapter 17 on its own without the other chapters in this part; those chapters provide signiﬁcantly greater depth. Chapter 18 focuses on concurrency control and presents several techniques for ensuring serializability, including locking, timestamping, and optimistic (vali- dation) techniques. Multiversion concurrency control techniques, including the widely used snapshot isolation technique, and an extension of the technique that</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: 0pt;text-align: justify;">guarantees serializability, are also covered. This chapter also includes discussion of weak levels of consistency, concurrency on index structures, concurrency in main-memory database systems, long-duration transactions, operation-level con- currency, and real-time transaction processing. Chapter 19 covers the primary techniques for ensuring correct transaction execution despite system crashes and storage failures. These techniques include logs, checkpoints, and database dumps, as well as high availability using remote backup systems. Recovery with early lock release, and the widely used <span class="s44">ARIES </span>algorithm are also presented. This chapter in- cludes discussion of recovery in main-memory database systems and the use of <span class="s44">NVRAM</span>.</p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 8: Parallel and Distributed Databases </b>(Chapter 20 through Chapter 23). Chapter 20 covers computer-system architecture, and describes the inﬂuence of the underlying computer system on the database system. We discuss centralized systems, client–server systems, parallel and distributed architectures, and cloud- based systems in this chapter. The remaining three chapters in this part address distinct aspects of parallel and distributed databases, with Chapter 21 covering storage and indexing, Chapter 22 covering query processing, and Chapter 23 cov- ering transaction management. Chapter 21 includes discussion of partitioning and data skew, replication, parallel indexing, distributed ﬁle systems (including the Hadoop ﬁle system), and parallel key-value stores. Chapter 22 includes discussion of parallelism both among multiple queries and within a single query. It covers par- allel and distributed sort and join, MapReduce, pipelining, the Volcano exchange- operator model, thread-level parallelism, streaming data, and the optimization of geographically distributed queries. Chapter 23 includes discussion of traditional distributed consensus such as two-phase commit and more sophisticated solutions including Paxos and Raft. It covers a variety of algorithms for distributed concur- rency control, including replica management and weaker degrees of consistency. The trade-oﬀs implied by the <span class="s44">CAP </span>theorem are discussed along with the means of detecting inconsistency using version vectors and Merkle trees.</p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 9: Advanced Topics </b>(Chapter 24 through Chapter 26). Chapter 24 expands upon the coverage of indexing in Chapter 14 with detailed coverage of the <span class="s44">LSM </span>tree and its variants, bitmap indices, spatial indexing, and dynamic hashing tech- niques. Chapter 25 expands upon the coverage of Chapter 9 with a discussion of performance tuning, benchmarking, testing, and migration from legacy systems, standardization, and distributed directory systems. Chapter 26 looks at blockchain technology from a database perspective. It describes blockchain data structures and the use of cryptographic hash functions and public-key encryption to ensure the blockchain properties of anonymity, irrefutability, and tamper resistance. It describes and compares the distributed consensus algorithms used to ensure de- centralization, including proof-of-work, proof-of-stake, and Byzantine consensus. Much of the chapter focuses on the features that make blockchain an important database concept, including the role of permisssioned blockchains, the encoding</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: 0pt;text-align: justify;">of business logic and agreements in smart contracts, and interoperability across blockchains. Techniques for achieving database-scale transaction-processing per- formance are discussed. A ﬁnal section surveys current and contemplated enter- prise blockchain applications.</p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 10: Appendix</b>. Appendix A presents details of our university schema, including the full schema, <span class="s44">DDL</span>, and all the tables.</p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Part 11: Online Chapters </b>(Chapter 27 through Chapter 32) available online at <span class="s49">db-book.com</span>. We provide six chapters that cover material that is of historical nature or is advanced; these chapters are available only online. Chapter 27 cov- ers “pure” query languages: the tuple and domain relational calculus and Data- log, which has a syntax modeled after the Prolog language. Chapter 28 covers advanced topics in relational database design, including the theory of multivalued dependencies and fourth normal form, as well as higher normal forms. Chapter 29 covers object-based databases and more complex data types such as array, and multiset types, as well as tables that are not in <span class="s44">1NF</span>. Chapter 30 expands on the cov- erage in Chapter 8 of <span class="s44">XML</span>. Chapter 31 covers information retrieval, which deals with querying of unstructured textual data. Chapter 32 provides an overview of the <span class="s44">P</span>ostgre<span class="s44">SQL </span>database system, and is targeted at courses focusing on database inter- nals. The chapter is likely to be particularly useful for supporting student projects that work with the open-source code base of the <span class="s44">P</span>ostgre<span class="s44">SQL </span>database.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">At the end of each chapter we provide references in a section titled <i>Further Reading</i>. This section is intentionally abbreviated and provides references that allow students to continue their study of the material covered in the chapter or to learn about new developments in the area covered by the chapter. On occasion, the further reading section includes original source papers that have become classics of which everyone should be aware. Detailed bibliographical notes for each chapter are available online, and provide references for readers who wish to go into further depth on any of the topics covered in the chapter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part40.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part42.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
