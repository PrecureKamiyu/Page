<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>16.1   Overview</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part295.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part297.htm">下一个 &gt;</a></p><p class="s65" style="padding-top: 7pt;padding-left: 72pt;text-indent: 0pt;text-align: left;">16.1   <span style=" color: #00AEEF;">Overview</span></p><p style="padding-top: 12pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Consider the following relational-algebra expression, for the query “Find the names of all instructors in the Music department together with the course title of all the courses that the instructors teach.”<span class="s76">1</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2821.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2822.png"/></span></p><p class="s109" style="padding-top: 4pt;padding-left: 141pt;text-indent: 0pt;text-align: left;"><span class="s117">Π</span>name<span class="s119">,</span>title <span class="s122">(</span><span class="s117">σ</span>dept name <span class="s118">= </span><span class="s119">“Music” </span><span class="s120">(</span><span class="s121">instructor </span><span class="s138">⋈ </span><span class="s122">(</span><span class="s121">teaches </span><span class="s138">⋈ </span><span class="s117">Π</span>course id<span class="s119">,</span>title<span class="s122">(</span><span class="s121">course</span><span class="s122">))))</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2823.png"/></span></p><p class="s13" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;line-height: 93%;text-align: justify;"><span class="p">The subexpression </span>instructor <span class="s86">⋈ </span>teaches <span class="s86">⋈ </span><span class="s15">Π</span><span class="s123">course</span> <span class="s123">id</span><span class="s98">,</span><span class="s123">title</span><span class="p">(</span>course<span class="p">) in the preceding ex- pression can create a very large intermediate result. However, we are interested in only a few tuples of this intermediate result, namely, those pertaining to instructors in the</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="96" height="1" alt="image" src="Image_2824.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2825.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2826.png"/></span></p><p class="s111" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;"><span class="s77">1</span><span class="s78">Note that the projection of </span>course <span class="s80">on (</span>course id<span class="s80">, </span>title<span class="s80">) is required since </span>course <span class="s80">shares an attribute </span>dept name <span class="s80">with </span>instructor<span class="s80">; if we did not remove this attribute using the projection, the above expression using natural joins would return only courses from the Music department, even if some Music department instructors taught courses in other departments.</span></p><p class="s20" style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">743</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="31" height="21" alt="image" src="Image_2827.png"/></span></p><p class="s338" style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">instructor</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s385" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">∏ <span class="s108">name, title</span></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span><img width="1" height="20" alt="image" src="Image_2828.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="47" height="52" alt="image" src="Image_2829.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="34" alt="image" src="Image_2830.png"/></span></p><p class="s385" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">σ<span class="s108">dept_name </span><span class="s312">= Music</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s385" style="padding-top: 7pt;padding-left: 99pt;text-indent: 0pt;text-align: left;">∏ <span class="s108">name, title</span></p><p style="padding-left: 98pt;text-indent: 0pt;text-align: left;"><span><img width="12" height="35" alt="image" src="Image_2831.png"/></span></p><p style="padding-left: 70pt;text-indent: 0pt;text-align: left;"><span><img width="31" height="21" alt="image" src="Image_2832.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="21" alt="image" src="Image_2833.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="66" height="56" alt="image" src="Image_2834.png"/></span></p><p class="s385" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">σ<span class="s108">dept_name </span><span class="s312">= Music</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="31" height="21" alt="image" src="Image_2835.png"/></span></p><p class="s338" style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">teaches</p><p class="s385" style="padding-top: 5pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">∏ <span class="s108">course_id, title</span></p><p class="s338" style="padding-top: 5pt;padding-left: 14pt;text-indent: 0pt;text-align: left;">instructor</p><p class="s338" style="padding-top: 5pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">teaches</p><p class="s385" style="padding-top: 5pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">∏ <span class="s108">course_id, title</span></p><p class="s386" style="padding-left: 228pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><span><img width="1" height="13" alt="image" src="Image_2836.png"/></span>	<span><img width="1" height="13" alt="image" src="Image_2837.png"/></span></p><p class="s338" style="padding-left: 218pt;text-indent: 0pt;text-align: left;">course                  course</p><p class="s85" style="padding-top: 5pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">(a) Initial expression tree        (b) Transformed expression tree</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 16.1 <span class="s74">Equivalent expressions.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2838.png"/></span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">Music department, and in only two of the nine attributes of this relation. Since we are concerned with only those tuples in the <i>instructor </i>relation that pertain to the Music department, we do not need to consider those tuples that do not have <i>dept name </i>= “Music”. By reducing the number of tuples of the <i>instructor </i>relation that we need to access, we reduce the size of the intermediate result. Our query is now represented by the relational-algebra expression:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2839.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2840.png"/></span></p><p class="s109" style="padding-top: 10pt;padding-left: 107pt;text-indent: 0pt;text-align: left;"><span class="s117">Π</span>name<span class="s119">,</span>title <span class="s122">((</span><span class="s117">σ</span>dept name <span class="s118">= </span><span class="s119">“Music” </span><span class="s120">(</span><span class="s121">instructor</span><span class="s122">)) </span><span class="s138">⋈ </span><span class="s122">(</span><span class="s121">teaches </span><span class="s138">⋈ </span><span class="s117">Π</span>course id<span class="s119">,</span>title<span class="s122">(</span><span class="s121">course</span><span class="s122">)))</span></p><p style="padding-top: 10pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">which is equivalent to our original algebra expression, but which generates smaller intermediate relations. Figure 16.1 depicts the initial and transformed expressions.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">An evaluation plan deﬁnes exactly what algorithm should be used for each op- eration and how the execution of the operations should be coordinated. Figure 16.2 illustrates one possible evaluation plan for the expression from Figure 16.1(b). As we have seen, several diﬀerent algorithms can be used for each relational operation, giving rise to alternative evaluation plans. In the ﬁgure, hash join has been chosen for one of the join operations, while the other uses merge join, after sorting the relations on the join attribute, which is <span class="s44">ID</span>. All edges are assumed to be pipelined, unless marked as materialized. With pipelined edges the output of the producer is sent directly to the consumer, without being written out to disk; with materialized edges, on the other hand, the output is written to disk, and then read from the disk by the consumer. There are no materialized edges in the evaluation plan in Figure 16.2, although some of the operators, such as sort and hash join, can be represented using suboperators with ma- terialized edges between the suboperators, as we saw in Section 15.7.2.2.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Given a relational-algebra expression, it is the job of the query optimizer to come up with a query-evaluation plan that computes the same result as the given expression, and is the least costly way of generating the result (or, at least, is not much costlier than the least costly way).</p><p class="s66" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">16.1 <span style=" color: #00AEEF;">Overview  </span><span class="s164">745</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s42" style="text-indent: 0pt;line-height: 11pt;text-align: left;">Π</p><p style="text-indent: 0pt;text-align: left;"/><p class="s312" style="padding-left: 321pt;text-indent: 0pt;text-align: left;">(sort to remove duplicates)</p><p style="text-indent: 0pt;text-align: left;"><span><img width="10" height="34" alt="image" src="Image_2841.png"/></span></p><p class="s108" style="padding-top: 1pt;padding-left: 319pt;text-indent: 0pt;text-align: left;">name, title</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="38" height="21" alt="image" src="Image_2842.png"/></span></p><p class="s312" style="padding-left: 321pt;text-indent: 0pt;text-align: left;">(merge join)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="91" height="55" alt="image" src="Image_2843.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="24" alt="image" src="Image_2844.png"/></span></p><p class="s203" style="padding-left: 209pt;text-indent: 0pt;text-align: center;">sort<span class="s387">ID</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="28" alt="image" src="Image_2845.png"/></span></p><p class="s282" style="padding-left: 245pt;text-indent: -11pt;line-height: 106%;text-align: left;">σ<span class="s108">dept_name </span><span class="s312">= Music (use index 1)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s200" style="padding-left: 209pt;text-indent: 0pt;text-align: center;">instructor</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="20" height="68" alt="image" src="Image_2846.png"/></span></p><p class="s200" style="padding-left: 10pt;text-indent: 0pt;text-align: left;">teaches</p><p class="s203" style="padding-top: 6pt;text-indent: 0pt;text-align: left;">sort<span class="s387">ID</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="29" height="23" alt="image" src="Image_2847.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="10" height="31" alt="image" src="Image_2848.png"/></span></p><p class="s312" style="text-indent: 0pt;text-align: left;">(hash join)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="28" alt="image" src="Image_2849.png"/></span></p><p class="s282" style="padding-left: 15pt;text-indent: 0pt;text-align: left;">Π<span class="s108">course_id, title</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s200" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">course</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 84pt;text-indent: 0pt;text-align: center;">Figure 16.2 <span class="s74">An evaluation plan.</span></p><p style="padding-top: 9pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">The expression that we saw in Figure 16.1 may not necessarily lead to the least- cost evaluation plan for computing the result, since it still computes the join of the entire <i>teaches </i>relation with the <i>course </i>relation. The following expression gives the same ﬁnal result, but generates smaller intermediate results, since it joins <i>teaches </i>with only <i>instructor </i>tuples corresponding to the Music department, and then joins that result with <i>course</i>.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2850.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2851.png"/></span></p><p class="s109" style="padding-top: 5pt;padding-left: 84pt;text-indent: 0pt;text-align: center;"><span class="s117">Π</span>name<span class="s119">,</span>title <span class="s122">((</span><span class="s117">σ</span>dept name <span class="s118">= </span><span class="s119">“Music” </span><span class="s120">(</span><span class="s121">instructor</span><span class="s122">) </span><span class="s138">⋈ </span><span class="s121">teaches</span><span class="s122">) </span><span class="s138">⋈ </span><span class="s117">Π</span>course id<span class="s119">,</span>title<span class="s122">(</span><span class="s121">course</span><span class="s122">))</span></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Regardless of the way the query is written, it is the job of the optimizer to ﬁnd the least-cost plan for the query.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">To ﬁnd the least costly query-evaluation plan, the optimizer needs to generate al- ternative plans that produce the same result as the given expression and to choose the least costly one. Generation of query-evaluation plans involves three steps: (1) gener- ating expressions that are logically equivalent to the given expression, (2) annotating the resultant expressions in alternative ways to generate alternative query-evaluation plans, and (3) estimating the cost of each evaluation plan, and choosing the one whose estimated cost is the least.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Steps (1), (2), and (3) are interleaved in the query optimizer — some expressions are generated and annotated to generate evaluation plans, then further expressions are generated and annotated, and so on. As evaluation plans are generated, their costs are estimated by using statistical information about the relations, such as relation sizes and index depths.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">To implement the ﬁrst step, the query optimizer must generate expressions equiv- alent to a given expression. It does so by means of <i>equivalence rules </i>that specify how to transform an expression into a logically equivalent one. We describe these rules in Section 16.2.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In Section 16.3 we describe how to estimate statistics of the results of each opera- tion in a query plan. Using these statistics with the cost formulae in Chapter 15 allows</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="493" height="559" alt="image" src="Image_2852.png"/></span></p><p class="s73" style="padding-left: 59pt;text-indent: 0pt;text-align: center;">Note 16.1 <span class="s146">VIEWING QUERY EVALUATION PLANS</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 97pt;text-indent: 0pt;text-align: justify;">Most database systems provide a way to view the evaluation plan chosen to execute a given query. It is usually best to use the <span class="s44">GUI </span>provided with the database system to view evaluation plans. However, if you use a command line interface, many</p><p style="padding-top: 1pt;padding-left: 97pt;text-indent: 0pt;line-height: 65%;text-align: justify;">databases support variations of a command “<b>explain </b><span class="s83">&lt;</span>query<span class="s83">&gt;</span>”, which displays the execution plan chosen for the speciﬁed query <span class="s83">&lt;</span>query<span class="s83">&gt;</span>. The exact syntax varies with diﬀerent databases:</p><p class="s41" style="padding-top: 10pt;padding-left: 101pt;text-indent: 0pt;text-align: justify;"><span class="s39">• </span>P<span class="s40">ostgre</span>SQL <span class="s40">uses the syntax shown above.</span></p><p style="padding-top: 3pt;padding-left: 117pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">Oracle uses the syntax </span><b>explain plan for</b>. However, the command stores the resultant plan in a table called <i>plan table</i>, instead of displaying it. The query “<b>select </b>* <b>from table</b>(<i>dbms xplan.display</i>);” displays the stored plan.</p><p class="s39" style="padding-top: 4pt;padding-left: 117pt;text-indent: -16pt;text-align: justify;">• <span class="s41">DB2 </span><span class="s40">follows a similar approach to Oracle, but requires the program </span><span class="s49">db2exfmt </span><span class="p">to be executed to display the stored plan.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 117pt;text-indent: -16pt;text-align: justify;">• <span class="s41">SQL S</span><span class="s40">erver requires the command </span><span class="s46">set showplan text on </span><span class="p">to be executed before submitting the query; then, when a query is submitted, instead of executing the query, the evaluation plan is displayed.</span></p><p style="padding-top: 7pt;padding-left: 117pt;text-indent: -16pt;line-height: 70%;text-align: justify;"><span class="s39">• </span><span class="s41">M</span><span class="s40">y</span><span class="s41">SQL </span><span class="s40">uses the same </span><b>explain </b><span class="s83">&lt;</span>query<span class="s83">&gt; </span>syntax as <span class="s44">P</span>ostgre<span class="s44">SQL</span>, but the output is a table whose contents are not easy to understand. However, executing <b>show</b></p><p class="s46" style="padding-left: 117pt;text-indent: 0pt;text-align: left;">warnings <span class="p">after the </span>explain <span class="p">command displays the evaluation plan in a more human-readable format.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 97pt;text-indent: 17pt;text-align: justify;">The estimated costs for the plan are also displayed along with the plan. It is worth noting that the costs are usually not in any externally meaningful unit, such as seconds or <span class="s44">I/O </span>operations, but rather in units of whatever cost model the opti- mizer uses. Some optimizers such as <span class="s44">P</span>ostgre<span class="s44">SQL </span>display two cost-estimate num- bers; the ﬁrst indicates the estimated cost for outputting the ﬁrst result, and the second indicates the estimated cost for outputting all results.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">us to estimate the costs of individual operations. The individual costs are combined to determine the estimated cost of evaluating a given relational-algebra expression, as outlined in Section 15.7.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">In Section 16.4, we describe how to choose a query-evaluation plan. We can choose one based on the estimated cost of the plans. Since the cost is an estimate, the selected plan is not necessarily the least costly plan; however, as long as the estimates are good, the plan is likely to be the least costly one, or not much more costly than it.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;"><a name="bookmark337">Finally, materialized views help to speed up processing of certain queries. In Sec- tion 16.5, we study how to “maintain” materialized views— that is, to keep them up-to- date— and how to perform query optimization with materialized views.</a><a name="bookmark357">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part295.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part297.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
