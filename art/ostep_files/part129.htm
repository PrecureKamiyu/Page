<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Not Allocating Enough Memory</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part128.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part130.htm">下一个 &gt;</a></p><p class="s32" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Not Allocating Enough Memory</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: left;">A related error is not allocating enough memory, sometimes called a <b>buffer overflow</b>. In the example above, a common error is to make <i>almost </i>enough room for the destination buffer.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 57pt;text-indent: 0pt;line-height: 9pt;text-align: left;">char <span class="s39">*</span>src = &quot;hello&quot;;</p><p class="s38" style="padding-left: 57pt;text-indent: 0pt;line-height: 89%;text-align: left;">char <span class="s39">*</span>dst = (char <span class="s39">*</span>) malloc(strlen(src)); // too small! strcpy(dst, src); // work properly</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Oddly enough, depending on how malloc is implemented and many other details, this program will often run seemingly correctly. In some cases, when the string copy executes, it writes one byte too far past the end of the allocated space, but in some cases this is harmless, perhaps overwriting a variable that isn’t used anymore. In some cases, these over- flows can be incredibly harmful, and in fact are the source of many secu- rity vulnerabilities in systems [W06]. In other cases, the malloc library allocated a little extra space anyhow, and thus your program actually doesn’t scribble on some other variable’s value and works quite fine. In even other cases, the program will indeed fault and crash. And thus we learn another valuable lesson: even though it ran correctly once, doesn’t mean it’s correct.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part128.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part130.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
