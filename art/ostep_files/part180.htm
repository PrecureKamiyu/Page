<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part179.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part181.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[B+00] “Hoard: A Scalable Memory Allocator for Multithreaded Applications” Emery D. Berger, Kathryn S. McKinley, Robert D. Blumofe, and Paul R. Wilson ASPLOS-IX, November 2000</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">Berger and company’s excellent allocator for multiprocessor systems. Beyond just being a fun paper, also used in practice!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[B94] “The Slab Allocator: An Object-Caching Kernel Memory Allocator” Jeff Bonwick</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">USENIX ’94</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">A cool paper about how to build an allocator for an operating system kernel, and a great example of how to specialize for particular common object sizes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="http://people.freebsd.org/" class="a" target="_blank">[E06] “A Scalable Concurrent malloc(3) Implementation for FreeBSD” Jason Evans </a>http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf April 2006</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">A detailed look at how to build a real modern allocator for use in multiprocessors. The “jemalloc” allocator is in widespread use today, within FreeBSD, NetBSD, Mozilla Firefox, and within Facebook.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">[K65] “A Fast Storage Allocator” Kenneth C. Knowlton</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Communications of the ACM, Volume 8, Number 10, October 1965</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">The common reference for buddy allocation. Random strange fact: Knuth gives credit for the idea to not to Knowlton but to Harry Markowitz, a Nobel-prize winning economist. Another strange fact: Knuth communicates all of his emails via a secretary; he doesn’t send email himself, rather he tells his secretary what email to send and then the secretary does the work of emailing. Last Knuth fact: he created TeX,</p><p class="s17" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: justify;">the tool used to typeset this book. It is an amazing piece of software<span class="s11">4</span>.</p><p class="s12" style="padding-top: 6pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[W+95] “Dynamic Storage Allocation: A Survey and Critical Review” Paul R. Wilson, Mark S. Johnstone, Michael Neely, David Boles International Workshop on Memory Management</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Kinross, Scotland, September 1995</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">An excellent and far-reaching survey of many facets of memory allocation. Far too much detail to go into in this tiny chapter!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="154" height="1" alt="image" src="Image_219.png"/></span></p><p class="s11" style="padding-top: 1pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">4<span class="s12">Actually we use LaTeX, which is based on Lamport’s additions to TeX, but close enough.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="430" height="57" alt="image" src="Image_220.png"/></span></p><p class="s50" style="padding-top: 7pt;text-indent: 0pt;text-align: right;">18</p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part179.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part181.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
