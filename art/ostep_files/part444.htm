<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Reading A File From Disk</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part443.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part445.htm">下一个 &gt;</a></p><p class="s32" style="padding-top: 6pt;padding-left: 68pt;text-indent: 0pt;text-align: justify;">Reading A File From Disk</p><p style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;line-height: 88%;text-align: justify;">In this simple example, let us first assume that you want to simply open a file (e.g., <span class="s41">/foo/bar</span>, read it, and then close it. For this simple example, let’s assume the file is just 4KB in size (i.e., 1 block).</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_592.png"/></span></p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 88%;text-align: justify;">When you issue an <span class="s41">open(&quot;/foo/bar&quot;, O RDONLY) </span>call, the file sys- tem first needs to find the inode for the file <span class="s41">bar</span>, to obtain some basic in- formation about the file (permissions information, file size, etc.). To do so,</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:41.0676pt" cellspacing="0"><tr style="height:8pt"><td style="width:35pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:25pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s70" style="padding-left: 6pt;text-indent: 0pt;line-height: 7pt;text-align: left;">data</p></td><td style="width:27pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">inode</p></td><td style="width:22pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s70" style="padding-right: 4pt;text-indent: 0pt;line-height: 7pt;text-align: right;">root</p></td><td style="width:22pt"><p class="s70" style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">foo</p></td><td style="width:22pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">bar</p></td><td style="width:18pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s70" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 7pt;text-align: center;">root</p></td><td style="width:20pt"><p class="s70" style="padding-left: 4pt;text-indent: 0pt;line-height: 7pt;text-align: left;">foo</p></td><td style="width:24pt"><p class="s70" style="padding-left: 6pt;text-indent: 0pt;line-height: 7pt;text-align: left;">bar</p></td><td style="width:26pt"><p class="s70" style="padding-left: 8pt;text-indent: 0pt;line-height: 7pt;text-align: left;">bar</p></td><td style="width:26pt"><p class="s70" style="padding-left: 8pt;text-indent: 0pt;line-height: 7pt;text-align: left;">bar</p></td></tr><tr style="height:8pt"><td style="width:52pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="2"><p class="s70" style="padding-left: 2pt;text-indent: 0pt;line-height: 7pt;text-align: left;">bitmap bitmap</p></td><td style="width:66pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="3"><p class="s70" style="padding-left: 2pt;text-indent: 0pt;line-height: 7pt;text-align: left;">inode inode inode</p></td><td style="width:114pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" colspan="5"><p class="s70" style="padding-left: 2pt;text-indent: 0pt;line-height: 7pt;text-align: left;">data data data[0] data[1] data[1]</p></td></tr><tr style="height:40pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-top: 6pt;padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">open(bar)</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:22pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p class="s69" style="padding-right: 3pt;text-indent: 0pt;line-height: 7pt;text-align: right;">read</p></td><td style="width:22pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-top: 6pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">read</p></td><td style="width:22pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-top: 4pt;padding-left: 3pt;text-indent: 0pt;line-height: 8pt;text-align: left;">read</p></td><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">read</p></td><td style="width:96pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" colspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">read</p></td></tr><tr style="height:24pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">read()</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:66pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="3"><p class="s69" style="padding-right: 3pt;text-indent: 0pt;line-height: 7pt;text-align: right;">read</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-right: 2pt;text-indent: 0pt;line-height: 8pt;text-align: right;">write</p></td><td style="width:114pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" colspan="5"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-left: 41pt;padding-right: 56pt;text-indent: 0pt;text-align: center;">read</p></td></tr><tr style="height:24pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">read()</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:66pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="3"><p class="s69" style="padding-right: 3pt;text-indent: 0pt;line-height: 7pt;text-align: right;">read</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-right: 2pt;text-indent: 0pt;line-height: 8pt;text-align: right;">write</p></td><td style="width:114pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" colspan="5"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">read</p></td></tr><tr style="height:24pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">read()</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:66pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" colspan="3"><p class="s69" style="padding-right: 3pt;text-indent: 0pt;line-height: 7pt;text-align: right;">read</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-right: 2pt;text-indent: 0pt;line-height: 8pt;text-align: right;">write</p></td><td style="width:114pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F" colspan="5"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s69" style="padding-right: 5pt;text-indent: 0pt;text-align: right;">read</p></td></tr></table><p style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">Table 40.3: <b>File Read Timeline (Time Increasing Downward)</b></p><p style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">the file system must be able to find the inode, but all it has right now is the full pathname. The file system must <b>traverse </b>the pathname and thus locate the desired inode.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">All traversals begin at the root of the file system, in the <b>root directory </b>which is simply called <span class="s41">/</span>. Thus, the first thing the FS will read from disk is the inode of the root directory. But where is this inode? To find an inode, we must know its i-number. Usually, we find the i-number of a file or directory in its parent directory; the root has no parent (by definition). Thus, the root inode number must be “well known”; the FS must know what it is when the file system is mounted. In most U<span class="s7">NIX </span>file systems, the root inode number is 2. Thus, to begin the process, the FS reads in the block that contains inode number 2 (the first inode block).</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Once the inode is read in, the FS can look inside of it to find pointers to data blocks, which contain the contents of the root directory. The FS will thus use these on-disk pointers to read through the directory, in this case looking for an entry for <span class="s41">foo</span>. By reading in one or more directory data blocks, it will find the entry for foo; once found, the FS will also have found the inode number of <span class="s41">foo </span>(say it is 44) which it will need next.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The next step is to recursively traverse the pathname until the desired inode is found. In this example, the FS would next read the block contain- ing the inode of <span class="s41">foo </span>and then read in its directory data, finally finding the inode number of <span class="s41">bar</span>. The final step of <span class="s41">open()</span>, then, is to read its inode into memory; the FS can then do a final permissions check, allocate a file descriptor for this process in the per-process open-file table, and return it to the user.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Once open, the program can then issue a <span class="s41">read() </span>system call to read from the file. The first read (at offset 0 unless <span class="s41">lseek() </span>has been called) will thus read in the first block of the file, consulting the inode to find the location of such a block; it may also update the inode with a new last- accessed time. The read will further update the in-memory open file table for this file descriptor, updating the file offset such that the next read will read the second file block, etc.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-top: 6pt;padding-left: 32pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="p">A</span><span class="s7">SIDE</span><span class="p">: </span>R<span class="s45">EADS </span>D<span class="s45">ON</span>’<span class="s45">T </span>A<span class="s45">CCESS </span>A<span class="s45">LLOCATION </span>S<span class="s45">TRUCTURES</span></p><p style="padding-left: 8pt;text-indent: 12pt;line-height: 89%;text-align: justify;">We’ve seen many students get confused by allocation structures such as bitmaps. In particular, many often think that when you are simply reading a file, and not allocating any new blocks, that the bitmap will still be consulted. This is not true! Allocation structures, such as bitmaps, are only accessed when allocation is needed. The inodes, directories, and indirect blocks have all the information they need to complete a read re- quest; there is no need to make sure a block is allocated when the inode already points to it.</p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">At some point, the file will be closed. There is much less work to be done here; clearly, the file descriptor should be deallocated, but for now, that is all the FS really needs to do. No disk I/Os take place.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">A depiction of this entire process is found in Figure <span style=" color: #00AEEF;">40.3 </span>(time increases downward). In the figure, the open causes numerous reads to take place in order to finally locate the inode of the file. Afterwards, reading each block requires the file system to first consult the inode, then read the block, and then update the inode’s last-accessed-time field with a write. Spend some time and try to understand what is going on.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Also note that the amount of I/O generated by the open is propor- tional to the length of the pathname. For each additional directory in the path, we have to read its inode as well as its data. Making this worse would be the presence of large directories; here, we only have to read one block to get the contents of a directory, whereas with a large directory, we might have to read many data blocks to find the desired entry. Yes, life can get pretty bad when reading a file; as you’re about to find out, writing out a file (and especially, creating a new one) is even worse.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part443.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part445.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
