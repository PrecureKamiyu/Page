<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Mechanism: Limited Direct Execution</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part50.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part52.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 3pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">Mechanism: Limited Direct Execution</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">In order to virtualize the CPU, the operating system needs to somehow share the physical CPU among many jobs running seemingly at the same time. The basic idea is simple: run one process for a little while, then run another one, and so forth. By <b>time sharing </b>the CPU in this manner, virtualization is achieved.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">There are a few challenges, however, in building such virtualization machinery. The first is <i>performance</i>: how can we implement virtualiza- tion without adding excessive overhead to the system? The second is <i>control</i>: how can we run processes efficiently while retaining control over the CPU? Control is particularly important to the OS, as it is in charge of resources; without control, a process could simply run forever and take over the machine, or access information that it should not be allowed to access. Attaining performance while maintaining control is thus one of the central challenges in building an operating system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;">T<span class="s7">HE </span>C<span class="s7">RUX</span>:</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 10pt;text-align: center;">H<span class="s7">OW </span>T<span class="s7">O </span>E<span class="s7">FFICIENTLY </span>V<span class="s7">IRTUALIZE </span>T<span class="s7">HE </span>CPU W<span class="s7">ITH </span>C<span class="s7">ONTROL</span></p><p style="padding-left: 9pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The OS must virtualize the CPU in an efficient manner, but while re- taining control over the system. To do so, both hardware and operating systems support will be required. The OS will often use a judicious bit of hardware support in order to accomplish its work effectively.</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part52.htm">6.1 Basic Technique: Limited Direct Execution</a><a class="toc1" href="part53.htm">Table 6.1: Direction Execution Protocol (Without Limits)</a><a class="toc0" href="part54.htm">6.2 Problem #1: Restricted Operations</a><a class="toc0" href="part55.htm">6.3 Problem #2: Switching Between Processes</a><a class="toc1" href="part56.htm">A Cooperative Approach: Wait For System Calls</a><a class="toc1" href="part57.htm">A Non-Cooperative Approach: The OS Takes Control</a><a class="toc1" href="part58.htm">Saving and Restoring Context</a><a class="toc2" href="part59.htm">Table 6.3: Limited Direction Execution Protocol (Timer Interrupt)</a><a class="toc0" href="part60.htm">6.4 Worried About Concurrency?</a><a class="toc0" href="part61.htm">6.5 Summary</a><a class="toc0" href="part62.htm">References</a><a class="toc0" href="part63.htm">Homework (Measurement)</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part50.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part52.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
