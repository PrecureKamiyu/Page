<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>14.3  B+-Tree Index Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part262.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part264.htm">下一个 &gt;</a></p><p class="s45" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><span style=" color: #231F20;">14.3  </span>B<span class="s329">+</span>-Tree Index Files</p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">The main disadvantage of the index-sequential ﬁle organization is that performance degrades as the ﬁle grows, both for index lookups and for sequential scans through the data. Although this degradation can be remedied by reorganization of the ﬁle, frequent reorganizations are undesirable.</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The <span class="s63">B</span><span class="s330">+</span><span class="s63">-tree index </span>structure is the most widely used of several index structures that maintain their eﬃciency despite insertion and deletion of data. A B<span class="s181">+</span>-tree index takes the form of a <span class="s63">balanced tree </span>in which every path from the root of the tree to a leaf of the tree is of the same length. Each nonleaf node in the tree (other than the root)</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 13pt;text-align: center;">has between <span class="s15">⌈</span><i>n  </i>and <i>n </i>children, where <i>n </i>is ﬁxed for a particular tree; the root has</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">between 2 and <i>n </i>children.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">We shall see that the B<span class="s181">+</span>-tree structure imposes performance overhead on insertion and deletion and adds space overhead. The overhead is acceptable even for frequently modiﬁed ﬁles, since the cost of ﬁle reorganization is avoided. Furthermore, since nodes may be as much as half empty (if they have the minimum number of children), there is some wasted space. This space overhead, too, is acceptable given the performance beneﬁts of the B<span class="s181">+</span>-tree structure.</p><p class="s68" style="padding-top: 9pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">14.3.1 Structure of a B<span class="s331">+</span>-Tree</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">A B<span class="s181">+</span>-tree index is a multilevel index, but it has a structure that diﬀers from that of the multilevel index-sequential ﬁle. We assume for now that there are no duplicate search key values, that is, each search key is unique and occurs in at most one record; we consider the issue of nonunique search keys later.</p><p style="padding-left: 88pt;text-indent: 17pt;line-height: 13pt;text-align: justify;">Figure 14.7 shows a typical node of a B<span class="s181">+</span>-tree. It contains up to <i>n </i><span class="s15">− </span>1 search-key</p><p class="s13" style="padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;line-height: 75%;text-align: justify;"><span class="p">values </span>K<span class="s93">1</span><span class="s94">, </span>K<span class="s93">2</span><span class="s94">, </span><span class="s15">… </span><span class="p">, </span>K<span class="s145">n </span><span class="s171">− </span><span class="s93">1</span><span class="s94">, and </span>n <span class="p">pointers </span>P<span class="s93">1</span><span class="s94">, </span>P<span class="s93">2</span><span class="s94">, </span><span class="s15">… </span><span class="p">, </span>P<span class="s145">n</span><span class="p">. The search-key values within a node are kept in sorted order; thus, if </span>i <span class="s83">&lt; </span>j<span class="p">, then </span>K<span class="s97">i </span><span class="s83">&lt; </span>K<span class="s97">j </span><span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:134.594pt" cellspacing="0"><tr style="height:20pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s332" style="padding-top: 1pt;padding-left: 12pt;padding-right: 12pt;text-indent: 0pt;text-align: center;">P<span class="s333">1</span></p></td><td style="width:39pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s332" style="padding-top: 1pt;padding-left: 5pt;padding-right: 4pt;text-indent: 0pt;text-align: center;">K<span class="s333">1</span></p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s332" style="padding-top: 1pt;padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">P<span class="s333">2</span></p></td><td style="width:39pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s334" style="padding-top: 1pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">…</p></td><td style="width:39pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s335" style="padding-top: 1pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">P<span class="s336">n </span><span class="s213">1</span></p></td><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s335" style="padding-top: 2pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">K<span class="s336">n </span><span class="s213">1</span></p></td><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s332" style="padding-top: 1pt;padding-left: 7pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">P<span class="s337">n</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2639.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_2640.png"/></span></p><p class="s74" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 14.7 </span>Typical node of a B<span class="s237">+</span>-tree.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s85" style="padding-left: 163pt;text-indent: 0pt;text-align: left;">leaf node</p><p style="text-indent: 0pt;text-align: left;"><span><img width="265" height="224" alt="image" src="Image_2641.png"/></span></p><p class="s85" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Crick</p><p style="text-indent: 0pt;text-align: left;"/><p class="s85" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Caliﬁeri</p><p style="text-indent: 0pt;text-align: left;"/><p class="s85" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Brandt</p><p style="text-indent: 0pt;text-align: left;"/><p class="s85" style="padding-top: 3pt;padding-left: 282pt;text-indent: 0pt;text-align: left;">Pointer to next leaf node</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:319.074pt" cellspacing="0"><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">10101</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Srinivasan</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Comp. Sci.</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">65000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">12121</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Wu</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Finance</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">90000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">15151</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Mozart</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Music</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">40000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">22222</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Einstein</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Physics</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">95000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">32343</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">El Said</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">History</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">80000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">33456</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Gold</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Physics</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">87000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">45565</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Katz</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Comp. Sci.</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">75000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">58583</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Caliﬁeri</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">History</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">60000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 8pt;text-align: center;">76543</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Singh</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Finance</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">80000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 8pt;text-align: center;">76766</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Crick</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Biology</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">72000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">83821</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Brandt</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Comp. Sci.</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">92000</p></td></tr><tr style="height:10pt"><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 8pt;padding-right: 6pt;text-indent: 0pt;line-height: 9pt;text-align: center;">98345</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Kim</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 3pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Elec. Eng.</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s213" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">80000</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s338" style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">instructor <span class="s85">ﬁle</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-top: 5pt;padding-left: 174pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.8 </span>A leaf node for <span class="s91">instructor </span>B<span class="s237">+</span>-tree index (<span class="s339">n </span><span class="s112">= </span>4).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;line-height: 90%;text-align: justify;">We consider ﬁrst the structure of the <span class="s63">leaf nodes</span>. For <i>i </i><span class="s15">= </span>1, 2, <span class="s15">… </span>, <i>n </i><span class="s15">− </span>1, pointer <i>P</i><span class="s145">i </span>points to a ﬁle record with search-key value <i>K</i><span class="s145">i</span>. Pointer <i>P</i><span class="s145">n </span>has a special purpose that we shall discuss shortly.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Figure 14.8 shows one leaf node of a B<span class="s181">+</span>-tree for the <i>instructor </i>ﬁle, in which we have chosen <i>n </i>to be 4, and the search key is <i>name</i>.</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Now that we have seen the structure of a leaf node, let us consider how search-key values are assigned to particular nodes. Each leaf can hold up to <i>n </i><span class="s15">− </span>1 values. We</p><p class="s15" style="padding-left: 300pt;text-indent: 0pt;line-height: 6pt;text-align: left;">− <span class="p">1)</span>∕<span class="p">2 values. With </span><span class="s13">n </span>= <span class="p">4 in our example</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 5pt;text-align: left;">allow leaf nodes to contain as few as <span class="s15">⌈</span>(<i>n</i></p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">B<span class="s181">+</span>-tree, each leaf must contain at least two values, and at most three values.</p><p class="s13" style="padding-top: 2pt;padding-left: 119pt;text-indent: 17pt;line-height: 70%;text-align: justify;"><span class="p">If </span>L<span class="s97">i </span><span class="p">and </span>L<span class="s97">j </span><span class="p">are leaf nodes and </span>i <span class="s83">&lt; </span>j <span class="p">(that is, </span>L<span class="s97">i </span><span class="p">is to the left of </span>L<span class="s97">j </span><span class="p">in the tree), then every search-key value </span>v<span class="s97">i </span><span class="p">in </span>L<span class="s97">i </span><span class="p">is less than every search-key value </span>v<span class="s97">j </span><span class="p">in </span>L<span class="s97">j </span><span class="p">.</span></p><p style="padding-left: 137pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">If the B<span class="s181">+</span>-tree index is used as a dense index (as is usually the case), every search-key</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">value must appear in some leaf node.</p><p style="padding-left: 119pt;text-indent: 17pt;line-height: 94%;text-align: justify;">Now we can explain the use of the pointer <i>P</i><span class="s145">n</span>. Since there is a linear order on the leaves based on the search-key values that they contain, we use <i>P</i><span class="s145">n </span>to chain together the leaf nodes in search-key order. This ordering allows for eﬃcient sequential processing of the ﬁle.</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The <span class="s63">nonleaf nodes </span>of the B<span class="s181">+</span>-tree form a multilevel (sparse) index on the leaf nodes. The structure of nonleaf nodes is the same as that for leaf nodes, except that all pointers are pointers to tree nodes. A nonleaf node may hold up to <i>n </i>pointers and <i>must </i>hold</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 13pt;text-align: center;">at least <span class="s15">⌈</span><i>n  </i>pointers. The number of pointers in a node is called the <i>fanout </i>of the</p><p style="text-indent: 0pt;line-height: 12pt;text-align: left;">node. Nonleaf nodes are also referred to as <span class="s63">internal nodes</span>.</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="416" height="274" alt="image" src="Image_2642.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="3" alt="image" src="Image_2643.png"/></span></p><p class="s340" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Mozart</p><p style="text-indent: 0pt;text-align: left;"/><p class="s340" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Srinivasan</p><p style="text-indent: 0pt;text-align: left;"/><p class="s340" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Brandt Caliﬁeri Crick   Einstein El Said</p><p style="text-indent: 0pt;text-align: left;"/><p class="s340" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Gold  Katz  Kim</p><p style="text-indent: 0pt;text-align: left;"/><p class="s340" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Gold</p><p style="text-indent: 0pt;text-align: left;"/><p class="s340" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Einstein</p><p style="text-indent: 0pt;text-align: left;"/><p class="s296" style="padding-top: 5pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">Root node</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="21" height="42" alt="image" src="Image_2644.png"/></span></p><p class="s296" style="padding-top: 5pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">Internal nodes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:306.715pt" cellspacing="0"><tr style="height:8pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Mozart</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Singh</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">10101</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Srinivasan</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Comp. Sci.</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">65000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">12121</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Wu</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Finance</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">90000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">15151</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Mozart</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Music</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">40000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">22222</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Einstein</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Physics</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">95000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">32343</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">El Said</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">History</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">80000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">33456</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Gold</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Physics</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">87000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">45565</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Katz</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Comp. Sci.</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">75000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">58583</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Caliﬁeri</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">History</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">60000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">76543</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Singh</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Finance</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">80000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">76766</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Crick</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Biology</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">72000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">83821</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Brandt</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Comp. Sci.</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">92000</p></td></tr><tr style="height:8pt"><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">98345</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Kim</p></td><td style="width:38pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Elec. Eng.</p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s342" style="padding-left: 6pt;text-indent: 0pt;line-height: 6pt;text-align: left;">80000</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="159" height="145" alt="image" src="Image_2645.png"/></span></p><p class="s74" style="padding-left: 174pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.9 </span>B<span class="s237">+</span>-tree for <span class="s91">instructor </span>file (<span class="s339">n </span><span class="s112">= </span>4).</p><p class="s296" style="padding-top: 5pt;padding-left: 46pt;text-indent: 0pt;text-align: left;">Leaf nodes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:4.06775pt" cellspacing="0"><tr style="height:8pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:26pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Srinivasan</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Wu</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="padding-top: 5pt;padding-left: 88pt;text-indent: 17pt;line-height: 87%;text-align: justify;"><span class="p">Let us consider a node containing </span>m <span class="p">pointers (</span>m <span class="s86">≤ </span>n<span class="p">). For </span>i <span class="s15">= </span><span class="p">2, 3, </span><span class="s15">… </span><span class="p">, </span>m <span class="s15">− </span><span class="p">1, pointer </span>P<span class="s145">i </span><span class="p">points to the subtree that contains search-key values less than </span>K<span class="s145">i </span><span class="p">and greater than or equal to </span>K<span class="s97">i </span><span class="s136">− </span><span class="s130">1</span><span class="s94">. Pointer </span>P<span class="s97">m </span><span class="p">points to the part of the subtree that contains those key values greater than or equal to </span>K<span class="s97">m </span><span class="s136">− </span><span class="s130">1</span><span class="s94">, and pointer </span>P<span class="s130">1 </span><span class="s94">points to the part of the subtree that contains those search-key values less than </span>K<span class="s98">1</span><span class="p">.</span></p><p style="padding-left: 77pt;text-indent: 0pt;line-height: 13pt;text-align: center;">Unlike other nonleaf nodes, the root node can hold fewer than <span class="s15">⌈</span><i>n  </i>pointers;</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">however, it must hold at least two pointers, unless the tree consists of only one node. It is always possible to construct a B<span class="s181">+</span>-tree, for any <i>n</i>, that satisﬁes the preceding require- ments.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Figure 14.9 shows a complete B<span class="s181">+</span>-tree for the <i>instructor </i>ﬁle (with <i>n </i><span class="s15">= </span>4). We have omitted null pointers for simplicity; any pointer ﬁeld in the ﬁgure that does not have an arrow is understood to have a null value.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Figure 14.10 shows another B<span class="s181">+</span>-tree for the <i>instructor </i>ﬁle, this time with <i>n </i><span class="s15">= </span>6. Observe that the height of this tree is less than that of the previous tree, which had <i>n </i><span class="s15">= </span>4.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:220.985pt" cellspacing="0"><tr style="height:9pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">El Said</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Mozart</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:16pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:104.589pt" cellspacing="0"><tr style="height:4pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Brandt</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Caliﬁeri</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Crick</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Einstein</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:11pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">El Said</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Gold</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:16pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Katz</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Kim</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:10pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Mozart</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Singh</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:27pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Srinivasan</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s343" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">Wu</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:12pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:4pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="184" height="41" alt="image" src="Image_2646.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="98" height="40" alt="image" src="Image_2647.png"/></span></p><p class="s74" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 14.10 </span>B<span class="s237">+</span>-tree for <span class="s91">instructor </span>file with <span class="s339">n </span><span class="s112">= </span>6.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">These examples of B<span class="s181">+</span>-trees are all balanced. That is, the length of every path from the root to a leaf node is the same. This property is a requirement for a B<span class="s181">+</span>-tree. Indeed, the “B” in B<span class="s181">+</span>-tree stands for “balanced.” It is the balance property of B<span class="s181">+</span>-trees that ensures good performance for lookup, insertion, and deletion.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In general, search keys could have duplicates. One way to handle the case of nonunique search keys is to modify the tree structure to store each search key at a leaf</p><p class="s13" style="padding-top: 2pt;padding-left: 119pt;text-indent: 0pt;line-height: 76%;text-align: justify;"><span class="p">node as many times as it appears in records, with each copy pointing to one record. The condition that </span>K<span class="s97">i </span><span class="s83">&lt; </span>K<span class="s97">j </span><span class="p">if </span>i <span class="s83">&lt; </span>j <span class="p">will need to be modiﬁed to </span>K<span class="s97">i </span><span class="s86">≤ </span>K<span class="s97">j </span><span class="p">. However, this approach can result in duplicate search key values at internal nodes, making the inser-</span></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">tion and deletion procedures more complicated and expensive. Another alternative is to store a set (or bucket) of record pointers with each search key value, as we saw ear- lier. This approach is more complicated and can result in ineﬃcient access, especially if the number of record pointers for a particular key is very large.</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 17pt;line-height: 91%;text-align: justify;">Most database implementations instead make search keys unique as follows: Sup- pose the desired search key attribute <i>a</i><span class="s97">i </span>of relation <i>r </i>is nonunique. Let <i>A</i><span class="s97">p </span>be the primary key of <i>r</i>. Then the unique composite search key (<i>a</i><span class="s97">i </span>, <i>A</i><span class="s97">p</span>) is used instead of <i>a</i><span class="s97">i </span>when build- ing the index. (Any set of attributes that together with <i>a</i><span class="s97">i </span>guarantee uniqueness can also</p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">be used instead of <i>A</i><span class="s97">p</span>.) For example, if we wished to create an index on the <i>instructor</i></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">relation on the attribute <i>name</i>, we instead create an index on the composite search key</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">(<i>name</i>, <span class="s44">ID</span>), since <span class="s44">ID </span>is the primary key for <i>instructor</i>. Index lookups on just <i>name </i>can be eﬃciently handled using this index, as we shall see shortly. Section 14.3.5 covers issues in handling of nonunique search keys in more detail.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In our examples, we show indices on some nonunique search keys, such as <i>instruc- tor</i>.<i>name</i>, assuming for simplicity that there are no duplicates; in reality most databases would automatically add extra attributes internally, to ensure the absence of duplicates.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">14.3.2 Queries on B<span class="s331">+</span>-Trees</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Let us consider how we process queries on a B<span class="s181">+</span>-tree. Suppose that we wish to ﬁnd a record with a given value <i>v </i>for the search key. Figure 14.11 presents pseudocode for a function <i>find</i>(<i>v</i>) to carry out this task, assuming there are no duplicates, that is, there is at most one record with a particular search key. We address the issue of nonunique search keys later in this section.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Intuitively, the function starts at the root of the tree and traverses the tree down until it reaches a leaf node that would contain the speciﬁed value if it exists in the tree. Speciﬁcally, starting with the root as the current node, the function repeats the following steps until a leaf node is reached. First, the current node is examined, looking for the smallest <i>i </i>such that search-key value <i>K</i><span class="s97">i </span>is greater than or equal to <i>v</i>. Suppose</p><p class="s13" style="padding-left: 119pt;text-indent: 0pt;line-height: 68%;text-align: justify;"><span class="p">such a value is found; then, if </span>K<span class="s97">i </span><span class="p">is equal to </span>v<span class="p">, the current node is set to the node pointed to by </span>P<span class="s97">i</span><span class="s136">+</span><span class="s130">1</span><span class="s94">, otherwise </span>K<span class="s97">i </span><span class="s83">&gt; </span>v<span class="p">, and the current node is set to the node pointed to by </span>P<span class="s97">i</span><span class="p">. If no such value </span>K<span class="s97">i </span><span class="p">is found, then </span>v <span class="s83">&gt; </span>K<span class="s97">m</span><span class="s136">−</span><span class="s130">1</span><span class="s94">, where </span>P<span class="s97">m </span><span class="p">is the last nonnull pointer in the node. In this case the current node is set to that pointed to by </span>P<span class="s145">m</span><span class="p">. The above procedure</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">is repeated, traversing down the tree until a leaf node is reached.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2648.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-left: 124pt;text-indent: 0pt;text-align: left;"><b>function </b>find<span class="p">(</span>v<span class="p">)</span></p><p style="padding-left: 124pt;text-indent: 0pt;text-align: left;">/* Assumes no duplicate keys, and returns pointer to the record with</p><p style="padding-left: 146pt;text-indent: -15pt;text-align: left;">* search key value <i>v </i>if such a record exists, and null otherwise */ Set <i>C </i>= root node</p><p style="padding-left: 146pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><b>while </b>(<i>C </i>is not a leaf node) <b>begin</b></p><p class="s13" style="padding-left: 167pt;text-indent: 0pt;line-height: 17pt;text-align: left;"><span class="p">Let </span>i <span class="p">= smallest number such that </span>v <span class="s86">≤ </span>C<span class="s83">.</span>K<span class="s97">i</span></p><p class="s46" style="padding-left: 167pt;text-indent: 0pt;line-height: 10pt;text-align: left;">if <span class="p">there is no such number </span><i>i </i>then begin</p><p class="s13" style="padding-top: 2pt;padding-left: 188pt;text-indent: 0pt;line-height: 75%;text-align: left;"><span class="p">Let </span>P<span class="s145">m </span><span class="p">= last non-null pointer in the node Set </span>C <span class="p">= </span>C<span class="s83">.</span>P<span class="s145">m</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 7pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">end</p><p class="s46" style="padding-left: 4pt;text-indent: 0pt;line-height: 8pt;text-align: left;">end</p><p class="s13" style="padding-left: 4pt;text-indent: 0pt;line-height: 16pt;text-align: left;"><b>else if </b><span class="p">(</span>v <span class="s15">= </span>C<span class="s83">.</span>K<span class="s97">i</span><span class="p">) </span><b>then </b><span class="p">Set </span>C <span class="p">= </span>C<span class="s83">.</span>P<span class="s97">i</span><span class="s136">+</span><span class="s130">1</span></p><p class="s13" style="padding-left: 4pt;text-indent: 0pt;line-height: 17pt;text-align: left;"><b>else </b><span class="p">Set </span>C <span class="p">= </span>C<span class="s83">.</span>P<span class="s97">i </span><span class="p">/* </span>v <span class="s83">&lt; </span>C<span class="s83">.</span>K<span class="s97">i </span><span class="p">*/</span></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;">/* <i>C </i>is a leaf node */</p><p class="s13" style="padding-left: 119pt;text-indent: 0pt;line-height: 14pt;text-align: right;"><b>if </b><span class="p">for some </span>i<span class="p">, </span>K<span class="s145">i </span><span class="s15">= </span>v</p><p class="s46" style="padding-left: 119pt;text-indent: 0pt;line-height: 13pt;text-align: right;">then <span class="p">return </span><i>P</i><span class="s145">i</span></p><p style="padding-left: 167pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><b>else </b>return null ; /* No record with key value <i>v </i>exists*/</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2649.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 14.11 </span>Querying a B<span class="s237">+</span>-tree.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 88pt;text-indent: 17pt;line-height: 87%;text-align: justify;"><span class="p">At the leaf node, if there is a search-key value </span>K<span class="s97">i </span><span class="s15">= </span>v<span class="p">, pointer </span>P<span class="s97">i </span><span class="p">directs us to a record with search-key value </span>K<span class="s97">i</span><span class="p">. The function then returns the pointer to the record, </span>P<span class="s97">i</span><span class="p">. If no search key with value </span>v <span class="p">is found in the leaf node, no record with key value </span>v <span class="p">exists in the relation, and function </span>find <span class="p">returns null, to indicate failure.</span></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: right;">B<span class="s181">+</span>-trees can also be used to ﬁnd all records with search key values in a speciﬁed range [<i>lb</i>, <i>ub</i>]. For example, with a B<span class="s181">+</span>-tree on attribute <i>salary </i>of <i>instructor</i>, we can ﬁnd all <i>instructor </i>records with salary in a speciﬁed range such as [50000, 100000] (in other words, all salaries between 50000 and 100000). Such queries are called <span class="s63">range queries</span>. To execute such queries, we can create a procedure <i>findRange </i>(<i>lb</i>, <i>ub</i>), shown in Figure 14.12. The procedure does the following: it ﬁrst traverses to a leaf in a manner similar to <i>find</i>(<i>lb</i>); the leaf may or may not actually contain value <i>lb</i>. It then steps through records in that and subsequent leaf nodes collecting pointers to all records</p><p class="s13" style="padding-left: 88pt;text-indent: 0pt;line-height: 14pt;text-align: justify;"><span class="p">with key values </span>C<span class="s83">.</span>K<span class="s145">i </span><span class="p">s.t. </span>lb <span class="s86">≤ </span>C<span class="s83">.</span>K<span class="s145">i </span><span class="s86">≤ </span>ub <span class="p">into a set resultSet. The function stops when</span></p><p class="s13" style="padding-left: 88pt;text-indent: 0pt;line-height: 14pt;text-align: justify;">C<span class="s83">.</span>K<span class="s145">i </span><span class="s83">&gt; </span>ub<span class="p">, or there are no more keys in the tree.</span></p><p style="padding-left: 106pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">A real implementation would provide a version of <i>findRange </i>supporting an iterator</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">interface similar to that provided by the <span class="s44">JDBC </span><span class="s49">ResultSet</span>, which we saw in Section 5.1.1. Such an iterator interface would provide a method <i>next</i>(), which can be called repeat- edly to fetch successive records. The <i>next</i>() method would step through the entries at the leaf level, in a manner similar to <i>findRange</i>, but each call takes only one step and records where it left oﬀ, so that successive calls to <i>next</i>() step through successive en-</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2650.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-left: 135pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><b>function </b>findRange<span class="p">(</span>lb<span class="p">, </span>ub<span class="p">)</span></p><p class="s13" style="padding-top: 1pt;padding-left: 156pt;text-indent: -21pt;line-height: 84%;text-align: left;"><span class="p">/* Returns all records with search key value </span>V <span class="p">such that </span>lb <span class="s86">≤ </span>V <span class="s86">≤ </span>ub<span class="p">. */ Set resultSet = </span><span class="s95">{}</span><span class="p">;</span></p><p style="padding-left: 156pt;text-indent: 0pt;text-align: left;">Set <i>C </i>= root node</p><p style="padding-left: 156pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><b>while </b>(<i>C </i>is not a leaf node) <b>begin</b></p><p class="s13" style="padding-left: 177pt;text-indent: 0pt;line-height: 17pt;text-align: left;"><span class="p">Let </span>i <span class="p">= smallest number such that </span>lb <span class="s86">≤ </span>C<span class="s83">.</span>K<span class="s97">i</span></p><p class="s46" style="padding-left: 177pt;text-indent: 0pt;line-height: 10pt;text-align: left;">if <span class="p">there is no such number </span><i>i </i>then begin</p><p class="s13" style="padding-top: 2pt;padding-left: 199pt;text-indent: 0pt;line-height: 75%;text-align: left;"><span class="p">Let </span>P<span class="s145">m </span><span class="p">= last non-null pointer in the node Set </span>C <span class="p">= </span>C<span class="s83">.</span>P<span class="s145">m</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 7pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">end</p><p class="s46" style="padding-left: 4pt;text-indent: 0pt;line-height: 8pt;text-align: left;">end</p><p class="s13" style="padding-left: 4pt;text-indent: 0pt;line-height: 16pt;text-align: left;"><b>else if </b><span class="p">(</span>lb <span class="s15">= </span>C<span class="s83">.</span>K<span class="s97">i</span><span class="p">) </span><b>then </b><span class="p">Set </span>C <span class="p">= </span>C<span class="s83">.</span>P<span class="s97">i</span><span class="s136">+</span><span class="s130">1</span></p><p class="s13" style="padding-left: 4pt;text-indent: 0pt;line-height: 17pt;text-align: left;"><b>else </b><span class="p">Set </span>C <span class="p">= </span>C<span class="s83">.</span>P<span class="s97">i </span><span class="p">/* </span>lb <span class="s83">&lt; </span>C<span class="s83">.</span>K<span class="s97">i </span><span class="p">*/</span></p><p style="padding-left: 156pt;text-indent: 0pt;line-height: 12pt;text-align: left;">/* <i>C </i>is a leaf node */</p><p class="s13" style="padding-left: 156pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="p">Let </span>i <span class="p">be the least value such that </span>K<span class="s145">i </span><span class="s86">≥ </span>lb</p><p class="s46" style="padding-left: 156pt;text-indent: 0pt;line-height: 12pt;text-align: left;">if <span class="p">there is no such </span><i>i</i></p><p style="padding-left: 156pt;text-indent: 21pt;text-align: left;"><b>then </b>Set <i>i </i>=1+ number of keys in <i>C</i>; /* To force move to next leaf */ Set done = false;</p><p class="s46" style="padding-left: 156pt;text-indent: 0pt;text-align: left;">while <span class="p">(not done) </span>begin</p><p style="padding-left: 177pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Let <i>n </i>= number of keys in <i>C</i>.</p><p class="s13" style="padding-left: 177pt;text-indent: 0pt;line-height: 16pt;text-align: left;"><b>if </b><span class="p">( </span>i <span class="s86">≤ </span>n <span class="p">and </span>C<span class="s83">.</span>K<span class="s97">i </span><span class="s86">≤ </span>ub<span class="p">) </span><b>then begin</b></p><p class="s13" style="padding-left: 199pt;text-indent: 0pt;line-height: 69%;text-align: left;"><span class="p">Add </span>C<span class="s83">.</span>P<span class="s145">i </span><span class="p">to resultSet Set </span>i <span class="s15">= </span>i <span class="s15">+ </span><span class="p">1</span></p><p class="s46" style="padding-left: 177pt;text-indent: 0pt;line-height: 11pt;text-align: left;">end</p><p class="s13" style="padding-left: 177pt;text-indent: 0pt;line-height: 17pt;text-align: left;"><b>else if </b><span class="p">(</span>i <span class="s86">≤ </span>n <span class="p">and </span>C<span class="s83">.</span>K<span class="s97">i </span><span class="s83">&gt; </span>ub<span class="p">)</span></p><p class="s46" style="text-indent: 0pt;line-height: 9pt;text-align: center;">then <span class="p">Set done = true;</span></p><p class="s13" style="padding-left: 22pt;text-indent: 0pt;line-height: 16pt;text-align: center;"><b>else if </b><span class="p">(</span>i <span class="s83">&gt; </span>n <span class="p">and </span>C<span class="s83">.</span>P<span class="s97">n</span><span class="s136">+</span><span class="s130">1 </span><span class="s94">is not null)</span></p><p class="s13" style="padding-left: 107pt;text-indent: 0pt;line-height: 14pt;text-align: center;"><b>then </b><span class="p">Set </span>C <span class="s15">= </span>C<span class="s83">.</span>P<span class="s97">n</span><span class="s136">+</span><span class="s130">1</span><span class="s94">, and </span>i <span class="s15">= </span><span class="p">1 /* Move to next leaf */</span></p><p class="s46" style="padding-left: 177pt;text-indent: 0pt;line-height: 10pt;text-align: left;">else <span class="p">Set done= true; /* No more leaves to the right */</span></p><p class="s46" style="padding-left: 156pt;text-indent: 0pt;text-align: left;">end</p><p class="s46" style="padding-left: 156pt;text-indent: 0pt;text-align: left;">return <span class="p">resultSet;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2651.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 217pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.12 </span>Range query on a B<span class="s237">+</span>-tree.</p><p style="padding-top: 10pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">tries. We omit details for simplicity, and leave the pseudocode for the iterator interface as an exercise for the interested reader.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: left;">We now consider the cost of querying on a B<span class="s181">+</span>-tree index. In processing a query, we traverse a path in the tree from the root to some leaf node. If there are <i>N </i>records in</p><p class="s118" style="text-indent: 0pt;text-align: left;">⌈<span class="s109">n </span>⌉</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;line-height: 6pt;text-align: center;"><span class="s15">log  </span>(<i>N </i>) .</p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 6pt;text-align: center;">the ﬁle, the path is no longer than <span class="s15">⌈  </span><span class="s137">∕</span><span class="s98">2</span>  <span class="s15">⌉</span></p><p style="text-indent: 17pt;text-align: left;">Typically, the node size is chosen to be the same as the size ofa disk block, which is typically 4 kilobytes. With a search-key size of 12 bytes, and a disk-pointer size of</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">8 bytes, <i>n </i>is around 200. Even with a more conservative estimate of 32 bytes for the search-key size, <i>n </i>is around 100. With <i>n </i><span class="s15">= </span>100, if we have 1 million search-key values in</p><p class="s15" style="padding-left: 227pt;text-indent: 0pt;line-height: 6pt;text-align: left;">log<span class="s98">50</span><span class="p">(1,000,000)</span>⌉ = <span class="p">4 nodes to be accessed. Thus, at</span></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 6pt;text-align: left;">the ﬁle, a lookup requires only <span class="s15">⌈</span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">most four blocks need to be read from disk to traverse the path from the root to a leaf. The root node of the tree is usually heavily accessed and is likely to be in the buﬀer, so typically only three or fewer blocks need to be read from disk.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">An important diﬀerence between B<span class="s181">+</span>-tree structures and in-memory tree structures, such as binary trees, is the size of a node, and as a result, the height of the tree. In a binary tree, each node is small and has at most two pointers. In a B<span class="s181">+</span>-tree, each node is large—typically a disk block—and a node can have a large number of pointers. Thus, B<span class="s181">+</span>-trees tend to be fat and short, unlike thin and tall binary trees. In a balanced binary</p><p style="padding-left: 295pt;text-indent: 0pt;line-height: 0pt;text-align: left;"><span class="s15">log </span>(<i>N </i>) , where <i>N </i>is the number of</p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 12pt;text-align: left;">tree, the path for a lookup can be of length <span class="s15">⌈  </span><span class="s98">2</span>  <span class="s15">⌉</span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">records in the ﬁle being indexed. With <i>N </i><span class="s15">= </span>1,000,000 as in the previous example, a balanced binary tree requires around 20 node accesses. If each node were on a diﬀerent disk block, 20 block reads would be required to process a lookup, in contrast to the four block reads for the B<span class="s181">+</span>-tree. The diﬀerence is signiﬁcant with a magnetic disk, since each block read could require a disk arm seek which, together with the block read, takes about 10 milliseconds on a magnetic disk. The diﬀerence is not quite as drastic with ﬂash storage, where a read of a 4 kilobyte page takes around 10 to 100 microseconds, but it is still signiﬁcant.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">After traversing down to the leaf level, queries on a single value of a unique search key require one more random <span class="s44">I/O </span>operation to fetch any matching record.</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Range queries have an additional cost, after traversing down to the leaf level: all the pointers in the given range must be retrieved. These pointers are in consecutive leaf</p><p class="s15" style="padding-left: 334pt;text-indent: 0pt;line-height: 6pt;text-align: left;">∕<span class="p">(</span><span class="s13">n</span>∕<span class="p">2) </span>+ <span class="p">1 leaf nodes need</span></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 6pt;text-align: left;">nodes; thus, if <i>M </i>such pointers are retrieved, at most <span class="s15">⌈</span><i>M</i></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">to be accessed to retrieve the pointers (since each leaf node has at least <i>n</i><span class="s15">∕</span>2 pointers, but even two pointers may be split across two pages). To this cost, we need to add the cost of accessing the actual records. For secondary indices, each such record may be on a diﬀerent block, which could result in <i>M </i>random <span class="s44">I/O </span>operations in the worst case. For clustered indices, these records would be in consecutive blocks, with each block containing multiple records, resulting in a signiﬁcantly lower cost.</p><p style="padding-left: 88pt;text-indent: 17pt;line-height: 94%;text-align: justify;">Now, let us consider the case of nonunique keys. As explained earlier, if we wish to create an index on an attribute <i>a</i><span class="s97">i </span>that is not a candidate key, and may thus have duplicates, we instead create an index on a composite key that is duplicate-free. The composite key is created by adding extra attributes, such as the primary key, to <i>a</i><span class="s145">i</span>, to ensure uniqueness. Suppose we created an index on the composite key (<i>a</i><span class="s145">i</span>, <i>A</i><span class="s145">p</span>) instead of creating an index on <i>a</i><span class="s97">i</span>.</p><p style="padding-left: 106pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">An important question, then, is how do we retrieve all tuples with a given value</p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 92%;text-align: justify;"><i>v </i>for <i>a</i><span class="s97">i </span>using the above index? This question is easily answered by using the function ﬁndRange(<i>lb</i>, <i>ub</i>), with <i>lb </i><span class="s15">= </span>(<i>v</i>, <span class="s15">−∞</span>) and <i>ub </i><span class="s15">= </span>(<i>v</i>, <span class="s15">∞</span>), where <span class="s15">−∞ </span>and <span class="s15">∞ </span>denote the smallest and largest possible values of <i>A</i><span class="s145">p</span>. All records with <i>a</i><span class="s145">i </span><span class="s15">= </span><i>v </i>would be returned by the above function call. Range queries on <i>a</i><span class="s145">i </span>can be handled similarly. These range</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">queries retrieve pointers to the records quite eﬃciently, although retrieval of the records may be expensive, as discussed earlier.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">14.3.3 Updates on B<span class="s331">+</span>-Trees</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">When a record is inserted into, or deleted from a relation, indices on the relation must be updated correspondingly. Recall that updates to a record can be modeled as a dele- tion of the old record followed by insertion of the updated record. Hence we only consider the case of insertion and deletion.</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Insertion and deletion are more complicated than lookup, since it may be neces- sary to <span class="s63">split </span>a node that becomes too large as the result of an insertion, or to <span class="s63">coalesce</span></p><p style="padding-left: 79pt;text-indent: 0pt;text-align: center;">nodes (i.e., combine nodes) if a node becomes too small (fewer than <span class="s15">⌈</span><i>n  </i>pointers).</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Furthermore, when a node is split or a pair of nodes is combined, we must ensure that balance is preserved. To introduce the idea behind insertion and deletion in a B<span class="s181">+</span>-tree, we shall assume temporarily that nodes never become too large or too small. Under this assumption, insertion and deletion are performed as deﬁned next.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Insertion</b>. Using the same technique as for lookup from the <i>find</i>() function (Figure 14.11), we ﬁrst ﬁnd the leaf node in which the search-key value would appear. We then insert an entry (i.e., a search-key value and record pointer pair) in the leaf node, positioning it such that the search keys are still in order.</p><p class="s39" style="padding-top: 3pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Deletion</span><span class="p">. Using the same technique as for lookup, we ﬁnd the leaf node containing the entry to be deleted by performing a lookup on the search-key value of the deleted record; if there are multiple entries with the same search-key value, we search across all entries with the same search-key value until we ﬁnd the entry that points to the record being deleted. We then remove the entry from the leaf node. All entries in the leaf node that are to the right of the deleted entry are shifted left by one position, so that there are no gaps in the entries after the entry is deleted.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: left;">We now consider the general case of insertion and deletion, dealing with node splitting and node coalescing.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s183" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">14.3.3.1 Insertion</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">We now consider an example of insertion in which a node must be split. Assume that a record is inserted on the <i>instructor </i>relation, with the <i>name </i>value being Adams. We then need to insert an entry for “Adams” into the B<span class="s181">+</span>-tree of Figure 14.9. Using the algorithm for lookup, we ﬁnd that “Adams” should appear in the leaf node containing “Brandt”, “Caliﬁeri”, and “Crick.” There is no room in this leaf to insert the search- key value “Adams.” Therefore, the node is <i>split </i>into two nodes. Figure 14.13 shows the two leaf nodes that result from the split of the leaf node on inserting “Adams”. The search-key values “Adams” and “Brandt” are in one leaf, and “Caliﬁeri” and “Crick” are in the other. In general, we take the <i>n </i>search-key values (the <i>n </i><span class="s15">− </span>1 values in the leaf</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="399" height="38" alt="image" src="Image_2652.png"/></span></p><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Crick</p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Caliﬁeri</p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Brandt</p><p style="text-indent: 0pt;text-align: left;"/><p class="s42" style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Adams</p><p style="text-indent: 0pt;text-align: left;"/><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 14.13 <span class="s74">Split of leaf node on insertion of “Adams”.</span></p><p class="s15" style="text-indent: 0pt;text-align: left;">⌈</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 9pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">node plus the value being inserted), and put the ﬁrst <i>n</i><span class="s15">∕</span>2 in the existing node and the remaining values in a newly created node.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Having split a leaf node, we must insert the new leaf node into the B<span class="s181">+</span>-tree structure. In our example, the new node has “Caliﬁeri” as its smallest search-key value. We need to insert an entry with this search-key value, and a pointer to the new node, into the parent of the leaf node that was split. The B<span class="s181">+</span>-tree of Figure 14.14 shows the result of the insertion. It was possible to perform this insertion with no further node split, because there was room in the parent node for the new entry. If there were no room, the parent would have had to be split, requiring an entry to be added to its parent. In the worst case, all nodes along the path to the root must be split. If the root itself is split, the entire tree becomes deeper.</p><p style="padding-left: 106pt;text-indent: 0pt;text-align: justify;">Splitting of a nonleaf node is a little diﬀerent from splitting of a leaf node. Figure</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: right;">14.15 shows the result of inserting a record with search key “Lamport” into the tree shown in Figure 14.14. The leaf node in which “Lamport” is to be inserted already has entries “Gold”, “Katz”, and “Kim”, and as a result the leaf node has to be split. The new right-hand-side node resulting from the split contains the search-key values “Kim” and “Lamport”. An entry (Kim, <i>n</i>1) must then be added to the parent node, where <i>n</i>1 is a pointer to the new node, However, there is no space in the parent node to add a new entry, and the parent node has to be split. To do so, the parent node is conceptually expanded temporarily, the entry added, and the overfull node is then immediately split. When an overfull nonleaf node is split, the child pointers are divided among the original and the newly created nodes; in our example, the original node is left with the ﬁrst three pointers, and the newly created node to the right gets the remaining two pointers. The search key values are, however, handled a little diﬀerently. The search key values that lie between the pointers moved to the right node (in our example, the value “Kim”) are moved along with the pointers, while those that lie between the pointers</p><p style="padding-left: 53pt;text-indent: 0pt;text-align: center;">that stay on the left (in our example, “Caliﬁeri” and “Einstein”) remain undisturbed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:161.202pt" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Caliﬁeri</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Einstein</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Gold</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Adams</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Brandt</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Caliﬁeri</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Crick</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:21pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Einstein</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:16pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="text-indent: 0pt;line-height: 6pt;text-align: left;">El Said</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:12pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Gold</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Katz</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Kim</p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Mozart</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Singh</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:8pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:26pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 2pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Srinivasan</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:9pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s341" style="padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Wu</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="padding-left: 89pt;text-indent: 0pt;line-height: 9pt;text-align: left;"><span style=" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; vertical-align: -1pt;">     </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="418" height="110" alt="image" src="Image_2653.png"/></span></p><p class="s340" style="text-indent: 0pt;line-height: 5pt;text-align: left;">Mozart</p><p style="text-indent: 0pt;text-align: left;"/><p class="s340" style="text-indent: 0pt;line-height: 5pt;text-align: left;">Srinivasan</p><p style="text-indent: 0pt;text-align: left;"/><p class="s74" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 14.14 </span>Insertion of “Adams” into the B<span class="s237">+</span>-tree of Figure 14.9.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:284.712pt" cellspacing="0"><tr style="height:7pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:16pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s344" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;line-height: 5pt;text-align: left;">Gold</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s344" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;line-height: 5pt;text-align: left;">Mozart</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:199.598pt" cellspacing="0"><tr style="height:7pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s344" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;line-height: 5pt;text-align: left;">Caliﬁeri</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:21pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s344" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;line-height: 5pt;text-align: left;">Einstein</p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:121.215pt" cellspacing="0"><tr style="height:2pt"><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Adams</p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Brandt</p></td><td style="width:9pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:2pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Caliﬁeri</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="text-indent: 0pt;text-align: left;">Crick</p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:21pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Einstein</p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">El Said</p></td><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:12pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Gold</p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Katz</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:9pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:13pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Kim</p></td><td style="width:22pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">Lamport</p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">Mozart</p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">Singh</p></td><td style="width:9pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:6pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:25pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">Srinivasan</p></td><td style="width:12pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s344" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Wu</p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:3pt"><td style="width:5pt;border-top-style:solid;border-top-width:2pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:2pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-top-style:solid;border-top-width:2pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="321" height="94" alt="image" src="Image_2654.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="136" height="47" alt="image" src="Image_2655.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="21" height="48" alt="image" src="Image_2656.png"/></span></p><p class="s345" style="text-indent: 0pt;line-height: 5pt;text-align: left;">Kim</p><p style="text-indent: 0pt;text-align: left;"/><p class="s345" style="text-indent: 0pt;line-height: 5pt;text-align: left;">Srinivasan</p><p style="text-indent: 0pt;text-align: left;"/><p class="s74" style="padding-top: 5pt;padding-left: 156pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.15 </span>Insertion of “Lamport” into the B<span class="s237">+</span>-tree of Figure 14.14.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">However, the search key value that lies between the pointers that stay on the left, and the pointers that move to the right node is treated diﬀerently. In our example, the search key value “Gold” lies between the three pointers that went to the left node, and the two pointers that went to the right node. The value “Gold” is not added to either of the split nodes. Instead, an entry (Gold, <i>n</i>2) is added to the parent node, where <i>n</i>2 isa pointer to the newly created node that resulted from the split. In this case, the parent node is the root, and it has enough space for the new entry.</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: right;">The general technique for insertion into a B<span class="s181">+</span>-tree is to determine the leaf node <i>l</i></p><p style="padding-left: 87pt;text-indent: 0pt;text-align: right;">into which insertion must occur. If a split results, insert the new node into the parent</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2657.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-left: 138pt;text-indent: 0pt;text-align: left;"><b>procedure </b>insert<span class="p">(</span>value K<span class="p">, </span>pointer P<span class="p">)</span></p><p style="padding-left: 159pt;text-indent: 0pt;text-align: left;"><b>if </b>(tree is empty) create an empty leaf node <i>L</i>, which is also the root</p><p style="padding-left: 159pt;text-indent: 0pt;text-align: left;"><b>else </b>Find the leaf node <i>L </i>that should contain key value <i>K</i></p><p style="padding-left: 159pt;text-indent: 0pt;text-align: left;"><b>if </b>(<i>L </i>has less than <i>n </i><span class="s15">− </span>1 key values)</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2658.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2659.png"/></span></p><p style="padding-left: 181pt;text-indent: 0pt;text-align: left;"><b>then </b>insert in leaf (<i>L</i>, <i>K</i>, <i>P</i>)</p><p style="padding-left: 202pt;text-indent: -21pt;text-align: left;"><b>else begin </b>/* <i>L </i>has <i>n </i><span class="s15">− </span>1 key values already, split it */ Create node <i>L</i><span class="s181">′</span></p><p class="s13" style="padding-top: 1pt;padding-left: 223pt;text-indent: -21pt;line-height: 70%;text-align: left;"><span class="p">Copy </span>L<span class="s83">.</span>P<span class="s93">1 </span><span class="s15">… </span>L<span class="s83">.</span>K<span class="s145">n</span><span class="s171">−</span><span class="s93">1 </span><span class="s94">to a block of memory </span>T <span class="p">that can hold </span>n <span class="p">(pointer, key-value) pairs</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2660.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2661.png"/></span></p><p style="padding-top: 1pt;padding-left: 202pt;text-indent: 0pt;line-height: 11pt;text-align: left;">insert in leaf (<i>T </i>, <i>K</i>, <i>P</i>)</p><p class="s13" style="padding-left: 202pt;text-indent: 0pt;line-height: 16pt;text-align: left;"><span class="p">Set </span>L<span class="s181">′</span><span class="s83">.</span>P<span class="s97">n </span><span class="s15">= </span>L<span class="s83">.</span>P<span class="s97">n</span><span class="p">; Set </span>L<span class="s83">.</span>P<span class="s97">n </span><span class="p">= </span>L<span class="s181">′</span></p><p class="s13" style="padding-left: 202pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="p">Erase </span>L<span class="s83">.</span>P<span class="s130">1 </span><span class="s94">through </span>L<span class="s83">.</span>K<span class="s97">n</span><span class="s136">−</span><span class="s130">1 </span><span class="s94">from </span>L</p><p class="s118" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="padding-left: 202pt;text-indent: 0pt;line-height: 5pt;text-align: left;"><span class="p">Copy </span>T<span class="s83">.</span>P<span class="s130">1 </span><span class="s94">through </span>T<span class="s83">.</span>K <span class="s97">n</span><span class="s136">∕ </span><span class="p">from </span>T <span class="p">into </span>L <span class="p">starting at </span>L<span class="s83">.</span>P</p><p class="s13" style="padding-top: 3pt;padding-left: 202pt;text-indent: 0pt;line-height: 19pt;text-align: left;"><span class="p">Copy </span>T<span class="s83">.</span>P</p><p style="padding-left: 202pt;text-indent: 0pt;line-height: 2pt;text-align: left;">Let <i>K</i><span class="s181">′</span></p><p class="s118" style="padding-top: 13pt;text-indent: 0pt;line-height: 8pt;text-align: left;">⌈<span class="s109">n </span>⌉</p><p style="padding-left: 1pt;text-indent: 0pt;text-align: left;">through<span class="s346">⌈</span></p><p class="s119" style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">2</p><p class="s13" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">T<span class="s83">.</span>K<span class="s145">n</span></p><p style="padding-top: 7pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">from <i>T </i>into <i>L</i><span class="s181">′</span><span class="s15"> </span>starting at</p><p class="s347" style="padding-left: 18pt;text-indent: 0pt;line-height: 1pt;text-align: left;">L<span class="s118">′</span></p><p class="s119" style="padding-left: 3pt;text-indent: 0pt;line-height: 7pt;text-align: left;">1</p><p class="s13" style="text-indent: 0pt;line-height: 15pt;text-align: left;">L<span class="s181">′</span><span class="s83">.</span>P<span class="s93">1</span></p><p class="s118" style="text-indent: 0pt;text-align: left;">∕<span class="s119">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s118" style="text-indent: 0pt;text-align: left;">+<span class="s119">1</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: center;">be the smallest key-value in</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2662.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2663.png"/></span></p><p style="padding-left: 31pt;text-indent: 0pt;text-align: center;">insert in parent(<i>L</i>, <i>K</i><span class="s181">′</span>, <i>L</i><span class="s181">′</span>)</p><p class="s46" style="padding-left: 76pt;text-indent: 0pt;text-align: center;">end</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2664.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 209pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.16 </span>Insertion of entry in a B<span class="s237">+</span>-tree.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">of node <i>l</i>. If this insertion causes a split, proceed recursively up the tree until either an insertion does not cause a split or a new root is created.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2665.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2666.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2667.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2668.png"/></span></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Figure 14.16 outlines the insertion algorithm in pseudocode. The procedure <i>in- sert </i>inserts a key-value pointer pair into the index, using two subsidiary procedures <i>insert in leaf </i>and <i>insert in parent</i>, shown in Figure 14.17. In the pseudocode, <i>L</i>, <i>N </i>, <i>P</i></p><p class="s13" style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;line-height: 65%;text-align: justify;"><span class="p">and </span>T <span class="p">denote pointers to nodes, with </span>L <span class="p">being used to denote a leaf node. </span>L<span class="s83">.</span>K<span class="s145">i </span><span class="p">and </span>L<span class="s83">.</span>P<span class="s145">i </span><span class="p">denote the </span>i<span class="p">th value and the </span>i<span class="p">th pointer in node </span>L<span class="p">, respectively; </span>T<span class="s83">.</span>K<span class="s145">i </span><span class="p">and </span>T<span class="s83">.</span>P<span class="s145">i </span><span class="p">are used similarly. The pseudocode also makes use of the function </span>parent<span class="p">(</span>N <span class="p">) to ﬁnd the parent</span></p><p style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">of a node <i>N </i>. We can compute a list of nodes in the path from the root to the leaf while initially ﬁnding the leaf node, and we can use it later to ﬁnd the parent of any node in the path eﬃciently.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2669.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2670.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2671.png"/></span></p><p class="s13" style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><b>procedure </b>insert in leaf <span class="p">(</span>node L<span class="p">, </span>value K<span class="p">, </span>pointer P<span class="p">)</span></p><p class="s13" style="padding-left: 109pt;text-indent: 0pt;line-height: 16pt;text-align: left;"><b>if </b><span class="p">(</span>K <span class="s83">&lt; </span>L<span class="s83">.</span>K<span class="s98">1</span><span class="p">)</span></p><p class="s13" style="padding-left: 130pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><b>then </b><span class="p">insert </span>P<span class="p">, </span>K <span class="p">into </span>L <span class="p">just before </span>L<span class="s83">.</span>P<span class="s98">1</span></p><p class="s46" style="padding-left: 130pt;text-indent: 0pt;line-height: 10pt;text-align: left;">else begin</p><p style="padding-left: 152pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Let <i>K</i><span class="s145">i </span>be the highest value in <i>L </i>that is less than or equal to <i>K</i></p><p class="s13" style="padding-left: 152pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span class="p">Insert </span>P<span class="p">, </span>K <span class="p">into </span>L <span class="p">just after </span>L<span class="s83">.</span>K<span class="s145">i</span></p><p class="s46" style="padding-left: 130pt;text-indent: 0pt;line-height: 12pt;text-align: left;">end</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2672.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2673.png"/></span></p><p class="s13" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><b>procedure </b>insert in parent<span class="p">(</span>node N <span class="p">, </span>value K<span class="s181">′</span><span class="p">, </span>node N <span class="s181">′</span><span class="p">)</span></p><p style="padding-left: 109pt;text-indent: 0pt;text-align: left;"><b>if </b>(<i>N </i>is the root of the tree)</p><p class="s46" style="padding-left: 130pt;text-indent: 0pt;text-align: left;">then begin</p><p style="padding-left: 152pt;text-indent: 0pt;text-align: left;">Create a new node <i>R </i>containing <i>N </i>, <i>K</i><span class="s181">′</span>, <i>N </i><span class="s181">′</span><span class="s15">  </span>/* <i>N </i>and <i>N </i><span class="s181">′</span><span class="s15"> </span>are pointers */ Make <i>R </i>the root of the tree</p><p class="s46" style="padding-left: 152pt;text-indent: 0pt;text-align: left;">return</p><p class="s46" style="padding-left: 130pt;text-indent: 0pt;text-align: left;">end</p><p style="padding-left: 109pt;text-indent: 0pt;text-align: left;">Let <i>P </i>= <i>parent </i>(<i>N </i>)</p><p style="padding-left: 109pt;text-indent: 0pt;text-align: left;"><b>if </b>(<i>P </i>has less than <i>n </i>pointers)</p><p style="padding-left: 130pt;text-indent: 0pt;text-align: left;"><b>then </b>insert (<i>K</i><span class="s181">′</span>, <i>N </i><span class="s181">′</span>) in <i>P </i>just after <i>N</i></p><p style="padding-left: 130pt;text-indent: 0pt;text-align: left;"><b>else begin </b>/* Split <i>P </i>*/</p><p style="padding-left: 152pt;text-indent: 0pt;text-align: left;">Copy <i>P </i>to a block of memory <i>T </i>that can hold <i>P </i>and (<i>K</i><span class="s181">′</span>, <i>N </i><span class="s181">′</span>) Insert (<i>K</i><span class="s181">′</span>, <i>N </i><span class="s181">′</span>) into <i>T </i>just after <i>N</i></p><p style="padding-left: 152pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Erase all entries from <i>P</i>; Create node <i>P</i><span class="s181">′</span></p><p class="s118" style="text-indent: 0pt;text-align: left;">⌈</p><p style="text-indent: 0pt;text-align: left;"/><p class="s118" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="padding-left: 152pt;text-indent: 0pt;line-height: 7pt;text-align: left;"><span class="p">Copy </span>T<span class="s83">.</span>P<span class="s130">1 </span><span class="s15">… </span>T<span class="s83">.</span>P <span class="s130">(</span><span class="s149">n</span><span class="s136">+ ∕</span><span class="s130">2 </span><span class="s94">into </span>P</p><p class="s13" style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;line-height: 9pt;text-align: right;"><span class="p">Let </span>K<span class="s181">′′</span><span class="s15"> = </span>T<span class="s83">.</span>K</p><p class="s119" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">1)</p><p class="s118" style="text-indent: 0pt;text-align: left;">⌈</p><p style="text-indent: 0pt;text-align: left;"/><p class="s118" style="padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;line-height: 0pt;text-align: left;">+<span class="s119">1)</span>∕<span class="s119">2</span></p><p class="s13" style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;line-height: 8pt;text-align: right;"><span class="p">Copy </span>T<span class="s83">.</span>P</p><p class="s119" style="padding-left: 51pt;text-indent: 0pt;text-align: center;">(<i>n</i></p><p class="s118" style="padding-top: 4pt;padding-left: 51pt;text-indent: 0pt;line-height: 0pt;text-align: center;">+<span class="s119">1)</span>∕<span class="s119">2 </span>+<span class="s119">1</span></p><p class="s13" style="text-indent: 0pt;line-height: 13pt;text-align: left;"><span class="s15">…</span><span class="s348">⌉ </span>T<span class="s83">.</span>P</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s109" style="text-indent: 0pt;line-height: 0pt;text-align: left;">n<span class="s118">+</span><span class="s119">1</span></p><p style="padding-top: 7pt;padding-left: 1pt;text-indent: 0pt;line-height: 6pt;text-align: left;">into <i>P</i><span class="s181">′</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2674.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2675.png"/></span></p><p class="s118" style="padding-left: 60pt;text-indent: 0pt;line-height: 12%;text-align: center;">⌈<span class="s119">(</span><span class="s109">n   </span>⌉   <span class="s349">′′  ′</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 119pt;text-indent: 0pt;text-align: right;">end</p><p style="padding-left: 4pt;text-indent: 0pt;line-height: 12pt;text-align: left;">insert in parent(<i>P</i>, <i>K</i></p><p style="padding-left: 4pt;text-indent: 0pt;line-height: 12pt;text-align: left;">, <i>P </i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2676.png"/></span></p><p class="s74" style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 14.17 </span>Subsidiary procedures for insertion of entry in a B<span class="s237">+</span>-tree.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2677.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2678.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2679.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2680.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2681.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2682.png"/></span></p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">The procedure <i>insert in parent </i>takes as parameters <i>N </i>, <i>K</i><span class="s181">′</span>, <i>N </i><span class="s181">′</span>, where node <i>N </i>was split into <i>N </i>and <i>N </i><span class="s181">′</span>, with <i>K</i><span class="s181">′</span><span class="s15"> </span>being the least value in <i>N </i><span class="s181">′</span>. The procedure modiﬁes the parent of <i>N </i>to record the split. The procedures <i>insert into index </i>and <i>insert in parent </i>use a temporary area of memory <i>T </i>to store the contents of a node being split. The procedures can be modiﬁed to copy data from the node being split directly to the newly created node, reducing the time required for copying data. However, the use of the temporary space <i>T </i>simpliﬁes the procedures.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s183" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">14.3.3.2 Deletion</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌈    ⌉</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">We now consider deletions that cause tree nodes to contain too few pointers. First, let us delete “Srinivasan” from the B<span class="s181">+</span>-tree of Figure 14.14. The resulting B<span class="s181">+</span>-tree appears in Figure 14.18. We now consider how the deletion is performed. We ﬁrst locate the entry for “Srinivasan” by using our lookup algorithm. When we delete the entry for “Srinivasan” from its leaf node, the node is left with only one entry, “Wu”. Since, in</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 0pt;line-height: 70%;text-align: justify;">our example, <i>n </i><span class="s15">= </span>4 and 1 <span class="s83">&lt; </span>(<i>n </i><span class="s15">− </span>1)<span class="s15">∕</span>2 , we must either merge the node with a sibling node or redistribute the entries between the nodes, to ensure that each node</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">is at least half-full. In our example, the underfull node with the entry for “Wu” can be merged with its left sibling node. We merge the nodes by moving the entries from both the nodes into the left sibling and deleting the now-empty right sibling. Once the node is deleted, we must also delete the entry in the parent node that pointed to the just deleted node.</p><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In our example, the entry to be deleted is (Srinivasan, <i>n</i>3), where <i>n</i>3 is a pointer to the leaf containing “Srinivasan”. (In this case the entry to be deleted in the nonleaf node happens to be the same value as that deleted from the leaf; that would not be the case for most deletions.) After deleting the above entry, the parent node, which had a search key value “Srinivasan” and two pointers, now has one pointer (the leftmost</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 119pt;text-indent: 0pt;line-height: 5pt;text-align: right;">= <span class="p">4, the parent</span></p><p style="text-indent: 0pt;text-align: left;">node is underfull. (For larger <i>n</i>, a node that becomes underfull would still have some values as well as pointers.)</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: center;">pointer in the node) and no search-key values. Since 1 <span class="s83">&lt; </span><span class="s15">⌈</span><i>n  </i>for <i>n</i></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:206.762pt" cellspacing="0"><tr style="height:9pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:23pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s350" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Caliﬁeri</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:23pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s350" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Einstein</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="491" height="137" alt="image" src="Image_2683.png"/></span></p><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Gold</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Mozart</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Adams Brandt</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Caliﬁeri Crick</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Einstein El Said</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Gold  Katz  Kim   Mozart  Singh  Wu</p><p style="text-indent: 0pt;text-align: left;"/><p class="s74" style="padding-top: 5pt;padding-left: 151pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.18 </span>Deletion of “Srinivasan” from the B<span class="s237">+</span>-tree of Figure 14.14.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">In this case, we look at a sibling node; in our example, the only sibling is the nonleaf node containing the search keys “Caliﬁeri”, “Einstein”, and “Gold”. If possible, we try to coalesce the node with its sibling. In this case, coalescing is not possible, since the node and its sibling together have ﬁve pointers, against a maximum of four. The solution in this case is to <span class="s63">redistribute </span>the pointers between the node and its sibling, such that each</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 171pt;text-indent: 0pt;line-height: 6pt;text-align: left;">= <span class="p">2 child pointers. To do so, we move the rightmost pointer from</span></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 6pt;text-align: left;">has at least <span class="s15">⌈</span><i>n</i></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">the left sibling (the one pointing to the leaf node containing “Gold”) to the underfull right sibling. However, the underfull right sibling would now have two pointers, namely, its leftmost pointer, and the newly moved pointer, with no value separating them. In fact, the value separating them is not present in either of the nodes, but is present in the parent node, between the pointers from the parent to the node and its sibling. In our example, the value “Mozart” separates the two pointers and is present in the right sibling after the redistribution. Redistribution of the pointers also means that the value “Mozart” in the parent no longer correctly separates search-key values in the two siblings. In fact, the value that now correctly separates search-key values in the two sibling nodes is the value “Gold”, which was in the left sibling before redistribution.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">As a result, as can be seen in the B<span class="s181">+</span>-tree in Figure 14.18, after redistribution of pointers between siblings, the value “Gold” has moved up into the parent, while the value that was there earlier, “Mozart”, has moved down into the right sibling.</p><p style="padding-left: 106pt;text-indent: 0pt;line-height: 13pt;text-align: justify;">We next delete the search-key values “Singh” and “Wu” from the B<span class="s181">+</span>-tree of Figure</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">14.18. The result is shown in Figure 14.19. The deletion of the ﬁrst of these values does not make the leaf node underfull, but the deletion of the second value does. It is not possible to merge the underfull node with its sibling, so a redistribution of values is carried out, moving the search-key value “Kim” into the node containing “Mozart”, resulting in the tree shown in Figure 14.19. The value separating the two siblings has been updated in the parent, from “Mozart” to “Kim”.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Now we delete “Gold” from the above tree; the result is shown in Figure 14.20. This results in an underfull leaf, which can now be merged with its sibling. The resultant deletion of an entry from the parent node (the nonleaf node containing “Kim”) makes the parent underfull (it is left with just one pointer). This time around, the parent node can be merged with its sibling. This merge results in the search-key value “Gold”</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:175.441pt" cellspacing="0"><tr style="height:9pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:23pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s350" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Caliﬁeri</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:23pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s350" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Einstein</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:390.267pt" cellspacing="0"><tr style="height:9pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:16pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s350" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Kim</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:21pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s350" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Mozart</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="405" height="137" alt="image" src="Image_2684.png"/></span></p><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Gold</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Kim</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Adams Brandt</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Caliﬁeri Crick</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Einstein El Said</p><p style="text-indent: 0pt;text-align: left;"/><p class="s150" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Gold Katz</p><p style="text-indent: 0pt;text-align: left;"/><p class="s74" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 14.19 </span>Deletion of “Singh” and “Wu” from the B<span class="s237">+</span>-tree of Figure 14.18.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:268.669pt" cellspacing="0"><tr style="height:11pt"><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:29pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Caliﬁeri</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Einstein</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Gold</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:121.215pt" cellspacing="0"><tr style="height:5pt"><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:27pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Adams</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:25pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Brandt</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:8pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:3pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:28pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Caliﬁeri</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:22pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Crick</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:3pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:29pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Einstein</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">El Said</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:17pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Katz</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Kim</p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:25pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p class="s351" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Mozart</p></td><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:4pt"><td style="width:4pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:8pt;border-top-style:solid;border-top-width:3pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-top-style:solid;border-top-width:3pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:7pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="243" height="61" alt="image" src="Image_2685.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="27" height="61" alt="image" src="Image_2686.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="74" height="61" alt="image" src="Image_2687.png"/></span></p><p class="s74" style="padding-top: 5pt;padding-left: 163pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.20 </span>Deletion of “Gold” from the B<span class="s237">+</span>-tree of Figure 14.19.</p><p style="padding-top: 10pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">moving down from the parent into the merged node. As a result of this merge, an entry is deleted from its parent, which happens to be the root of the tree. And as a result of that deletion, the root is left with only one child pointer and no search-key value, violating the condition that the root must have at least two children. As a result, the root node is deleted and its sole child becomes the root, and the depth of the B<span class="s181">+</span>-tree has been decreased by 1.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">It is worth noting that, as a result of deletion, a key value that is present in a nonleaf node of the B<span class="s181">+</span>-tree may not be present at any leaf of the tree. For example, in Figure 14.20, the value “Gold” has been deleted from the leaf level but is still present in a nonleaf node.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In general, to delete a value in a B<span class="s181">+</span>-tree, we perform a lookup on the value and delete it. If the node is too small, we delete it from its parent. This deletion results in recursive application of the deletion algorithm until the root is reached, a parent remains adequately full after deletion, or redistribution is applied.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2688.png"/></span></p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;text-align: left;">∕<span class="p">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Figure 14.21 outlines the pseudocode for deletion from a B<span class="s181">+</span>-tree. The procedure <i>swap variables</i>(<i>N </i>, <i>N </i><span class="s181">′</span>) merely swaps the values of the (pointer) variables <i>N </i>and <i>N </i><span class="s181">′</span>; this swap has no eﬀect on the tree itself. The pseudocode uses the condition “too few</p><p style="padding-left: 79pt;text-indent: 0pt;line-height: 12pt;text-align: center;">pointers/values.” For nonleaf nodes, this criterion means less than <span class="s15">⌈</span><i>n  </i>pointers; for</p><p class="s15" style="text-indent: 0pt;text-align: left;">⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 263pt;text-indent: 0pt;line-height: 6pt;text-align: left;">− <span class="p">1)</span>∕<span class="p">2 values. The pseudocode redistributes entries</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 6pt;text-align: left;">leaf nodes, it means less than <span class="s15">⌈</span>(<i>n</i></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">by borrowing a single entry from an adjacent node. We can also redistribute entries by repartitioning entries equally between the two nodes. The pseudocode refers to deleting an entry (<i>K</i>, <i>P</i>) from a node. In the case of leaf nodes, the pointer to an entry actually precedes the key value, so the pointer <i>P </i>precedes the key value <i>K</i>. For nonleaf nodes, <i>P </i>follows the key value <i>K</i>.</p><p class="s68" style="padding-top: 9pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">14.3.4 Complexity of B<span class="s331">+</span>-Tree Updates</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Although insertion and deletion operations on B<span class="s181">+</span>-trees are complicated, they require relatively few <span class="s44">I/O </span>operations, which is an important beneﬁt since <span class="s44">I/O </span>operations are expensive. It can be shown that the number of <span class="s44">I/O </span>operations needed in the worst case</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: left;">for an insertion is proportional to <span class="s15">log</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;">pointers in a node, and <i>N</i></p><p class="s118" style="padding-top: 6pt;text-indent: 0pt;line-height: 8pt;text-align: left;">⌈<span class="s109">n </span>⌉</p><p style="text-indent: 0pt;text-align: left;">(<i>N </i>), where <i>n </i>is the maximum number of</p><p class="s118" style="text-indent: 0pt;text-align: left;">∕<span class="s119">2</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 233pt;text-indent: 0pt;line-height: 12pt;text-align: left;">is the number of records in the ﬁle being indexed.</p><p style="padding-left: 137pt;text-indent: 0pt;line-height: 12pt;text-align: left;">The worst-case complexity of the deletion procedure is also proportional to</p><p class="s118" style="text-indent: 0pt;text-align: left;">⌈ ⌉</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 119pt;text-indent: 0pt;line-height: 6pt;text-align: left;">log <span class="s137">∕</span> <span class="p">(</span><span class="s13">N </span><span class="p">), provided there are no duplicate values for the search key; we discuss the</span></p><p class="s109" style="padding-left: 137pt;text-indent: 0pt;line-height: 8pt;text-align: left;">n <span class="s119">2</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 12pt;text-align: left;">case of nonunique search keys later in this chapter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-left: 110pt;text-indent: 0pt;text-align: left;"><b>procedure </b>delete<span class="p">(</span>value K<span class="p">, </span>pointer P<span class="p">)</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2689.png"/></span></p><p style="padding-left: 126pt;text-indent: 0pt;text-align: left;">ﬁnd the leaf node <i>L </i>that contains (<i>K</i>, <i>P</i>) delete entry(<i>L</i>, <i>K</i>, <i>P</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2690.png"/></span></p><p class="s13" style="padding-left: 126pt;text-indent: -16pt;text-align: left;"><b>procedure </b>delete entry<span class="p">(</span>node N <span class="p">, </span>value K<span class="p">, </span>pointer P<span class="p">) delete (</span>K<span class="p">, </span>P<span class="p">) from </span>N</p><p style="padding-left: 126pt;text-indent: 0pt;text-align: left;"><b>if </b>(<i>N </i>is the root <b>and </b><i>N </i>has only one remaining child)</p><p style="padding-left: 126pt;text-indent: 0pt;text-align: left;"><b>then </b>make the child of <i>N </i>the new root of the tree and delete <i>N</i></p><p style="padding-left: 126pt;text-indent: 0pt;text-align: left;"><b>else if </b>(<i>N </i>has too few values/pointers) <b>then begin</b></p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;">Let <i>N </i><span class="s181">′</span><span class="s15"> </span>be the previous or next child of <i>parent</i>(<i>N </i>)</p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;">Let <i>K</i><span class="s181">′</span><span class="s15"> </span>be the value between pointers <i>N </i>and <i>N </i><span class="s181">′</span><span class="s15"> </span>in <i>parent</i>(<i>N </i>)</p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;"><b>if </b>(entries in <i>N </i>and <i>N </i><span class="s181">′</span><span class="s15"> </span>can ﬁt in a single node)</p><p class="s46" style="padding-left: 158pt;text-indent: 0pt;text-align: left;">then begin <span class="p">/* Coalesce nodes */</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2691.png"/></span></p><p style="padding-left: 174pt;text-indent: 0pt;text-align: left;"><b>if </b>(<i>N </i>is a predecessor of <i>N </i><span class="s181">′</span>) <b>then </b>swap variables(<i>N </i>, <i>N </i><span class="s181">′</span>)</p><p style="padding-left: 174pt;text-indent: 0pt;text-align: left;"><b>if </b>(<i>N </i>is not a leaf)</p><p style="padding-left: 190pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><b>then </b>append <i>K</i><span class="s181">′</span><span class="s15"> </span>and all pointers and values in <i>N </i>to <i>N </i><span class="s181">′</span></p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 17pt;text-align: left;"><b>else </b><span class="p">append all (</span>K<span class="s97">i</span><span class="p">, </span>P<span class="s97">i</span><span class="p">) pairs in </span>N <span class="p">to </span>N <span class="s181">′</span><span class="p">; set </span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">n </span><span class="s15">= </span>N<span class="s83">.</span>P<span class="s97">n</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2692.png"/></span></p><p style="padding-left: 174pt;text-indent: 0pt;line-height: 10pt;text-align: left;">delete entry(<i>parent</i>(<i>N </i>), <i>K</i><span class="s181">′</span>, <i>N </i>); delete node <i>N</i></p><p class="s46" style="padding-left: 158pt;text-indent: 0pt;text-align: left;">end</p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;"><b>else begin </b>/* Redistribution: borrow an entry from <i>N </i><span class="s181">′</span><span class="s15"> </span>*/</p><p style="padding-left: 174pt;text-indent: -16pt;text-align: left;"><b>if </b>(<i>N </i><span class="s181">′</span><span class="s15"> </span>is a predecessor of <i>N </i>) <b>then begin if </b>(<i>N </i>is a nonleaf node) <b>then begin</b></p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="p">let </span>m <span class="p">be such that </span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">m </span><span class="p">is the last pointer in </span>N <span class="s181">′</span></p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span class="p">remove (</span>N <span class="s181">′</span><span class="s83">.</span>K<span class="s97">m</span><span class="s136">−</span><span class="s130">1</span><span class="s94">, </span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">m</span><span class="p">) from </span>N <span class="s181">′</span></p><p class="s13" style="padding-left: 206pt;text-indent: -16pt;line-height: 70%;text-align: left;"><span class="p">insert (</span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">m</span><span class="p">, </span>K<span class="s181">′</span><span class="p">) as the ﬁrst pointer and value in </span>N <span class="p">, by shifting other pointers and values right</span></p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="p">replace </span>K<span class="s181">′</span><span class="s15"> </span><span class="p">in </span>parent<span class="p">(</span>N <span class="p">) by </span>N <span class="s181">′</span><span class="s83">.</span>K<span class="s145">m</span><span class="s171">−</span><span class="s93">1</span></p><p class="s46" style="padding-left: 174pt;text-indent: 0pt;line-height: 12pt;text-align: left;">end</p><p class="s46" style="padding-left: 174pt;text-indent: 0pt;line-height: 11pt;text-align: left;">else begin</p><p class="s13" style="padding-top: 2pt;padding-left: 206pt;text-indent: -16pt;line-height: 69%;text-align: left;"><span class="p">let </span>m <span class="p">be such that (</span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">m</span><span class="p">, </span>N <span class="s181">′</span><span class="s83">.</span>K<span class="s97">m</span><span class="p">) is the last pointer/value pair in </span>N <span class="s181">′</span></p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="p">remove (</span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">m</span><span class="p">, </span>N <span class="s181">′</span><span class="s83">.</span>K<span class="s97">m</span><span class="p">) from </span>N <span class="s181">′</span></p><p class="s13" style="padding-left: 206pt;text-indent: -16pt;line-height: 70%;text-align: left;"><span class="p">insert (</span>N <span class="s181">′</span><span class="s83">.</span>P<span class="s97">m</span><span class="p">, </span>N <span class="s181">′</span><span class="s83">.</span>K<span class="s97">m</span><span class="p">) as the ﬁrst pointer and value in </span>N <span class="p">, by shifting other pointers and values right</span></p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="p">replace </span>K<span class="s181">′</span><span class="s15"> </span><span class="p">in </span>parent<span class="p">(</span>N <span class="p">) by </span>N <span class="s181">′</span><span class="s83">.</span>K<span class="s145">m</span></p><p class="s46" style="padding-left: 174pt;text-indent: 0pt;line-height: 12pt;text-align: left;">end</p><p class="s46" style="padding-left: 158pt;text-indent: 0pt;line-height: 12pt;text-align: left;">end</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 119pt;text-indent: 0pt;text-align: right;">end</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="text-indent: 0pt;text-align: left;">end</p><p class="s46" style="text-indent: 0pt;text-align: left;">else <span class="s15">… </span><span class="p">symmetric to the </span>then <span class="p">case </span><span class="s15">…</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-left: 12pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 14.21 </span>Deletion of entry from a B<span class="s237">+</span>-tree.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">In other words, the cost of insertion and deletion operations in terms of <span class="s44">I/O </span>oper- ations is proportional to the height of the B<span class="s181">+</span>-tree, and is therefore low. It is the speed of operation on B<span class="s181">+</span>-trees that makes them a frequently used index structure in database implementations.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In practice, operations on B<span class="s181">+</span>-trees result in fewer <span class="s44">I/O </span>operations than the worst- case bounds. With fanout of 100, and assuming accesses to leaf nodes are uniformly distributed, the parent of a leaf node is 100 times more likely to get accessed than the leaf node. Conversely, with the same fanout, the total number of nonleaf nodes in a B<span class="s181">+</span>- tree would be just a little more than 1/100th of the number of leaf nodes. As a result, with memory sizes of several gigabytes being common today, for B<span class="s181">+</span>-trees that are used frequently, even if the relation is very large it is quite likely that most of the nonleaf nodes are already in the database buﬀer when they are accessed. Thus, typically only one or two <span class="s44">I/O </span>operations are required to perform a lookup. For updates, the probability of a node split occurring is correspondingly very small. Depending on the ordering of inserts, with a fanout of 100, only from 1 in 100 to 1 in 50 insertions will result in a node split, requiring more than one block to be written. As a result, on an average an insert will require just a little more than one <span class="s44">I/O </span>operation to write updated blocks.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Although B<span class="s181">+</span>-trees only guarantee that nodes will be at least half full, if entries are inserted in random order, nodes can be expected to be more than two-thirds full on average. If entries are inserted in sorted order, on the other hand, nodes will be only half full. (We leave it as an exercise to the reader to ﬁgure out why nodes would be only half full in the latter case.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">14.3.5 Nonunique Search Keys</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">We have assumed so far that search keys are unique. Recall also that we described earlier, in Section 14.3.1, how to make search keys unique by creating a composite search key containing the original search key and extra attributes, that together are unique across all records.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The extra attribute can be a record-id, which is a pointer to the record, or a primary key, or any other attribute whose value is unique among all records with the same search-key value. The extra attribute is called a <span class="s63">uniquiﬁer </span>attribute.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A search with the original search-key attribute can be carried out using a range search as we saw in Section 14.3.2; alternatively, we can create a variant of the <i>findRange </i>function that takes only the original search key value as parameter and ignores the value of the uniquiﬁer attribute when comparing search-key values.</p><p style="padding-left: 137pt;text-indent: 0pt;text-align: justify;">It is also possible to modify the B<span class="s181">+</span>-tree structure to support duplicate search keys.</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">The insert, delete, and lookup methods all have to be modiﬁed correspondingly.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">One alternative is to store each key value only once in the tree, and to keep a bucket (or list) of record pointers with a search-key value, to handle nonunique search keys. This approach is space eﬃcient since it stores the key value only once; however, it creates several complications when B</span><span class="s181">+</span><span class="p">-trees are implemented. If the</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: 0pt;text-align: justify;"><a name="bookmark279">buckets are kept in the leaf node, extra code is needed to deal with variable-size buckets, and to deal with buckets that grow larger than the size of the leaf node. If the buckets are stored in separate blocks, an extra </a><span class="s44">I/O </span>operation may be required to fetch records.<a name="bookmark312">&zwnj;</a></p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Another option is to store the search key value once per record; this approach allows a leaf node to be split in the usual way if it is found to be full during an in- sert. However, this approach makes handling of split and search on internal nodes signiﬁcantly more complicated, since two leaves may contain the same search key value. It also has a higher space overhead, since key values are stored as many times as there are records containing that value.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">A major problem with both these approaches, as compared to the unique search- key approach, lies in the eﬃciency of record deletion. (The complexity of lookup and insertion are the same with both these approaches, as well as with the unique search-key approach.) Suppose a particular search-key value occurs a large number of times, and one of the records with that search key is to be deleted. The deletion may have to search through a number of entries with the same search-key value, potentially across multiple leaf nodes, to ﬁnd the entry corresponding to the particular record being deleted. Thus, the worst-case complexity of deletion may be linear in the number of records.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">In contrast, record deletion can be done eﬃciently using the unique search key approach. When a record is to be deleted, the composite search-key value is computed from the record and then used to look up the index. Since the value is unique, the corresponding leaf-level entry can be found with a single traversal from root to leaf, with no further accesses at the leaf level. The worst-case cost of deletion is logarithmic in the number of records, as we saw earlier.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Due to the ineﬃciency of deletion, as well as other complications due to du- plicate search keys, B<span class="s181">+</span>-tree implementations in most database systems only handle unique search keys, and they automatically add record-ids or other attributes to make nonunique search keys unique.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part262.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part264.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
