<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Homework (Measurement)</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part199.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part201.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Homework (Measurement)</h4><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">In this homework, you are to measure the size and cost of accessing a TLB. The idea is based on work by Saavedra-Barrera [SB92], who de- veloped a simple but beautiful method to measure numerous aspects of cache hierarchies, all with a very simple user-level program. Read his work for more details.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The basic idea is to access some number of pages within large data structure (e.g., an array) and to time those accesses. For example, let’s say the TLB size of a machine happens to be 4 (which would be very small, but useful for the purposes of this discussion). If you write a program that touches 4 or fewer pages, each access should be a TLB hit, and thus relatively fast. However, once you touch 5 pages or more, repeatedly in a loop, each access will suddenly jump in cost, to that of a TLB miss.</p><p style="padding-left: 52pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">The basic code to loop through an array once should look like this:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 57pt;text-indent: 0pt;text-align: justify;">int jump = PAGESIZE / sizeof(int);</p><p class="s38" style="padding-left: 74pt;text-indent: -16pt;line-height: 89%;text-align: left;">for (i = 0; i &lt; NUMPAGES <span class="s39">* </span>jump; i += jump) { a[i] += 1;</p><p class="s38" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">In this loop, one integer per page of the the array <span class="s41">a </span>is updated, up to the number of pages specified by <span class="s41">NUMPAGES</span>. By timing such a loop repeatedly (say, a few hundred million times in another loop around this one, or however many loops are needed to run for a few seconds), you can time how long each access takes (on average). By looking for jumps in cost as <span class="s41">NUMPAGES </span>increases, you can roughly determine how big the first-level TLB is, determine whether a second-level TLB exists (and how big it is if it does), and in general get a good sense of how TLB hits and misses can affect performance.</p><p style="padding-left: 52pt;text-indent: 0pt;line-height: 9pt;text-align: justify;">Here is an example graph:</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">As you can see in the graph, when just a few pages are accessed (8 or fewer), the average access time is roughly 5 nanoseconds. When 16 or more pages are accessed, there is a sudden jump to about 20 nanosec- onds per access. A final jump in cost occurs at around 1024 pages, at which point each access takes around 70 nanoseconds. From this data, we can conclude that there is a two-level TLB hierarchy; the first is quite small (probably holding between 8 and 16 entries); the second is larger but slower (holding roughly 512 entries). The overall difference between hits in the first-level TLB and misses is quite large, roughly a factor of fourteen. TLB performance matters!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s91" style="padding-top: 4pt;padding-left: 54pt;text-indent: 0pt;line-height: 7pt;text-align: center;">TLB Size Measurement</p><p style="text-indent: 0pt;text-align: left;"><span><img width="145" height="145" alt="image" src="Image_261.png"/></span></p><p class="s91" style="padding-left: 54pt;text-indent: 0pt;line-height: 7pt;text-align: center;">80</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s91" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Time Per Access (ns)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s91" style="padding-top: 5pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">60</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s91" style="padding-top: 5pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">40</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s91" style="padding-top: 5pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">20</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s91" style="padding-top: 5pt;text-indent: 0pt;line-height: 7pt;text-align: center;">0</p><p class="s91" style="padding-left: 54pt;text-indent: 0pt;line-height: 7pt;text-align: center;">1  4  16  64  256 1024</p><p class="s91" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">Number Of Pages</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 109pt;text-indent: 0pt;text-align: left;">Figure 19.5: <b>Discovering TLB Sizes and Miss Costs</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part201.htm">Questions</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part199.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part201.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
