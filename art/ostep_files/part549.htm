<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Cruces</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part548.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a></p><p class="s8" style="padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: right;">Cruces</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Account For Disk Rotation Costs, <span style=" color: #00AEEF;">413 </span>How To Add Locks To Data Structures, <span style=" color: #00AEEF;">311 </span>How To Allocate And Manage Memory, <span style=" color: #00AEEF;">119 </span>How To Avoid Spinning, <span style=" color: #00AEEF;">304</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Avoid The Costs Of Polling, <span style=" color: #00AEEF;">392 </span>How To Avoid The Curse Of Generality, <span style=" color: #00AEEF;">245 </span>How To Build A Device-neutral OS, <span style=" color: #00AEEF;">395 </span>How To Build A Distributed File System, <span style=" color: #00AEEF;">560 </span>How To Build A Lock, <span style=" color: #00AEEF;">293</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Build Concurrent Servers Without Threads, <span style=" color: #00AEEF;">373 </span>How To Build Correct Concurrent Programs, <span style=" color: #00AEEF;">10</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Build Systems That Work When Components Fail, <span style=" color: #00AEEF;">543 </span>How To Communicate With Devices, <span style=" color: #00AEEF;">394</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: justify;">How To Create And Control Processes, <span style=" color: #00AEEF;">35 </span>How To Create And Control Threads, <span style=" color: #00AEEF;">279 </span>How To Deal With Deadlock, <span style=" color: #00AEEF;">363</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Deal With Load Imbalance, <span style=" color: #00AEEF;">101 </span>How To Decide Which Page To Evict, <span style=" color: #00AEEF;">227 </span>How To Define A Stateless File Protocol, <span style=" color: #00AEEF;">563 </span>How To Design A Scalable File Protocol, <span style=" color: #00AEEF;">578 </span>How To Design TLB Replacement Policy, <span style=" color: #00AEEF;">192 </span>How To Develop Scheduling Policy, <span style=" color: #00AEEF;">59</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: justify;">How To Efficiently And Flexibly Virtualize Memory, <span style=" color: #00AEEF;">129 </span>How To Efficiently Virtualize The CPU With Control, <span style=" color: #00AEEF;">45 </span>How To Ensure Data Integrity, <span style=" color: #00AEEF;">527</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Gain Control Without Cooperation, <span style=" color: #00AEEF;">51 </span>How To Go Beyond Physical Memory, <span style=" color: #00AEEF;">217</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Handle Common Concurrency Bugs, <span style=" color: #00AEEF;">359 </span>How To Handle Disk Starvation, <span style=" color: #00AEEF;">413</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 90%;text-align: left;">How To Handle Latent Sector Errors, <span style=" color: #00AEEF;">529 </span>How To Handle Lost Writes, <span style=" color: #00AEEF;">535</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">How To Handle Misdirected Writes, <span style=" color: #00AEEF;">534</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">How To Implement A Simple File System, <span style=" color: #00AEEF;">461</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">How To Implement An LRU Replacement Policy, <span style=" color: #00AEEF;">238 </span>How To Integrate I/O Into Systems, <span style=" color: #00AEEF;">389</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">How To Lower PIO Overheads, <span style=" color: #00AEEF;">394</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">How To Make A Large, Fast, Reliable Disk, <span style=" color: #00AEEF;">421 </span>How To Make All Writes Sequential Writes, <span style=" color: #00AEEF;">512 </span>How To Make Page Tables Smaller, <span style=" color: #00AEEF;">201</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Manage A Persistent Device, <span style=" color: #00AEEF;">441 </span>How To Manage Free Space, <span style=" color: #00AEEF;">154</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Manage TLB Contents On A Context Switch, <span style=" color: #00AEEF;">191 </span>How To Organize On-disk Data To Improve Performance, <span style=" color: #00AEEF;">480 </span>How To Perform Restricted Operations, <span style=" color: #00AEEF;">46</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Preserve Data Integrity Despite Corruption, <span style=" color: #00AEEF;">530 </span>How To Provide Support For Synchronization, <span style=" color: #00AEEF;">272</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Provide The Illusion Of Many CPUs, <span style=" color: #00AEEF;">25 </span>How To Reduce File System I/O Costs, <span style=" color: #00AEEF;">473 </span>How To Regain Control Of The CPU, <span style=" color: #00AEEF;">50</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Schedule Jobs On Multiple CPUs, <span style=" color: #00AEEF;">94 </span>How To Schedule Without Perfect Knowledge, <span style=" color: #00AEEF;">71 </span>How To Share The CPU Proportionally, <span style=" color: #00AEEF;">83</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Speed Up Address Translation, <span style=" color: #00AEEF;">183 </span>How To Store And Access Data On Disk, <span style=" color: #00AEEF;">403 </span>How To Store Data Persistently, <span style=" color: #00AEEF;">12</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Support A Large Address Space, <span style=" color: #00AEEF;">141 </span>How To Update The Disk Despite Crashes, <span style=" color: #00AEEF;">491 </span>How To Use Semaphores, <span style=" color: #00AEEF;">341</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">How To Virtualize Memory, <span style=" color: #00AEEF;">112</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">How To Virtualize Memory Without Segments, <span style=" color: #00AEEF;">169 </span>How To Virtualize Resources, <span style=" color: #00AEEF;">4</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">How To Wait For A Condition, <span style=" color: #00AEEF;">326</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 84%;text-align: justify;">This book was typeset using the amazing L<span class="s247">A</span>T<span class="s248">E</span>X typesetting system and the wonderful <span class="s41">memoir </span>book-making package. A heartfelt thank you to the legions of programmers who have contributed to this powerful tool over the many years of its development.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 88%;text-align: justify;">All of the graphs and figures in the book were generated using a Python- based version of <span class="s41">zplot</span>, a simple and useful tool developed by R. Arpaci- Dusseau to generate graphs in PostScript. The <span class="s41">zplot </span>tool arose after many years of frustration with existing graphing tools such as <span class="s41">gnuplot </span>(which was limited) and <span class="s41">ploticus </span>(which was overly complex though admittedly quite awesome). As a result, R. A-D finally put his years of study of PostScript to good use and developed <span class="s41">zplot</span>.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part548.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
