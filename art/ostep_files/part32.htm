<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part31.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part33.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[BS+09] “Tolerating File-System Mistakes with EnvyFS”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Lakshmi N. Bairavasundaram, Swaminathan Sundararaman, Andrea C. Arpaci-Dusseau, Remzi</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">H. Arpaci-Dusseau</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">USENIX ’09, San Diego, CA, June 2009</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">A fun paper about using multiple file systems at once to tolerate a mistake in any one of them.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[BH00] “The Evolution of Operating Systems”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">P. Brinch Hansen</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">In Classic Operating Systems: From Batch Processing to Distributed Systems Springer-Verlag, New York, 2000</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">This essay provides an intro to a wonderful collection of papers about historically significant systems.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[B+72] “TENEX, A Paged Time Sharing System for the PDP-10”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">Daniel G. Bobrow, Jerry D. Burchfiel, Daniel L. Murphy, Raymond S. Tomlinson CACM, Volume 15, Number 3, March 1972</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">TENEX has much of the machinery found in modern operating systems; read more about it to see how much innovation was already in place in the early 1970’s.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[B75] “The Mythical Man-Month” Fred Brooks</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Addison-Wesley, 1975</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">A classic text on software engineering; well worth the read.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[BOH10] “Computer Systems: A Programmer’s Perspective” Randal E. Bryant and David R. O’Hallaron</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">Addison-Wesley, 2010</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Another great intro to how computer systems work. Has a little bit of overlap with this book – so if you’d like, you can skip the last few chapters of that book, or simply read them to get a different perspective on some of the same material. After all, one good way to build up your own knowledge is to hear as many other perspectives as possible, and then develop your own opinion and thoughts on the matter. You know, by thinking!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[K+61] “One-Level Storage System”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">T. Kilburn, D.B.G. Edwards, M.J. Lanigan, F.H. Sumner IRE Transactions on Electronic Computers, April 1962</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">The Atlas pioneered much of what you see in modern systems. However, this paper is not the best read. If you were to only read one, you might try the historical perspective below [L78].</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[L78] “The Manchester Mark I and Atlas: A Historical Perspective”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">S. H. Lavington</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">Communications of the ACM archive Volume 21, Issue 1 (January 1978), pages 4-12</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">A nice piece of history on the early development of computer systems and the pioneering efforts of the Atlas. Of course, one could go back and read the Atlas papers themselves, but this paper provides a great overview and adds some historical perspective.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: justify;">[O72] “The Multics System: An Examination of its Structure” Elliott Organick, 1972</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">A great overview of Multics. So many good ideas, and yet it was an over-designed system, shooting for too much, and thus never really worked as expected. A classic example of what Fred Brooks would call the “second-system effect” [B75].</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[PP03] “Introduction to Computing Systems:</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">From Bits and Gates to C and Beyond” Yale N. Patt and Sanjay J. Patel McGraw-Hill, 2003</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">One of our favorite intro to computing systems books. Starts at transistors and gets you all the way up to C; the early material is particularly great.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[RT74] “The U<span class="s18">NIX </span>Time-Sharing System” Dennis M. Ritchie and Ken Thompson</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">CACM, Volume 17, Number 7, July 1974, pages 365-375</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">A great summary of <span class="s12">U</span><span class="s18">NIX </span>written as it was taking over the world of computing, by the people who wrote it.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[S68] “SDS 940 Time-Sharing System” Scientific Data Systems Inc.</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">TECHNICAL MANUAL, SDS 90 11168 August 1968</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;"><a href="http://goo.gl/EN0Zrn" class="a" target="_blank">Available: </a><a href="http://goo.gl/EN0Zrn" target="_blank">http://goo.gl/EN0Zrn</a></p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">Yes, a technical manual was the best we could find. But it is fascinating to read these old system documents, and see how much was already in place in the late 1960’s. One of the minds behind the Berkeley Time-Sharing System (which eventually became the SDS system) was Butler Lampson, who later won a Turing award for his contributions in systems.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[SS+10] “Membrane: Operating System Support for Restartable File Systems” Swaminathan Sundararaman, Sriram Subramanian, Abhishek Rajimwale, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau, Michael M. Swift FAST ’10, San Jose, CA, February 2010</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: justify;">The great thing about writing your own class notes: you can advertise your own research. But this paper is actually pretty neat – when a file system hits a bug and crashes, Membrane auto-magically restarts it, all without applications or the rest of the system being affected.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: center;">Part I</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part31.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part33.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
