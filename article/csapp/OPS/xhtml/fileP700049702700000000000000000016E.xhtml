<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>1.5 Caches Matter</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P700049702700000000000000000016E" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P700049702700000000000000003E567" data-uri="chapter01.xhtml#P700049702700000000000000003E567" epub:type="title"><span class="pcalibre label pcalibre1">1.5 </span>Caches Matter</h1></header>
<p id="P700049702700000000000000003E568" data-uri="chapter01.xhtml#P700049702700000000000000003E568" class="pcalibre1 pcalibre calibre2">An important lesson from this simple example is that a system spends a lot of time moving information from one place to another. The machine instructions in the <code id="P700049702700000000000000003E569" data-uri="chapter01.xhtml#P700049702700000000000000003E569" class="pcalibre1 calibre8 pcalibre">hello</code> program are originally stored on disk. When the program is loaded, they are copied to main memory. As the processor runs the program, instructions are copied from main memory into the processor. Similarly, the data string <code id="P700049702700000000000000003E56A" data-uri="chapter01.xhtml#P700049702700000000000000003E56A" class="pcalibre1 calibre8 pcalibre">hello, world\n</code>, originally on disk, is copied to main memory and then copied from main memory to the display device. From a programmer's perspective, much of this copying is overhead that slows down the "real work" of the program. Thus, a major goal for system designers is to make these copy operations run as fast as possible.</p>
<p id="P700049702700000000000000003E56B" data-uri="chapter01.xhtml#P700049702700000000000000003E56B" class="pcalibre1 pcalibre calibre2">Because of physical laws, larger storage devices are slower than smaller storage devices. And faster devices are more expensive to build than their slower</p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000174" data-uri="chapter01.xhtml#P7000497027000000000000000000174">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000175" title="12" data-uri="chapter01.xhtml#P7000497027000000000000000000175" epub:type="pagebreak"></span>
<img alt="A diagram shows a path from the disk, where hello executable is stored, moving to the I/O bridge via the I/O bus, and then passing to the main memory, via the memory bus, where hello code “hello, world\n” is stored." id="P700049702700000000000000003E56C" data-uri="P700049702700000000000000000B6A6" src="../images/p12-1.png" class="calibre35 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000003E56D" data-uri="chapter01.xhtml#P700049702700000000000000003E56D" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003E56E" data-uri="chapter01.xhtml#P700049702700000000000000003E56E" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">1.6 </span>Loading the executable from disk into main memory.</h1></header></figcaption></figure>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000179" data-uri="chapter01.xhtml#P7000497027000000000000000000179">
<img alt="A diagram of the hardware organization shows a path ti the display." id="P700049702700000000000000003E56F" data-uri="P700049702700000000000000000B6A7" src="../images/p12-2.png" class="calibre36 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000003E570" data-uri="chapter01.xhtml#P700049702700000000000000003E570" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003E571" data-uri="chapter01.xhtml#P700049702700000000000000003E571" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">1.7 </span>Writing the output string from memory to the display.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001E83A" data-uri="chapter01.xhtml#P700049702700000000000000001E83A">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003E572" data-uri="chapter01.xhtml#P700049702700000000000000003E572" class="pcalibre calibre3 pcalibre1">A diagram shows paths between the I/O bridge and the main memory, holding hello code “hello, world\n,” as well as bus interface and register file within the CPU. From the I/O bridge, the path extends to the Graphics adapter, via the I/O bus, to the display, to show “hello, world\n.”</p>
</details>
</figcaption></figure>
<figure class="pcalibre5 figure pcalibre" id="P700049702700000000000000000017D" data-uri="chapter01.xhtml#P700049702700000000000000000017D">
<span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000017E" title="13" data-uri="chapter01.xhtml#P700049702700000000000000000017E" epub:type="pagebreak"></span>
<img alt="A diagram shows the CPU chip consisting of Cache memories, interacting with the bus interface and register file, which interacts with the ALU and Bus interface. The bus interface interacts with the I/O bridge, which interacts with the main memory." id="P700049702700000000000000003E573" data-uri="P700049702700000000000000000B6A8" src="../images/p13-1.png" class="calibre37 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000003E574" data-uri="chapter01.xhtml#P700049702700000000000000003E574" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003E575" data-uri="chapter01.xhtml#P700049702700000000000000003E575" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">1.8 </span>Cache memories.</h1></header></figcaption></figure>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003E576" data-uri="chapter01.xhtml#P700049702700000000000000003E576">counterparts. For example, the disk drive on a typical system might be 1,000 times larger than the main memory, but it might take the processor 10,000,000 times longer to read a word from disk than from memory.</p>
<p id="P700049702700000000000000003E577" data-uri="chapter01.xhtml#P700049702700000000000000003E577" class="pcalibre1 pcalibre calibre2">Similarly, a typical register file stores only a few hundred bytes of information, as opposed to billions of bytes in the main memory. However, the processor can read data from the register file almost 100 times faster than from memory. Even more troublesome, as semiconductor technology progresses over the years, this <i class="calibre5 pcalibre pcalibre1">processor-memory gap</i> continues to increase. It is easier and cheaper to make processors run faster than it is to make main memory run faster.</p>
<p id="P700049702700000000000000003E578" data-uri="chapter01.xhtml#P700049702700000000000000003E578" class="pcalibre1 pcalibre calibre2">To deal with the processor-memory gap, system designers include smaller, faster storage devices called <i class="calibre5 pcalibre pcalibre1">cache memories</i> (or simply caches) that serve as temporary staging areas for information that the processor is likely to need in the near future. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P700049702700000000000000000017D"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">1.8</span></a> shows the cache memories in a typical system. An <i class="calibre5 pcalibre pcalibre1">L1 cache</i> on the processor chip holds tens of thousands of bytes and can be accessed nearly as fast as the register file. A larger <i class="calibre5 pcalibre pcalibre1">L2 cache</i> with hundreds of thousands to millions of bytes is connected to the processor by a special bus. It might take 5 times longer for the processor to access the L2 cache than the L1 cache, but this is still 5 to 10 times faster than accessing the main memory. The L1 and L2 caches are implemented with a hardware technology known as <i class="calibre5 pcalibre pcalibre1">static random access memory</i> (SRAM). Newer and more powerful systems even have three levels of cache: L1, L2, and L3. The idea behind caching is that a system can get the effect of both a very large memory and a very fast one by exploiting <i class="calibre5 pcalibre pcalibre1">locality</i>, the tendency for programs to access data and code in localized regions. By setting up caches to hold data that are likely to be accessed often, we can perform most memory operations using the fast caches.</p>
<p id="P700049702700000000000000003E579" data-uri="chapter01.xhtml#P700049702700000000000000003E579" class="pcalibre1 pcalibre calibre2">One of the most important lessons in this book is that application programmers who are aware of cache memories can exploit them to improve the performance of their programs by an order of magnitude. You will learn more about these important devices and how to exploit them in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000005190.xhtml#P7000497027000000000000000005190"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">6</span></a>.</p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000186" data-uri="chapter01.xhtml#P7000497027000000000000000000186">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000187" title="14" data-uri="chapter01.xhtml#P7000497027000000000000000000187" epub:type="pagebreak"></span>
<img alt="A pyramid diagram represents an example of a memory hierarchy." id="P700049702700000000000000003E57A" data-uri="P700049702700000000000000000B6A9" src="../images/p14-1.png" class="pcalibre1 pcalibre calibre38"/>
<figcaption id="P700049702700000000000000003E57B" data-uri="chapter01.xhtml#P700049702700000000000000003E57B" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003E57C" data-uri="chapter01.xhtml#P700049702700000000000000003E57C" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">1.9 </span>An example of a memory hierarchy.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001E846" data-uri="chapter01.xhtml#P700049702700000000000000001E846">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003E57D" data-uri="chapter01.xhtml#P700049702700000000000000003E57D" class="pcalibre1 pcalibre calibre2">A pyramid diagram has layers L0 through L6, from top to bottom. The higher levels represent smaller, faster, and costlier (per byte) storage devices), while the lower levels represent larger, slower, cheaper (per byte) storage devices. Each level interacts with the level below it, as summarized within the following list.</p>
<ul id="P700049702700000000000000003E57E" data-uri="chapter01.xhtml#P700049702700000000000000003E57E" class="pcalibre calibre31 pcalibre1">
<li id="P700049702700000000000000003E57F" data-uri="chapter01.xhtml#P700049702700000000000000003E57F" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E580" data-uri="chapter01.xhtml#P700049702700000000000000003E580" class="pcalibre calibre3 pcalibre1">L0: Regs</p>
<ul id="P700049702700000000000000003E581" data-uri="chapter01.xhtml#P700049702700000000000000003E581" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003E582" data-uri="chapter01.xhtml#P700049702700000000000000003E582" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E583" data-uri="chapter01.xhtml#P700049702700000000000000003E583" class="pcalibre calibre3 pcalibre1">CPU registers hold words retrieved from cache memory (from L1).</p></li>
</ul></li>
<li id="P700049702700000000000000003E584" data-uri="chapter01.xhtml#P700049702700000000000000003E584" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E585" data-uri="chapter01.xhtml#P700049702700000000000000003E585" class="pcalibre calibre3 pcalibre1">L1: L1 cache (SRAM)</p>
<ul id="P700049702700000000000000003E586" data-uri="chapter01.xhtml#P700049702700000000000000003E586" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003E587" data-uri="chapter01.xhtml#P700049702700000000000000003E587" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E588" data-uri="chapter01.xhtml#P700049702700000000000000003E588" class="pcalibre calibre3 pcalibre1">L1 cache holds cache lines retrieved from L2 cache.</p></li>
</ul></li>
<li id="P700049702700000000000000003E589" data-uri="chapter01.xhtml#P700049702700000000000000003E589" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E58A" data-uri="chapter01.xhtml#P700049702700000000000000003E58A" class="pcalibre calibre3 pcalibre1">L2: L2 cache (SRAM)</p>
<ul id="P700049702700000000000000003E58B" data-uri="chapter01.xhtml#P700049702700000000000000003E58B" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003E58C" data-uri="chapter01.xhtml#P700049702700000000000000003E58C" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E58D" data-uri="chapter01.xhtml#P700049702700000000000000003E58D" class="pcalibre calibre3 pcalibre1">L2 cache holds cache lines retrieved from L3 cache.</p></li>
</ul></li>
<li id="P700049702700000000000000003E58E" data-uri="chapter01.xhtml#P700049702700000000000000003E58E" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E58F" data-uri="chapter01.xhtml#P700049702700000000000000003E58F" class="pcalibre calibre3 pcalibre1">L3: L3 cache (SRAM)</p>
<ul id="P700049702700000000000000003E590" data-uri="chapter01.xhtml#P700049702700000000000000003E590" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003E591" data-uri="chapter01.xhtml#P700049702700000000000000003E591" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E592" data-uri="chapter01.xhtml#P700049702700000000000000003E592" class="pcalibre calibre3 pcalibre1">L3 cache holds cache lines retrieved from memory.</p></li>
</ul></li>
<li id="P700049702700000000000000003E593" data-uri="chapter01.xhtml#P700049702700000000000000003E593" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E594" data-uri="chapter01.xhtml#P700049702700000000000000003E594" class="pcalibre calibre3 pcalibre1">L4: Main memory (DRAM)</p>
<ul id="P700049702700000000000000003E595" data-uri="chapter01.xhtml#P700049702700000000000000003E595" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003E596" data-uri="chapter01.xhtml#P700049702700000000000000003E596" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E597" data-uri="chapter01.xhtml#P700049702700000000000000003E597" class="pcalibre calibre3 pcalibre1">Main memory holds disk blocks retrieved from local disks.</p></li>
</ul></li>
<li id="P700049702700000000000000003E598" data-uri="chapter01.xhtml#P700049702700000000000000003E598" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E599" data-uri="chapter01.xhtml#P700049702700000000000000003E599" class="pcalibre calibre3 pcalibre1">L5: Local secondary storage (local disks)</p>
<ul id="P700049702700000000000000003E59A" data-uri="chapter01.xhtml#P700049702700000000000000003E59A" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003E59B" data-uri="chapter01.xhtml#P700049702700000000000000003E59B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E59C" data-uri="chapter01.xhtml#P700049702700000000000000003E59C" class="pcalibre calibre3 pcalibre1">Local disks hold files retrieved from disks on remote network server.</p></li>
</ul></li>
<li id="P700049702700000000000000003E59D" data-uri="chapter01.xhtml#P700049702700000000000000003E59D" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E59E" data-uri="chapter01.xhtml#P700049702700000000000000003E59E" class="pcalibre calibre3 pcalibre1">L6: Remote secondary storage (distributed file systems, Web servers)</p></li>
</ul>
</details>

</figcaption></figure>
</section></body></html>
