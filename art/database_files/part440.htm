<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>24.6  Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part439.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part441.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 72pt;text-indent: 0pt;text-align: left;">24.6  <span style=" color: #00AEEF;">Summary</span></p><p class="s40" style="padding-top: 9pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>The key idea of the log structured merge tree is to replace random <span class="s41">I/O </span>operations during tree inserts, updates, and deletes with a smaller number of sequential <span class="s41">I/O </span>operations.</p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Bitmap indices are specialized indices designed for easy querying on multiple keys. Bitmaps work best for attributes that take only a small number of distinct values.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">A </span><b>bitmap </b>is an array of bits. In its simplest form, a <b>bitmap index </b>on the attribute <i>A </i>of relation <i>r </i>consists of one bitmap for each value that <i>A </i>can take. Each bitmap has as many bits as the number of records in the relation.</p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Bitmap indices are useful for selections mainly when there are selections on mul- tiple keys.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">An important use of bitmaps is to count the number of tuples satisfying a given selection. Such queries are important for data analysis.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Indices are required for eﬃcient access to spatial data and must eﬃciently support queries such as range and nearest neighbor queries.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">A </span><span class="s46">quadtree </span><span class="p">is an alternative representation for two-dimensional data where the space is divided by a quadtree. Each node of a quadtree is associated with a rect- angular region of space.</span></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">An </span><b>R-tree </b>is a storage structure that is useful for indexing of objects such as points, line segments, rectangles, and other polygons. An R-tree is a balanced tree struc- ture with the indexed objects stored in leaf nodes, much like a B<span class="s181">+</span>-tree. However, instead of a range of values, a rectangular <b>bounding box </b>is associated with each tree node.</p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Static hashing </span><span class="p">uses hash functions in which the set of bucket addresses is ﬁxed. Such hash functions cannot easily accommodate databases that grow signiﬁcantly larger over time.</span></p><p style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Dynamic hashing techniques </b>allow the hash function to be modiﬁed. One example is <i>extendable hashing</i>, which copes with changes in database size by splitting and coalescing buckets as the database grows and shrinks.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part439.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part441.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
