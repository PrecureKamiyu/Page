<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part476.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part478.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[B07] “ZFS: The Last Word in File Systems” Jeff Bonwick and Bill Moore</p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_627.png"/></span></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://opensolaris.org/os/community/zfs/docs/zfs" class="a" target="_blank">Available: </a>http://opensolaris.org/os/community/zfs/docs/zfs last.pdf</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">ZFS uses copy-on-write and journaling, actually, as in some cases, logging writes to disk will perform better.</p><p class="s12" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[C+12] “Consistency Without Ordering”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">Vijay Chidambaram, Tushar Sharma, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau FAST ’12, San Jose, California</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">A recent paper of ours about a new form of crash consistency based on back pointers. Read it for the exciting details!</p><p class="s12" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[C+13] “Optimistic Crash Consistency”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">Vijay Chidambaram, Thanu S. Pillai, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau SOSP ’13, Nemacolin Woodlands Resort, PA, November 2013</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Our work on a more optimistic and higher performance journaling protocol. For workloads that call</p><p class="s54" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">fsync() <span class="s17">a lot, performance can be greatly improved.</span></p><p class="s12" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[GP94] “Metadata Update Performance in File Systems” Gregory R. Ganger and Yale N. Patt</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">OSDI ’94</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">A clever paper about using careful ordering of writes as the main way to achieve consistency. Imple- mented later in BSD-based systems.</p><p class="s12" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[G+08] “SQCK: A Declarative File System Checker”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">Haryadi S. Gunawi, Abhishek Rajimwale, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau OSDI ’08, San Diego, California</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Our own paper on a new and better way to build a file system checker using SQL queries. We also show some problems with the existing checker, finding numerous bugs and odd behaviors, a direct result of the complexity of <span class="s54">fsck</span>.</p><p class="s12" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[H87] “Reimplementing the Cedar File System Using Logging and Group Commit” Robert Hagmann</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">SOSP ’87, Austin, Texas, November 1987</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">The first work (that we know of) that applied write-ahead logging (a.k.a. journaling) to a file system.</p><p class="s12" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[M+13] “ffsck: The Fast File System Checker”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">Ao Ma, Chris Dragga, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau FAST ’13, San Jose, California, February 2013</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">A recent paper of ours detailing how to make fsck an order of magnitude faster. Some of the ideas have already been incorporated into the BSD file system checker [MK96] and are deployed today.</p><p class="s12" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">[MK96] “Fsck - The U<span class="s18">NIX </span>File System Check Program” Marshall Kirk McKusick and T. J. Kowalski</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Revised in 1996</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">Describes the first comprehensive file-system checking tool, the eponymous <span class="s54">fsck</span>. Written by some of the same people who brought you FFS.</p><p class="s12" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">[MJLF84] “A Fast File System for UNIX”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">Marshall K. McKusick, William N. Joy, Sam J. Leffler, Robert S. Fabry ACM Transactions on Computing Systems.</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">August 1984, Volume 2:3</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">You already know enough about FFS, right? But yeah, it is OK to reference papers like this more than once in a book.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[P+05] “IRON File Systems”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">Vijayan Prabhakaran, Lakshmi N. Bairavasundaram, Nitin Agrawal, Haryadi S. Gunawi, An- drea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">SOSP ’05, Brighton, England, October 2005</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">A paper mostly focused on studying how file systems react to disk failures. Towards the end, we intro- duce a transaction checksum to speed up logging, which was eventually adopted into Linux ext4.</p><p class="s12" style="padding-top: 2pt;padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[PAA05] “Analysis and Evolution of Journaling File Systems”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">Vijayan Prabhakaran, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau USENIX ’05, Anaheim, California, April 2005</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">An early paper we wrote analyzing how journaling file systems work.</p><p class="s12" style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[R+11] “Coerced Cache Eviction and Discreet-Mode Journaling” Abhishek Rajimwale, Vijay Chidambaram, Deepak Ramamurthi, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">DSN ’11, Hong Kong, China, June 2011</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 93%;text-align: justify;">Our own paper on the problem of disks that buffer writes in a memory cache instead of forcing them to disk, even when explicitly told not to do that! Our solution to overcome this problem: if you want <span class="s149">A </span>to be written to disk before <span class="s149">B</span>, first write <span class="s149">A</span>, then send a lot of “dummy” writes to disk, hopefully causing <span class="s149">A </span>to be forced to disk to make room for them in the cache. A neat if impractical solution.</p><p class="s12" style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[T98] “Journaling the Linux ext2fs File System” Stephen C. Tweedie</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">The Fourth Annual Linux Expo, May 1998</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: justify;">Tweedie did much of the heavy lifting in adding journaling to the Linux ext2 file system; the result, not surprisingly, is called ext3. Some nice design decisions include the strong focus on backwards compatibility, e.g., you can just add a journaling file to an existing ext2 file system and then mount it as an ext3 file system.</p><p class="s12" style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[T00] “EXT3, Journaling Filesystem” Stephen Tweedie</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 93%;text-align: left;">Talk at the Ottawa Linux Symposium, July 2000 olstrans.sourceforge.net/release/OLS2000-ext3/OLS2000-ext3.html <i>A transcript of a talk given by Tweedie on ext3.</i></p><p class="s12" style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[T01] “The Linux ext2 File System” Theodore Ts’o, June, 2001.</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://e2fsprogs.sourceforge.net/ext2.html" class="a" target="_blank">Available: </a><a href="http://e2fsprogs.sourceforge.net/ext2.html" target="_blank">http://e2fsprogs.sourceforge.net/ext2.html</a></p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">A simple Linux file system based on the ideas found in FFS. For a while it was quite heavily used; now it is really just in the kernel as an example of a simple file system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="430" height="57" alt="image" src="Image_628.png"/></span></p><p class="s50" style="padding-top: 7pt;text-indent: 0pt;text-align: right;">43</p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part476.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part478.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
