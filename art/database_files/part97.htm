<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part96.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part98.htm">下一个 &gt;</a></p><p class="s45" style="padding-top: 12pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">Exercises</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 120pt;text-indent: 0pt;text-align: left;"><b>3.11  </b>Write the following queries in <span class="s44">SQL</span>, using the university schema.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -18pt;text-align: justify;">a.  Find the <span class="s44">ID </span>and name of each student who has taken at least one Comp. Sci. course; make sure there are no duplicate names in the result.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -19pt;text-align: justify;">b.  Find the <span class="s44">ID </span>and name of each student who has not taken any course oﬀered before 2017.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -18pt;text-align: justify;">c.  For each department, ﬁnd the maximum salary of instructors in that de- partment. You may assume that every department has at least one instruc- tor.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -19pt;text-align: justify;">d.  Find the lowest, across all departments, of the per-department maximum salary computed by the preceding query.</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -30pt;text-align: justify;"><b>3.12  </b>Write the <span class="s44">SQL </span>statements using the university schema to perform the following operations:</p><p style="padding-top: 6pt;padding-left: 157pt;text-indent: 0pt;text-align: left;">a.  Create a new course “CS-001”, titled “Weekly Seminar”, with 0 credits.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_577.png"/></span></p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -19pt;text-align: left;">b.  Create a section of this course in Fall 2017, with <i>sec id </i>of 1, and with the location of this section not yet speciﬁed.</p><p style="padding-top: 6pt;padding-left: 157pt;text-indent: 0pt;text-align: left;">c.  Enroll every student in the Comp. Sci. department in the above section.</p><p style="padding-top: 6pt;padding-left: 157pt;text-indent: 0pt;text-align: left;">d. Delete enrollments in the above section where the student’s <span class="s44">ID </span>is 12345.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -18pt;text-align: justify;">e. Delete the course CS-001. What will happen if you run this <b>delete </b>state- ment without ﬁrst deleting oﬀerings (sections) of this course?</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -17pt;text-align: justify;">f.  Delete all <i>takes </i>tuples corresponding to any section of any course with the word “advanced” as a part of the title; ignore case when matching the word with the title.</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -30pt;text-align: justify;"><b>3.13  </b>Write <span class="s44">SQL DDL </span>corresponding to the schema in Figure 3.17. Make any reason- able assumptions about data types, and be sure to declare primary and foreign keys.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: -29pt;text-align: justify;"><b>3.14 </b>Consider the insurance database of Figure 3.17, where the primary keys are underlined. Construct the following <span class="s44">SQL </span>queries for this relational database.</p><p style="padding-top: 7pt;padding-left: 145pt;text-indent: -18pt;text-align: left;">a.  Find the number of accidents involving a car belonging to a person named “John Smith”.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_578.png"/></span></p><p style="padding-top: 6pt;padding-left: 145pt;text-indent: -19pt;text-align: left;">b. Update the damage amount for the car with license plate “AABB2000” in the accident with report number “AR2197” to $3000.</p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: -30pt;text-align: justify;"><b>3.15 </b>Consider the bank database of Figure 3.18, where the primary keys are under- lined. Construct the following <span class="s44">SQL </span>queries for this relational database.</p><p style="padding-top: 7pt;padding-left: 145pt;text-indent: -18pt;text-align: left;">a.  Find each customer who has an account at <i>every </i>branch located in “Brook- lyn”.</p><p style="padding-top: 6pt;padding-left: 125pt;text-indent: 0pt;text-align: left;">b.  Find the total sum of all loan amounts in the bank.</p><p style="padding-top: 6pt;padding-left: 145pt;text-indent: -18pt;text-align: left;">c.  Find the names of all branches that have assets greater than those of at least one branch located in “Brooklyn”.</p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: -29pt;text-align: justify;"><b>3.16 </b>Consider the employee database of Figure 3.19, where the primary keys are underlined. Give an expression in <span class="s44">SQL </span>for each of the following queries.</p><p style="padding-top: 7pt;padding-left: 145pt;text-indent: -18pt;text-align: left;">a.  Find <span class="s44">ID </span>and name of each employee who lives in the same city as the location of the company for which the employee works.</p><p style="padding-top: 6pt;padding-left: 145pt;text-indent: -19pt;text-align: left;">b.  Find <span class="s44">ID </span>and name of each employee who lives in the same city and on the same street as does her or his manager.</p><p style="padding-top: 6pt;padding-left: 145pt;text-indent: -18pt;text-align: left;">c.  Find <span class="s44">ID </span>and name of each employee who earns more than the average salary of all employees of her or his company.</p><p style="padding-top: 6pt;padding-left: 125pt;text-indent: 0pt;text-align: left;">d. Find the company that has the smallest payroll.</p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: -29pt;text-align: justify;"><b>3.17 </b>Consider the employee database of Figure 3.19. Give an expression in <span class="s44">SQL </span>for each of the following queries.</p><p style="padding-top: 7pt;padding-left: 126pt;text-indent: 0pt;text-align: left;">a.  Give all employees of “First Bank Corporation” a 10 percent raise.</p><p style="padding-top: 6pt;padding-left: 125pt;text-indent: 0pt;text-align: left;">b.  Give all managers of “First Bank Corporation” a 10 percent raise.</p><p style="padding-top: 6pt;padding-left: 145pt;text-indent: -18pt;text-align: left;">c.  Delete all tuples in the <i>works </i>relation for employees of “Small Bank Cor- poration”.</p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: -29pt;text-align: justify;"><b>3.18  </b>Give an <span class="s44">SQL </span>schema deﬁnition for the employee database of Figure 3.19. Choose an appropriate domain for each attribute and an appropriate primary key for each relation schema. Include any foreign-key constraints that might be appropriate.</p><p class="s46" style="padding-top: 6pt;padding-left: 89pt;text-indent: 0pt;text-align: justify;">3.19  <span class="p">List two reasons why null values might be introduced into the database.</span></p><p style="padding-top: 3pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;"><b>3.20  </b>Show that, in <span class="s44">SQL</span>, <span class="s83">&lt;&gt; </span><b>all </b>is identical to <b>not in</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_579.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_580.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_581.png"/></span></p><p style="padding-top: 4pt;padding-left: 233pt;text-indent: 0pt;text-align: left;"><i>member</i>(<u><i>memb no</i></u>, <i>name</i>) <i>book</i>(<u><i>isbn</i></u>, <i>title</i>, <i>authors</i>, <i>publisher</i>) <i>borrowed</i>(<u><i>memb no</i></u>, <u><i>isbn</i></u>, <i>date</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_582.png"/></span></p><p class="s73" style="padding-top: 8pt;padding-left: 237pt;text-indent: 0pt;text-align: left;">Figure 3.20 <span class="s74">Library database.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 120pt;text-indent: 0pt;text-align: left;"><b>3.21  </b>Consider the library database of Figure 3.20. Write the following queries in <span class="s44">SQL</span>.</p><p style="padding-top: 7pt;padding-left: 176pt;text-indent: -18pt;text-align: justify;">a. Find the member number and name of each member who has borrowed at least one book published by “McGraw-Hill”.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -19pt;text-align: justify;">b. Find the member number and name of each member who has borrowed every book published by “McGraw-Hill”.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -18pt;text-align: justify;">c.  For each publisher, ﬁnd the member number and name of each member who has borrowed more than ﬁve books of that publisher.</p><p style="padding-top: 6pt;padding-left: 176pt;text-indent: -19pt;text-align: justify;">d. Find the average number of books borrowed per member. Take into ac- count that if a member does not borrow any books, then that member does not appear in the <i>borrowed </i>relation at all, but that member still counts in the average.</p><p class="s46" style="padding-top: 7pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">3.22 <span class="p">Rewrite the </span>where <span class="p">clause</span></p><p class="s46" style="padding-top: 2pt;padding-left: 150pt;text-indent: 91pt;line-height: 24pt;text-align: left;">where unique <span class="p">(</span>select <i>title </i>from <i>course</i><span class="p">) without using the </span>unique <span class="p">construct.</span></p><p class="s46" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">3.23 <span class="p">Consider the query:</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_583.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_584.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_585.png"/></span></p><p style="padding-top: 9pt;padding-left: 243pt;text-indent: -21pt;text-align: justify;"><b>with </b><i>dept total </i>(<i>dept name</i>, <i>value</i>) <b>as </b>(<b>select </b><i>dept name</i>, <b>sum</b>(<i>salary</i>) <b>from </b><i>instructor</i></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_586.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_587.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_588.png"/></span></p><p class="s13" style="padding-left: 222pt;text-indent: 21pt;text-align: justify;"><b>group by </b>dept name<span class="p">), </span>dept total avg<span class="p">(</span>value<span class="p">) </span><b>as</b></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_589.png"/></span></p><p style="padding-left: 243pt;text-indent: 0pt;text-align: justify;">(<b>select avg</b>(<i>value</i>) <b>from </b><i>dept total</i>)</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_590.png"/></span></p><p class="s46" style="padding-left: 222pt;text-indent: 0pt;text-align: justify;">select <i>dept name</i></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_591.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_592.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_593.png"/></span></p><p class="s13" style="padding-left: 222pt;text-indent: 0pt;line-height: 11pt;text-align: justify;"><b>from </b>dept total<span class="p">, </span>dept total avg</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_594.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_595.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_596.png"/></span></p><p class="s13" style="padding-left: 222pt;text-indent: 0pt;line-height: 20pt;text-align: left;"><b>where </b>dept total.value <span class="s83">&gt;</span><span class="s15">= </span>dept total avg.value<span class="p">;</span></p><p style="padding-top: 3pt;padding-left: 150pt;text-indent: 0pt;text-align: left;">Rewrite this query without using the <b>with </b>construct.</p><p style="padding-top: 6pt;padding-left: 150pt;text-indent: -31pt;text-align: left;"><b>3.24  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the name and ID of those Accounting students advised by an instructor in the Physics department.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: -31pt;text-align: justify;"><b>3.25  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the names of those departments whose budget is higher than that of Philosophy. List them in al- phabetic order.</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -31pt;text-align: justify;"><b>3.26  </b>Using the university schema, use <span class="s44">SQL </span>to do the following: For each student who has retaken a course at least twice (i.e., the student has taken the course at least three times), show the course <span class="s44">ID </span>and the student’s <span class="s44">ID</span>.</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Please display your results in order of course <span class="s44">ID </span>and do not display duplicate rows.</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -30pt;text-align: justify;"><b>3.27  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the <span class="s44">ID</span>s of those stu- dents who have retaken at least three distinct courses at least once (i.e, the student has taken the course at least two times).</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -31pt;text-align: justify;"><b>3.28  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the names and <span class="s44">ID</span>s of those instructors who teach every course taught in his or her department (i.e., every course that appears in the <i>course </i>relation with the instructor’s department name). Order result by name.</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -31pt;text-align: justify;"><b>3.29  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the name and <span class="s44">ID </span>of each History student whose name begins with the letter ‘D’ and who has <i>not </i>taken at least ﬁve Music courses.</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;"><b>3.30 </b>Consider the following <span class="s44">SQL </span>query on the university schema:</p><p style="padding-top: 5pt;padding-left: 195pt;text-indent: 0pt;text-align: justify;"><b>select avg</b>(<i>salary</i>) - (<b>sum</b>(<i>salary</i>) / <b>count</b>(*))</p><p class="s46" style="padding-left: 195pt;text-indent: 0pt;text-align: justify;">from <i>instructor</i></p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">We might expect that the result of this query is zero since the average of a set of numbers is deﬁned to be the sum of the numbers divided by the number of numbers. Indeed this is true for the example <i>instructor </i>relation in Figure 2.1. However, there are other possible instances of that relation for which the result would <i>not </i>be zero. Give one such instance, and explain why the result would not be zero.</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -30pt;text-align: justify;"><b>3.31  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the <span class="s44">ID </span>and name of each instructor who has never given an A grade in any course she or he has taught. (Instructors who have never taught a course trivially satisfy this condition.)</p><p class="s46" style="padding-top: 6pt;padding-left: 119pt;text-indent: -31pt;text-align: justify;">3.32 <span class="p">Rewrite the preceding query, but also ensure that you include only instructors who have given at least one other non-null grade in some course.</span></p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -31pt;text-align: justify;"><b>3.33  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the <span class="s44">ID </span>and title of each course in Comp. Sci. that has had at least one section with afternoon hours (i.e., ends at or after 12:00). (You should eliminate duplicates if any.)</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: -30pt;text-align: justify;"><b>3.34  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd the number of students in each section. The result columns should appear in the order “courseid, secid, year, semester, num”. You do not need to output sections with 0 students.</p><p class="s64" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">Tools  <span class="s164">123</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 150pt;text-indent: -31pt;text-align: justify;"><b>3.35  </b>Using the university schema, write an <span class="s44">SQL </span>query to ﬁnd section(s) with max- imum enrollment. The result columns should appear in the order “courseid, secid, year, semester, num”. (It may be convenient to use the <i>with </i>construct.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part96.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part98.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
