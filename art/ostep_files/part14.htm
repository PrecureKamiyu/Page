<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>8.4  A Mixed I/O-intensive and CPU-intensive Workload     75</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part13.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part15.htm">下一个 &gt;</a></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">8.4  <b>A Mixed I/O-intensive and CPU-intensive Workload</b><span class="s26">     </span><span style=" color: #231F20;">75</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">8.5  <b>Without (Left) and With (Right) Priority Boost</b><span class="s26">         </span><span style=" color: #231F20;">76</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 21pt;text-indent: 0pt;text-align: center;">xxiii</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s28" style="padding-top: 2pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">8.6  <b>Without (Left) and With (Right) Gaming Tolerance</b><span class="s26">      </span><span style=" color: #231F20;">77</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">8.7  <b>Lower Priority, Longer Quanta</b><span class="s26">                 </span><span style=" color: #231F20;">78</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">9.1  <b>Lottery Scheduling Decision Code</b><span class="s26">               </span><span style=" color: #231F20;">86</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">9.2  <b>Lottery Fairness Study</b><span class="s26">                      </span><span style=" color: #231F20;">87</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">10.1 <b>Single CPU With Cache</b><span class="s26">                     </span><span style=" color: #231F20;">94</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">10.2 <b>Two CPUs With Caches Sharing Memory</b><span class="s26">           </span><span style=" color: #231F20;">95</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">10.3 <b>Simple List Delete Code</b><span class="s26">                     </span><span style=" color: #231F20;">97</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">13.1 <b>Operating Systems: The Early Days</b><span class="s26">              </span><span style=" color: #231F20;">109</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">13.2 <b>Three Processes: Sharing Memory</b><span class="s26">               </span><span style=" color: #231F20;">110</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">13.3 <b>An Example Address Space</b><span class="s26">                  </span><span style=" color: #231F20;">111</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">15.1 <b>A Process And Its Address Space</b><span class="s26">               </span><span style=" color: #231F20;">132</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">15.2 <b>Physical Memory with a Single Relocated Process</b><span class="s26">      </span><span style=" color: #231F20;">133</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">16.1 <b>An Address Space (Again)</b><span class="s26">                   </span><span style=" color: #231F20;">142</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">16.2 <b>Placing Segments In Physical Memory</b><span class="s26">            </span><span style=" color: #231F20;">143</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">16.3 <b>Non-compacted and Compacted Memory</b><span class="s26">           </span><span style=" color: #231F20;">148</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">17.1 <b>An Allocated Region Plus Header</b><span class="s26">               </span><span style=" color: #231F20;">157</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">17.2 <b>Specific Contents Of The Header</b><span class="s26">               </span><span style=" color: #231F20;">157</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">17.3 <b>A Heap With One Free Chunk</b><span class="s26">                 </span><span style=" color: #231F20;">159</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">17.4 <b>A Heap: After One Allocation</b><span class="s26">                 </span><span style=" color: #231F20;">159</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">17.5 <b>Free Space With Three Chunks Allocated</b><span class="s26">           </span><span style=" color: #231F20;">160</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">17.6 <b>Free Space With Two Chunks Allocated</b><span class="s26">           </span><span style=" color: #231F20;">161</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">17.7 <b>A Non-Coalesced Free List</b><span class="s26">                   </span><span style=" color: #231F20;">162</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">18.1 <b>A Simple 64-byte Address Space</b><span class="s26">               </span><span style=" color: #231F20;">169</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">18.2 <b>64-Byte Address Space Placed In Physical Memory</b><span class="s26">      </span><span style=" color: #231F20;">170</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">18.3 <b>The Address Translation Process</b><span class="s26">               </span><span style=" color: #231F20;">172</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">18.4 <b>Example: Page Table in Kernel Physical Memory</b><span class="s26">       </span><span style=" color: #231F20;">173</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">18.5 <b>An x86 Page Table Entry (PTE)</b><span class="s26">                 </span><span style=" color: #231F20;">174</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">18.6 <b>Accessing Memory With Paging</b><span class="s26">                </span><span style=" color: #231F20;">175</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">18.7 <b>A Virtual (And Physical) Memory Trace</b><span class="s26">           </span><span style=" color: #231F20;">178</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">19.1 <b>TLB Control Flow Algorithm</b><span class="s26">                 </span><span style=" color: #231F20;">184</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">19.2 <b>Example: An Array In A Tiny Address Space</b><span class="s26">         </span><span style=" color: #231F20;">185</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">19.3 <b>TLB Control Flow Algorithm (OS Handled)</b><span class="s26">         </span><span style=" color: #231F20;">188</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">19.4 <b>A MIPS TLB Entry</b><span class="s26">                       </span><span style=" color: #231F20;">193</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">19.5 <b>Discovering TLB Sizes and Miss Costs</b><span class="s26">            </span><span style=" color: #231F20;">198</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">20.1 <b>A 16-KB Address Space With 1-KB Pages</b><span class="s26">           </span><span style=" color: #231F20;">203</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">20.2 <b>Linear (Left) And Multi-Level (Right) Page Tables</b><span class="s26">      </span><span style=" color: #231F20;">206</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">20.3 <b>A 16-KB Address Space With 64-byte Pages</b><span class="s26">          </span><span style=" color: #231F20;">207</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">20.4 <b>Multi-level Page Table Control Flow</b><span class="s26">             </span><span style=" color: #231F20;">212</span></p><p class="s28" style="padding-top: 16pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">21.1 <b>Physical Memory and Swap Space</b><span class="s26">              </span><span style=" color: #231F20;">219</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">21.2 <b>Page-Fault Control Flow Algorithm (Hardware)</b><span class="s26">       </span><span style=" color: #231F20;">222</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">21.3 <b>Page-Fault Control Flow Algorithm (Software)</b><span class="s26">        </span><span style=" color: #231F20;">223</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">22.1 <b>Random Performance over 10,000 Trials</b><span class="s26">            </span><span style=" color: #231F20;">232</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">22.2 <b>The No-Locality Workload</b><span class="s26">                   </span><span style=" color: #231F20;">235</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">22.3 <b>The 80-20 Workload</b><span class="s26">                      </span><span style=" color: #231F20;">236</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">22.4 <b>The Looping Workload</b><span class="s26">                     </span><span style=" color: #231F20;">237</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">22.5 <b>The 80-20 Workload With Clock</b><span class="s26">                </span><span style=" color: #231F20;">239</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">23.1 <b>The VAX/VMS Address Space</b><span class="s26">                 </span><span style=" color: #231F20;">247</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">26.1 <b>A Single-Threaded Address Space</b><span class="s26">              </span><span style=" color: #231F20;">264</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">26.2 <b>Simple Thread Creation Code (t0.c)</b><span class="s26">              </span><span style=" color: #231F20;">265</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">26.3 <b>Sharing Data: Oh Oh (t2)</b><span class="s26">                    </span><span style=" color: #231F20;">267</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">27.1 <b>Creating a Thread</b><span class="s26">                       </span><span style=" color: #231F20;">281</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">27.2 <b>Waiting for Thread Completion</b><span class="s26">                </span><span style=" color: #231F20;">282</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">27.3 <b>Simpler Argument Passing to a Thread</b><span class="s26">            </span><span style=" color: #231F20;">283</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">27.4 <b>An Example Wrapper</b><span class="s26">                     </span><span style=" color: #231F20;">285</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">28.1 <b>First Attempt: A Simple Flag</b><span class="s26">                  </span><span style=" color: #231F20;">296</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.2 <b>A Simple Spin Lock Using Test-and-set</b><span class="s26">            </span><span style=" color: #231F20;">298</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.3 <b>Compare-and-swap</b><span class="s26">                       </span><span style=" color: #231F20;">299</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.4 <b>Load-linked And Store-conditional</b><span class="s26">              </span><span style=" color: #231F20;">301</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.5 <b>Using LL/SC To Build A Lock</b><span class="s26">                 </span><span style=" color: #231F20;">301</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.6 <b>Ticket Locks</b><span class="s26">                          </span><span style=" color: #231F20;">303</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.7 <b>Lock With Test-and-set And Yield</b><span class="s26">               </span><span style=" color: #231F20;">304</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">28.8 <b>Lock With Queues, Test-and-set, Yield, And Wakeup</b><span class="s26">     </span><span style=" color: #231F20;">306</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">28.9 <b>Linux-based Futex Locks</b><span class="s26">                    </span><span style=" color: #231F20;">308</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">29.1 <b>A Counter Without Locks</b><span class="s26">                   </span><span style=" color: #231F20;">312</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.2 <b>A Counter With Locks</b><span class="s26">                     </span><span style=" color: #231F20;">312</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.3 <b>Performance of Traditional vs. Sloppy Counters</b><span class="s26">       </span><span style=" color: #231F20;">313</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.4 <b>Sloppy Counter Implementation</b><span class="s26">               </span><span style=" color: #231F20;">315</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.5 <b>Scaling Sloppy Counters</b><span class="s26">                    </span><span style=" color: #231F20;">316</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.6 <b>Concurrent Linked List</b><span class="s26">                    </span><span style=" color: #231F20;">317</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.7 <b>Concurrent Linked List: Rewritten</b><span class="s26">              </span><span style=" color: #231F20;">318</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.8 <b>Michael and Scott Concurrent Queue</b><span class="s26">             </span><span style=" color: #231F20;">320</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">29.9 <b>A Concurrent Hash Table</b><span class="s26">                   </span><span style=" color: #231F20;">321</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">29.10 <b>Scaling Hash Tables</b><span class="s26">                      </span><span style=" color: #231F20;">321</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">30.1 <b>A Parent Waiting For Its Child</b><span class="s26">                 </span><span style=" color: #231F20;">325</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.2 <b>Parent Waiting For Child: Spin-based Approach</b><span class="s26">       </span><span style=" color: #231F20;">326</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.3 <b>Parent Waiting For Child: Use A Condition Variable</b><span class="s26">     </span><span style=" color: #231F20;">327</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.4 <b>The Put and Get Routines (Version 1)</b><span class="s26">             </span><span style=" color: #231F20;">330</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">30.5 <b>Producer/Consumer Threads (Version 1)</b><span class="s26">           </span><span style=" color: #231F20;">330</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s28" style="padding-top: 2pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">30.6 <b>Producer/Consumer: Single CV and If Statement</b><span class="s26">       </span><span style=" color: #231F20;">331</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.7 <b>Producer/Consumer: Single CV and While</b><span class="s26">          </span><span style=" color: #231F20;">333</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.8 <b>Producer/Consumer: Two CVs and While</b><span class="s26">          </span><span style=" color: #231F20;">335</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.9 <b>The Final Put and Get Routines</b><span class="s26">                </span><span style=" color: #231F20;">336</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">30.10 <b>The Final Working Solution</b><span class="s26">                  </span><span style=" color: #231F20;">336</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">30.11 <b>Covering Conditions: An Example</b><span class="s26">              </span><span style=" color: #231F20;">338</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">31.1 <b>Initializing A Semaphore</b><span class="s26">                   </span><span style=" color: #231F20;">342</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.2 <b>Semaphore: Definitions of Wait and Post</b><span class="s26">           </span><span style=" color: #231F20;">342</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.3 <b>A Binary Semaphore, a.k.a. a Lock</b><span class="s26">              </span><span style=" color: #231F20;">343</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.4 <b>A Parent Waiting For Its Child</b><span class="s26">                 </span><span style=" color: #231F20;">345</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.5 <b>The Put and Get Routines</b><span class="s26">                   </span><span style=" color: #231F20;">347</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.6 <b>Adding the Full and Empty Conditions</b><span class="s26">            </span><span style=" color: #231F20;">347</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.7 <b>Adding Mutual Exclusion (Incorrectly)</b><span class="s26">            </span><span style=" color: #231F20;">349</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.8 <b>Adding Mutual Exclusion (Correctly)</b><span class="s26">             </span><span style=" color: #231F20;">350</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.9 <b>A Simple Reader-Writer Lock</b><span class="s26">                 </span><span style=" color: #231F20;">351</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">31.10 <b>The Dining Philosophers</b><span class="s26">                   </span><span style=" color: #231F20;">353</span></p><p class="s25" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><span class="s28">31.11 </span>The <span class="s33">getforks() </span>and <span class="s33">putforks() </span>Routines<span class="s26">        </span><span class="p">354</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">31.12 <b>Implementing Zemaphores with Locks and CVs</b><span class="s26">       </span><span style=" color: #231F20;">355</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">32.1 <b>The Deadlock Dependency Graph</b><span class="s26">              </span><span style=" color: #231F20;">364</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">33.1 <b>Simple Code using </b><span class="s33">select()</span><span class="s26">                 </span><span style=" color: #231F20;">376</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">36.1 <b>Prototypical System Architecture</b><span class="s26">               </span><span style=" color: #231F20;">390</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">36.2 <b>A Canonical Device</b><span class="s26">                      </span><span style=" color: #231F20;">391</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">36.3 <b>The File System Stack</b><span class="s26">                     </span><span style=" color: #231F20;">396</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">36.4 <b>The IDE Interface</b><span class="s26">                        </span><span style=" color: #231F20;">397</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">36.5 <b>The xv6 IDE Disk Driver (Simplified)</b><span class="s26">             </span><span style=" color: #231F20;">398</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">37.1 <b>A Disk With Just A Single Track</b><span class="s26">               </span><span style=" color: #231F20;">404</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">37.2 <b>A Single Track Plus A Head</b><span class="s26">                  </span><span style=" color: #231F20;">405</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">37.3 <b>Three Tracks Plus A Head (Right: With Seek)</b><span class="s26">         </span><span style=" color: #231F20;">406</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">37.4 <b>Three Tracks: Track Skew Of 2</b><span class="s26">                </span><span style=" color: #231F20;">407</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">37.5 <b>SSTF: Scheduling Requests 21 And 2</b><span class="s26">             </span><span style=" color: #231F20;">412</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">37.6 <b>SSTF: Sometimes Not Good Enough</b><span class="s26">             </span><span style=" color: #231F20;">414</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">39.1 <b>An Example Directory Tree</b><span class="s26">                  </span><span style=" color: #231F20;">442</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">41.1 <b>FFS Locality For SEER Traces</b><span class="s26">                 </span><span style=" color: #231F20;">483</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">41.2 <b>Amortization: How Big Do Chunks Have To Be?</b><span class="s26">       </span><span style=" color: #231F20;">486</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">41.3 <b>FFS: Standard Versus Parameterized Placement</b><span class="s26">       </span><span style=" color: #231F20;">487</span></p><p class="s28" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">47.1 <b>Example UDP/IP Client/Server Code</b><span class="s26">             </span><span style=" color: #231F20;">545</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">47.2 <b>A Simple UDP Library</b><span class="s26">                     </span><span style=" color: #231F20;">546</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">47.3 <b>Message Plus Acknowledgment</b><span class="s26">                </span><span style=" color: #231F20;">547</span></p><p class="s28" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: left;">47.4 <b>Message Plus Acknowledgment: Dropped Request</b><span class="s26">     </span><span style=" color: #231F20;">548</span></p><p class="s28" style="padding-top: 16pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">47.5 <b>Message Plus Acknowledgment: Dropped Reply</b><span class="s26">       </span><span style=" color: #231F20;">549</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">48.1 <b>A Generic Client/Server System</b><span class="s26">                </span><span style=" color: #231F20;">559</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">48.2 <b>Distributed File System Architecture</b><span class="s26">             </span><span style=" color: #231F20;">560</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">48.3 <b>Client Code: Reading From A File</b><span class="s26">               </span><span style=" color: #231F20;">562</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">48.4 <b>The NFS Protocol: Examples</b><span class="s26">                  </span><span style=" color: #231F20;">564</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">48.5 <b>The Three Types of Loss</b><span class="s26">                    </span><span style=" color: #231F20;">568</span></p><p class="s28" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">48.6 <b>The Cache Consistency Problem</b><span class="s26">                </span><span style=" color: #231F20;">570</span></p><p class="s28" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">49.1 <b>AFSv1 Protocol Highlights</b><span class="s26">                   </span><span style=" color: #231F20;">576</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="428" height="57" alt="image" src="Image_008.png"/></span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part13.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part15.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
