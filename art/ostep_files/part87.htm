<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Figure 8.6: Without (Left) and With (Right) Gaming Tolerance</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part86.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part88.htm">下一个 &gt;</a></p><p style="padding-top: 6pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">Figure 8.6: <b>Without (Left) and With (Right) Gaming Tolerance</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">with other high-priority jobs in a round-robin fashion, and thus eventu- ally receive service. Second, if a CPU-bound job has become interactive, the scheduler treats it properly once it has received the priority boost.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Let’s see an example. In this scenario, we just show the behavior of a long-running job when competing for the CPU with two short-running interactive jobs. Two graphs are shown in Figure <span style=" color: #00AEEF;">8.5</span>. On the left, there is no priority boost, and thus the long-running job gets starved once the two short jobs arrive; on the right, there is a priority boost every 50 ms (which is likely too small of a value, but used here for the example), and thus we at least guarantee that the long-running job will make some progress, getting boosted to the highest priority every 50 ms and thus getting to run periodically.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Of course, the addition of the time period <span class="s43">S </span>leads to the obvious ques- tion: what should <span class="s43">S </span>be set to? John Ousterhout, a well-regarded systems researcher [O11], used to call such values in systems <b>voo-doo constants</b>, because they seemed to require some form of black magic to set them cor- rectly. Unfortunately, <span class="s43">S </span>has that flavor. If it is set too high, long-running jobs could starve; too low, and interactive jobs may not get a proper share of the CPU.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part86.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part88.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
