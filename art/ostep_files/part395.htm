<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>38.1 Interface And RAID Internals</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part394.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part396.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">38.1 Interface And RAID Internals</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">To a file system above, a RAID looks like a big, (hopefully) fast, and (hopefully) reliable disk. Just as with a single disk, it presents itself as a linear array of blocks, each of which can be read or written by the file system (or other client).</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">When a file system issues a <i>logical I/O </i>request to the RAID, the RAID internally must calculate which disk (or disks) to access in order to com- plete the request, and then issue one or more <i>physical I/Os </i>to do so. The exact nature of these physical I/Os depends on the RAID level, as we will discuss in detail below. However, as a simple example, consider a RAID that keeps two copies of each block (each one on a separate disk); when writing to such a <b>mirrored </b>RAID system, the RAID will have to perform two physical I/Os for every one logical I/O it is issued.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: left;">A RAID system is often built as a separate hardware box, with a stan- dard connection (e.g., SCSI, or SATA) to a host. Internally, however, RAIDs are fairly complex, consisting of a microcontroller that runs firmware to direct the operation of the RAID, volatile memory such as DRAM to buffer data blocks as they are read and written, and in some cases,</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">non-volatile memory to buffer writes safely and perhaps even special- ized logic to perform parity calculations (useful in some RAID levels, as we will also see below). At a high level, a RAID is very much a special- ized computer system: it has a processor, memory, and disks; however, instead of running applications, it runs specialized software designed to operate the RAID.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part394.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part396.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
