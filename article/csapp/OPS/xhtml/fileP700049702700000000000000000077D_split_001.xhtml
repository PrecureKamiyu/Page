<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>2.2 Integer Representations</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P700049702700000000000000000077D" class="pcalibre halftitlepage pcalibre1">
<section id="P7000497027000000000000000000A9D" data-uri="chapter02.xhtml#P7000497027000000000000000000A9D" class="pcalibre halftitlepage pcalibre1">
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000AE6" data-uri="chapter02.xhtml#P7000497027000000000000000000AE6">
<figcaption id="P700049702700000000000000003EE66" data-uri="chapter02.xhtml#P700049702700000000000000003EE66" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003EE67" data-uri="chapter02.xhtml#P700049702700000000000000003EE67" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.16 </span>Comparing unsigned and two's-complement representations for</h1></header><div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EE68" data-uri="chapter02.xhtml#P700049702700000000000000003EE68"><p id="P700049702700000000000000003EE69" data-uri="chapter02.xhtml#P700049702700000000000000003EE69" class="pcalibre calibre3 pcalibre1"><var class="calibre5 pcalibre pcalibre1">w</var> = 4. The weight of the most significant bit is –8 for two's complement and +8 for unsigned, yielding a net difference of 16.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001F140" data-uri="chapter02.xhtml#P700049702700000000000000001F140">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003EE6A" data-uri="chapter02.xhtml#P700049702700000000000000003EE6A" class="pcalibre1 pcalibre calibre2">A diagram shows mapping of bit strings, composed of a combination of four bars: one gray pointing left representing negative 2<sup class="calibre51 pcalibre pcalibre1">3</sup> = negative 8 and three blue bars pointing right, representing 2<sup class="calibre51 pcalibre pcalibre1">2</sup> = 4, 2<sup class="calibre51 pcalibre pcalibre1">1</sup> = 2, and 2<sup class="calibre51 pcalibre pcalibre1">0</sup> = 1. The strings are summarized below.</p>
<ul id="P700049702700000000000000003EE6B" data-uri="chapter02.xhtml#P700049702700000000000000003EE6B" class="pcalibre calibre31 pcalibre1">
<li id="P700049702700000000000000003EE6C" data-uri="chapter02.xhtml#P700049702700000000000000003EE6C" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EE6D" data-uri="chapter02.xhtml#P700049702700000000000000003EE6D" class="pcalibre calibre3 pcalibre1">[1011]: two strings totaling +16</p>
<ul id="P700049702700000000000000003EE6E" data-uri="chapter02.xhtml#P700049702700000000000000003EE6E" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003EE6F" data-uri="chapter02.xhtml#P700049702700000000000000003EE6F" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EE70" data-uri="chapter02.xhtml#P700049702700000000000000003EE70" class="pcalibre calibre3 pcalibre1">Length of negative 5, composed of one bar of length negative 8 and two positive bars of lengths 2 and 1</p></li>
<li id="P700049702700000000000000003EE71" data-uri="chapter02.xhtml#P700049702700000000000000003EE71" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EE72" data-uri="chapter02.xhtml#P700049702700000000000000003EE72" class="pcalibre calibre3 pcalibre1">Length of 11, composed of a dark bar of length 8 and two blue bars of lengths 2 and 1</p></li>
</ul></li>
<li id="P700049702700000000000000003EE73" data-uri="chapter02.xhtml#P700049702700000000000000003EE73" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EE74" data-uri="chapter02.xhtml#P700049702700000000000000003EE74" class="pcalibre calibre3 pcalibre1">[1111]: two strings totaling + 16</p>
<ul id="P700049702700000000000000003EE75" data-uri="chapter02.xhtml#P700049702700000000000000003EE75" class="pcalibre calibre39 pcalibre1">
<li id="P700049702700000000000000003EE76" data-uri="chapter02.xhtml#P700049702700000000000000003EE76" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EE77" data-uri="chapter02.xhtml#P700049702700000000000000003EE77" class="pcalibre calibre3 pcalibre1">Length of negative 1, composed of one bar of length negative 8 and three positive bars of lengths 4, 2, and 1</p></li>
<li id="P700049702700000000000000003EE78" data-uri="chapter02.xhtml#P700049702700000000000000003EE78" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EE79" data-uri="chapter02.xhtml#P700049702700000000000000003EE79" class="pcalibre calibre3 pcalibre1">Length of 15, composed of one dark bar of length 8 and three blue bars of lengths 4, 2, and 1.</p></li>
</ul>
</li></ul>
</details>

</figcaption>
</figure>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000AEC" data-uri="chapter02.xhtml#P7000497027000000000000000000AEC">
<img alt="A diagram shows a mapping connecting two's complement and unsigned numbers." id="P700049702700000000000000003EE7A" data-uri="P700049702700000000000000000B767" src="../images/p73-2.png" class="calibre64 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000003EE7B" data-uri="chapter02.xhtml#P700049702700000000000000003EE7B" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003EE7C" data-uri="chapter02.xhtml#P700049702700000000000000003EE7C" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.17 </span>Conversion from two's complement to unsigned.</h1></header><div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EE7D" data-uri="chapter02.xhtml#P700049702700000000000000003EE7D"><p id="P700049702700000000000000003EE7E" data-uri="chapter02.xhtml#P700049702700000000000000003EE7E" class="pcalibre calibre3 pcalibre1">Function <i class="calibre5 pcalibre pcalibre1">T2U</i> converts negative numbers to large positive numbers.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001F156" data-uri="chapter02.xhtml#P700049702700000000000000001F156">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003EE7F" data-uri="chapter02.xhtml#P700049702700000000000000003EE7F" class="pcalibre calibre3 pcalibre1">A diagram shows two bars representing two's complement and unsigned numbers. A blue arrow extends from between two's complement numbers 0 and +2<sup class="calibre51 pcalibre pcalibre1">W-1</sup> to between unsigned numbers 0 and 2<sup class="calibre51 pcalibre pcalibre1">W-1</sup>. A dark arrow extends from between two's complement numbers negative 2<sup class="calibre51 pcalibre pcalibre1">W-1</sup> and 0 to between unsigned numbers 2<sup class="calibre51 pcalibre pcalibre1">W-1</sup> and 2W.</p>
</details>
</figcaption>
</figure>
<p id="P700049702700000000000000003EE80" data-uri="chapter02.xhtml#P700049702700000000000000003EE80" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000AEC"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.17</span></a> illustrates the general behavior of function <i class="calibre5 pcalibre pcalibre1">T2U</i>. As it shows, when mapping a signed number to its unsigned counterpart, negative numbers are converted to large positive numbers, while nonnegative numbers remain unchanged.</p>
<section id="P7000497027000000000000000000AF3" data-uri="chapter02.xhtml#P7000497027000000000000000000AF3" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003EE81" data-uri="chapter02.xhtml#P700049702700000000000000003EE81" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.20</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P70004970270000000000000000019D0">149</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003EE82" data-uri="chapter02.xhtml#P700049702700000000000000003EE82">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003EE83" data-uri="chapter02.xhtml#P700049702700000000000000003EE83">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EE84" data-uri="chapter02.xhtml#P700049702700000000000000003EE84"><p id="P700049702700000000000000003EE85" data-uri="chapter02.xhtml#P700049702700000000000000003EE85" class="pcalibre calibre3 pcalibre1">
Explain how <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P7000497027000000000000000000ADA"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.5</span></a> applies to the entries in the table you generated when solving <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000017AE_split_000.xhtml#P70004970270000000000000000019D9"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">2.19</span></a>.</p></div></li></ol>
</section>
<p id="P700049702700000000000000003EE86" data-uri="chapter02.xhtml#P700049702700000000000000003EE86" class="pcalibre1 pcalibre calibre2">Going in the other direction, we can state the relationship between an unsigned number <var class="calibre5 pcalibre pcalibre1">u</var> and its signed counterpart <i class="calibre5 pcalibre pcalibre1">U2T<sub class="pcalibre1 calibre47 pcalibre">w</sub>(u)</i>:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EE87" data-uri="chapter02.xhtml#P700049702700000000000000003EE87"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EE88" data-uri="chapter02.xhtml#P700049702700000000000000003EE88" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003EE89" data-uri="chapter02.xhtml#P700049702700000000000000003EE89" class="pcalibre1 pcalibre calibre2">Unsigned to two's-complement conversion</p>
<p id="P700049702700000000000000003EE8A" data-uri="chapter02.xhtml#P700049702700000000000000003EE8A" class="pcalibre1 pcalibre calibre2">For <var class="calibre5 pcalibre pcalibre1">u</var> such that 0 ≤ <var class="calibre5 pcalibre pcalibre1">u</var> ≤ <i class="calibre5 pcalibre pcalibre1">UMax<sub class="pcalibre1 calibre47 pcalibre">w</sub></i>:</p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000000AFE" data-uri="chapter02.xhtml#P7000497027000000000000000000AFE"><m:math display="block" alttext="" data-uri="" altimg-width="312" altimg-height="51" altimg="../images/ch02-eq34.png"><m:mrow><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mi>u</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mrow><m:mo>{</m:mo><m:mrow><m:mtable columnalign="left"><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mrow><m:mi>u</m:mi><m:mo>,</m:mo></m:mrow></m:mtd><m:mtd columnalign="left"><m:mrow><m:mi>u</m:mi><m:mo>≥</m:mo><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mrow><m:mi>u</m:mi><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>,</m:mo></m:mrow></m:mtd><m:mtd columnalign="left"><m:mrow><m:mi>u</m:mi><m:mo>&gt;</m:mo><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub></m:mrow></m:mtd></m:mtr></m:mtable></m:mrow></m:mrow></m:mrow></m:math>
<span class="number3 pcalibre pcalibre1">(2.7)</span>
</div>
</section>
<p id="P700049702700000000000000003EE8B" data-uri="chapter02.xhtml#P700049702700000000000000003EE8B" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000B00" title="74" data-uri="chapter02.xhtml#P7000497027000000000000000000B00" epub:type="pagebreak"></span></p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000B01" data-uri="chapter02.xhtml#P7000497027000000000000000000B01">
<img alt="A diagram shows a mapping connecting unsigned and two's complement numbers." id="P700049702700000000000000003EE8C" data-uri="P700049702700000000000000000B76B" src="../images/p74-1.png" class="pcalibre1 calibre65 pcalibre"/>
<figcaption id="P700049702700000000000000003EE8D" data-uri="chapter02.xhtml#P700049702700000000000000003EE8D" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003EE8E" data-uri="chapter02.xhtml#P700049702700000000000000003EE8E" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.18 </span>Conversion from unsigned to two's complement.</h1></header><div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EE8F" data-uri="chapter02.xhtml#P700049702700000000000000003EE8F"><p id="P700049702700000000000000003EE90" data-uri="chapter02.xhtml#P700049702700000000000000003EE90" class="pcalibre calibre3 pcalibre1">Function <i class="calibre5 pcalibre pcalibre1">U2T</i> converts numbers greater than <span class="inlineequation1 pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="69" altimg-height="18" altimg="../images/ch02-new24.png"><m:mrow><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:math> </span>to negative values.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001F169" data-uri="chapter02.xhtml#P700049702700000000000000001F169">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003EE91" data-uri="chapter02.xhtml#P700049702700000000000000003EE91" class="pcalibre calibre3 pcalibre1">A diagram shows two bars representing unsigned and two's complement numbers. A blue arrow extends from between unsigned numbers 0 and 2<sup class="calibre51 pcalibre pcalibre1">W-1</sup> to between two's complement numbers 0 and +2<sup class="calibre51 pcalibre pcalibre1">W-1</sup>. A dark arrow extends from between unsigned numbers 2<sup class="calibre51 pcalibre pcalibre1">W-1</sup> and 2<sup class="calibre51 pcalibre pcalibre1">W</sup> to between two's complement numbers 2<sup class="calibre51 pcalibre pcalibre1">W-1</sup> and 0.</p>
</details>
</figcaption>
</figure>
<p id="P700049702700000000000000003EE92" data-uri="chapter02.xhtml#P700049702700000000000000003EE92" class="pcalibre1 pcalibre calibre2">This principle can be justified as follows:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EE93" data-uri="chapter02.xhtml#P700049702700000000000000003EE93"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EE94" data-uri="chapter02.xhtml#P700049702700000000000000003EE94" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003EE95" data-uri="chapter02.xhtml#P700049702700000000000000003EE95" class="pcalibre1 pcalibre calibre2">Unsigned to two's-complement conversion</p>
<p id="P700049702700000000000000003EE96" data-uri="chapter02.xhtml#P700049702700000000000000003EE96" class="pcalibre1 pcalibre calibre2">Let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="115" altimg-height="22" altimg="../images/ch02-eq35.png"><m:mrow><m:mover accent="true"><m:mi>u</m:mi><m:mo>→</m:mo></m:mover><m:mo>=</m:mo><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>B</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mi>u</m:mi><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>. This bit vector will also be the two's-complement representation of <i class="calibre5 pcalibre pcalibre1">U2T<sub class="pcalibre1 calibre47 pcalibre">w</sub>(u)</i>. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000088C"><span class="pcalibre label pcalibre1">Equations </span><span class="pcalibre label pcalibre1">2.1</span></a> and <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000089F"><span class="pcalibre label pcalibre1">2.3</span></a> can be combined to give</p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000000B0C" data-uri="chapter02.xhtml#P7000497027000000000000000000B0C"><m:math display="block" alttext="" data-uri="" altimg-width="223" altimg-height="22" altimg="../images/ch02-eq36.png"><m:mrow><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mi>u</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mo>−</m:mo><m:msub><m:mi>u</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>+</m:mo><m:mi>u</m:mi></m:mrow></m:math>
<span class="number3 pcalibre pcalibre1">(2.8)</span>
</div>
<p id="P700049702700000000000000003EE97" data-uri="chapter02.xhtml#P700049702700000000000000003EE97" class="pcalibre1 pcalibre calibre2">In the unsigned representation of <var class="calibre5 pcalibre pcalibre1">u</var>, bit <var class="calibre5 pcalibre pcalibre1">u</var><sub class="pcalibre1 calibre47 pcalibre"><var class="calibre5 pcalibre pcalibre1">w</var>–1</sub> determines whether or not <var class="calibre5 pcalibre pcalibre1">u</var> is greater than <i class="calibre5 pcalibre pcalibre1">TMax<sub class="pcalibre1 calibre47 pcalibre">w</sub></i> = 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">w</var>–1</sup> – 1, giving the two cases of <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000AFE"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.7</span></a>.</p>
</section>
<p id="P700049702700000000000000003EE98" data-uri="chapter02.xhtml#P700049702700000000000000003EE98" class="pcalibre1 pcalibre calibre2">The behavior of function <i class="calibre5 pcalibre pcalibre1">U2T</i> is illustrated in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000B01"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.18</span></a>. For small (≤ <i class="calibre5 pcalibre pcalibre1">TMax<sub class="pcalibre1 calibre47 pcalibre">w</sub></i>) numbers, the conversion from unsigned to signed preserves the nu-meric value. Large (&gt; <i class="calibre5 pcalibre pcalibre1">TMax<sub class="pcalibre1 calibre47 pcalibre">w</sub></i>) numbers are converted to negative values.</p>
<p id="P700049702700000000000000003EE99" data-uri="chapter02.xhtml#P700049702700000000000000003EE99" class="pcalibre1 pcalibre calibre2">To summarize, we considered the effects of converting in both directions between unsigned and two's-complement representations. For values <var class="calibre5 pcalibre pcalibre1">x</var> in the range <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="138" altimg-height="21" altimg="../images/ch02-new25.png"><m:mrow><m:mn>0</m:mn><m:mo>≤</m:mo><m:mi>x</m:mi><m:mo>≤</m:mo><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub></m:mrow></m:math></span>, we have <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="117" altimg-height="21" altimg="../images/ch02-new26.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mi>x</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>x</m:mi></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="116" altimg-height="21" altimg="../images/ch02-new27.png"><m:mrow><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mi>x</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>x</m:mi></m:mrow></m:math></span>. That is, numbers in this range have identical unsigned and two's-complement representations. For values outside of this range, the conversions either add or subtract 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">w</var></sup>. For example, we have <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="288" altimg-height="20" altimg="../images/ch02-new28.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mo>−</m:mo><m:mn>1</m:mn><m:mo>+</m:mo><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>=</m:mo><m:mi>U</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub></m:mrow></m:math></span>—the negative number closest to zero maps to the largest unsigned number. At the other extreme, one can see that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="459" altimg-height="23" altimg="../images/ch02-new29.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>i</m:mi><m:msub><m:mi>n</m:mi><m:mi>w</m:mi></m:msub></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mo>−</m:mo><m:msub><m:mn>2</m:mn><m:mi>w</m:mi></m:msub><m:mo>−</m:mo><m:mn>1</m:mn><m:mo>+</m:mo><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>=</m:mo><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub><m:mo>+</m:mo><m:mn>1</m:mn></m:mrow></m:math></span>—the most negative number maps to an unsigned number just outside the range of positive two's-complement numbers. Using the example of <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000095B"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.15</span></a>, we can see that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="412" altimg-height="20" altimg="../images/ch02-new30.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mrow><m:mn>16</m:mn></m:mrow></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mo>−</m:mo><m:mn>12</m:mn><m:mo>,</m:mo><m:mn>345</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mn>65</m:mn><m:mo>,</m:mo><m:mn>536</m:mn><m:mo>+</m:mo><m:mo>−</m:mo><m:mn>12</m:mn><m:mo>,</m:mo><m:mn>345</m:mn><m:mo>=</m:mo><m:mn>53</m:mn><m:mo>,</m:mo><m:mn>191</m:mn></m:mrow></m:math></span>.</p>
</section>
<section id="P7000497027000000000000000000B10" data-uri="chapter02.xhtml#P7000497027000000000000000000B10" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003EE9A" data-uri="chapter02.xhtml#P700049702700000000000000003EE9A" epub:type="title"><span class="pcalibre label pcalibre1">2.2.5 </span>Signed versus Unsigned in C</h1></header>
<p id="P700049702700000000000000003EE9B" data-uri="chapter02.xhtml#P700049702700000000000000003EE9B" class="pcalibre1 pcalibre calibre2">As indicated in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P70004970270000000000000000007CF"><span class="pcalibre label pcalibre1">Figures </span><span class="pcalibre label pcalibre1">2.9</span></a> and <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P7000497027000000000000000000807"><span class="pcalibre label pcalibre1">2.10</span></a>, C supports both signed and unsigned arithmetic for all of its integer data types. Although the C standard does not specify a particular representation of signed numbers, almost all machines use two's complement. Generally, most numbers are signed by default. For example, when declaring a constant such as <code id="P700049702700000000000000003EE9C" data-uri="chapter02.xhtml#P700049702700000000000000003EE9C" class="pcalibre1 calibre8 pcalibre">12345</code> or <code id="P700049702700000000000000003EE9D" data-uri="chapter02.xhtml#P700049702700000000000000003EE9D" class="pcalibre1 calibre8 pcalibre">0xlA2B</code>, the value is considered signed. Adding character <code id="P700049702700000000000000003EE9E" data-uri="chapter02.xhtml#P700049702700000000000000003EE9E" class="pcalibre1 calibre8 pcalibre">‘U'</code> or <code id="P700049702700000000000000003EE9F" data-uri="chapter02.xhtml#P700049702700000000000000003EE9F" class="pcalibre1 calibre8 pcalibre">‘u'</code> as a suffix creates an unsigned constant; for example, <code id="P700049702700000000000000003EEA0" data-uri="chapter02.xhtml#P700049702700000000000000003EEA0" class="pcalibre1 calibre8 pcalibre">12345U</code> or <code id="P700049702700000000000000003EEA1" data-uri="chapter02.xhtml#P700049702700000000000000003EEA1" class="pcalibre1 calibre8 pcalibre">0xlA2Bu</code>.</p>
<p id="P700049702700000000000000003EEA2" data-uri="chapter02.xhtml#P700049702700000000000000003EEA2" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000B1A" title="75" data-uri="chapter02.xhtml#P7000497027000000000000000000B1A" epub:type="pagebreak"></span>C allows conversion between unsigned and signed. Although the C standard does not specify precisely how this conversion should be made, most systems follow the rule that the underlying bit representation does not change. This rule has the effect of applying the function <i class="calibre5 pcalibre pcalibre1">U2T<sub class="pcalibre1 calibre47 pcalibre">w</sub></i> when converting from unsigned to signed, and <i class="calibre5 pcalibre pcalibre1">T2U<sub class="pcalibre1 calibre47 pcalibre">w</sub></i> when converting from signed to unsigned, where <var class="calibre5 pcalibre pcalibre1">w</var> is the number of bits for the data type.</p>
<p id="P700049702700000000000000003EEA3" data-uri="chapter02.xhtml#P700049702700000000000000003EEA3" class="pcalibre1 pcalibre calibre2">Conversions can happen due to explicit casting, such as in the following code:</p>
<pre id="P700049702700000000000000003EEA4" data-uri="chapter02.xhtml#P700049702700000000000000003EEA4" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EEA5" data-uri="chapter02.xhtml#P700049702700000000000000003EEA5" class="calibre10 pcalibre pcalibre1">
1 int tx, ty;
2 unsigned ux, uy;
3
4 tx = (int) ux;
5 uy = (unsigned) ty;
</code></pre>
<p id="P700049702700000000000000003EEA6" data-uri="chapter02.xhtml#P700049702700000000000000003EEA6" class="pcalibre1 pcalibre calibre2">Alternatively, they can happen implicitly when an expression of one type is assigned to a variable of another, as in the following code:</p>
<pre id="P700049702700000000000000003EEA7" data-uri="chapter02.xhtml#P700049702700000000000000003EEA7" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EEA8" data-uri="chapter02.xhtml#P700049702700000000000000003EEA8" class="calibre10 pcalibre pcalibre1">
1 int tx, ty;
2 unsigned ux, uy;
3
4 tx = ux; /* Cast to signed */
5 uy = ty; /* Cast to unsigned */
</code></pre>
<p id="P700049702700000000000000003EEA9" data-uri="chapter02.xhtml#P700049702700000000000000003EEA9" class="pcalibre1 pcalibre calibre2">When printing numeric values with printf, the directives <code id="P700049702700000000000000003EEAA" data-uri="chapter02.xhtml#P700049702700000000000000003EEAA" class="pcalibre1 calibre8 pcalibre">%d, %u,</code> and <code id="P700049702700000000000000003EEAB" data-uri="chapter02.xhtml#P700049702700000000000000003EEAB" class="pcalibre1 calibre8 pcalibre">%x</code> are used to print a number as a signed decimal, an unsigned decimal, and in hexadecimal format, respectively. Note that <code id="P700049702700000000000000003EEAC" data-uri="chapter02.xhtml#P700049702700000000000000003EEAC" class="pcalibre1 calibre8 pcalibre">printf</code> does not make use of any type information, and so it is possible to print a value of type <code id="P700049702700000000000000003EEAD" data-uri="chapter02.xhtml#P700049702700000000000000003EEAD" class="pcalibre1 calibre8 pcalibre">int</code> with directive <code id="P700049702700000000000000003EEAE" data-uri="chapter02.xhtml#P700049702700000000000000003EEAE" class="pcalibre1 calibre8 pcalibre">%u</code> and a value of type <code id="P700049702700000000000000003EEAF" data-uri="chapter02.xhtml#P700049702700000000000000003EEAF" class="pcalibre1 calibre8 pcalibre">unsigned</code> with directive <code id="P700049702700000000000000003EEB0" data-uri="chapter02.xhtml#P700049702700000000000000003EEB0" class="pcalibre1 calibre8 pcalibre">%d</code>. For example, consider the following code:</p>
<pre id="P700049702700000000000000003EEB1" data-uri="chapter02.xhtml#P700049702700000000000000003EEB1" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EEB2" data-uri="chapter02.xhtml#P700049702700000000000000003EEB2" class="calibre10 pcalibre pcalibre1">
1 int x = –1;
2 unsigned u = 2147483648; /* 2 to the 31st */
3
4 printf(“x = %u = %d\n”, x, x);
5 printf(“u = %u = %d\n”, u, u);
</code></pre>
<p id="P700049702700000000000000003EEB3" data-uri="chapter02.xhtml#P700049702700000000000000003EEB3" class="pcalibre1 pcalibre calibre2">When compiled as a 32-bit program, it prints the following:</p>
<pre id="P700049702700000000000000003EEB4" data-uri="chapter02.xhtml#P700049702700000000000000003EEB4" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EEB5" data-uri="chapter02.xhtml#P700049702700000000000000003EEB5" class="calibre10 pcalibre pcalibre1">
x = 4294967295 = –1
u = 2147483648 = –2147483648
</code></pre>
<p id="P700049702700000000000000003EEB6" data-uri="chapter02.xhtml#P700049702700000000000000003EEB6" class="pcalibre1 pcalibre calibre2">In both cases, <code id="P700049702700000000000000003EEB7" data-uri="chapter02.xhtml#P700049702700000000000000003EEB7" class="pcalibre1 calibre8 pcalibre">printf</code> prints the word first as if it represented an unsigned number and second as if it represented a signed number. We can see the conversion routines in action: <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="283" altimg-height="24" altimg="../images/ch02-new31.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mrow><m:mn>32</m:mn></m:mrow></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>U</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mrow><m:mn>32</m:mn></m:mrow></m:msub><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mn>32</m:mn></m:mrow></m:msup><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="360" altimg-height="24" altimg="../images/ch02-new32.png"><m:mrow><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mrow><m:mn>32</m:mn></m:mrow></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:msup><m:mn>2</m:mn><m:mrow><m:mn>31</m:mn></m:mrow></m:msup></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mn>31</m:mn></m:mrow></m:msup><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mn>32</m:mn></m:mrow></m:msup><m:mo>=</m:mo><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mn>31</m:mn></m:mrow></m:msup><m:mo>=</m:mo><m:mi>T</m:mi><m:mi>M</m:mi><m:mi>i</m:mi><m:msub><m:mi>n</m:mi><m:mrow><m:mn>32</m:mn></m:mrow></m:msub></m:mrow></m:math></span>.</p>
<p id="P700049702700000000000000003EEB8" data-uri="chapter02.xhtml#P700049702700000000000000003EEB8" class="pcalibre1 pcalibre calibre2">Some possibly nonintuitive behavior arises due to C's handling of expressions containing combinations of signed and unsigned quantities. When an operation is performed where one operand is signed and the other is unsigned, C implicitly casts the signed argument to unsigned and performs the operations</p>
<p id="P700049702700000000000000003EEB9" data-uri="chapter02.xhtml#P700049702700000000000000003EEB9" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000B32" title="76" data-uri="chapter02.xhtml#P7000497027000000000000000000B32" epub:type="pagebreak"></span></p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000B33" data-uri="chapter02.xhtml#P7000497027000000000000000000B33">
<table id="P700049702700000000000000003EEBA" data-uri="chapter02.xhtml#P700049702700000000000000003EEBA" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th colspan="2" id="P700049702700000000000000003EEBB" data-uri="chapter02.xhtml#P700049702700000000000000003EEBB" class="calibre18 pcalibre pcalibre1">Expression</th>
<th id="P700049702700000000000000003EEBC" data-uri="chapter02.xhtml#P700049702700000000000000003EEBC" class="calibre18 pcalibre pcalibre1"/>
<th id="P700049702700000000000000003EEBD" data-uri="chapter02.xhtml#P700049702700000000000000003EEBD" class="calibre18 pcalibre pcalibre1">Type</th>
<th id="P700049702700000000000000003EEBE" data-uri="chapter02.xhtml#P700049702700000000000000003EEBE" class="calibre18 pcalibre pcalibre1">Evaluation</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EEBF" data-uri="chapter02.xhtml#P700049702700000000000000003EEBF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEC0" data-uri="chapter02.xhtml#P700049702700000000000000003EEC0" class="calibre10 pcalibre pcalibre1">0</code></td>
<td id="P700049702700000000000000003EEC1" data-uri="chapter02.xhtml#P700049702700000000000000003EEC1" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEC2" data-uri="chapter02.xhtml#P700049702700000000000000003EEC2" class="calibre10 pcalibre pcalibre1">==</code></td>
<td id="P700049702700000000000000003EEC3" data-uri="chapter02.xhtml#P700049702700000000000000003EEC3" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEC4" data-uri="chapter02.xhtml#P700049702700000000000000003EEC4" class="calibre10 pcalibre pcalibre1">0U</code></td>
<td id="P700049702700000000000000003EEC5" data-uri="chapter02.xhtml#P700049702700000000000000003EEC5" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEC6" data-uri="chapter02.xhtml#P700049702700000000000000003EEC6" class="calibre10 pcalibre pcalibre1">Unsigned</code></td>
<td id="P700049702700000000000000003EEC7" data-uri="chapter02.xhtml#P700049702700000000000000003EEC7" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEC8" data-uri="chapter02.xhtml#P700049702700000000000000003EEC8" class="calibre10 pcalibre pcalibre1">1</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EEC9" data-uri="chapter02.xhtml#P700049702700000000000000003EEC9" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EECA" data-uri="chapter02.xhtml#P700049702700000000000000003EECA" class="calibre10 pcalibre pcalibre1">–1</code></td>
<td id="P700049702700000000000000003EECB" data-uri="chapter02.xhtml#P700049702700000000000000003EECB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EECC" data-uri="chapter02.xhtml#P700049702700000000000000003EECC" class="calibre10 pcalibre pcalibre1">&lt;</code></td>
<td id="P700049702700000000000000003EECD" data-uri="chapter02.xhtml#P700049702700000000000000003EECD" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EECE" data-uri="chapter02.xhtml#P700049702700000000000000003EECE" class="calibre10 pcalibre pcalibre1">0</code></td>
<td id="P700049702700000000000000003EECF" data-uri="chapter02.xhtml#P700049702700000000000000003EECF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EED0" data-uri="chapter02.xhtml#P700049702700000000000000003EED0" class="calibre10 pcalibre pcalibre1">Signed</code></td>
<td id="P700049702700000000000000003EED1" data-uri="chapter02.xhtml#P700049702700000000000000003EED1" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EED2" data-uri="chapter02.xhtml#P700049702700000000000000003EED2" class="calibre10 pcalibre pcalibre1">1</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EED3" data-uri="chapter02.xhtml#P700049702700000000000000003EED3" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EED4" data-uri="chapter02.xhtml#P700049702700000000000000003EED4" class="calibre10 pcalibre pcalibre1">–1</code></td>
<td id="P700049702700000000000000003EED5" data-uri="chapter02.xhtml#P700049702700000000000000003EED5" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EED6" data-uri="chapter02.xhtml#P700049702700000000000000003EED6" class="calibre10 pcalibre pcalibre1">&lt;</code></td>
<td id="P700049702700000000000000003EED7" data-uri="chapter02.xhtml#P700049702700000000000000003EED7" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EED8" data-uri="chapter02.xhtml#P700049702700000000000000003EED8" class="calibre10 pcalibre pcalibre1">0U</code></td>
<td id="P700049702700000000000000003EED9" data-uri="chapter02.xhtml#P700049702700000000000000003EED9" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEDA" data-uri="chapter02.xhtml#P700049702700000000000000003EEDA" class="calibre10 pcalibre pcalibre1">Unsigned</code></td>
<td id="P700049702700000000000000003EEDB" data-uri="chapter02.xhtml#P700049702700000000000000003EEDB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEDC" data-uri="chapter02.xhtml#P700049702700000000000000003EEDC" class="calibre10 pcalibre pcalibre1">0 *</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EEDD" data-uri="chapter02.xhtml#P700049702700000000000000003EEDD" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEDE" data-uri="chapter02.xhtml#P700049702700000000000000003EEDE" class="calibre10 pcalibre pcalibre1">2147483647</code></td>
<td id="P700049702700000000000000003EEDF" data-uri="chapter02.xhtml#P700049702700000000000000003EEDF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEE0" data-uri="chapter02.xhtml#P700049702700000000000000003EEE0" class="calibre10 pcalibre pcalibre1">&gt;</code></td>
<td id="P700049702700000000000000003EEE1" data-uri="chapter02.xhtml#P700049702700000000000000003EEE1" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEE2" data-uri="chapter02.xhtml#P700049702700000000000000003EEE2" class="calibre10 pcalibre pcalibre1">–2147483647–1</code></td>
<td id="P700049702700000000000000003EEE3" data-uri="chapter02.xhtml#P700049702700000000000000003EEE3" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEE4" data-uri="chapter02.xhtml#P700049702700000000000000003EEE4" class="calibre10 pcalibre pcalibre1">Signed</code></td>
<td id="P700049702700000000000000003EEE5" data-uri="chapter02.xhtml#P700049702700000000000000003EEE5" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEE6" data-uri="chapter02.xhtml#P700049702700000000000000003EEE6" class="calibre10 pcalibre pcalibre1">1</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EEE7" data-uri="chapter02.xhtml#P700049702700000000000000003EEE7" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEE8" data-uri="chapter02.xhtml#P700049702700000000000000003EEE8" class="calibre10 pcalibre pcalibre1">2147483647U</code></td>
<td id="P700049702700000000000000003EEE9" data-uri="chapter02.xhtml#P700049702700000000000000003EEE9" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEEA" data-uri="chapter02.xhtml#P700049702700000000000000003EEEA" class="calibre10 pcalibre pcalibre1">&gt;</code></td>
<td id="P700049702700000000000000003EEEB" data-uri="chapter02.xhtml#P700049702700000000000000003EEEB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEEC" data-uri="chapter02.xhtml#P700049702700000000000000003EEEC" class="calibre10 pcalibre pcalibre1">–2147483647–1</code></td>
<td id="P700049702700000000000000003EEED" data-uri="chapter02.xhtml#P700049702700000000000000003EEED" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEEE" data-uri="chapter02.xhtml#P700049702700000000000000003EEEE" class="calibre10 pcalibre pcalibre1">Unsigned</code></td>
<td id="P700049702700000000000000003EEEF" data-uri="chapter02.xhtml#P700049702700000000000000003EEEF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEF0" data-uri="chapter02.xhtml#P700049702700000000000000003EEF0" class="calibre10 pcalibre pcalibre1">0 *</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EEF1" data-uri="chapter02.xhtml#P700049702700000000000000003EEF1" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEF2" data-uri="chapter02.xhtml#P700049702700000000000000003EEF2" class="calibre10 pcalibre pcalibre1">2147483647</code></td>
<td id="P700049702700000000000000003EEF3" data-uri="chapter02.xhtml#P700049702700000000000000003EEF3" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEF4" data-uri="chapter02.xhtml#P700049702700000000000000003EEF4" class="calibre10 pcalibre pcalibre1">&gt;</code></td>
<td id="P700049702700000000000000003EEF5" data-uri="chapter02.xhtml#P700049702700000000000000003EEF5" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEF6" data-uri="chapter02.xhtml#P700049702700000000000000003EEF6" class="calibre10 pcalibre pcalibre1">(int) 2147483648U</code></td>
<td id="P700049702700000000000000003EEF7" data-uri="chapter02.xhtml#P700049702700000000000000003EEF7" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEF8" data-uri="chapter02.xhtml#P700049702700000000000000003EEF8" class="calibre10 pcalibre pcalibre1">Signed</code></td>
<td id="P700049702700000000000000003EEF9" data-uri="chapter02.xhtml#P700049702700000000000000003EEF9" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEFA" data-uri="chapter02.xhtml#P700049702700000000000000003EEFA" class="calibre10 pcalibre pcalibre1">1 *</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EEFB" data-uri="chapter02.xhtml#P700049702700000000000000003EEFB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEFC" data-uri="chapter02.xhtml#P700049702700000000000000003EEFC" class="calibre10 pcalibre pcalibre1">–1</code></td>
<td id="P700049702700000000000000003EEFD" data-uri="chapter02.xhtml#P700049702700000000000000003EEFD" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EEFE" data-uri="chapter02.xhtml#P700049702700000000000000003EEFE" class="calibre10 pcalibre pcalibre1">&gt;</code></td>
<td id="P700049702700000000000000003EEFF" data-uri="chapter02.xhtml#P700049702700000000000000003EEFF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF00" data-uri="chapter02.xhtml#P700049702700000000000000003EF00" class="calibre10 pcalibre pcalibre1">–2</code></td>
<td id="P700049702700000000000000003EF01" data-uri="chapter02.xhtml#P700049702700000000000000003EF01" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF02" data-uri="chapter02.xhtml#P700049702700000000000000003EF02" class="calibre10 pcalibre pcalibre1">Signed</code></td>
<td id="P700049702700000000000000003EF03" data-uri="chapter02.xhtml#P700049702700000000000000003EF03" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF04" data-uri="chapter02.xhtml#P700049702700000000000000003EF04" class="calibre10 pcalibre pcalibre1">1</code></td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF05" data-uri="chapter02.xhtml#P700049702700000000000000003EF05" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF06" data-uri="chapter02.xhtml#P700049702700000000000000003EF06" class="calibre10 pcalibre pcalibre1">(unsigned) –1</code></td>
<td id="P700049702700000000000000003EF07" data-uri="chapter02.xhtml#P700049702700000000000000003EF07" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF08" data-uri="chapter02.xhtml#P700049702700000000000000003EF08" class="calibre10 pcalibre pcalibre1">&gt;</code></td>
<td id="P700049702700000000000000003EF09" data-uri="chapter02.xhtml#P700049702700000000000000003EF09" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF0A" data-uri="chapter02.xhtml#P700049702700000000000000003EF0A" class="calibre10 pcalibre pcalibre1">–2</code></td>
<td id="P700049702700000000000000003EF0B" data-uri="chapter02.xhtml#P700049702700000000000000003EF0B" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF0C" data-uri="chapter02.xhtml#P700049702700000000000000003EF0C" class="calibre10 pcalibre pcalibre1">Unsigned</code></td>
<td id="P700049702700000000000000003EF0D" data-uri="chapter02.xhtml#P700049702700000000000000003EF0D" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF0E" data-uri="chapter02.xhtml#P700049702700000000000000003EF0E" class="calibre10 pcalibre pcalibre1">1</code></td>
</tr>
</tbody>
</table>
<figcaption id="P700049702700000000000000003EF0F" data-uri="chapter02.xhtml#P700049702700000000000000003EF0F" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003EF10" data-uri="chapter02.xhtml#P700049702700000000000000003EF10" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.19 </span>Effects of C promotion rules.</h1></header><div class="caption pcalibre pcalibre1" id="P700049702700000000000000003EF11" data-uri="chapter02.xhtml#P700049702700000000000000003EF11"><p id="P700049702700000000000000003EF12" data-uri="chapter02.xhtml#P700049702700000000000000003EF12" class="pcalibre calibre3 pcalibre1">Nonintuitive cases are marked by ‘<code id="P700049702700000000000000003EF13" data-uri="chapter02.xhtml#P700049702700000000000000003EF13" class="pcalibre1 calibre8 pcalibre">*</code>’. When either operand of a comparison is unsigned, the other operand is implicitly cast to unsigned. See Web Aside <span class="smallcaps pcalibre pcalibre1">data:tmin </span>for why we write <i class="calibre5 pcalibre pcalibre1">TMin</i><sub class="pcalibre1 calibre47 pcalibre">32</sub> as <code id="P700049702700000000000000003EF14" data-uri="chapter02.xhtml#P700049702700000000000000003EF14" class="pcalibre1 calibre8 pcalibre">–2,147,483,647–1</code>.</p></div></figcaption>
</figure>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003EF15" data-uri="chapter02.xhtml#P700049702700000000000000003EF15">assuming the numbers are nonnegative. As we will see, this convention makes little difference for standard arithmetic operations, but it leads to nonintuitive results for relational operators such as &lt; and &gt;. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000B33"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.19</span></a> shows some sample relational expressions and their resulting evaluations, when data type <code id="P700049702700000000000000003EF16" data-uri="chapter02.xhtml#P700049702700000000000000003EF16" class="pcalibre1 calibre8 pcalibre">int</code> has a 32-bit, two's-complement representation. Consider the comparison <code id="P700049702700000000000000003EF17" data-uri="chapter02.xhtml#P700049702700000000000000003EF17" class="pcalibre1 calibre8 pcalibre">–1 &lt; 0U</code>. Since the second operand is unsigned, the first one is implicitly cast to unsigned, and hence the expression is equivalent to the comparison <code id="P700049702700000000000000003EF18" data-uri="chapter02.xhtml#P700049702700000000000000003EF18" class="pcalibre1 calibre8 pcalibre">4294967295U &lt; 0U</code> (recall that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="186" altimg-height="20" altimg="../images/ch02-new33.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>U</m:mi><m:mi>M</m:mi><m:mi>a</m:mi><m:msub><m:mi>x</m:mi><m:mi>w</m:mi></m:msub></m:mrow></m:math></span>), which of course is false. The other cases can be understood by similar analyses.</p>
<section id="P7000497027000000000000000000B93" data-uri="chapter02.xhtml#P7000497027000000000000000000B93" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003EF19" data-uri="chapter02.xhtml#P700049702700000000000000003EF19" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.21</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P70004970270000000000000000019D0">149</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003EF1A" data-uri="chapter02.xhtml#P700049702700000000000000003EF1A">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003EF1B" data-uri="chapter02.xhtml#P700049702700000000000000003EF1B">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EF1C" data-uri="chapter02.xhtml#P700049702700000000000000003EF1C"><p id="P700049702700000000000000003EF1D" data-uri="chapter02.xhtml#P700049702700000000000000003EF1D" class="pcalibre calibre3 pcalibre1">Assuming the expressions are evaluated when executing a 32-bit program on a machine that uses two's-complement arithmetic, fill in the following table describing the effect of casting and relational operations, in the style of <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000B33"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.19</span></a>:</p>
<table id="P700049702700000000000000003EF1E" data-uri="chapter02.xhtml#P700049702700000000000000003EF1E" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003EF1F" data-uri="chapter02.xhtml#P700049702700000000000000003EF1F" class="calibre18 pcalibre pcalibre1">Expression</th>
<th id="P700049702700000000000000003EF20" data-uri="chapter02.xhtml#P700049702700000000000000003EF20" class="calibre18 pcalibre pcalibre1">Type</th>
<th id="P700049702700000000000000003EF21" data-uri="chapter02.xhtml#P700049702700000000000000003EF21" class="calibre18 pcalibre pcalibre1">Evaluation</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF22" data-uri="chapter02.xhtml#P700049702700000000000000003EF22" class="calibre20 pcalibre pcalibre1">–2147483647–1 == 2147483648U</td>
<td id="P700049702700000000000000003EF23" data-uri="chapter02.xhtml#P700049702700000000000000003EF23" class="calibre20 pcalibre pcalibre1">__________</td>
<td id="P700049702700000000000000003EF24" data-uri="chapter02.xhtml#P700049702700000000000000003EF24" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF25" data-uri="chapter02.xhtml#P700049702700000000000000003EF25" class="calibre20 pcalibre pcalibre1">–2147483647–1 &lt; 2147483647</td>
<td id="P700049702700000000000000003EF26" data-uri="chapter02.xhtml#P700049702700000000000000003EF26" class="calibre20 pcalibre pcalibre1">__________</td>
<td id="P700049702700000000000000003EF27" data-uri="chapter02.xhtml#P700049702700000000000000003EF27" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF28" data-uri="chapter02.xhtml#P700049702700000000000000003EF28" class="calibre20 pcalibre pcalibre1">–2147483647–1U &lt; 2147483647</td>
<td id="P700049702700000000000000003EF29" data-uri="chapter02.xhtml#P700049702700000000000000003EF29" class="calibre20 pcalibre pcalibre1">__________</td>
<td id="P700049702700000000000000003EF2A" data-uri="chapter02.xhtml#P700049702700000000000000003EF2A" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF2B" data-uri="chapter02.xhtml#P700049702700000000000000003EF2B" class="calibre20 pcalibre pcalibre1">–2147483647–1 &lt; –2147483647</td>
<td id="P700049702700000000000000003EF2C" data-uri="chapter02.xhtml#P700049702700000000000000003EF2C" class="calibre20 pcalibre pcalibre1">__________</td>
<td id="P700049702700000000000000003EF2D" data-uri="chapter02.xhtml#P700049702700000000000000003EF2D" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF2E" data-uri="chapter02.xhtml#P700049702700000000000000003EF2E" class="calibre20 pcalibre pcalibre1">–2147483647–1U &lt; –2147483647</td>
<td id="P700049702700000000000000003EF2F" data-uri="chapter02.xhtml#P700049702700000000000000003EF2F" class="calibre20 pcalibre pcalibre1">_________</td>
<td id="P700049702700000000000000003EF30" data-uri="chapter02.xhtml#P700049702700000000000000003EF30" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
</tbody>
</table></div></li></ol>
</section>
</section>
<section id="P7000497027000000000000000000BAC" data-uri="chapter02.xhtml#P7000497027000000000000000000BAC" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003EF31" data-uri="chapter02.xhtml#P700049702700000000000000003EF31" epub:type="title"><span class="pcalibre label pcalibre1">2.2.6 </span>Expanding the Bit Representation of a Number</h1></header>
<p id="P700049702700000000000000003EF32" data-uri="chapter02.xhtml#P700049702700000000000000003EF32" class="pcalibre1 pcalibre calibre2">One common operation is to convert between integers having different word sizes while retaining the same numeric value. Of course, this may not be possible when the destination data type is too small to represent the desired value. Converting from a smaller to a larger data type, however, should always be possible.</p>
<aside class="sidebar pcalibre5 pcalibre" id="P7000497027000000000000000000BAF" data-uri="chapter02.xhtml#P7000497027000000000000000000BAF"><header class="pcalibre halftitlepage pcalibre1"><h1 class="pcalibre1 title2 pcalibre" id="P700049702700000000000000003EF33" data-uri="chapter02.xhtml#P700049702700000000000000003EF33" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000BB1" title="77" data-uri="chapter02.xhtml#P7000497027000000000000000000BB1" epub:type="pagebreak"></span><span class="pcalibre label1 pcalibre1">Web Aside DATA:TMIN </span>Writing <i class="calibre5 pcalibre pcalibre1">TMin</i> in C</h1></header>
<p id="P700049702700000000000000003EF34" data-uri="chapter02.xhtml#P700049702700000000000000003EF34" class="calibre13 pcalibre pcalibre1">In <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000B33"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.19</span></a> and in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000017AE_split_000.xhtml#P70004970270000000000000000019FE"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">2.21</span></a>, we carefully wrote the value of <i class="calibre5 pcalibre pcalibre1">TMin</i><sub class="pcalibre1 calibre47 pcalibre">32</sub> as <code id="P700049702700000000000000003EF35" data-uri="chapter02.xhtml#P700049702700000000000000003EF35" class="pcalibre1 calibre8 pcalibre">–2,147,483,647–1</code>. Why not simply write it as either <code id="P700049702700000000000000003EF36" data-uri="chapter02.xhtml#P700049702700000000000000003EF36" class="pcalibre1 calibre8 pcalibre">–2,147,483,648</code> or <code id="P700049702700000000000000003EF37" data-uri="chapter02.xhtml#P700049702700000000000000003EF37" class="pcalibre1 calibre8 pcalibre">0x80000000?</code> Looking at the C header file <code id="P700049702700000000000000003EF38" data-uri="chapter02.xhtml#P700049702700000000000000003EF38" class="pcalibre1 calibre8 pcalibre">limits.h</code>, we see that they use a similar method as we have to write <i class="calibre5 pcalibre pcalibre1">TMin</i><sub class="pcalibre1 calibre47 pcalibre">32</sub> and <i class="calibre5 pcalibre pcalibre1">TMax</i><sub class="pcalibre1 calibre47 pcalibre">32</sub>:</p>
<pre id="P700049702700000000000000003EF39" data-uri="chapter02.xhtml#P700049702700000000000000003EF39" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EF3A" data-uri="chapter02.xhtml#P700049702700000000000000003EF3A" class="calibre10 pcalibre pcalibre1">
/* Minimum and maximum values a ‘signed int’ can hold. */
#define INT_MAX 2147483647
#define INT_MIN (-INT_MAX – 1)
</code></pre>
<p id="P700049702700000000000000003EF3B" data-uri="chapter02.xhtml#P700049702700000000000000003EF3B" class="pcalibre calibre3 pcalibre1">Unfortunately, a curious interaction between the asymmetry of the two's-complement representation and the conversion rules of C forces us to write <i class="calibre5 pcalibre pcalibre1">TMin</i><sub class="pcalibre1 calibre47 pcalibre">32</sub> in this unusual way. Although understanding this issue requires us to delve into one of the murkier corners of the C language standards, it will help us appreciate some of the subtleties of integer data types and representations.</p>
</aside>
<p id="P700049702700000000000000003EF3C" data-uri="chapter02.xhtml#P700049702700000000000000003EF3C" class="pcalibre1 pcalibre calibre2">To convert an unsigned number to a larger data type, we can simply add leading zeros to the representation; this operation is known as <i class="calibre5 pcalibre pcalibre1">zero extension</i>, expressed by the following principle:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EF3D" data-uri="chapter02.xhtml#P700049702700000000000000003EF3D"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EF3E" data-uri="chapter02.xhtml#P700049702700000000000000003EF3E" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003EF3F" data-uri="chapter02.xhtml#P700049702700000000000000003EF3F" class="pcalibre1 pcalibre calibre2">Expansion of an unsigned number by zero extension</p>
<p id="P700049702700000000000000003EF40" data-uri="chapter02.xhtml#P700049702700000000000000003EF40" class="pcalibre1 pcalibre calibre2">Define bit vectors <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="221" altimg-height="22" altimg="../images/ch02-eq37.png"><m:mover accent="true"><m:mi>u</m:mi><m:mo>→</m:mo></m:mover><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>u</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>u</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>u</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:math> </span>of width <var class="calibre5 pcalibre pcalibre1">w</var> and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="310" altimg-height="22" altimg="../images/ch02-eq38.png"><m:mrow><m:mover accent="true"><m:mi>u</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:msub><m:mi>u</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>u</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:msub><m:mi>u</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math> </span>of width <var class="calibre5 pcalibre pcalibre1">w</var>′, where <var class="calibre5 pcalibre pcalibre1">w</var>′ &gt; <var class="calibre5 pcalibre pcalibre1">w</var>. Then <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="199" altimg-height="22" altimg="../images/ch02-eq39.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>u</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mrow><m:mi>w</m:mi><m:mo>′</m:mo></m:mrow></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mover accent="true"><m:mi>u</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>.</p>
</section>
<p id="P700049702700000000000000003EF41" data-uri="chapter02.xhtml#P700049702700000000000000003EF41" class="pcalibre1 pcalibre calibre2">This principle can be seen to follow directly from the definition of the unsigned encoding, given by <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000088C"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.1</span></a>.</p>
<p id="P700049702700000000000000003EF42" data-uri="chapter02.xhtml#P700049702700000000000000003EF42" class="pcalibre1 pcalibre calibre2">For converting a two's-complement number to a larger data type, the rule is to perform a <i class="calibre5 pcalibre pcalibre1">sign extension</i>, adding copies of the most significant bit to the representation, expressed by the following principle. We show the sign bit <var class="calibre5 pcalibre pcalibre1">x</var><sub class="pcalibre1 calibre47 pcalibre"><var class="calibre5 pcalibre pcalibre1">w</var>–1</sub> in blue to highlight its role in sign extension.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EF43" data-uri="chapter02.xhtml#P700049702700000000000000003EF43"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EF44" data-uri="chapter02.xhtml#P700049702700000000000000003EF44" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003EF45" data-uri="chapter02.xhtml#P700049702700000000000000003EF45" class="pcalibre1 pcalibre calibre2">Expansion of a two's-complement number by sign extension</p>
<p id="P700049702700000000000000003EF46" data-uri="chapter02.xhtml#P700049702700000000000000003EF46" class="pcalibre1 pcalibre calibre2">Define bit vectors <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="219" altimg-height="22" altimg="../images/ch02-eq40.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math> </span>of width <var class="calibre5 pcalibre pcalibre1">w</var> and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="373" altimg-height="22" altimg="../images/ch02-eq41.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math> </span>of width <var class="calibre5 pcalibre pcalibre1">w</var>′, where <var class="calibre5 pcalibre pcalibre1">w</var>′ &gt; <var class="calibre5 pcalibre pcalibre1">w</var>. Then <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="194" altimg-height="22" altimg="../images/ch02-eq42.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mrow><m:mi>w</m:mi><m:mo>′</m:mo></m:mrow></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>.</p>
</section>
<p id="P700049702700000000000000003EF47" data-uri="chapter02.xhtml#P700049702700000000000000003EF47" class="pcalibre1 pcalibre calibre2">As an example, consider the following code:</p>
<pre id="P700049702700000000000000003EF48" data-uri="chapter02.xhtml#P700049702700000000000000003EF48" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EF49" data-uri="chapter02.xhtml#P700049702700000000000000003EF49" class="calibre10 pcalibre pcalibre1">
1  short sx = –12345;	     /* –12345 */
2  unsigned short usx = sx;  /* 53191 */
3  int x = sx;               /* -12345 */
4  unsigned ux = usx;        /* 53191 */
5
6  printf(“sx = %d:\t”, sx);
7  show_bytes((byte_pointer) "sx, sizeof(short));
8  printf(“usx = %u:\t”, usx);
9  show_bytes((byte_pointer) "usx, sizeof(unsigned short));
10 printf(“x = %d:\t”, x);<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000BC8" title="78" data-uri="chapter02.xhtml#P7000497027000000000000000000BC8" epub:type="pagebreak"></span>
11 show_bytes((byte_pointer) &amp;x, sizeof(int));
12 printf(“ux = %u:\t”, ux);
13 show_bytes((byte_pointer) &amp;ux, sizeof(unsigned));
</code></pre>
<p id="P700049702700000000000000003EF4A" data-uri="chapter02.xhtml#P700049702700000000000000003EF4A" class="pcalibre1 pcalibre calibre2">When run as a 32–bit program on a big-endian machine that uses a two's-complement representation, this code prints the output</p>
<pre id="P700049702700000000000000003EF4B" data-uri="chapter02.xhtml#P700049702700000000000000003EF4B" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EF4C" data-uri="chapter02.xhtml#P700049702700000000000000003EF4C" class="calibre10 pcalibre pcalibre1">
sx = –12345:	cf c7
usx = 53191:	cf c7
x = –12345:	ff ff cf c7
ux = 53191:     00 00 cf c7
</code></pre>
<p id="P700049702700000000000000003EF4D" data-uri="chapter02.xhtml#P700049702700000000000000003EF4D" class="pcalibre1 pcalibre calibre2">We see that, although the two's-complement representation of –12,345 and the unsigned representation of 53,191 are identical for a 16–bit word size, they differ for a 32–bit word size. In particular, -12,345 has hexadecimal representation <code id="P700049702700000000000000003EF4E" data-uri="chapter02.xhtml#P700049702700000000000000003EF4E" class="pcalibre1 calibre8 pcalibre">0xFFFFCFC7</code>, while 53,191 has hexadecimal representation <code id="P700049702700000000000000003EF4F" data-uri="chapter02.xhtml#P700049702700000000000000003EF4F" class="pcalibre1 calibre8 pcalibre">0x0000CFC7</code>. The former has been sign extended—16 copies of the most significant bit 1, having hexadecimal representation 0xFFFF, have been added as leading bits. The latter has been extended with 16 leading zeros, having hexadecimal representation <code id="P700049702700000000000000003EF50" data-uri="chapter02.xhtml#P700049702700000000000000003EF50" class="pcalibre1 calibre8 pcalibre">0x0000</code>.</p>
<p id="P700049702700000000000000003EF51" data-uri="chapter02.xhtml#P700049702700000000000000003EF51" class="pcalibre1 pcalibre calibre2">As an illustration, <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000BD2"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.20</span></a> shows the result of expanding from word size <var class="calibre5 pcalibre pcalibre1">w</var> = 3 to <var class="calibre5 pcalibre pcalibre1">w</var> = 4 by sign extension. Bit vector [<a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000B39D.xhtml#P700049702700000000000000000B46E">101</a>]represents the value –4 + 1 = –3. Applying sign extension gives bit vector [1101] representing the value –8 + 4 + 1 = –3. We can see that, for <var class="calibre5 pcalibre pcalibre1">w</var> = 4, the combined value of the two most significant bits, –8 + 4 = –4, matches the value of the sign bit for <var class="calibre5 pcalibre pcalibre1">w</var> = 3. Similarly, bit vectors [<a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000B39D.xhtml#P700049702700000000000000000B482">111</a>] and [1111] both represent the value –1.</p>
<p id="P700049702700000000000000003EF52" data-uri="chapter02.xhtml#P700049702700000000000000003EF52" class="pcalibre1 pcalibre calibre2">With this as intuition, we can now show that sign extension preserves the value of a two's-complement number.</p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000BD2" data-uri="chapter02.xhtml#P7000497027000000000000000000BD2">
<img alt="A diagram shows a mapping of strings." id="P700049702700000000000000003EF53" data-uri="P700049702700000000000000000B774" src="../images/p78-1.png" class="pcalibre calibre66 pcalibre1"/>
<figcaption id="P700049702700000000000000003EF54" data-uri="chapter02.xhtml#P700049702700000000000000003EF54" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003EF55" data-uri="chapter02.xhtml#P700049702700000000000000003EF55" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">2.20 </span>Examples of sign extension from <var class="calibre5 pcalibre pcalibre1">w</var> = 3 to <var class="calibre5 pcalibre pcalibre1">w</var> = 4.</h1></header><div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EF56" data-uri="chapter02.xhtml#P700049702700000000000000003EF56"><p id="P700049702700000000000000003EF57" data-uri="chapter02.xhtml#P700049702700000000000000003EF57" class="pcalibre calibre3 pcalibre1">For <var class="calibre5 pcalibre pcalibre1">w</var> = 4, the combined weight of the upper 2 bits is –8 + 4 = –4, matching that of the sign bit for <var class="calibre5 pcalibre pcalibre1">w</var> = 3.</p></div>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001F231" data-uri="chapter02.xhtml#P700049702700000000000000001F231">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003EF58" data-uri="chapter02.xhtml#P700049702700000000000000003EF58" class="pcalibre1 pcalibre calibre2">A diagram shows mapping of bit strings, composed of a combination of four bars: two gray pointing left representing negative 2<sup class="calibre51 pcalibre pcalibre1">3</sup> = negative 8 and negative 2<sup class="calibre51 pcalibre pcalibre1">2</sup> = negative 4; a dark bar pointing right representing 2<sup class="calibre51 pcalibre pcalibre1">2</sup> = 4; and two blue bars pointing right representing 2<sup class="calibre51 pcalibre pcalibre1">1</sup> = 2 and 2<sup class="calibre51 pcalibre pcalibre1">0</sup> = 1. The strings are summarized below.</p>
<ul id="P700049702700000000000000003EF59" data-uri="chapter02.xhtml#P700049702700000000000000003EF59" class="pcalibre calibre31 pcalibre1">
<li id="P700049702700000000000000003EF5A" data-uri="chapter02.xhtml#P700049702700000000000000003EF5A" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF5B" data-uri="chapter02.xhtml#P700049702700000000000000003EF5B" class="pcalibre calibre3 pcalibre1">[101: length of negative 3, composed of bars of lengths negative 4 and 1</p></li>
<li id="P700049702700000000000000003EF5C" data-uri="chapter02.xhtml#P700049702700000000000000003EF5C" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF5D" data-uri="chapter02.xhtml#P700049702700000000000000003EF5D" class="pcalibre calibre3 pcalibre1">[1011]: length of negative 3, composed of bars of lengths negative 8, 4, and 1</p></li>
<li id="P700049702700000000000000003EF5E" data-uri="chapter02.xhtml#P700049702700000000000000003EF5E" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF5F" data-uri="chapter02.xhtml#P700049702700000000000000003EF5F" class="pcalibre calibre3 pcalibre1">[1111]: length of negative 1, composed of bars of lengths negative 8, 4, 2, and 1</p></li>
</ul>
</details>
</figcaption>
</figure>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EF60" data-uri="chapter02.xhtml#P700049702700000000000000003EF60"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EF61" data-uri="chapter02.xhtml#P700049702700000000000000003EF61" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000BDA" title="79" data-uri="chapter02.xhtml#P7000497027000000000000000000BDA" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003EF62" data-uri="chapter02.xhtml#P700049702700000000000000003EF62" class="pcalibre1 pcalibre calibre2">Expansion of a two's-complement number by sign extension Let <i class="calibre5 pcalibre pcalibre1">w′ = w + k.</i> What we want to prove is that</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003EF63" data-uri="chapter02.xhtml#P700049702700000000000000003EF63"><m:math display="block" alttext="" data-uri="" altimg-width="695" altimg-height="52" altimg="../images/ch02-eq43.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mrow><m:mi>w</m:mi><m:mo>+</m:mo><m:mi>k</m:mi></m:mrow></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:munder><m:munder><m:mrow><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub></m:mrow><m:mo stretchy="true">︸</m:mo></m:munder><m:mrow><m:mi>k</m:mi><m:mtext> </m:mtext><m:mtext>times</m:mtext></m:mrow></m:munder><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:mi>T</m:mi><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:math></div>
<p id="P700049702700000000000000003EF64" data-uri="chapter02.xhtml#P700049702700000000000000003EF64" class="pcalibre1 pcalibre calibre2">The proof follows by induction on <i class="calibre5 pcalibre pcalibre1">k.</i> That is, if we can prove that sign extending by 1 bit preserves the numeric value, then this property will hold when sign extending by an arbitrary number of bits. Thus, the task reduces to proving that</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003EF65" data-uri="chapter02.xhtml#P700049702700000000000000003EF65"><m:math display="block" alttext="" data-uri="" altimg-width="598" altimg-height="22" altimg="../images/ch02-eq44.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mrow><m:mi>w</m:mi><m:mo>+</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:math></div>
<p id="P700049702700000000000000003EF66" data-uri="chapter02.xhtml#P700049702700000000000000003EF66" class="pcalibre1 pcalibre calibre2">Expanding the left-hand expression with <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000089F"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.3</span></a> gives the following:</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003EF67" data-uri="chapter02.xhtml#P700049702700000000000000003EF67"><m:math display="block" alttext="" data-uri="" altimg-width="634" altimg-height="341" altimg="../images/ch02-eq45.png"><m:mrow><m:mtable columnalign="left"><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mrow><m:mi>w</m:mi><m:mo>+</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mo>−</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>+</m:mo><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mo>−</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>+</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>+</m:mo><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mo>−</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>+</m:mo><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mo>−</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>+</m:mo><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:mtd></m:mtr></m:mtable></m:mrow></m:math></div>
<p id="P700049702700000000000000003EF68" data-uri="chapter02.xhtml#P700049702700000000000000003EF68" class="pcalibre1 pcalibre calibre2">The key property we exploit is that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="158" altimg-height="20" altimg="../images/ch02-new34.png"><m:mrow><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup></m:mrow></m:math></span>. Thus, the combined effect of adding a bit of weight –2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">w</var></sup> and of converting the bit having weight –2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">w</var>–1</sup> to be one with weight 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">w</var>–1</sup> is to preserve the original numeric value.</p>
</section>
<section id="P7000497027000000000000000000BE2" data-uri="chapter02.xhtml#P7000497027000000000000000000BE2" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003EF69" data-uri="chapter02.xhtml#P700049702700000000000000003EF69" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.22</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P7000497027000000000000000001A01">150</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003EF6A" data-uri="chapter02.xhtml#P700049702700000000000000003EF6A">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003EF6B" data-uri="chapter02.xhtml#P700049702700000000000000003EF6B">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EF6C" data-uri="chapter02.xhtml#P700049702700000000000000003EF6C"><p id="P700049702700000000000000003EF6D" data-uri="chapter02.xhtml#P700049702700000000000000003EF6D" class="pcalibre calibre3 pcalibre1">
Show that each of the following bit vectors is a two's-complement representation of –5 by applying <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000089F"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.3</span></a>:</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000003EF6E" data-uri="chapter02.xhtml#P700049702700000000000000003EF6E">
<li id="P700049702700000000000000003EF6F" data-uri="chapter02.xhtml#P700049702700000000000000003EF6F" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF70" data-uri="chapter02.xhtml#P700049702700000000000000003EF70" class="pcalibre calibre3 pcalibre1">[1011]</p></li>
<li id="P700049702700000000000000003EF71" data-uri="chapter02.xhtml#P700049702700000000000000003EF71" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF72" data-uri="chapter02.xhtml#P700049702700000000000000003EF72" class="pcalibre calibre3 pcalibre1">[11011]</p></li>
<li id="P700049702700000000000000003EF73" data-uri="chapter02.xhtml#P700049702700000000000000003EF73" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF74" data-uri="chapter02.xhtml#P700049702700000000000000003EF74" class="pcalibre calibre3 pcalibre1">[111011]</p></li></ol>
<p id="P700049702700000000000000003EF75" data-uri="chapter02.xhtml#P700049702700000000000000003EF75" class="pcalibre calibre3 pcalibre1">Observe that the second and third bit vectors can be derived from the first by sign extension.</p>
</div></li></ol>
</section>
<p id="P700049702700000000000000003EF76" data-uri="chapter02.xhtml#P700049702700000000000000003EF76" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000BF1" title="80" data-uri="chapter02.xhtml#P7000497027000000000000000000BF1" epub:type="pagebreak"></span>One point worth making is that the relative order of conversion from one data size to another and between unsigned and signed can affect the behavior of a program. Consider the following code:</p>
<pre id="P700049702700000000000000003EF77" data-uri="chapter02.xhtml#P700049702700000000000000003EF77" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EF78" data-uri="chapter02.xhtml#P700049702700000000000000003EF78" class="calibre10 pcalibre pcalibre1">
1 short sx = –12345;	/* –12345 */
2 unsigned uy = sx;     /* Mystery! */
3
4 printf(“uy = %u:\t”, uy);
5 show_bytes((byte_pointer) &amp;uy, sizeof(unsigned));
</code></pre>
<p id="P700049702700000000000000003EF79" data-uri="chapter02.xhtml#P700049702700000000000000003EF79" class="pcalibre1 pcalibre calibre2">When run on a big-endian machine, this code causes the following output to be printed:</p>
<pre id="P700049702700000000000000003EF7A" data-uri="chapter02.xhtml#P700049702700000000000000003EF7A" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EF7B" data-uri="chapter02.xhtml#P700049702700000000000000003EF7B" class="calibre10 pcalibre pcalibre1">uy = 4294954951: ff ff cf c7</code></pre>
<p id="P700049702700000000000000003EF7C" data-uri="chapter02.xhtml#P700049702700000000000000003EF7C" class="pcalibre1 pcalibre calibre2">This shows that, when converting from <code id="P700049702700000000000000003EF7D" data-uri="chapter02.xhtml#P700049702700000000000000003EF7D" class="pcalibre1 calibre8 pcalibre">short</code> to <code id="P700049702700000000000000003EF7E" data-uri="chapter02.xhtml#P700049702700000000000000003EF7E" class="pcalibre1 calibre8 pcalibre">unsigned</code>, the program first changes the size and then the type. That is, <code id="P700049702700000000000000003EF7F" data-uri="chapter02.xhtml#P700049702700000000000000003EF7F" class="pcalibre1 calibre8 pcalibre">(unsigned) sx</code> is equivalent to <code id="P700049702700000000000000003EF80" data-uri="chapter02.xhtml#P700049702700000000000000003EF80" class="pcalibre1 calibre8 pcalibre">(unsigned) (int) sx</code>, evaluating to 4,294,954,951, not <code id="P700049702700000000000000003EF81" data-uri="chapter02.xhtml#P700049702700000000000000003EF81" class="pcalibre1 calibre8 pcalibre">(unsigned) (unsigned short) sx</code>, which evaluates to 53,191. Indeed, this convention is required by the C standards.</p>
<section id="P7000497027000000000000000000BFD" data-uri="chapter02.xhtml#P7000497027000000000000000000BFD" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003EF82" data-uri="chapter02.xhtml#P700049702700000000000000003EF82" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.23</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P7000497027000000000000000001A01">150</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003EF83" data-uri="chapter02.xhtml#P700049702700000000000000003EF83">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003EF84" data-uri="chapter02.xhtml#P700049702700000000000000003EF84">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EF85" data-uri="chapter02.xhtml#P700049702700000000000000003EF85"><p id="P700049702700000000000000003EF86" data-uri="chapter02.xhtml#P700049702700000000000000003EF86" class="pcalibre calibre3 pcalibre1">Consider the following C functions:</p>
<pre id="P700049702700000000000000003EF87" data-uri="chapter02.xhtml#P700049702700000000000000003EF87" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EF88" data-uri="chapter02.xhtml#P700049702700000000000000003EF88" class="calibre10 pcalibre pcalibre1">
int fun1(unsigned word) {
    return (int) ((word &lt;&lt; 24) &gt;&gt; 24);
}

int fun2(unsigned word) {
    return ((int) word &lt;&lt; 24) &gt;&gt; 24;
}
</code></pre>
<p id="P700049702700000000000000003EF89" data-uri="chapter02.xhtml#P700049702700000000000000003EF89" class="pcalibre calibre3 pcalibre1">Assume these are executed as a 32–bit program on a machine that uses two's-complement arithmetic. Assume also that right shifts of signed values are performed arithmetically, while right shifts of unsigned values are performed logically.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000003EF8A" data-uri="chapter02.xhtml#P700049702700000000000000003EF8A">
<li id="P7000497027000000000000000000C07" data-uri="chapter02.xhtml#P7000497027000000000000000000C07" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EF8B" data-uri="chapter02.xhtml#P700049702700000000000000003EF8B" class="pcalibre calibre3 pcalibre1">Fill in the following table showing the effect of these functions for several example arguments. You will find it more convenient to work with a hexadecimal representation. Just remember that hex digits 8 through F have their most significant bits equal to 1.</p>
<table class="informaltable pcalibre pcalibre1" id="P700049702700000000000000003EF8C" data-uri="chapter02.xhtml#P700049702700000000000000003EF8C">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003EF8D" data-uri="chapter02.xhtml#P700049702700000000000000003EF8D" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003EF8E" data-uri="chapter02.xhtml#P700049702700000000000000003EF8E" class="calibre10 pcalibre pcalibre1">w</code></th>
<th id="P700049702700000000000000003EF8F" data-uri="chapter02.xhtml#P700049702700000000000000003EF8F" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003EF90" data-uri="chapter02.xhtml#P700049702700000000000000003EF90" class="calibre10 pcalibre pcalibre1">fun1(w)</code></th>
<th id="P700049702700000000000000003EF91" data-uri="chapter02.xhtml#P700049702700000000000000003EF91" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003EF92" data-uri="chapter02.xhtml#P700049702700000000000000003EF92" class="calibre10 pcalibre pcalibre1">fun2(w)</code></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF93" data-uri="chapter02.xhtml#P700049702700000000000000003EF93" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF94" data-uri="chapter02.xhtml#P700049702700000000000000003EF94" class="calibre10 pcalibre pcalibre1">0x00000076</code></td>
<td id="P700049702700000000000000003EF95" data-uri="chapter02.xhtml#P700049702700000000000000003EF95" class="calibre20 pcalibre pcalibre1">_________</td>
<td id="P700049702700000000000000003EF96" data-uri="chapter02.xhtml#P700049702700000000000000003EF96" class="calibre20 pcalibre pcalibre1">_________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF97" data-uri="chapter02.xhtml#P700049702700000000000000003EF97" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF98" data-uri="chapter02.xhtml#P700049702700000000000000003EF98" class="calibre10 pcalibre pcalibre1">0x87654321</code></td>
<td id="P700049702700000000000000003EF99" data-uri="chapter02.xhtml#P700049702700000000000000003EF99" class="calibre20 pcalibre pcalibre1">_________</td>
<td id="P700049702700000000000000003EF9A" data-uri="chapter02.xhtml#P700049702700000000000000003EF9A" class="calibre20 pcalibre pcalibre1">_________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF9B" data-uri="chapter02.xhtml#P700049702700000000000000003EF9B" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EF9C" data-uri="chapter02.xhtml#P700049702700000000000000003EF9C" class="calibre10 pcalibre pcalibre1">0x000000C9</code></td>
<td id="P700049702700000000000000003EF9D" data-uri="chapter02.xhtml#P700049702700000000000000003EF9D" class="calibre20 pcalibre pcalibre1">_________</td>
<td id="P700049702700000000000000003EF9E" data-uri="chapter02.xhtml#P700049702700000000000000003EF9E" class="calibre20 pcalibre pcalibre1">_________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EF9F" data-uri="chapter02.xhtml#P700049702700000000000000003EF9F" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFA0" data-uri="chapter02.xhtml#P700049702700000000000000003EFA0" class="calibre10 pcalibre pcalibre1">0xEDCBA987</code></td>
<td id="P700049702700000000000000003EFA1" data-uri="chapter02.xhtml#P700049702700000000000000003EFA1" class="calibre20 pcalibre pcalibre1">_________</td>
<td id="P700049702700000000000000003EFA2" data-uri="chapter02.xhtml#P700049702700000000000000003EFA2" class="calibre20 pcalibre pcalibre1">_________</td>
</tr>
</tbody>
</table></li>
<li id="P7000497027000000000000000000C20" data-uri="chapter02.xhtml#P7000497027000000000000000000C20" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003EFA3" data-uri="chapter02.xhtml#P700049702700000000000000003EFA3" class="pcalibre calibre3 pcalibre1">Describe in words the useful computation each of these functions performs.</p></li>
</ol></div></li></ol>
</section>
</section>
<section id="P7000497027000000000000000000C22" data-uri="chapter02.xhtml#P7000497027000000000000000000C22" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003EFA4" data-uri="chapter02.xhtml#P700049702700000000000000003EFA4" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000C24" title="81" data-uri="chapter02.xhtml#P7000497027000000000000000000C24" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">2.2.7 </span>Truncating Numbers</h1></header>
<p id="P700049702700000000000000003EFA5" data-uri="chapter02.xhtml#P700049702700000000000000003EFA5" class="pcalibre1 pcalibre calibre2">Suppose that, rather than extending a value with extra bits, we reduce the number of bits representing a number. This occurs, for example, in the following code:</p>
<pre id="P700049702700000000000000003EFA6" data-uri="chapter02.xhtml#P700049702700000000000000003EFA6" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003EFA7" data-uri="chapter02.xhtml#P700049702700000000000000003EFA7" class="calibre10 pcalibre pcalibre1">
1	int x = 53191;
2	short sx = (short) x;	/* –12345 */
3	int y = sx;				/* –12345 */
</code></pre>
<p id="P700049702700000000000000003EFA8" data-uri="chapter02.xhtml#P700049702700000000000000003EFA8" class="pcalibre1 pcalibre calibre2">Casting <code id="P700049702700000000000000003EFA9" data-uri="chapter02.xhtml#P700049702700000000000000003EFA9" class="pcalibre1 calibre8 pcalibre">x</code> to be <code id="P700049702700000000000000003EFAA" data-uri="chapter02.xhtml#P700049702700000000000000003EFAA" class="pcalibre1 calibre8 pcalibre">short</code> will truncate a 32-bit <code id="P700049702700000000000000003EFAB" data-uri="chapter02.xhtml#P700049702700000000000000003EFAB" class="pcalibre1 calibre8 pcalibre">int</code> to a 16-bit <code id="P700049702700000000000000003EFAC" data-uri="chapter02.xhtml#P700049702700000000000000003EFAC" class="pcalibre1 calibre8 pcalibre">short</code>. As we saw before, this 16–bit pattern is the two's-complement representation of –12,345. When casting this back to <code id="P700049702700000000000000003EFAD" data-uri="chapter02.xhtml#P700049702700000000000000003EFAD" class="pcalibre1 calibre8 pcalibre">int</code>, sign extension will set the high-order 16 bits to ones, yielding the 32–bit two's-complement representation of –12,345.</p>
<p id="P700049702700000000000000003EFAE" data-uri="chapter02.xhtml#P700049702700000000000000003EFAE" class="pcalibre1 pcalibre calibre2">When truncating a <var class="calibre5 pcalibre pcalibre1">w</var>-bit number <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="218" altimg-height="22" altimg="../images/ch02-eq46.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math> </span>to a <var class="calibre5 pcalibre pcalibre1">k</var>-bit number, we drop the high-order <i class="calibre5 pcalibre pcalibre1">w – k</i> bits, giving a bit vector <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="221" altimg-height="22" altimg="../images/ch02-eq47.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. Truncating a number can alter its value—a form of overflow. For an unsigned number, we can readily characterize the numeric value that will result.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EFAF" data-uri="chapter02.xhtml#P700049702700000000000000003EFAF"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EFB0" data-uri="chapter02.xhtml#P700049702700000000000000003EFB0" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003EFB1" data-uri="chapter02.xhtml#P700049702700000000000000003EFB1" class="pcalibre1 pcalibre calibre2">Truncation of an unsigned number</p>
<p id="P700049702700000000000000003EFB2" data-uri="chapter02.xhtml#P700049702700000000000000003EFB2" class="pcalibre1 pcalibre calibre2">Let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="11" altimg-height="18" altimg="../images/ch02-eq48.png"><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover></m:math> </span>be the bit vector <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="180" altimg-height="21" altimg="../images/ch02-new35.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>.</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, and let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="16" altimg-height="18" altimg="../images/ch02-eq49.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo></m:mrow></m:math> </span>be the result of truncating it to <var class="calibre5 pcalibre pcalibre1">k</var> bits: <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="385" altimg-height="22" altimg="../images/ch02-eq50.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow><m:mo>.</m:mo><m:mtext> </m:mtext><m:mi>L</m:mi><m:mi>e</m:mi><m:mi>t</m:mi><m:mtext> </m:mtext><m:mi>x</m:mi><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="125" altimg-height="22" altimg="../images/ch02-eq51.png"><m:mrow><m:mi>x</m:mi><m:mo>′</m:mo><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>k</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>. Then <var class="calibre5 pcalibre pcalibre1">x</var>′ = <var class="calibre5 pcalibre pcalibre1">x</var> mod 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>.</p>
</section>
<p id="P700049702700000000000000003EFB3" data-uri="chapter02.xhtml#P700049702700000000000000003EFB3" class="pcalibre1 pcalibre calibre2">The intuition behind this principle is simply that all of the bits that were truncated have weights of the form 2<var class="calibre5 pcalibre pcalibre1">i</var>, where <var class="calibre5 pcalibre pcalibre1">i</var> ≥ <var class="calibre5 pcalibre pcalibre1">k</var>, and therefore each of these weights reduces to zero under the modulus operation. This is formalized by the following derivation:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EFB4" data-uri="chapter02.xhtml#P700049702700000000000000003EFB4"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EFB5" data-uri="chapter02.xhtml#P700049702700000000000000003EFB5" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003EFB6" data-uri="chapter02.xhtml#P700049702700000000000000003EFB6" class="pcalibre1 pcalibre calibre2">Truncation of an unsigned number</p>
<p id="P700049702700000000000000003EFB7" data-uri="chapter02.xhtml#P700049702700000000000000003EFB7" class="pcalibre1 pcalibre calibre2">Applying the modulus operation to <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000088C"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.1</span></a> yields</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003EFB8" data-uri="chapter02.xhtml#P700049702700000000000000003EFB8"><m:math display="block" alttext="" data-uri="" altimg-width="586" altimg-height="261" altimg="../images/ch02-eq52.png"><m:mrow><m:mtable columnalign="left"><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow><m:mo>]</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow><m:mo>]</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>k</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:mtd></m:mtr></m:mtable></m:mrow></m:math></div>
<p id="P700049702700000000000000003EFB9" data-uri="chapter02.xhtml#P700049702700000000000000003EFB9" class="pcalibre1 pcalibre calibre2">In this derivation, we make use of the property that 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">i</var></sup> mod 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup> = 0 for any <var class="calibre5 pcalibre pcalibre1">i</var> ≥ <var class="calibre5 pcalibre pcalibre1">k</var>.</p>
</section>
<p id="P700049702700000000000000003EFBA" data-uri="chapter02.xhtml#P700049702700000000000000003EFBA" class="pcalibre1 pcalibre calibre2">A similar property holds for truncating a two's-complement number, except that it then converts the most significant bit into a sign bit:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EFBB" data-uri="chapter02.xhtml#P700049702700000000000000003EFBB"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EFBC" data-uri="chapter02.xhtml#P700049702700000000000000003EFBC" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000C3D" title="82" data-uri="chapter02.xhtml#P7000497027000000000000000000C3D" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003EFBD" data-uri="chapter02.xhtml#P700049702700000000000000003EFBD" class="pcalibre1 pcalibre calibre2">Truncation of a two's-complement number</p>
<p id="P700049702700000000000000003EFBE" data-uri="chapter02.xhtml#P700049702700000000000000003EFBE" class="pcalibre1 pcalibre calibre2">Let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="11" altimg-height="18" altimg="../images/ch02-eq53.png"><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover></m:math> </span>be the bit vector <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="180" altimg-height="21" altimg="../images/ch02-new36.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>.</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, and let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="14" altimg-height="23" altimg="../images/ch02-eq54.png"><m:mrow><m:mo>′</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover></m:mrow></m:math> </span>be the result of truncating it to <var class="calibre5 pcalibre pcalibre1">k</var> bits: <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="216" altimg-height="22" altimg="../images/ch02-eq55.png"><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo><m:mo>=</m:mo><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. Let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="117" altimg-height="22" altimg="../images/ch02-eq56.png"><m:mrow><m:mi>x</m:mi><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="122" altimg-height="22" altimg="../images/ch02-eq57.png"><m:mrow><m:mi>x</m:mi><m:mo>′</m:mo><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>k</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>. Then <var class="calibre5 pcalibre pcalibre1">x</var>′ = <i class="calibre5 pcalibre pcalibre1">U2T<sub class="pcalibre1 calibre47 pcalibre">k</sub></i>(<var class="calibre5 pcalibre pcalibre1">x</var> mod 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>).</p>
</section>
<p id="P700049702700000000000000003EFBF" data-uri="chapter02.xhtml#P700049702700000000000000003EFBF" class="pcalibre1 pcalibre calibre2">In this formulation, <var class="calibre5 pcalibre pcalibre1">x</var> mod 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup> will be a number between 0 and 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup> – 1. Applying function <i class="calibre5 pcalibre pcalibre1">U2T<sub class="pcalibre1 calibre47 pcalibre">k</sub></i> to it will have the effect of converting the most significant bit <var class="calibre5 pcalibre pcalibre1">x</var><sub class="pcalibre1 calibre47 pcalibre"><var class="calibre5 pcalibre pcalibre1">k</var>–1</sub> from having weight 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var>–1</sup> to having weight –2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var>–1</sup>. We can see this with the example of converting value <var class="calibre5 pcalibre pcalibre1">x</var> = 53,191 from <i class="calibre5 pcalibre pcalibre1">int</i> to <i class="calibre5 pcalibre pcalibre1">short</i>. Since 2<sup class="calibre51 pcalibre pcalibre1">16</sup> = 65,536 ≥ <var class="calibre5 pcalibre pcalibre1">x</var>, we have <var class="calibre5 pcalibre pcalibre1">x</var> mod 2<sup class="calibre51 pcalibre pcalibre1">16</sup> = <var class="calibre5 pcalibre pcalibre1">x</var>. But when we convert this number to a 16–bit two's-complement number, we get <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="283" altimg-height="19" altimg="../images/ch02-new37.png"><m:mrow><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>=</m:mo><m:mn>53</m:mn><m:mo>,</m:mo><m:mn>191</m:mn><m:mo>−</m:mo><m:mn>65</m:mn><m:mo>,</m:mo><m:mn>536</m:mn><m:mo>=</m:mo><m:mo>−</m:mo><m:mn>12</m:mn><m:mo>,</m:mo><m:mn>345</m:mn></m:mrow></m:math></span>.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003EFC0" data-uri="chapter02.xhtml#P700049702700000000000000003EFC0"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003EFC1" data-uri="chapter02.xhtml#P700049702700000000000000003EFC1" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003EFC2" data-uri="chapter02.xhtml#P700049702700000000000000003EFC2" class="pcalibre1 pcalibre calibre2">Truncation of a two's-complement number</p>
<p id="P700049702700000000000000003EFC3" data-uri="chapter02.xhtml#P700049702700000000000000003EFC3" class="pcalibre1 pcalibre calibre2">Using a similar argument to the one we used for truncation of an unsigned number shows that</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003EFC4" data-uri="chapter02.xhtml#P700049702700000000000000003EFC4"><m:math display="block" alttext="" data-uri="" altimg-width="584" altimg-height="24" altimg="../images/ch02-eq58.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mtext> </m:mtext><m:mtext>mod</m:mtext><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>k</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:math></div>
<p id="P700049702700000000000000003EFC5" data-uri="chapter02.xhtml#P700049702700000000000000003EFC5" class="pcalibre1 pcalibre calibre2">That is, <var class="calibre5 pcalibre pcalibre1">x</var> mod 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup> can be represented by an unsigned number having bit-level representation <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="172" altimg-height="21" altimg="../images/ch02-new38.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. Converting this to a two's-complement number gives <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="187" altimg-height="23" altimg="../images/ch02-new39.png"><m:mrow><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>=</m:mo><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>k</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>).</p>
</section>
<p id="P700049702700000000000000003EFC6" data-uri="chapter02.xhtml#P700049702700000000000000003EFC6" class="pcalibre1 pcalibre calibre2">Summarizing, the effect of truncation for unsigned numbers is</p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000000C48" data-uri="chapter02.xhtml#P7000497027000000000000000000C48"><m:math display="block" alttext="" data-uri="" altimg-width="654" altimg-height="24" altimg="../images/ch02-eq59.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>k</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mtext> </m:mtext><m:mtext>mod</m:mtext><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:math>
<span class="number3 pcalibre pcalibre1">(2.9)</span>
</div>
<p id="P700049702700000000000000003EFC7" data-uri="chapter02.xhtml#P700049702700000000000000003EFC7" class="pcalibre1 pcalibre calibre2">while the effect for two's-complement numbers is</p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000000C4A" data-uri="chapter02.xhtml#P7000497027000000000000000000C4A"><m:math display="block" alttext="" data-uri="" altimg-width="650" altimg-height="25" altimg="../images/ch02-eq60.png"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>k</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mtext> </m:mtext><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo><m:mtext> </m:mtext><m:mtext>mod</m:mtext><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup><m:mo stretchy="false">)</m:mo></m:mrow></m:math>
<span class="number3 pcalibre pcalibre1">(2.10)</span>
</div>
<section id="P7000497027000000000000000000C4B" data-uri="chapter02.xhtml#P7000497027000000000000000000C4B" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003EFC8" data-uri="chapter02.xhtml#P700049702700000000000000003EFC8" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.24</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P7000497027000000000000000001A01">150</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003EFC9" data-uri="chapter02.xhtml#P700049702700000000000000003EFC9">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003EFCA" data-uri="chapter02.xhtml#P700049702700000000000000003EFCA">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003EFCB" data-uri="chapter02.xhtml#P700049702700000000000000003EFCB"><p id="P700049702700000000000000003EFCC" data-uri="chapter02.xhtml#P700049702700000000000000003EFCC" class="pcalibre calibre3 pcalibre1">Suppose we truncate a 4–bit value (represented by hex digits <code id="P700049702700000000000000003EFCD" data-uri="chapter02.xhtml#P700049702700000000000000003EFCD" class="pcalibre1 calibre8 pcalibre">0</code> through <code id="P700049702700000000000000003EFCE" data-uri="chapter02.xhtml#P700049702700000000000000003EFCE" class="pcalibre1 calibre8 pcalibre">F</code>) to a 3–bit value (represented as hex digits <code id="P700049702700000000000000003EFCF" data-uri="chapter02.xhtml#P700049702700000000000000003EFCF" class="pcalibre1 calibre8 pcalibre">0</code> through <code id="P700049702700000000000000003EFD0" data-uri="chapter02.xhtml#P700049702700000000000000003EFD0" class="pcalibre1 calibre8 pcalibre">7</code>.) Fill in the table below showing the effect of this truncation for some cases, in terms of the unsigned and two's-complement interpretations of those bit patterns.</p>
<table class="informaltable pcalibre pcalibre1" id="P700049702700000000000000003EFD1" data-uri="chapter02.xhtml#P700049702700000000000000003EFD1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th colspan="2" id="P700049702700000000000000003EFD2" data-uri="chapter02.xhtml#P700049702700000000000000003EFD2" class="calibre18 pcalibre pcalibre1">Hex</th>
<th colspan="2" id="P700049702700000000000000003EFD3" data-uri="chapter02.xhtml#P700049702700000000000000003EFD3" class="calibre18 pcalibre pcalibre1">Unsigned</th>
<th colspan="2" id="P700049702700000000000000003EFD4" data-uri="chapter02.xhtml#P700049702700000000000000003EFD4" class="calibre18 pcalibre pcalibre1">Two's complement</th>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003EFD5" data-uri="chapter02.xhtml#P700049702700000000000000003EFD5" class="calibre18 pcalibre pcalibre1">Original</th>
<th id="P700049702700000000000000003EFD6" data-uri="chapter02.xhtml#P700049702700000000000000003EFD6" class="calibre18 pcalibre pcalibre1">Truncated</th>
<th id="P700049702700000000000000003EFD7" data-uri="chapter02.xhtml#P700049702700000000000000003EFD7" class="calibre18 pcalibre pcalibre1">Original</th>
<th id="P700049702700000000000000003EFD8" data-uri="chapter02.xhtml#P700049702700000000000000003EFD8" class="calibre18 pcalibre pcalibre1">Truncated</th>
<th id="P700049702700000000000000003EFD9" data-uri="chapter02.xhtml#P700049702700000000000000003EFD9" class="calibre18 pcalibre pcalibre1">Original</th>
<th id="P700049702700000000000000003EFDA" data-uri="chapter02.xhtml#P700049702700000000000000003EFDA" class="calibre18 pcalibre pcalibre1">Truncated</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EFDB" data-uri="chapter02.xhtml#P700049702700000000000000003EFDB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFDC" data-uri="chapter02.xhtml#P700049702700000000000000003EFDC" class="calibre10 pcalibre pcalibre1">0</code></td>
<td id="P700049702700000000000000003EFDD" data-uri="chapter02.xhtml#P700049702700000000000000003EFDD" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFDE" data-uri="chapter02.xhtml#P700049702700000000000000003EFDE" class="calibre10 pcalibre pcalibre1">0</code></td>
<td id="P700049702700000000000000003EFDF" data-uri="chapter02.xhtml#P700049702700000000000000003EFDF" class="calibre20 pcalibre pcalibre1">0</td>
<td id="P700049702700000000000000003EFE0" data-uri="chapter02.xhtml#P700049702700000000000000003EFE0" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003EFE1" data-uri="chapter02.xhtml#P700049702700000000000000003EFE1" class="calibre20 pcalibre pcalibre1">0</td>
<td id="P700049702700000000000000003EFE2" data-uri="chapter02.xhtml#P700049702700000000000000003EFE2" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EFE3" data-uri="chapter02.xhtml#P700049702700000000000000003EFE3" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFE4" data-uri="chapter02.xhtml#P700049702700000000000000003EFE4" class="calibre10 pcalibre pcalibre1">2</code></td>
<td id="P700049702700000000000000003EFE5" data-uri="chapter02.xhtml#P700049702700000000000000003EFE5" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFE6" data-uri="chapter02.xhtml#P700049702700000000000000003EFE6" class="calibre10 pcalibre pcalibre1">2</code></td>
<td id="P700049702700000000000000003EFE7" data-uri="chapter02.xhtml#P700049702700000000000000003EFE7" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P700049702700000000000000003EFE8" data-uri="chapter02.xhtml#P700049702700000000000000003EFE8" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003EFE9" data-uri="chapter02.xhtml#P700049702700000000000000003EFE9" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P700049702700000000000000003EFEA" data-uri="chapter02.xhtml#P700049702700000000000000003EFEA" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EFEB" data-uri="chapter02.xhtml#P700049702700000000000000003EFEB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFEC" data-uri="chapter02.xhtml#P700049702700000000000000003EFEC" class="calibre10 pcalibre pcalibre1">9</code></td>
<td id="P700049702700000000000000003EFED" data-uri="chapter02.xhtml#P700049702700000000000000003EFED" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFEE" data-uri="chapter02.xhtml#P700049702700000000000000003EFEE" class="calibre10 pcalibre pcalibre1">1</code></td>
<td id="P700049702700000000000000003EFEF" data-uri="chapter02.xhtml#P700049702700000000000000003EFEF" class="calibre20 pcalibre pcalibre1">9</td>
<td id="P700049702700000000000000003EFF0" data-uri="chapter02.xhtml#P700049702700000000000000003EFF0" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003EFF1" data-uri="chapter02.xhtml#P700049702700000000000000003EFF1" class="calibre20 pcalibre pcalibre1">–7</td>
<td id="P700049702700000000000000003EFF2" data-uri="chapter02.xhtml#P700049702700000000000000003EFF2" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EFF3" data-uri="chapter02.xhtml#P700049702700000000000000003EFF3" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFF4" data-uri="chapter02.xhtml#P700049702700000000000000003EFF4" class="calibre10 pcalibre pcalibre1">B</code></td>
<td id="P700049702700000000000000003EFF5" data-uri="chapter02.xhtml#P700049702700000000000000003EFF5" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFF6" data-uri="chapter02.xhtml#P700049702700000000000000003EFF6" class="calibre10 pcalibre pcalibre1">3</code></td>
<td id="P700049702700000000000000003EFF7" data-uri="chapter02.xhtml#P700049702700000000000000003EFF7" class="calibre20 pcalibre pcalibre1">11</td>
<td id="P700049702700000000000000003EFF8" data-uri="chapter02.xhtml#P700049702700000000000000003EFF8" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003EFF9" data-uri="chapter02.xhtml#P700049702700000000000000003EFF9" class="calibre20 pcalibre pcalibre1">–5</td>
<td id="P700049702700000000000000003EFFA" data-uri="chapter02.xhtml#P700049702700000000000000003EFFA" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003EFFB" data-uri="chapter02.xhtml#P700049702700000000000000003EFFB" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFFC" data-uri="chapter02.xhtml#P700049702700000000000000003EFFC" class="calibre10 pcalibre pcalibre1">F</code></td>
<td id="P700049702700000000000000003EFFD" data-uri="chapter02.xhtml#P700049702700000000000000003EFFD" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003EFFE" data-uri="chapter02.xhtml#P700049702700000000000000003EFFE" class="calibre10 pcalibre pcalibre1">7</code></td>
<td id="P700049702700000000000000003EFFF" data-uri="chapter02.xhtml#P700049702700000000000000003EFFF" class="calibre20 pcalibre pcalibre1">15</td>
<td id="P700049702700000000000000003F000" data-uri="chapter02.xhtml#P700049702700000000000000003F000" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F001" data-uri="chapter02.xhtml#P700049702700000000000000003F001" class="calibre20 pcalibre pcalibre1">–1</td>
<td id="P700049702700000000000000003F002" data-uri="chapter02.xhtml#P700049702700000000000000003F002" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
</tbody>
</table>
<p id="P700049702700000000000000003F003" data-uri="chapter02.xhtml#P700049702700000000000000003F003" class="pcalibre calibre3 pcalibre1">Explain how <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000C48"><span class="pcalibre label pcalibre1">Equations </span><span class="pcalibre label pcalibre1">2.9</span></a> and <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_001.xhtml#P7000497027000000000000000000C4A"><span class="pcalibre label pcalibre1">2.10</span></a> apply to these cases.</p></div></li></ol>
</section>
</section>
<section id="P7000497027000000000000000000C88" data-uri="chapter02.xhtml#P7000497027000000000000000000C88" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003F004" data-uri="chapter02.xhtml#P700049702700000000000000003F004" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000C8A" title="83" data-uri="chapter02.xhtml#P7000497027000000000000000000C8A" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">2.2.8 </span>Advice on Signed versus Unsigned</h1></header>
<p id="P700049702700000000000000003F005" data-uri="chapter02.xhtml#P700049702700000000000000003F005" class="pcalibre1 pcalibre calibre2">As we have seen, the implicit casting of signed to unsigned leads to some nonintuitive behavior. Nonintuitive features often lead to program bugs, and ones involving the nuances of implicit casting can be especially difficult to see. Since the casting takes place without any clear indication in the code, programmers often overlook its effects.</p>
<p id="P700049702700000000000000003F006" data-uri="chapter02.xhtml#P700049702700000000000000003F006" class="pcalibre1 pcalibre calibre2">The following two practice problems illustrate some of the subtle errors that can arise due to implicit casting and the unsigned data type.</p>
<section id="P7000497027000000000000000000C8D" data-uri="chapter02.xhtml#P7000497027000000000000000000C8D" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F007" data-uri="chapter02.xhtml#P700049702700000000000000003F007" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.25</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P7000497027000000000000000001A7B">151</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F008" data-uri="chapter02.xhtml#P700049702700000000000000003F008">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F009" data-uri="chapter02.xhtml#P700049702700000000000000003F009">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F00A" data-uri="chapter02.xhtml#P700049702700000000000000003F00A"><p id="P700049702700000000000000003F00B" data-uri="chapter02.xhtml#P700049702700000000000000003F00B" class="pcalibre calibre3 pcalibre1">Consider the following code that attempts to sum the elements of an array a, where the number of elements is given by parameter <code id="P700049702700000000000000003F00C" data-uri="chapter02.xhtml#P700049702700000000000000003F00C" class="pcalibre1 calibre8 pcalibre">length</code>:</p>
<pre id="P700049702700000000000000003F00D" data-uri="chapter02.xhtml#P700049702700000000000000003F00D" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F00E" data-uri="chapter02.xhtml#P700049702700000000000000003F00E" class="calibre10 pcalibre pcalibre1">
1	 /* WARNING: This is buggy code */
2	float sum_elements(float a[], unsigned length) {
3		int i;
4		float result = 0;
5
6		for (i = 0; i &lt;= length–1; i++)
7			result += a[i];
8		return result;
9	}
</code></pre>
<p id="P700049702700000000000000003F00F" data-uri="chapter02.xhtml#P700049702700000000000000003F00F" class="pcalibre calibre3 pcalibre1">When run with argument <code id="P700049702700000000000000003F010" data-uri="chapter02.xhtml#P700049702700000000000000003F010" class="pcalibre1 calibre8 pcalibre">length</code> equal to 0, this code should return 0.0. Instead, it encounters a memory error. Explain why this happens. Show how this code can be corrected.</p></div></li></ol>
</section>
<section id="P7000497027000000000000000000C98" data-uri="chapter02.xhtml#P7000497027000000000000000000C98" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F011" data-uri="chapter02.xhtml#P700049702700000000000000003F011" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.26</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_000.xhtml#P7000497027000000000000000001A7B">151</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F012" data-uri="chapter02.xhtml#P700049702700000000000000003F012">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F013" data-uri="chapter02.xhtml#P700049702700000000000000003F013">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F014" data-uri="chapter02.xhtml#P700049702700000000000000003F014"><p id="P700049702700000000000000003F015" data-uri="chapter02.xhtml#P700049702700000000000000003F015" class="pcalibre calibre3 pcalibre1">You are given the assignment of writing a function that determines whether one string is longer than another. You decide to make use of the string library function <code id="P700049702700000000000000003F016" data-uri="chapter02.xhtml#P700049702700000000000000003F016" class="pcalibre1 calibre8 pcalibre">strlen</code> having the following declaration:</p>
<pre id="P700049702700000000000000003F017" data-uri="chapter02.xhtml#P700049702700000000000000003F017" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F018" data-uri="chapter02.xhtml#P700049702700000000000000003F018" class="calibre10 pcalibre pcalibre1">
/* Prototype for library function strlen */
size_t strlen(const char *s);
</code></pre>
<p id="P700049702700000000000000003F019" data-uri="chapter02.xhtml#P700049702700000000000000003F019" class="pcalibre calibre3 pcalibre1">Here is your first attempt at the function:</p>
<pre id="P700049702700000000000000003F01A" data-uri="chapter02.xhtml#P700049702700000000000000003F01A" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F01B" data-uri="chapter02.xhtml#P700049702700000000000000003F01B" class="calibre10 pcalibre pcalibre1">
/* Determine whether string s is longer than string t */
/* WARNING: This function is buggy */
int strlonger(char *s, char *t) {
	return strlen(s) - strlen(t) &gt; 0;
}
</code></pre>
<p id="P700049702700000000000000003F01C" data-uri="chapter02.xhtml#P700049702700000000000000003F01C" class="pcalibre calibre3 pcalibre1">When you test this on some sample data, things do not seem to work quite right. You investigate further and determine that, when compiled as a 32-bit <span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000CA5" title="84" data-uri="chapter02.xhtml#P7000497027000000000000000000CA5" epub:type="pagebreak"></span>program, data type <code id="P700049702700000000000000003F01D" data-uri="chapter02.xhtml#P700049702700000000000000003F01D" class="pcalibre1 calibre8 pcalibre">size_t</code> is defined (via <code id="P700049702700000000000000003F01E" data-uri="chapter02.xhtml#P700049702700000000000000003F01E" class="pcalibre1 calibre8 pcalibre">typedef</code>) in header file <code id="P700049702700000000000000003F01F" data-uri="chapter02.xhtml#P700049702700000000000000003F01F" class="pcalibre1 calibre8 pcalibre">stdio.h</code> to be <code id="P700049702700000000000000003F020" data-uri="chapter02.xhtml#P700049702700000000000000003F020" class="pcalibre1 calibre8 pcalibre">unsigned</code>.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000003F021" data-uri="chapter02.xhtml#P700049702700000000000000003F021">
<li id="P7000497027000000000000000000CAB" data-uri="chapter02.xhtml#P7000497027000000000000000000CAB" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F022" data-uri="chapter02.xhtml#P700049702700000000000000003F022" class="pcalibre calibre3 pcalibre1">For what cases will this function produce an incorrect result?</p></li>
<li id="P7000497027000000000000000000CAD" data-uri="chapter02.xhtml#P7000497027000000000000000000CAD" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F023" data-uri="chapter02.xhtml#P700049702700000000000000003F023" class="pcalibre calibre3 pcalibre1">Explain how this incorrect result comes about.</p></li>
<li id="P7000497027000000000000000000CAF" data-uri="chapter02.xhtml#P7000497027000000000000000000CAF" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F024" data-uri="chapter02.xhtml#P700049702700000000000000003F024" class="pcalibre calibre3 pcalibre1">Show how to fix the code so that it will work reliably.</p></li></ol>
</div></li></ol>
</section>
<p id="P700049702700000000000000003F025" data-uri="chapter02.xhtml#P700049702700000000000000003F025" class="pcalibre1 pcalibre calibre2">We have seen multiple ways in which the subtle features of unsigned arithmetic, and especially the implicit conversion of signed to unsigned, can lead to errors or vulnerabilities. One way to avoid such bugs is to never use unsigned numbers. In fact, few languages other than C support unsigned integers. Apparently, these other language designers viewed them as more trouble than they are worth. For example, Java supports only signed integers, and it requires that they be implemented with two's-complement arithmetic. The normal right shift operator &gt;&gt; is guaranteed to perform an arithmetic shift. The special operator &gt;&gt;&gt; is defined to perform a logical right shift.</p>
<p id="P700049702700000000000000003F026" data-uri="chapter02.xhtml#P700049702700000000000000003F026" class="pcalibre1 pcalibre calibre2">Unsigned values are very useful when we want to think of words as just collections of bits with no numeric interpretation. This occurs, for example, when packing a word with <i class="calibre5 pcalibre pcalibre1">flags</i> describing various Boolean conditions. Addresses are naturally unsigned, so systems programmers find unsigned types to be helpful. Unsigned values are also useful when implementing mathematical packages for modular arithmetic and for multiprecision arithmetic, in which numbers are represented by arrays of words.</p>
</section>
</section></body></html>
