<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part101.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part103.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[AC97] “Extending Proportional-Share Scheduling to a Network of Workstations” Andrea C. Arpaci-Dusseau and David E. Culler</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">PDPTA’97, June 1997</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">A paper by one of the authors on how to extend proportional-share scheduling to work better in a clustered environment.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">[D82] “Why Numbering Should Start At Zero”</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: justify;"><a href="http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF" class="a" target="_blank">Edsger Dijkstra, August 1982 </a><a href="http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF" target="_blank">http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF</a></p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: justify;">A short note from E. Dijkstra, one of the pioneers of computer science. We’ll be hearing much more on this guy in the section on Concurrency. In the meanwhile, enjoy this note, which includes this motivating quote: “One of my colleagues – not a computing scientist – accused a number of younger computing scientists of ’pedantry’ because they started numbering at zero.” The note explains why doing so is logical.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[KL88] “A Fair Share Scheduler”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">J. Kay and P. Lauder</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">CACM, Volume 31 Issue 1, January 1988</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">An early reference to a fair-share scheduler.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[WW94] “Lottery Scheduling: Flexible Proportional-Share Resource Management” Carl A. Waldspurger and William E. Weihl</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">OSDI ’94, November 1994</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">The landmark paper on lottery scheduling that got the systems community re-energized about schedul- ing, fair sharing, and the power of simple randomized algorithms.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[W95] “Lottery and Stride Scheduling: Flexible Proportional-Share Resource Management” Carl A. Waldspurger</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Ph.D. Thesis, MIT, 1995</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">The award-winning thesis of Waldspurger’s that outlines lottery and stride scheduling. If you’re think- ing of writing a Ph.D. dissertation at some point, you should always have a good example around, to give you something to strive for: this is such a good one.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[W02] “Memory Resource Management in VMware ESX Server” Carl A. Waldspurger</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">OSDI ’02, Boston, Massachusetts</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: justify;">The paper to read about memory management in VMMs (a.k.a., hypervisors). In addition to being relatively easy to read, the paper contains numerous cool ideas about this new type of VMM-level memory management.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part101.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part103.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
