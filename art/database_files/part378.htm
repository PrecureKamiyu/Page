<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Practice Exercises</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part377.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part379.htm">下一个 &gt;</a></p><p class="s45" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">Practice Exercises</p><p class="s46" style="padding-top: 12pt;padding-left: 94pt;text-indent: 0pt;text-align: justify;">20.1  <span class="p">Is a multiuser system necessarily a parallel system? Why or why not?</span></p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -31pt;text-align: justify;">20.2  <span class="p">Atomic instructions such as compare-and-swap and test-and-set also execute a memory fence as part of the instruction on many architectures. Explain what is the motivation for executing the memory fence, from the viewpoint of data in shared memory that is protected by a mutex implemented by the atomic instruction. Also explain what a process should do before releasing a mutex.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 124pt;text-indent: -31pt;text-align: justify;">20.3  <span class="p">Instead of storing shared structures in shared memory, an alternative archi- tecture would be to store them in the local memory of a special process and access the shared data by interprocess communication with the process. What would be the drawback of such an architecture?</span></p><p style="padding-top: 6pt;padding-left: 124pt;text-indent: -31pt;text-align: justify;"><b>20.4 </b>Explain the distinction between a <i>latch </i>and a <i>lock </i>as used for transactional concurrency control.</p><p style="padding-top: 6pt;padding-left: 124pt;text-indent: -31pt;text-align: justify;"><b>20.5  </b>Suppose a transaction is written in C with embedded <span class="s44">SQL</span>, and about 80 per- cent of the time is spent in the <span class="s44">SQL </span>code, with the remaining 20 percent spent</p><p class="s64" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">Exercises  <span class="s164">999</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 156pt;text-indent: 0pt;text-align: justify;">in C code. How much speedup can one hope to attain if parallelism is used only for the <span class="s44">SQL </span>code? Explain.</p><p style="padding-top: 6pt;padding-left: 156pt;text-indent: -31pt;text-align: justify;"><b>20.6  </b>Consider a pair of processes in a shared memory system such that process <i>A </i>updates a data structure, and then sets a ﬂag to indicate that the update is completed. Process <i>B </i>monitors the ﬂag, and starts processing the data struc- ture only after it ﬁnds the ﬂag is set.</p><p style="padding-left: 156pt;text-indent: 16pt;text-align: justify;">Explain the problems that could arise in a memory architecture where writes may be reordered, and explain how the <span class="s49">sfence </span>and <span class="s49">lfence </span>instructions can be used to ensure the problem does not occur.</p><p class="s46" style="padding-top: 6pt;padding-left: 156pt;text-indent: -31pt;text-align: justify;">20.7  <span class="p">In a shared-memory architecture, why might the time to access a memory lo- cation vary depending on the memory location being accessed?</span></p><p style="padding-top: 6pt;padding-left: 156pt;text-indent: -31pt;text-align: justify;"><b>20.8  </b>Most operating systems for parallel machines (i) allocate memory in a local memory area when a process requests memory, and (ii) avoid moving a pro- cess from one core to another. Why are these optimizations important with a <span class="s44">NUMA </span>architecture?</p><p style="padding-top: 6pt;padding-left: 156pt;text-indent: -31pt;text-align: justify;"><b>20.9  </b>Some database operations such as joins can see a signiﬁcant diﬀerence in speed when data (e.g., one of the relations involved in a join) ﬁts in mem- ory as compared to the situation where the data do not ﬁt in memory. Show how this fact can explain the phenomenon of <span class="s63">superlinear speedup</span>, where an application sees a speedup greater than the amount of resources allocated to it.</p><p class="s46" style="padding-top: 6pt;padding-left: 156pt;text-indent: -35pt;text-align: justify;">20.10 <span class="p">What is the key distinction between homogeneous and federated distributed database systems?</span></p><p class="s46" style="padding-top: 6pt;padding-left: 156pt;text-indent: -35pt;text-align: justify;">20.11 <span class="p">Why might a client choose to subscribe only to the basic infrastructure-as-a- service model rather than to the services oﬀered by other cloud service mod- els?</span></p><p class="s46" style="padding-top: 6pt;padding-left: 156pt;text-indent: -35pt;text-align: justify;">20.12 <span class="p">Why do cloud-computing services support traditional database systems best by using a virtual machine, instead of running directly on the service provider’s actual machine, assuming that data is on external storage?</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part377.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part379.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
