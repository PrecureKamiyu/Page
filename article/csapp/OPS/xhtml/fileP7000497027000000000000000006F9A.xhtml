<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>Solutions to Practice Problems </title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P7000497027000000000000000006F9A" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P7000497027000000000000000045773" data-uri="chapter08.xhtml#P7000497027000000000000000045773" epub:type="title"><span class="pcalibre label pcalibre1">Solutions to Practice Problems </span></h1></header>

<section id="P7000497027000000000000000006F9C" data-uri="chapter08.xhtml#P7000497027000000000000000006F9C" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045774" data-uri="chapter08.xhtml#P7000497027000000000000000045774" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000067D4.xhtml#P70004970270000000000000000067F6"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.1 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000067D4.xhtml#P70004970270000000000000000067F5">734</a>)</h1></header>
<p id="P7000497027000000000000000045775" data-uri="chapter08.xhtml#P7000497027000000000000000045775" class="pcalibre1 pcalibre calibre2">Processes A and B are concurrent with respect to each other, as are B and C, because their respective executions overlapâ€”that is, one process starts before the other finishes. Processes A and C are not concurrent because their executions do not overlap; A finishes before C begins.</p>
</section>

<section id="P7000497027000000000000000006F9F" data-uri="chapter08.xhtml#P7000497027000000000000000006F9F" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045776" data-uri="chapter08.xhtml#P7000497027000000000000000045776" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P70004970270000000000000000068C8"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.2 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP700049702700000000000000000685D.xhtml#P70004970270000000000000000068CA">743</a>)</h1></header>
<p id="P7000497027000000000000000045777" data-uri="chapter08.xhtml#P7000497027000000000000000045777" class="pcalibre1 pcalibre calibre2">In our example program in <span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">8.15</span>, the parent and child execute disjoint sets of instructions. However, in this program, the parent and child execute nondisjoint sets of instructions, which is possible because the parent and child have identical code segments. This can be a difficult conceptual hurdle, so be sure you understand the solution to this problem. <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000006FA8"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">8.47</span></a> shows the process graph.</p>


<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000006FA2" data-uri="chapter08.xhtml#P7000497027000000000000000006FA2">
<pre id="P7000497027000000000000000045778" data-uri="chapter08.xhtml#P7000497027000000000000000045778" class="calibre9 pcalibre pcalibre1">
<code id="P7000497027000000000000000045779" data-uri="chapter08.xhtml#P7000497027000000000000000045779" class="calibre10 pcalibre pcalibre1">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006FA5" title="796" data-uri="chapter08.xhtml#P7000497027000000000000000006FA5" epub:type="pagebreak"></span>linux&gt; <i class="calibre5 pcalibre pcalibre1">./shell</i>					<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">Run your shell program</i></b>
<i class="calibre5 pcalibre pcalibre1">&gt;bogus</i>
bogus: Command not found.			<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">Execve can't find executable</i></b>
<i class="calibre5 pcalibre pcalibre1">&gt;foo 10</i>
Job 5035 terminated by signal: Interrupt	<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">User types Ctrl+C</i></b>
<i class="calibre5 pcalibre pcalibre1">&gt;foo 100 &amp;</i>
[1] 5036 foo 100 &amp;
<i class="calibre5 pcalibre pcalibre1">&gt;foo 200 &amp;</i>
[2] 5037 foo 200 &amp;
<i class="calibre5 pcalibre pcalibre1">&gt;jobs</i>
[1] 5036 Running foo 100 &amp;
[2] 5037 Running foo 200 &amp;
<i class="calibre5 pcalibre pcalibre1">&gt;fg %1</i>
Job [1] 5036 stopped by signal: Stopped		<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">User types Ctrl+Z</i></b>
<i class="calibre5 pcalibre pcalibre1">&gt;jobs</i>
[1] 5036 Stopped foo 100 &amp;
[2] 5037 Running foo 200 &amp;
<i class="calibre5 pcalibre pcalibre1">&gt;bg 5035</i>
5035: No such process
<i class="calibre5 pcalibre pcalibre1">&gt;bg 5036</i>
[1] 5036 foo 100 &amp;
<i class="calibre5 pcalibre pcalibre1">&gt;/bin/kill 5036</i>
Job 5036 terminated by signal: Terminated
&gt; <i class="calibre5 pcalibre pcalibre1">fg %2</i>						<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">Wait for fg job to finish</i></b>
<i class="calibre5 pcalibre pcalibre1">&gt;quit</i>
linux&gt;						<b class="calibre4 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">Back to the Unix shell</i></b>
</code>
</pre>

<figcaption id="P700049702700000000000000004577A" data-uri="chapter08.xhtml#P700049702700000000000000004577A" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000004577B" data-uri="chapter08.xhtml#P700049702700000000000000004577B" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">8.46 </span>Sample shell session for <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006E81.xhtml#P7000497027000000000000000006F7B"><span class="pcalibre1 label2 pcalibre">Problem </span><span class="number pcalibre pcalibre1">8.26</span></a>.</h1></header>
</figcaption>
</figure>

<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000006FA8" data-uri="chapter08.xhtml#P7000497027000000000000000006FA8">
<img alt="A diagram illustrates a process graph." id="P700049702700000000000000004577C" data-uri="P700049702700000000000000000B775" src="../images/p796-1.png" class="calibre249 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000004577D" data-uri="chapter08.xhtml#P700049702700000000000000004577D" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000004577E" data-uri="chapter08.xhtml#P700049702700000000000000004577E" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">8.47 </span>Process graph for Practice <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P70004970270000000000000000068C8"><span class="pcalibre1 label2 pcalibre">Problem </span><span class="number pcalibre pcalibre1">8.2</span></a>.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025AAA" data-uri="chapter08.xhtml#P7000497027000000000000000025AAA">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000004577F" data-uri="chapter08.xhtml#P700049702700000000000000004577F" class="pcalibre calibre3 pcalibre1">A process graph has an arrow x==1 from main to fork, which splits to Child and Parent. Child has arrows to printf p1: x=2 to printf p1: x=1 to exit. Parent has arrows to printf p2: x=0 to exit.</p>
</details>
</figcaption>
</figure>


<ol class="pcalibre ol_upper-alpha pcalibre1" id="P7000497027000000000000000045780" data-uri="chapter08.xhtml#P7000497027000000000000000045780">
<li id="P7000497027000000000000000045781" data-uri="chapter08.xhtml#P7000497027000000000000000045781" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000045782" data-uri="chapter08.xhtml#P7000497027000000000000000045782" class="pcalibre calibre3 pcalibre1">The key idea here is that the child executes both <code id="P7000497027000000000000000045783" data-uri="chapter08.xhtml#P7000497027000000000000000045783" class="pcalibre1 calibre8 pcalibre">printf</code> statements. After the <code id="P7000497027000000000000000045784" data-uri="chapter08.xhtml#P7000497027000000000000000045784" class="pcalibre1 calibre8 pcalibre">fork</code> returns, it executes the <code id="P7000497027000000000000000045785" data-uri="chapter08.xhtml#P7000497027000000000000000045785" class="pcalibre1 calibre8 pcalibre">printf</code> in line 6. Then it falls out of the <code id="P7000497027000000000000000045786" data-uri="chapter08.xhtml#P7000497027000000000000000045786" class="pcalibre1 calibre8 pcalibre">if</code> statement and executes the <code id="P7000497027000000000000000045787" data-uri="chapter08.xhtml#P7000497027000000000000000045787" class="pcalibre1 calibre8 pcalibre">printf</code> in line 7. Here is the output produced by the child:</p>
<pre id="P7000497027000000000000000045788" data-uri="chapter08.xhtml#P7000497027000000000000000045788" class="calibre9 pcalibre pcalibre1">
<code id="P7000497027000000000000000045789" data-uri="chapter08.xhtml#P7000497027000000000000000045789" class="calibre10 pcalibre pcalibre1">
p1: x=2
p2: x=1
</code>
</pre>
</li>

<li id="P700049702700000000000000004578A" data-uri="chapter08.xhtml#P700049702700000000000000004578A" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004578B" data-uri="chapter08.xhtml#P700049702700000000000000004578B" class="pcalibre calibre3 pcalibre1">The parent executes only the <code id="P700049702700000000000000004578C" data-uri="chapter08.xhtml#P700049702700000000000000004578C" class="pcalibre1 calibre8 pcalibre">printf</code> in line 7:</p>
<pre id="P700049702700000000000000004578D" data-uri="chapter08.xhtml#P700049702700000000000000004578D" class="calibre9 pcalibre pcalibre1">
<code id="P700049702700000000000000004578E" data-uri="chapter08.xhtml#P700049702700000000000000004578E" class="calibre10 pcalibre pcalibre1">p2: x=0</code>
</pre>

<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000006FBB" data-uri="chapter08.xhtml#P7000497027000000000000000006FBB">
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006FBC" title="797" data-uri="chapter08.xhtml#P7000497027000000000000000006FBC" epub:type="pagebreak"></span><img alt="A diagram illustrates a process graph." id="P700049702700000000000000004578F" data-uri="P700049702700000000000000000B776" src="../images/p797-1.png" class="calibre257 pcalibre pcalibre1"/>
<figcaption id="P7000497027000000000000000045790" data-uri="chapter08.xhtml#P7000497027000000000000000045790" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000045791" data-uri="chapter08.xhtml#P7000497027000000000000000045791" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">8.48 </span>Process graph for Practice <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P700049702700000000000000000692F"><span class="pcalibre1 label2 pcalibre">Problem </span><span class="number pcalibre pcalibre1">8.3</span></a>.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025ABE" data-uri="chapter08.xhtml#P7000497027000000000000000025ABE">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P7000497027000000000000000045792" data-uri="chapter08.xhtml#P7000497027000000000000000045792" class="pcalibre calibre3 pcalibre1">A process graph has an arrow from main to fork that splits to printf a and printf b. Arrows from printf a flow to printf c and exit. Arrows from this exit and from printf b flow to waitpid, then printf c and exit.</p>
</details>
</figcaption>
</figure>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000006FC0" data-uri="chapter08.xhtml#P7000497027000000000000000006FC0">
<img alt="A diagram illustrates a process graph." id="P7000497027000000000000000045793" data-uri="P700049702700000000000000000B777" src="../images/p797-2.png" class="pcalibre calibre258 pcalibre1"/>
<figcaption id="P7000497027000000000000000045794" data-uri="chapter08.xhtml#P7000497027000000000000000045794" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000045795" data-uri="chapter08.xhtml#P7000497027000000000000000045795" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">8.49 </span>Process graph for Practice <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P7000497027000000000000000006971"><span class="pcalibre1 label2 pcalibre">Problem </span><span class="number pcalibre pcalibre1">8.4</span></a>.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P7000497027000000000000000025AC3" data-uri="chapter08.xhtml#P7000497027000000000000000025AC3">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P7000497027000000000000000045796" data-uri="chapter08.xhtml#P7000497027000000000000000045796" class="pcalibre calibre3 pcalibre1">A process graph has an arrow from main to printf Hello to fork, that splits to printf 1 and printf 0. Arrows from printf 1 flow to printf Byte and exit(2). Arrows from this exit and from printf 0 flow to waitpid, then printf 2, printf Bye, and exit.</p>
</details>
</figcaption>
</figure>
</li>
</ol>
</section>

<section id="P7000497027000000000000000006FC4" data-uri="chapter08.xhtml#P7000497027000000000000000006FC4" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045797" data-uri="chapter08.xhtml#P7000497027000000000000000045797" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P700049702700000000000000000692F"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.3 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP700049702700000000000000000685D.xhtml#P7000497027000000000000000006908">745</a>)</h1></header>
<p id="P7000497027000000000000000045798" data-uri="chapter08.xhtml#P7000497027000000000000000045798" class="pcalibre1 pcalibre calibre2">We know that the sequences <i class="calibre5 pcalibre pcalibre1">acbc, abcc</i>, and <i class="calibre5 pcalibre pcalibre1">bacc</i> are possible because they correspond to topological sorts of the process graph (<span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">8.48</span>). However, sequences such as <i class="calibre5 pcalibre pcalibre1">bcac</i> and <i class="calibre5 pcalibre pcalibre1">cbca</i> do not correspond to any topological sort and thus are not feasible.</p>
</section>
<section id="P7000497027000000000000000006FC7" data-uri="chapter08.xhtml#P7000497027000000000000000006FC7" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000045799" data-uri="chapter08.xhtml#P7000497027000000000000000045799" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P7000497027000000000000000006971"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.4 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP700049702700000000000000000685D.xhtml#P700049702700000000000000000696D">748</a>)</h1></header>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000004579A" data-uri="chapter08.xhtml#P700049702700000000000000004579A">
<li id="P700049702700000000000000004579B" data-uri="chapter08.xhtml#P700049702700000000000000004579B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004579C" data-uri="chapter08.xhtml#P700049702700000000000000004579C" class="pcalibre calibre3 pcalibre1">We can determine the number of lines of output by simply counting the number of <code id="P700049702700000000000000004579D" data-uri="chapter08.xhtml#P700049702700000000000000004579D" class="pcalibre1 calibre8 pcalibre">printf</code> vertices in the process graph (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P7000497027000000000000000006FC0"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">8.49</span></a>). In this case, there are six such vertices, and thus the program will print six lines of output.</p></li>
<li id="P700049702700000000000000004579E" data-uri="chapter08.xhtml#P700049702700000000000000004579E" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004579F" data-uri="chapter08.xhtml#P700049702700000000000000004579F" class="pcalibre calibre3 pcalibre1">Any output sequence corresponding to a topological sort of the graph is possible. For example: <code id="P70004970270000000000000000457A0" data-uri="chapter08.xhtml#P70004970270000000000000000457A0" class="pcalibre1 calibre8 pcalibre">Hello, 1,0, Bye, 2, Bye</code> is possible.</p>
</li>
</ol>
</section>

<section id="P7000497027000000000000000006FD0" data-uri="chapter08.xhtml#P7000497027000000000000000006FD0" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000457A1" data-uri="chapter08.xhtml#P70004970270000000000000000457A1" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P7000497027000000000000000006993"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.5 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP700049702700000000000000000685D.xhtml#P700049702700000000000000000698E">750</a>)</h1></header>
<p id="P70004970270000000000000000457A2" data-uri="chapter08.xhtml#P70004970270000000000000000457A2" class="pcalibre1 pcalibre calibre2">------------------------------------------------------------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/ecf/snooze.c</i></p>
<pre id="P70004970270000000000000000457A3" data-uri="chapter08.xhtml#P70004970270000000000000000457A3" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000457A4" data-uri="chapter08.xhtml#P70004970270000000000000000457A4" class="calibre10 pcalibre pcalibre1">
1	unsigned int snooze(unsigned int sees) {
2	unsigned int rc = sleep(secs);
3	
4	printf("Slept for %d of %d secs.\n", secs-rc, secs);
5	return re;
6	}
</code>
</pre>
<p id="P70004970270000000000000000457A5" data-uri="chapter08.xhtml#P70004970270000000000000000457A5" class="pcalibre1 pcalibre calibre2">------------------------------------------------------------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/ecf/snooze.c</i></p>
</section>


<section id="P7000497027000000000000000006FD6" data-uri="chapter08.xhtml#P7000497027000000000000000006FD6" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000457A6" data-uri="chapter08.xhtml#P70004970270000000000000000457A6" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P70004970270000000000000000069E5"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.6 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP700049702700000000000000000685D.xhtml#P70004970270000000000000000069D3">752</a>)</h1></header>
<p id="P70004970270000000000000000457A7" data-uri="chapter08.xhtml#P70004970270000000000000000457A7" class="pcalibre1 pcalibre calibre2">------------------------------------------------------------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/ecf/myecho.c</i></p>
<pre id="P70004970270000000000000000457A8" data-uri="chapter08.xhtml#P70004970270000000000000000457A8" class="calibre9 pcalibre pcalibre1">
<code id="P70004970270000000000000000457A9" data-uri="chapter08.xhtml#P70004970270000000000000000457A9" class="calibre10 pcalibre pcalibre1">
1	#include "csapp.h"
2	
3	int main (int argc, char *argv[], char *envp [])
4	{
5		int i;
6	
7		printf("Command-line arguments:\n");
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006FDB" title="798" data-uri="chapter08.xhtml#P7000497027000000000000000006FDB" epub:type="pagebreak"></span>8		for (i=0; argv[i] != NULL; i++)
9			printf(" argv[%2d]: %s\n", i, argv[i]);
10	
11		printf("\n");
12		printf("Environment variables:\n");
13		for (i=0; envp[i] != NULL; i++)
14			printf (" envp[%2d]: %s\n", i, envp[i]);
15	
16		exit(0);
17	}
</code>
</pre>
<p id="P70004970270000000000000000457AA" data-uri="chapter08.xhtml#P70004970270000000000000000457AA" class="pcalibre1 pcalibre calibre2">------------------------------------------------------------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/ecf/myecho.c</i></p>
</section>

<section id="P7000497027000000000000000006FDD" data-uri="chapter08.xhtml#P7000497027000000000000000006FDD" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000457AB" data-uri="chapter08.xhtml#P70004970270000000000000000457AB" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006A2D.xhtml#P7000497027000000000000000006B63"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.7 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000006A2D.xhtml#P7000497027000000000000000006B5D">764</a>)</h1></header>
<p id="P70004970270000000000000000457AC" data-uri="chapter08.xhtml#P70004970270000000000000000457AC" class="pcalibre1 pcalibre calibre2">The <code id="P70004970270000000000000000457AD" data-uri="chapter08.xhtml#P70004970270000000000000000457AD" class="pcalibre1 calibre8 pcalibre">sleep</code> function returns prematurely whenever the sleeping process receives a signal that is not ignored. But since the default action upon receipt of a SIGINT is to terminate the process (<span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">8.26</span>), we must install a SIGINT handler to allow the <code id="P70004970270000000000000000457AE" data-uri="chapter08.xhtml#P70004970270000000000000000457AE" class="pcalibre1 calibre8 pcalibre">sleep</code> function to return. The handler simply catches the SIGNAL and returns control to the <code id="P70004970270000000000000000457AF" data-uri="chapter08.xhtml#P70004970270000000000000000457AF" class="pcalibre1 calibre8 pcalibre">sleep</code> function, which returns immediately.</p>
<p id="P70004970270000000000000000457B0" data-uri="chapter08.xhtml#P70004970270000000000000000457B0" class="pcalibre1 pcalibre calibre2">------------------------------------------------------------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/ecf/snooze.c</i></p>
<pre id="P70004970270000000000000000457B1" data-uri="chapter08.xhtml#P70004970270000000000000000457B1" class="calibre9 pcalibre pcalibre1">
<code id="P70004970270000000000000000457B2" data-uri="chapter08.xhtml#P70004970270000000000000000457B2" class="calibre10 pcalibre pcalibre1">
1	#include "csapp.h"
2	
3	/* SIGINT handler */
4	void handler(int sig)
5	{
6		return; /* Catch the signal and return */
7	}
8	
9	unsigned int snooze(unsigned int secs) {
10		unsigned int rc = sleep(secs);
11	
12		printf ("Slept for %d of %d secs.\n", secs-rc, sees);
13		return rc;
14	}
15	
16	int main(int argc, char **argv) {
17	
18		if (argc != 2) {
19			fprintf (stderr, "usage: %s &lt;secs&gt;\n", argv[0]);
20			exit(0);
21		}
22	
23		if (signal(SIGINT, handler) == SIG_ERR) /* Install SIGINT */
24			unix_error("signal error\n"); /* handler */
25		(void) snooze (atoi (argv [1]));
<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006FE6" title="799" data-uri="chapter08.xhtml#P7000497027000000000000000006FE6" epub:type="pagebreak"></span>26		exit(0);
27	}
</code>
</pre>
<p id="P70004970270000000000000000457B3" data-uri="chapter08.xhtml#P70004970270000000000000000457B3" class="pcalibre1 pcalibre calibre2">------------------------------------------------------------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/ecf/snooze.c</i></p>
</section>
<section id="P7000497027000000000000000006FE8" data-uri="chapter08.xhtml#P7000497027000000000000000006FE8" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P70004970270000000000000000457B4" data-uri="chapter08.xhtml#P70004970270000000000000000457B4" epub:type="title"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006A2D.xhtml#P7000497027000000000000000006D43"><span class="pcalibre label pcalibre1">Solution to Problem </span><span class="pcalibre label pcalibre1">8.8 </span></a>(page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000006A2D.xhtml#P7000497027000000000000000006D38">773</a>)</h1></header>
<p id="P70004970270000000000000000457B5" data-uri="chapter08.xhtml#P70004970270000000000000000457B5" class="pcalibre1 pcalibre calibre2">This program prints the string 213, which is the shorthand name of the CS:APP course at Carnegie Mellon. The parent starts by printing â€˜2â€™, then <code id="P70004970270000000000000000457B6" data-uri="chapter08.xhtml#P70004970270000000000000000457B6" class="pcalibre1 calibre8 pcalibre">fork</code>s the child, which spins in an infinite loop. The parent then sends a signal to the child and waits for it to terminate. The child catches the signal (interrupting the infinite loop), decrements the counter (from an initial value of 2), prints â€˜1â€™, and then terminates. After the parent reaps the child, it increments the counter (from an initial value of 2), prints â€˜3â€™, and terminates.<span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006FEC" title="800" data-uri="chapter08.xhtml#P7000497027000000000000000006FEC" epub:type="pagebreak"></span></p>
</section>
</section></body></html>
