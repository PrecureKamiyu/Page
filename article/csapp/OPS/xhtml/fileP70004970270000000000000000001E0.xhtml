<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>1.8 Systems Communicate with Other Systems Using Networks</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P70004970270000000000000000001E0" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P700049702700000000000000003E5E6" data-uri="chapter01.xhtml#P700049702700000000000000003E5E6" epub:type="title"><span class="pcalibre label pcalibre1">1.8 </span>Systems Communicate with Other Systems Using Networks</h1></header>
<p id="P700049702700000000000000003E5E7" data-uri="chapter01.xhtml#P700049702700000000000000003E5E7" class="pcalibre1 pcalibre calibre2">Up to this point in our tour of systems, we have treated a system as an isolated collection of hardware and software. In practice, modern systems are often linked to other systems by networks. From the point of view of an individual system, the</p>
<aside class="sidebar pcalibre5 pcalibre" id="P70004970270000000000000000001E3" data-uri="chapter01.xhtml#P70004970270000000000000000001E3"><header class="pcalibre halftitlepage pcalibre1"><h1 class="pcalibre1 title2 pcalibre" id="P700049702700000000000000003E5E8" data-uri="chapter01.xhtml#P700049702700000000000000003E5E8" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000001E5" title="20" data-uri="chapter01.xhtml#P70004970270000000000000000001E5" epub:type="pagebreak"></span><span class="pcalibre label1 pcalibre1">Aside </span>The Linux project</h1></header>
<p id="P700049702700000000000000003E5E9" data-uri="chapter01.xhtml#P700049702700000000000000003E5E9" class="calibre13 pcalibre pcalibre1">In August 1991, a Finnish graduate student named Linus Torvalds modestly announced a new Unix-like operating system kernel:</p>
<pre id="P700049702700000000000000003E5EA" data-uri="chapter01.xhtml#P700049702700000000000000003E5EA" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003E5EB" data-uri="chapter01.xhtml#P700049702700000000000000003E5EB" class="calibre10 pcalibre pcalibre1">
From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Newsgroups: comp.os.minix
Subject: What would you like to see most in minix?
Summary: small poll for my new operating system
Date: 25 Aug 91 20:57:08 GMT

Hello everybody out there using minix -
I'm doing a (free) operating system (just a hobby, won't be big and professional like gnu) for 386(486) AT clones. This has been brewing since April, and is starting to get ready. I'd like any feedback on things people like/dislike in minix, as my OS resembles it somewhat (same physical layout of the file-system (due to practical reasons) among other things).

I've currently ported bash(1.08) and gcc(1.40), and things seem to work. This implies that I'll get something practical within a few months, and I'd like to know what features most people would want. Any suggestions are welcome, but I won't promise I'll implement them :-)

Linus (torvalds@kruuna.helsinki.fi)
</code></pre>
<p id="P700049702700000000000000003E5EC" data-uri="chapter01.xhtml#P700049702700000000000000003E5EC" class="calibre13 pcalibre pcalibre1">As Torvalds indicates, his starting point for creating Linux was Minix, an operating system developed by Andrew S. Tanenbaum for educational purposes [<a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000B39D.xhtml#P700049702700000000000000000B486">113</a>].</p>
<p id="P700049702700000000000000003E5ED" data-uri="chapter01.xhtml#P700049702700000000000000003E5ED" class="pcalibre calibre3 pcalibre1">The rest, as they say, is history. Linux has evolved into a technical and cultural phenomenon. By combining forces with the GNU project, the Linux project has developed a complete, Posix-compliant version of the Unix operating system, including the kernel and all of the supporting infrastructure. Linux is available on a wide array of computers, from handheld devices to mainframe computers. A group at IBM has even ported Linux to a wristwatch!</p>
</aside>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003E5EE" data-uri="chapter01.xhtml#P700049702700000000000000003E5EE">network can be viewed as just another I/O device, as shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000001ED"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">1.14</span></a>. When the system copies a sequence of bytes from main memory to the network adapter, the data flow across the network to another machine, instead of, say, to a local disk drive. Similarly, the system can read data sent from other machines and copy these data to its main memory.</p>
<p id="P700049702700000000000000003E5EF" data-uri="chapter01.xhtml#P700049702700000000000000003E5EF" class="pcalibre1 pcalibre calibre2">With the advent of global networks such as the Internet, copying information from one machine to another has become one of the most important uses of computer systems. For example, applications such as email, instant messaging, the World Wide Web, FTP, and telnet are all based on the ability to copy information over a network.</p>
<figure class="pcalibre5 figure pcalibre" id="P70004970270000000000000000001ED" data-uri="chapter01.xhtml#P70004970270000000000000000001ED">
<span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000001EE" title="21" data-uri="chapter01.xhtml#P70004970270000000000000000001EE" epub:type="pagebreak"></span>
<img alt="A diagram illustrates using telnet to run hello remotely over a network." id="P700049702700000000000000003E5F0" data-uri="P700049702700000000000000000B6B3" src="../images/p21-1.png" class="pcalibre calibre44 pcalibre1"/>
<figcaption id="P700049702700000000000000003E5F1" data-uri="chapter01.xhtml#P700049702700000000000000003E5F1" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003E5F2" data-uri="chapter01.xhtml#P700049702700000000000000003E5F2" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">1.14 </span>A network is another I/O device.</h1></header>
<details class="longdesc pcalibre pcalibre1" id="P700049702700000000000000001E8BF" data-uri="chapter01.xhtml#P700049702700000000000000001E8BF">
<summary class="pcalibre6 pcalibre1 pcalibre calibre30"><span class="number pcalibre pcalibre1">Description</span></summary>
<p id="P700049702700000000000000003E5F3" data-uri="chapter01.xhtml#P700049702700000000000000003E5F3" class="pcalibre1 pcalibre calibre2">A diagram illustrates the hardware organization run between the system bus, memory bus, and I/O bus. On of the expansion slots interacting with the I/O bus is connected to a network adapter, interacting with a network. A chart shows steps in the interaction as follows:</p>
<ol id="P700049702700000000000000003E5F4" data-uri="chapter01.xhtml#P700049702700000000000000003E5F4" class="pcalibre1 pcalibre calibre45">
<li id="P700049702700000000000000003E5F5" data-uri="chapter01.xhtml#P700049702700000000000000003E5F5" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E5F6" data-uri="chapter01.xhtml#P700049702700000000000000003E5F6" class="pcalibre calibre3 pcalibre1">User types “hello” at the keyboard</p></li>
<li id="P700049702700000000000000003E5F7" data-uri="chapter01.xhtml#P700049702700000000000000003E5F7" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E5F8" data-uri="chapter01.xhtml#P700049702700000000000000003E5F8" class="pcalibre calibre3 pcalibre1">Client sends “hello” string to telnet server</p></li>
<li id="P700049702700000000000000003E5F9" data-uri="chapter01.xhtml#P700049702700000000000000003E5F9" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E5FA" data-uri="chapter01.xhtml#P700049702700000000000000003E5FA" class="pcalibre calibre3 pcalibre1">Server sends “hello” string to the shell, which runs the hello program and passes the output to the telnet server.</p></li>
<li id="P700049702700000000000000003E5FB" data-uri="chapter01.xhtml#P700049702700000000000000003E5FB" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E5FC" data-uri="chapter01.xhtml#P700049702700000000000000003E5FC" class="pcalibre calibre3 pcalibre1">Telnet server sends “hello, world\n” string to client</p></li>
<li id="P700049702700000000000000003E5FD" data-uri="chapter01.xhtml#P700049702700000000000000003E5FD" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E5FE" data-uri="chapter01.xhtml#P700049702700000000000000003E5FE" class="pcalibre calibre3 pcalibre1">Client prints “hello, world\n” string on display</p></li>
</ol>
</details>
</figcaption></figure>
<figure class="pcalibre5 figure pcalibre" id="P70004970270000000000000000001F2" data-uri="chapter01.xhtml#P70004970270000000000000000001F2">
<img alt="" id="P700049702700000000000000003E5FF" data-uri="P700049702700000000000000000B6B4" src="../images/p21-2.png" class="calibre46 pcalibre pcalibre1"/>
<figcaption id="P700049702700000000000000003E600" data-uri="chapter01.xhtml#P700049702700000000000000003E600" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003E601" data-uri="chapter01.xhtml#P700049702700000000000000003E601" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="pcalibre label pcalibre1">1.15 </span>Using telnet to run <code id="P700049702700000000000000003E602" data-uri="chapter01.xhtml#P700049702700000000000000003E602" class="pcalibre1 calibre8 pcalibre">hello</code> remotely over a network.</h1></header></figcaption></figure>
<p id="P700049702700000000000000003E603" data-uri="chapter01.xhtml#P700049702700000000000000003E603" class="pcalibre1 pcalibre calibre2">Returning to our <code id="P700049702700000000000000003E604" data-uri="chapter01.xhtml#P700049702700000000000000003E604" class="pcalibre1 calibre8 pcalibre">hello</code> example, we could use the familiar telnet application to run <code id="P700049702700000000000000003E605" data-uri="chapter01.xhtml#P700049702700000000000000003E605" class="pcalibre1 calibre8 pcalibre">hello</code> on a remote machine. Suppose we use a telnet <i class="calibre5 pcalibre pcalibre1">client</i> running on our local machine to connect to a telnet <i class="calibre5 pcalibre pcalibre1">server</i> on a remote machine. After we log in to the remote machine and run a shell, the remote shell is waiting to receive an input command. From this point, running the <code id="P700049702700000000000000003E606" data-uri="chapter01.xhtml#P700049702700000000000000003E606" class="pcalibre1 calibre8 pcalibre">hello</code> program remotely involves the five basic steps shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000001F2"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">1.15</span></a>.</p>
<p id="P700049702700000000000000003E607" data-uri="chapter01.xhtml#P700049702700000000000000003E607" class="pcalibre1 pcalibre calibre2">After we type in the <code id="P700049702700000000000000003E608" data-uri="chapter01.xhtml#P700049702700000000000000003E608" class="pcalibre1 calibre8 pcalibre">hello</code> string to the telnet client and hit the enter key, the client sends the string to the telnet server. After the telnet server receives the string from the network, it passes it along to the remote shell program. Next, the remote shell runs the <code id="P700049702700000000000000003E609" data-uri="chapter01.xhtml#P700049702700000000000000003E609" class="pcalibre1 calibre8 pcalibre">hello</code> program and passes the output line back to the telnet server. Finally, the telnet server forwards the output string across the network to the telnet client, which prints the output string on our local terminal.</p>
<p id="P700049702700000000000000003E60A" data-uri="chapter01.xhtml#P700049702700000000000000003E60A" class="pcalibre1 pcalibre calibre2">This type of exchange between clients and servers is typical of all network applications. In <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000007B7A.xhtml#P7000497027000000000000000007B7A"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">11</span></a> you will learn how to build network applications and apply this knowledge to build a simple Web server.</p>
</section></body></html>
