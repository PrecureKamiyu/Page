<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>41.5 Measuring File Locality</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part456.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part458.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 11pt;text-indent: 0pt;text-align: left;">41.5 Measuring File Locality</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">To understand better whether these heuristics make sense, we decided to analyze some traces of file system access and see if indeed there is namespace locality; for some reason, there doesn’t seem to be a good study of this topic in the literature.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Specifically, we took the SEER traces [K94] and analyzed how “far away” file accesses were from one another in the directory tree. For ex- ample, if file <span class="s41">f </span>is opened, and then re-opened next in the trace (before any other files are opened), the distance between these two opens in the directory tree is zero (as they are the same file). If a file <span class="s41">f </span>in directory <span class="s41">dir </span>(i.e., <span class="s41">dir/f</span>) is opened, and followed by an open of file <span class="s41">g </span>in the same directory (i.e., <span class="s41">dir/g</span>), the distance between the two file accesses is one, as they share the same directory but are not the same file. Our distance metric, in other words, measures how far up the directory tree you have to travel to find the <i>common ancestor </i>of two files; the closer they are in the tree, the lower the metric.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Figure <span style=" color: #00AEEF;">41.1 </span>shows the locality observed in the SEER traces over all workstations in the SEER cluster over the entirety of all traces. The graph plots the difference metric along the x-axis, and shows the cumulative percentage of file opens that were of that difference along the y-axis. Specifically, for the SEER traces (marked “Trace” in the graph), you can see that about 7% of file accesses were to the file that was opened previ- ously, and that nearly 40% of file accesses were to either the same file or to one in the same directory (i.e., a difference of zero or one). Thus, the FFS locality assumption seems to make sense (at least for these traces).</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 88%;text-align: justify;">Interestingly, another 25% or so of file accesses were to files that had a distance of two. This type of locality occurs when the user has structured a set of related directories in a multi-level fashion and consistently jumps between them. For example, if a user has a <span class="s41">src </span>directory and builds object files (<span class="s41">.o </span>files) into a <span class="s41">obj </span>directory, and both of these directories are sub-directories of a main <span class="s41">proj </span>directory, a common access pattern will be <span class="s41">proj/src/foo.c </span>followed by <span class="s41">proj/obj/foo.o</span>. The distance between these two accesses is two, as <span class="s41">proj </span>is the common ancestor. FFS does <i>not </i>capture this type of locality in its policies, and thus more seeking will occur between such accesses.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">We also show what locality would be for a “Random” trace for the sake of comparison. We generated the random trace by selecting files from within an existing SEER trace in random order, and calculating the distance metric between these randomly-ordered accesses. As you can see, there is less namespace locality in the random traces, as expected. However, because eventually every file shares a common ancestor (e.g., the root), there is some locality eventually, and thus random trace is use- ful as a comparison point.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part456.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part458.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
