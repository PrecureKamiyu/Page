<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>8.5   Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part174.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part176.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">8.5   <span style=" color: #00AEEF;">Summary</span></p><p class="s39" style="padding-top: 9pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">There are many application domains that need to store more complex data than simple tables with a ﬁxed number of attributes.</span></p><p class="s40" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>The <span class="s41">SQL </span>standard includes extensions of the <span class="s41">SQL </span>data-deﬁnition and query lan- guage to deal with new data types and with object orientation. These include sup- port for collection-valued attributes, inheritance, and tuple references. Such exten- sions attempt to preserve the relational foundations— in particular, the declarative access to data— while extending the modeling power.</p><p class="s66" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">8.5 <span style=" color: #00AEEF;">Summary  </span><span class="s164">395</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Semi-structured data are characterized by complex data, whose schema changes often.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">A popular architecture for building information systems today is to create a web service that allows retrieval of data and to build application code that displays the data and allows user interaction.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">The relational data model has been extended in several ways to support the storage and data exchange needs of modern applications.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s50" style="padding-left: 153pt;text-indent: -8pt;line-height: 77%;text-align: left;">° <span class="s51">Some database systems allow each tuple to potentially have a diﬀerent set of attributes.</span></p><p class="s50" style="padding-top: 6pt;padding-left: 145pt;text-indent: 0pt;text-align: left;">° <span class="s51">Many data representations allow attributes to non-atomic values.</span></p><p class="s51" style="padding-top: 4pt;padding-left: 153pt;text-indent: -8pt;line-height: 77%;text-align: left;"><span class="s50">° </span>Many data representations allow attributes to be structured, directly modeling composite attributes in the <span class="s52">E-R </span>model.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">The </span><b>JavaScript Object Notation </b>(<span class="s44">JSON</span>) isa textual representation of complex data types which is widely used for transmitting data between applications and for stor- ing complex data.</p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s41">XML </span><span class="s40">representations provide ﬂexibility in the set of attributes that a record con- tains as well as the types of these attributes.</span></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">The </span><b>Resource Description Framework </b>(<span class="s44">RDF</span>) is a data representation standard based on the entity-relationship model. The <span class="s44">RDF </span>representation has a very nat- ural graph interpretation. Entities and attribute values can be considered nodes, and attribute names and relationships can be considered edges between the nodes.</p><p class="s41" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>SPARQL <span class="s40">is a query language designed to query </span>RDF <span class="s40">data and is based on triple patterns.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Object orientation provides inheritance with subtypes and subtables as well as object (tuple) references.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">The object-relational data model extends the relational data model by providing a richer type system, including collection types and object orientation.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Object-relational database systems (i.e., database systems based on the object- relational model) provide a convenient migration path for users of relational databases who wish to use object-oriented features.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Object-relational mapping systems provide an object view of data that are stored in a relational database. Objects are transient, and there is no notion of persistent object identity. Objects are created on demand from relational data, and updates to objects are implemented by updating the relational data. Object-relational mapping systems have been widely adopted, unlike the more limited adoption of persistent programming languages.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Information-retrieval systems are used to store and query textual data such as doc- uments. They use a simpler data model than do database systems but provide more powerful querying capabilities within the restricted model.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Queries attempt to locate documents that are of interest by specifying, for example, sets of keywords. The query that a user has in mind usually cannot be stated pre- cisely; hence, information-retrieval systems order answers on the basis of potential relevance.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: justify;">• <span class="s40">Relevance ranking makes use of several types of information, such as:</span></p><p class="s50" style="padding-top: 5pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">° <span class="s51">Term frequency: how important each term is to each document.</span></p><p class="s50" style="padding-top: 2pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">° <span class="s51">Inverse document frequency.</span></p><p class="s50" style="padding-top: 1pt;padding-left: 113pt;text-indent: 0pt;line-height: 17pt;text-align: left;">° <span class="s51">Popularity ranking.</span></p><p class="s39" style="padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Spatial data management is important for many applications. Geometric and geo- graphic data types are supported by many database systems, with subtypes includ- ing points, linestrings and polygons. Region queries, nearest neighbor queries, and spatial graph queries are among the commonly used types of spatial queries.</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part174.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part176.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
