<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>15.1 Assumptions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part140.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part142.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">15.1 Assumptions</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Our first attempts at virtualizing memory will be very simple, almost laughably so. Go ahead, laugh all you want; pretty soon it will be the OS laughing at you, when you try to understand the ins and outs of TLBs, multi-level page tables, and other technical wonders. Don’t like the idea of the OS laughing at you? Well, you may be out of luck then; that’s just how the OS rolls.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Specifically, we will assume for now that the user’s address space must be placed <i>contiguously </i>in physical memory. We will also assume, for sim- plicity, that the size of the address space is not too big; specifically, that it is <i>less than the size of physical memory</i>. Finally, we will also assume that each address space is exactly the <i>same size</i>. Don’t worry if these assump- tions sound unrealistic; we will relax them as we go, thus achieving a realistic virtualization of memory.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part140.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part142.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
