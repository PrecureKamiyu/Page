<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>14.6 Other Calls</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part136.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part138.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 11pt;text-indent: 0pt;text-align: left;">14.6 Other Calls</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">There are a few other calls that the memory-allocation library sup- ports. For example, <span class="s41">calloc() </span>allocates memory and also zeroes it be- fore returning; this prevents some errors where you assume that memory is zeroed and forget to initialize it yourself (see the paragraph on “unini- tialized reads” above). The routine <span class="s41">realloc() </span>can also be useful, when you’ve allocated space for something (say, an array), and then need to add something to it: <span class="s41">realloc() </span>makes a new larger region of memory, copies the old region into it, and returns the pointer to the new region.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part136.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part138.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
