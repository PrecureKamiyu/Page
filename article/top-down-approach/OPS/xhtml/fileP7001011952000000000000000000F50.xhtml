<?xml version="1.0" encoding="utf-8"?><html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/"><head>
<meta name="dcterms.conformsTo" content="PXE Basic 1.0"></meta>
<meta name="generator" content="PXE Tools version 1.39.109"></meta>
<!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.109, partial=false-->
<title>Homework Problems and Questions</title><link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/sepia.css"></link><link rel="alternate stylesheet" type="text/css" title="night" href="../css/night.css"></link><link rel="stylesheet" type="text/css" title="day" href="../css/main.css"></link><link rel="stylesheet" type="text/css" title="day" href="../css/print.css"></link>
<script src="js/format_lg_obj.js"></script>
</head><body epub:type="bodymatter">
<section id="P7001011952000000000000000000F50" class="conclusion level1"><header><h1 class="title" id="P7001011952000000000000000009F64" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F64" epub:type="title"><span class="pagebreak" title="171" id="P7001011952000000000000000000F52" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F52" epub:type="pagebreak" role="doc-pagebreak"></span>Homework Problems and Questions</h1></header>
<section id="P7001011952000000000000000000F53" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F53" epub:type="practice" class="practice level2"><header><h1 class="title" id="P7001011952000000000000000009F65" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F65" epub:type="title"><span class="label">Chapter </span><span class="number">2</span> Review Questions</h1></header>
<section id="P7001011952000000000000000000F55" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F55" class="practicediv level3"><header><h1 class="title" id="P7001011952000000000000000009F66" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F66" epub:type="title"><span class="label">SECTION </span><span class="number">2.1</span></h1></header>
<ol class="practicelist dynamiclist" id="P7001011952000000000000000009F67" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F67">
<li class="general-problem" id="P7001011952000000000000000000F58" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F58"><div class="question" id="P7001011952000000000000000009F68" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F68"><p id="P7001011952000000000000000009F69" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F69"><span class="lc_labelnum"><span class="label">R</span><span class="number">1.</span></span> List five nonproprietary Internet applications and the application-layer protocols that they use.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F5B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F5B"><div class="question" id="P7001011952000000000000000009F6A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F6A"><p id="P7001011952000000000000000009F6B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F6B"><span class="lc_labelnum"><span class="label">R</span><span class="number">2.</span></span> What is the difference between network architecture and application architecture?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F5E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F5E"><div class="question" id="P7001011952000000000000000009F6C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F6C"><p id="P7001011952000000000000000009F6D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F6D"><span class="lc_labelnum"><span class="label">R</span><span class="number">3.</span></span> For a communication session between a pair of processes, which process is the client and which is the server?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F61" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F61"><div class="question" id="P7001011952000000000000000009F6E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F6E"><p id="P7001011952000000000000000009F6F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F6F"><span class="lc_labelnum"><span class="label">R</span><span class="number">4.</span></span> For a P2P file-sharing application, do you agree with the statement, “There is no notion of client and server sides of a communication session”? Why or why not?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F64" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F64"><div class="question" id="P7001011952000000000000000009F70" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F70"><p id="P7001011952000000000000000009F71" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F71"><span class="lc_labelnum"><span class="label">R</span><span class="number">5.</span></span> What information is used by a process running on one host to identify a process running on another host?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F67" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F67"><div class="question" id="P7001011952000000000000000009F72" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F72"><p id="P7001011952000000000000000009F73" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F73"><span class="lc_labelnum"><span class="label">R</span><span class="number">6.</span></span> Suppose you wanted to do a transaction from a remote client to a server as fast as possible. Would you use UDP or TCP? Why?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F6A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F6A"><div class="question" id="P7001011952000000000000000009F74" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F74"><p id="P7001011952000000000000000009F75" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F75"><span class="lc_labelnum"><span class="label">R</span><span class="number">7.</span></span> Referring to <a class="xref" href="fileP7001011952000000000000000000974.xhtml#P70010119520000000000000000009F6" data-foobar="7"><span class="lc_labelnum"><span class="label">Figure</span> <span class="number">2.4</span></span> </a>, we see that none of the applications listed in <a class="xref" href="fileP7001011952000000000000000000974.xhtml#P70010119520000000000000000009F6" data-foobar="7"><span class="lc_labelnum"><span class="label">Figure</span> <span class="number">2.4</span></span> </a> requires both no data loss and timing. Can you conceive of an application that requires no data loss and that is also highly time-sensitive?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F6D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F6D"><div class="question" id="P7001011952000000000000000009F76" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F76"><p id="P7001011952000000000000000009F77" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F77"><span class="lc_labelnum"><span class="label">R</span><span class="number">8.</span></span> List the four broad classes of services that a transport protocol can provide. For each of the service classes, indicate if either UDP or TCP (or both) provides such a service.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F70" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F70"><div class="question" id="P7001011952000000000000000009F78" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F78"><p id="P7001011952000000000000000009F79" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F79"><span class="lc_labelnum"><span class="label">R</span><span class="number">9.</span></span> Recall that TCP can be enhanced with SSL to provide process-to-process security services, including encryption. Does SSL operate at the transport layer or the application layer? If the application developer wants TCP to be enhanced with SSL, what does the developer have to do?</p></div></li>
</ol>
</section>
<section id="P7001011952000000000000000000F73" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F73" class="practicediv level3"><header><h1 class="title" id="P7001011952000000000000000009F7A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F7A" epub:type="title"><span class="label">SECTION </span><span class="number">2.2–2.5</span></h1></header>
<ol class="practicelist dynamiclist" id="P7001011952000000000000000009F7B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F7B">
<li class="general-problem" id="P7001011952000000000000000000F76" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F76"><div class="question" id="P7001011952000000000000000009F7C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F7C"><p id="P7001011952000000000000000009F7D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F7D"><span class="lc_labelnum"><span class="label">R</span><span class="number">10.</span></span> What is meant by a handshaking protocol?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F79" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F79"><div class="question" id="P7001011952000000000000000009F7E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F7E"><p id="P7001011952000000000000000009F7F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F7F"><span class="lc_labelnum"><span class="label">R</span><span class="number">11.</span></span> Why do HTTP, SMTP, and POP3 run on top of TCP rather than on UDP?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F7C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F7C"><div class="question" id="P7001011952000000000000000009F80" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F80"><p id="P7001011952000000000000000009F81" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F81"><span class="lc_labelnum"><span class="label">R</span><span class="number">12.</span></span> Consider an e-commerce site that wants to keep a purchase record for each of its customers. Describe how this can be done with cookies.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F7F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F7F"><div class="question" id="P7001011952000000000000000009F82" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F82"><p id="P7001011952000000000000000009F83" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F83"><span class="lc_labelnum"><span class="label">R</span><span class="number">13.</span></span> Describe how Web caching can reduce the delay in receiving a requested object. Will Web caching reduce the delay for all objects requested by a user or for only some of the objects? Why?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F82" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F82"><div class="question" id="P7001011952000000000000000009F84" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F84"><p id="P7001011952000000000000000009F85" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F85"><span class="lc_labelnum"><span class="label">R</span><span class="number">14.</span></span> Telnet into a Web server and send a multiline request message. Include in the request message the <code id="P7001011952000000000000000009F86" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F86">If-modified-since:</code> header line to force a response message with the <code id="P7001011952000000000000000009F87" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F87">304 Not Modified</code> status code.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F87" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F87"><div class="question" id="P7001011952000000000000000009F88" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F88"><p id="P7001011952000000000000000009F89" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F89"><span class="lc_labelnum"><span class="label">R</span><span class="number">15.</span></span> List several popular messaging apps. Do they use the same protocols as SMS?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F8A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F8A"><div class="question" id="P7001011952000000000000000009F8A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F8A"><p id="P7001011952000000000000000009F8B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F8B"><span class="pagebreak" title="172" id="P7001011952000000000000000000F8D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F8D" epub:type="pagebreak" role="doc-pagebreak"></span><span class="lc_labelnum"><span class="label">R</span><span class="number">16.</span></span> Suppose Alice, with a Web-based e-mail account (such as Hotmail or Gmail), sends a message to Bob, who accesses his mail from his mail server using POP3. Discuss how the message gets from Alice’s host to Bob’s host. Be sure to list the series of application-layer protocols that are used to move the message between the two hosts.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F8E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F8E"><div class="question" id="P7001011952000000000000000009F8C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F8C"><p id="P7001011952000000000000000009F8D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F8D"><span class="lc_labelnum"><span class="label">R</span><span class="number">17.</span></span> Print out the header of an e-mail message you have recently received. How many <code id="P7001011952000000000000000009F8E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F8E">Received:</code> header lines are there? Analyze each of the header lines in the message.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F92" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F92"><div class="question" id="P7001011952000000000000000009F8F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F8F"><p id="P7001011952000000000000000009F90" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F90"><span class="lc_labelnum"><span class="label">R</span><span class="number">18.</span></span> From a user’s perspective, what is the difference between the download-and-delete mode and the download-and-keep mode in POP3?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F95" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F95"><div class="question" id="P7001011952000000000000000009F91" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F91"><p id="P7001011952000000000000000009F92" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F92"><span class="lc_labelnum"><span class="label">R</span><span class="number">19.</span></span> Is it possible for an organization’s Web server and mail server to have exactly the same alias for a hostname (for example, <code id="P7001011952000000000000000009F93" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F93"><a class="ulink" href="http://foo.com">foo.com</a></code>)? What would be the type for the RR that contains the hostname of the mail server?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000F99" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F99"><div class="question" id="P7001011952000000000000000009F94" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F94"><p id="P7001011952000000000000000009F95" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F95"><span class="lc_labelnum"><span class="label">R</span><span class="number">20.</span></span> Look over your received e-mails, and examine the header of a message sent from a user with a .edu e-mail address. Is it possible to determine from the header the IP address of the host from which the message was sent? Do the same for a message sent from a Gmail account.</p></div></li>
</ol>
</section>
<section id="P7001011952000000000000000000F9C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F9C" class="practicediv level3"><header><h1 class="title" id="P7001011952000000000000000009F96" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F96" epub:type="title"><span class="label">SECTION </span><span class="number">2.5</span></h1></header>
<ol class="practicelist dynamiclist" id="P7001011952000000000000000009F97" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F97">
<li class="general-problem" id="P7001011952000000000000000000F9F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000F9F"><div class="question" id="P7001011952000000000000000009F98" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F98"><p id="P7001011952000000000000000009F99" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F99"><span class="lc_labelnum"><span class="label">R</span><span class="number">21.</span></span> In BitTorrent, suppose Alice provides chunks to Bob throughout a 30-second interval. Will Bob necessarily return the favor and provide chunks to Alice in this same interval? Why or why not?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000FA2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FA2"><div class="question" id="P7001011952000000000000000009F9A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F9A"><p id="P7001011952000000000000000009F9B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F9B"><span class="lc_labelnum"><span class="label">R</span><span class="number">22.</span></span> Consider a new peer Alice that joins BitTorrent without possessing any chunks. Without any chunks, she cannot become a top-four uploader for any of the other peers, since she has nothing to upload. How then will Alice get her first chunk?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000FA5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FA5"><div class="question" id="P7001011952000000000000000009F9C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F9C"><p id="P7001011952000000000000000009F9D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F9D"><span class="lc_labelnum"><span class="label">R</span><span class="number">23.</span></span> What is an overlay network? Does it include routers? What are the edges in the overlay network?</p></div></li>
</ol>
</section>
<section id="P7001011952000000000000000000FA8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FA8" class="practicediv level3"><header><h1 class="title" id="P7001011952000000000000000009F9E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F9E" epub:type="title"><span class="label">SECTION </span> <span class="number">2.6</span></h1></header>
<ol class="practicelist dynamiclist" id="P7001011952000000000000000009F9F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009F9F">
<li class="general-problem" id="P7001011952000000000000000000FAB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FAB"><div class="question" id="P7001011952000000000000000009FA0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA0"><p id="P7001011952000000000000000009FA1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA1"><span class="lc_labelnum"><span class="label">R</span><span class="number">24.</span></span> CDNs typically adopt one of two different server placement philosophies. Name and briefly describe them.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000FAE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FAE"><div class="question" id="P7001011952000000000000000009FA2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA2"><p id="P7001011952000000000000000009FA3" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA3"><span class="lc_labelnum"><span class="label">R</span><span class="number">25.</span></span> Besides network-related considerations such as delay, loss, and bandwidth performance, there are other important factors that go into designing a CDN server selection strategy. What are they?</p></div></li>
</ol>
</section>
<section id="P7001011952000000000000000000FB1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FB1" class="practicediv level3"><header><h1 class="title" id="P7001011952000000000000000009FA4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA4" epub:type="title"><span class="label">SECTION </span><span class="number">2.7</span></h1></header>
<ol class="practicelist dynamiclist" id="P7001011952000000000000000009FA5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA5">
<li class="general-problem" id="P7001011952000000000000000000FB4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FB4"><div class="question" id="P7001011952000000000000000009FA6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA6"><p id="P7001011952000000000000000009FA7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA7"><span class="lc_labelnum"><span class="label">R</span><span class="number">26.</span></span> In Section 2.7, the UDP server described needed only one socket, whereas the TCP server needed two sockets. Why? If the TCP server were to support <i>n</i> simultaneous connections, each from a different client host, how many sockets would the TCP server need?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000FB7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FB7"><div class="question" id="P7001011952000000000000000009FA8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA8"><p id="P7001011952000000000000000009FA9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FA9"><span class="pagebreak" title="173" id="P7001011952000000000000000000FBA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FBA" epub:type="pagebreak" role="doc-pagebreak"></span><span class="lc_labelnum"><span class="label">R</span><span class="number">27.</span></span> For the client-server application over TCP described in <a class="xref" href="fileP7001011952000000000000000000E42.xhtml#P7001011952000000000000000000E42" data-foobar="7"><span class="lc_labelnum"><span class="label">Section</span> <span class="number">2.7</span></span> </a>, why must the server program be executed before the client program? For the client-server application over UDP, why may the client program be executed before the server program?</p></div></li>
</ol>
</section>
</section>
<section id="P7001011952000000000000000000FBB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FBB" epub:type="practice" class="practice level2"><header><h1 class="title" id="P7001011952000000000000000009FAA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FAA" epub:type="title"><span class="label">Problems </span></h1></header>
<ol class="practicelist dynamiclist" id="P7001011952000000000000000009FAB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FAB">
<li class="general-problem" id="P7001011952000000000000000000FBE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FBE"><div class="question" id="P7001011952000000000000000009FAC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FAC"><p id="P7001011952000000000000000009FAD" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FAD"><span class="lc_labelnum"><span class="label">P</span><span class="number">1.</span></span> True or false?</p>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FAE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FAE">
<li id="P7001011952000000000000000009FAF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FAF"><p id="P7001011952000000000000000009FB0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB0">A user requests a Web page that consists of some text and three images. For this page, the client will send one request message and receive four response messages.</p></li>
<li id="P7001011952000000000000000009FB1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB1"><p id="P7001011952000000000000000009FB2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB2">Two distinct Web pages (for example, <code id="P7001011952000000000000000009FB3" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB3"><a class="ulink" href="http://www.mit.edu/research.html">www.mit.edu/<wbr></wbr>research.html</a></code> and <code id="P7001011952000000000000000009FB4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB4"><span class="url-obsolete">www.mit.edu/students.html</span></code>) can be sent over the same persistent connection.</p></li>
<li id="P7001011952000000000000000009FB5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB5"><p id="P7001011952000000000000000009FB6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB6">With nonpersistent connections between browser and origin server, it is possible for a single TCP segment to carry two distinct HTTP request messages.</p></li>
<li id="P7001011952000000000000000009FB7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB7"><p id="P7001011952000000000000000009FB8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB8">The <code id="P7001011952000000000000000009FB9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FB9">Date:</code> header in the HTTP response message indicates when the object in the response was last modified.</p></li>
<li id="P7001011952000000000000000009FBA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FBA"><p id="P7001011952000000000000000009FBB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FBB">HTTP response messages never have an empty message body.</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000000FCF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FCF"><div class="question" id="P7001011952000000000000000009FBC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FBC"><p id="P7001011952000000000000000009FBD" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FBD"><span class="lc_labelnum"><span class="label">P</span><span class="number">2.</span></span> SMS, iMessage, and WhatsApp are all smartphone real-time messaging systems. After doing some research on the Internet, for each of these systems write one paragraph about the protocols they use. Then write a paragraph explaining how they differ.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000FD2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FD2"><div class="question" id="P7001011952000000000000000009FBE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FBE"><p id="P7001011952000000000000000009FBF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FBF"><span class="lc_labelnum"><span class="label">P</span><span class="number">3.</span></span> Consider an HTTP client that wants to retrieve a Web document at a given URL. The IP address of the HTTP server is initially unknown. What transport and application-layer protocols besides HTTP are needed in this scenario?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000000FD5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FD5"><div class="question" id="P7001011952000000000000000009FC0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC0"><p id="P7001011952000000000000000009FC1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC1"><span class="lc_labelnum"><span class="label">P</span><span class="number">4.</span></span> Consider the following string of ASCII characters that were captured by Wireshark when the browser sent an HTTP GET message (i.e., this is the actual content of an HTTP GET message). The characters <i>&lt;cr&gt;&lt;lf&gt;</i> are carriage return and line-feed characters (that is, the italized character string <i>&lt;cr&gt;</i> in the text below represents the single carriage-return character that was contained at that point in the HTTP header). Answer the following questions, indicating where in the HTTP GET message below you find the answer.</p>
<pre id="P7001011952000000000000000009FC2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC2"><code id="P7001011952000000000000000009FC3" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC3">GET /cs453/index.html HTTP/1.1<i>&lt;cr&gt;&lt;lf&gt;</i>Host: gai
a.cs.umass.edu<i>&lt;cr&gt;&lt;lf&gt;</i>User-Agent: Mozilla/5.0 (
Windows;U; Windows NT 5.1; en-US; rv:1.7.2) Gec
ko/20040804 Netscape/7.2 (ax) <i>&lt;cr&gt;&lt;lf&gt;</i>Accept:ex
t/xml, application/xml, application/xhtml+xml, text
/html;q=0.9, text/plain;q=0.8, image/png,*/*;q=0.5
<span class="pagebreak" title="174" id="P7001011952000000000000000000FDA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FDA" epub:type="pagebreak" role="doc-pagebreak"></span><i>&lt;cr&gt;&lt;lf&gt;</i>Accept-Language: en-us, en;q=0.5<i>&lt;cr&gt;&lt;lf&gt;</i>Accept-
Encoding: zip, deflate<i>&lt;cr&gt;&lt;lf&gt;</i>Accept-Charset: ISO
-8859-1, utf-8;q=0.7,*;q=0.7<i>&lt;cr&gt;&lt;lf&gt;</i>Keep-Alive: 300<i>&lt;cr&gt;</i>
<i>&lt;lf&gt;</i>Connection:keep-alive<i>&lt;cr&gt;&lt;lf&gt;&lt;cr&gt;&lt;lf&gt;</i></code></pre>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FC4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC4">
<li id="P7001011952000000000000000009FC5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC5"><p id="P7001011952000000000000000009FC6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC6">What is the URL of the document requested by the browser?</p></li>
<li id="P7001011952000000000000000009FC7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC7"><p id="P7001011952000000000000000009FC8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC8">What version of HTTP is the browser running?</p></li>
<li id="P7001011952000000000000000009FC9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FC9"><p id="P7001011952000000000000000009FCA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FCA">Does the browser request a non-persistent or a persistent connection?</p></li>
<li id="P7001011952000000000000000009FCB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FCB"><p id="P7001011952000000000000000009FCC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FCC">What is the IP address of the host on which the browser is running?</p></li>
<li id="P7001011952000000000000000009FCD" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FCD"><p id="P7001011952000000000000000009FCE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FCE">What type of browser initiates this message? Why is the browser type needed in an HTTP request message?</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000000FE6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FE6"><div class="question" id="P7001011952000000000000000009FCF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FCF"><p id="P7001011952000000000000000009FD0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD0"><span class="lc_labelnum"><span class="label">P</span><span class="number">5.</span></span> The text below shows the reply sent from the server in response to the HTTP GET message in the question above. Answer the following questions, indicating where in the message below you find the answer.</p>
<pre id="P7001011952000000000000000009FD1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD1"><code id="P7001011952000000000000000009FD2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD2">HTTP/1.1 200 OK<i>&lt;cr&gt;&lt;lf&gt;</i>Date: Tue, 07 Mar 2008
12:39:45GMT<i>&lt;cr&gt;&lt;lf&gt;</i>Server: Apache/2.0.52 (Fedora)
&lt;cr&gt;&lt;lf&gt;Last-Modified: Sat, 10 Dec2005 18:27:46
GMT<i>&lt;cr&gt;&lt;lf&gt;</i>ETag: ”526c3-f22-a88a4c80”<i>&lt;cr&gt;&lt;lf&gt;</i>Accept-
Ranges: bytes<i>&lt;cr&gt;&lt;lf&gt;</i>Content-Length: 3874<i>&lt;cr&gt;&lt;lf&gt;</i>
Keep-Alive: timeout=max=100<i>&lt;cr&gt;&lt;lf&gt;</i>Connection:
Keep-Alive<i>&lt;cr&gt;&lt;lf&gt;</i>Content-Type: text/html; charset=
ISO-8859-1<i>&lt;cr&gt;&lt;lf&gt;&lt;cr&gt;&lt;lf&gt;</i>&lt;!doctype html public ”-
//w3c//dtd html 4.0 transitional//en”&gt;<i>&lt;lf&gt;</i>&lt;html&gt;<i>&lt;lf&gt;</i>
&lt;head&gt;<i>&lt;lf&gt;</i> &lt;meta http-equiv=”Content-Type”
content=”text/html; charset=iso-8859-1”&gt;<i>&lt;lf&gt;</i> &lt;meta
name=”GENERATOR” content=”Mozilla/4.79 [en] (Windows NT
5.0; U) Netscape]”&gt;<i>&lt;lf&gt;</i> &lt;title&gt;CMPSCI 453 / 591 /
NTU-ST550ASpring 2005 homepage&lt;/title&gt;<i>&lt;lf&gt;</i>&lt;/head&gt;<i>&lt;lf&gt;</i>
&lt;<i>much more document text following here (not shown)</i>&gt;</code></pre>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FD3" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD3">
<li id="P7001011952000000000000000009FD4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD4"><p id="P7001011952000000000000000009FD5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD5">Was the server able to successfully find the document or not? What time was the document reply provided?</p></li>
<li id="P7001011952000000000000000009FD6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD6"><p id="P7001011952000000000000000009FD7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD7">When was the document last modified?</p></li>
<li id="P7001011952000000000000000009FD8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD8"><p id="P7001011952000000000000000009FD9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FD9">How many bytes are there in the document being returned?</p></li>
<li id="P7001011952000000000000000009FDA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FDA"><p id="P7001011952000000000000000009FDB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FDB">What are the first 5 bytes of the document being returned? Did the server agree to a persistent connection?</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000000FF4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FF4"><div class="question" id="P7001011952000000000000000009FDC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FDC"><p id="P7001011952000000000000000009FDD" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FDD"><span class="lc_labelnum"><span class="label">P</span><span class="number">6.</span></span> Obtain the HTTP/1.1 specification (RFC 2616). Answer the following questions:</p>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FDE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FDE">
<li id="P7001011952000000000000000009FDF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FDF"><p id="P7001011952000000000000000009FE0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE0">Explain the mechanism used for signaling between the client and server to indicate that a persistent connection is being closed. Can the client, the server, or both signal the close of a connection?</p></li>
<li id="P7001011952000000000000000009FE1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE1"><p id="P7001011952000000000000000009FE2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE2"><span class="pagebreak" title="175" id="P7001011952000000000000000000FFC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000000FFC" epub:type="pagebreak" role="doc-pagebreak"></span>What encryption services are provided by HTTP?</p></li>
<li id="P7001011952000000000000000009FE3" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE3"><p id="P7001011952000000000000000009FE4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE4">Can a client open three or more simultaneous connections with a given server?</p></li>
<li id="P7001011952000000000000000009FE5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE5"><p id="P7001011952000000000000000009FE6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE6">Either a server or a client may close a transport connection between them if either one detects the connection has been idle for some time. Is it possible that one side starts closing a connection while the other side is transmitting data via this connection? Explain.</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001001" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001001"><div class="question" id="P7001011952000000000000000009FE7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE7"><p id="P7001011952000000000000000009FE8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE8"><span class="lc_labelnum"><span class="label">P</span><span class="number">7.</span></span> Suppose within your Web browser you click on a link to obtain a Web page. The IP address for the associated URL is not cached in your local host, so a DNS lookup is necessary to obtain the IP address. Suppose that <i>n</i> DNS servers are visited before your host receives the IP address from DNS; the successive visits incur an RTT of <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="134" altimg-height="17" altimg="../images/ch02math13.png"><m:mrow><m:msub><m:mrow><m:mtext>RTT</m:mtext></m:mrow><m:mn>1</m:mn></m:msub><m:mo>,</m:mo><m:mo>.</m:mo><m:mtext> </m:mtext><m:mo>.</m:mo><m:mtext> </m:mtext><m:mo>.</m:mo><m:mo>,</m:mo><m:msub><m:mrow><m:mtext>RTT</m:mtext></m:mrow><m:mi>n</m:mi></m:msub><m:mo>.</m:mo></m:mrow></m:math></span> Further suppose that the Web page associated with the link contains exactly one object, consisting of a small amount of HTML text. Let RTT<sub>0</sub> denote the RTT between the local host and the server containing the object. Assuming zero transmission time of the object, how much time elapses from when the client clicks on the link until the client receives the object?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001004" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001004"><div class="question" id="P7001011952000000000000000009FE9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FE9"><p id="P7001011952000000000000000009FEA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FEA"><span class="lc_labelnum"><span class="label">P</span><span class="number">8.</span></span> Referring to Problem P7, suppose the HTML file references eight very small objects on the same server. Neglecting transmission times, how much time elapses with</p>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FEB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FEB">
<li id="P7001011952000000000000000009FEC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FEC"><p id="P7001011952000000000000000009FED" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FED">Non-persistent HTTP with no parallel TCP connections?</p></li>
<li id="P7001011952000000000000000009FEE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FEE"><p id="P7001011952000000000000000009FEF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FEF">Non-persistent HTTP with the browser configured for 5 parallel connections?</p></li>
<li id="P7001011952000000000000000009FF0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF0"><p id="P7001011952000000000000000009FF1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF1">Persistent HTTP?</p></li>
</ol></div></li>
<li class="general-problem" id="P700101195200000000000000000100E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000100E"><div class="question" id="P7001011952000000000000000009FF2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF2"><p id="P7001011952000000000000000009FF3" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF3"><span class="lc_labelnum"><span class="label">P</span><span class="number">9.</span></span> Consider <a class="xref" href="fileP7001011952000000000000000000A27.xhtml#P7001011952000000000000000000B57" data-foobar="7"><span class="lc_labelnum"><span class="label">Figure</span> <span class="number">2.12</span></span> </a>, for which there is an institutional network connected to the Internet. Suppose that the average object size is 850,000 bits and that the average request rate from the institution’s browsers to the origin servers is 16 requests per second. Also suppose that the amount of time it takes from when the router on the Internet side of the access link forwards an HTTP request until it receives the response is three seconds on average (see Section <a class="xref" href="fileP7001011952000000000000000000A27.xhtml#P7001011952000000000000000000B3B" data-foobar="7"><span class="number">2.</span>2.5</a>). Model the total average response time as the sum of the average access delay (that is, the delay from Internet router to institution router) and the average Internet delay. For the average access delay, use <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="101" altimg-height="18" altimg="../images/ch02math14.png"><m:mrow><m:mi>Δ</m:mi><m:mo>/</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:mn>1</m:mn><m:mo>−</m:mo><m:mi>Δ</m:mi><m:mi>β</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>,</m:mo></m:mrow></m:math></span> where Δ is the average time required to send an object over the access link and b is the arrival rate of objects to the access link.</p>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FF4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF4">
<li id="P7001011952000000000000000009FF5" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF5"><p id="P7001011952000000000000000009FF6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF6">Find the total average response time.</p></li>
<li id="P7001011952000000000000000009FF7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF7"><p id="P7001011952000000000000000009FF8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF8">Now suppose a cache is installed in the institutional LAN. Suppose the miss rate is 0.4. Find the total response time.</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001016" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001016"><div class="question" id="P7001011952000000000000000009FF9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FF9"><p id="P7001011952000000000000000009FFA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FFA"><span class="lc_labelnum"><span class="label">P</span><span class="number">10.</span></span> Consider a short, 10-meter link, over which a sender can transmit at a rate of 150 bits/sec in both directions. Suppose that packets containing data are <span class="pagebreak" title="176" id="P7001011952000000000000000001019" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001019" epub:type="pagebreak" role="doc-pagebreak"></span>100,000 bits long, and packets containing only control (e.g., ACK or handshaking) are 200 bits long. Assume that <i>N</i> parallel connections each get 1/<i>N</i> of the link bandwidth. Now consider the HTTP protocol, and suppose that each downloaded object is 100 Kbits long, and that the initial downloaded object contains 10 referenced objects from the same sender. Would parallel downloads via parallel instances of non-persistent HTTP make sense in this case? Now consider persistent HTTP. Do you expect significant gains over the non-persistent case? Justify and explain your answer.</p></div></li>
<li class="general-problem" id="P700101195200000000000000000101A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000101A"><div class="question" id="P7001011952000000000000000009FFB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FFB"><p id="P7001011952000000000000000009FFC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FFC"><span class="lc_labelnum"><span class="label">P</span><span class="number">11.</span></span> Consider the scenario introduced in the previous problem. Now suppose that the link is shared by Bob with four other users. Bob uses parallel instances of non-persistent HTTP, and the other four users use non-persistent HTTP without parallel downloads.</p>
<ol class="ol_lower-alpha" type="a" id="P7001011952000000000000000009FFD" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FFD">
<li id="P7001011952000000000000000009FFE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FFE"><p id="P7001011952000000000000000009FFF" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000009FFF">Do Bob’s parallel connections help him get Web pages more quickly? Why or why not?</p></li>
<li id="P700101195200000000000000000A000" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A000"><p id="P700101195200000000000000000A001" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A001">If all five users open five parallel instances of non-persistent HTTP, then would Bob’s parallel connections still be beneficial? Why or why not?</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001022" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001022"><div class="question" id="P700101195200000000000000000A002" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A002"><p id="P700101195200000000000000000A003" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A003"><span class="lc_labelnum"><span class="label">P</span><span class="number">12.</span></span> Write a simple TCP program for a server that accepts lines of input from a client and prints the lines onto the server’s standard output. (You can do this by modifying the TCPServer.py program in the text.) Compile and execute your program. On any other machine that contains a Web browser, set the proxy server in the browser to the host that is running your server program; also configure the port number appropriately. Your browser should now send its GET request messages to your server, and your server should display the messages on its standard output. Use this platform to determine whether your browser generates conditional GET messages for objects that are locally cached.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001025" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001025"><div class="question" id="P700101195200000000000000000A004" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A004"><p id="P700101195200000000000000000A005" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A005"><span class="lc_labelnum"><span class="label">P</span><span class="number">13.</span></span> What is the difference between <code id="P700101195200000000000000000A006" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A006">MAIL FROM</code>: in SMTP and <code id="P700101195200000000000000000A007" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A007">From</code>: in the mail message itself?</p></div></li>
<li class="general-problem" id="P700101195200000000000000000102A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000102A"><div class="question" id="P700101195200000000000000000A008" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A008"><p id="P700101195200000000000000000A009" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A009"><span class="lc_labelnum"><span class="label">P</span><span class="number">14.</span></span> How does SMTP mark the end of a message body? How about HTTP? Can HTTP use the same method as SMTP to mark the end of a message body? Explain.</p></div></li>
<li class="general-problem" id="P700101195200000000000000000102D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000102D"><div class="question" id="P700101195200000000000000000A00A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A00A"><p id="P700101195200000000000000000A00B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A00B"><span class="lc_labelnum"><span class="label">P</span><span class="number">15.</span></span> Read RFC 5321 for SMTP. What does MTA stand for? Consider the following received spam e-mail (modified from a real spam e-mail). Assuming only the originator of this spam e-mail is malicious and all other hosts are honest, identify the malacious host that has generated this spam e-mail.</p>
<pre id="P700101195200000000000000000A00C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A00C"><code id="P700101195200000000000000000A00D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A00D">
From - Fri Nov 07 13:41:30 2008
Return-Path: &lt;tennis5@pp33head.com&gt;
Received: from barmail.cs.umass.edu (barmail.cs.umass.edu
<span class="pagebreak" title="177" id="P7001011952000000000000000001032" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001032" epub:type="pagebreak" role="doc-pagebreak"></span>[128.119.240.3]) by cs.umass.edu (8.13.1/8.12.6) for
&lt;hg@cs.umass.edu&gt;; Fri, 7 Nov 2008 13:27:10 -0500
Received: from asusus-4b96 (localhost [127.0.0.1]) by
barmail.cs.umass.edu (Spam Firewall) for &lt;hg@cs.umass.edu&gt;; Fri, 7
Nov 2008 13:27:07 -0500 (EST)
Received: from asusus-4b96 ([58.88.21.177]) by barmail.cs.umass.edu
for &lt;hg@cs.umass.edu&gt;; Fri, 07 Nov 2008 13:27:07 -0500 (EST)
Received: from [58.88.21.177] by inbnd55.exchangeddd.com; Sat, 8
Nov 2008 01:27:07 +0700
From: ”Jonny” &lt;tennis5@pp33head.com&gt;
To: &lt;hg@cs.umass.edu&gt;

Subject: How to secure your savings</code></pre></div></li>
<li class="general-problem" id="P7001011952000000000000000001033" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001033"><div class="question" id="P700101195200000000000000000A00E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A00E"><p id="P700101195200000000000000000A00F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A00F"><span class="lc_labelnum"><span class="label">P</span><span class="number">16.</span></span> Read the POP3 RFC, RFC 1939. What is the purpose of the UIDL POP3 command?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001036" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001036"><div class="question" id="P700101195200000000000000000A010" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A010"><p id="P700101195200000000000000000A011" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A011"><span class="lc_labelnum"><span class="label">P</span><span class="number">17.</span></span> Consider accessing your e-mail with POP3.</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A012" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A012">
<li id="P700101195200000000000000000A013" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A013"><p id="P700101195200000000000000000A014" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A014">Suppose you have configured your POP mail client to operate in the download-and-delete mode. Complete the following transaction:</p>
<pre id="P700101195200000000000000000A015" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A015"><code id="P700101195200000000000000000A016" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A016">
<b>C:</b> list
<b>S:</b> 1 498
<b>S:</b> 2 912
<b>S:</b> .
<b>C:</b> retr 1
<b>S:</b> blah blah ...
<b>S:</b> ..........blah
<b>S:</b> .
?
?</code></pre></li>
<li id="P700101195200000000000000000A017" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A017"><p id="P700101195200000000000000000A018" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A018">Suppose you have configured your POP mail client to operate in the download-and-keep mode. Complete the following transaction:</p>
<pre id="P700101195200000000000000000A019" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A019"><code id="P700101195200000000000000000A01A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A01A"><b>C:</b> list
<b>S:</b> 1 498
<b>S:</b> 2 912
<b>S:</b> .
<b>C:</b> retr 1
<span class="pagebreak" title="178" id="P7001011952000000000000000001042" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001042" epub:type="pagebreak" role="doc-pagebreak"></span><b>S:</b> blah blah ...
<b>S:</b> ..........blah
<b>S:</b> .
?
?</code></pre></li>
<li id="P700101195200000000000000000A01B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A01B"><p id="P700101195200000000000000000A01C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A01C">Suppose you have configured your POP mail client to operate in the download-and-keep mode. Using your transcript in part (b), suppose you retrieve messages 1 and 2, exit POP, and then five minutes later you again access POP to retrieve new e-mail. Suppose that in the five-minute interval no new messages have been sent to you. Provide a transcript of this second POP session.</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001045" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001045"><div class="question" id="P700101195200000000000000000A01D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A01D"><p id="P700101195200000000000000000A01E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A01E"><span class="lc_labelnum"><span class="label">P</span><span class="number">18.</span></span></p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A01F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A01F">
<li id="P700101195200000000000000000A020" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A020"><p id="P700101195200000000000000000A021" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A021">What is a <i>whois</i> database?</p></li>
<li id="P700101195200000000000000000A022" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A022"><p id="P700101195200000000000000000A023" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A023">Use various whois databases on the Internet to obtain the names of two DNS servers. Indicate which whois databases you used.</p></li>
<li id="P700101195200000000000000000A024" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A024"><p id="P700101195200000000000000000A025" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A025">Use nslookup on your local host to send DNS queries to three DNS servers: your local DNS server and the two DNS servers you found in part (b). Try querying for Type A, NS, and MX reports. Summarize your findings.</p></li>
<li id="P700101195200000000000000000A026" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A026"><p id="P700101195200000000000000000A027" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A027">Use nslookup to find a Web server that has multiple IP addresses. Does the Web server of your institution (school or company) have multiple IP addresses?</p></li>
<li id="P700101195200000000000000000A028" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A028"><p id="P700101195200000000000000000A029" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A029">Use the ARIN whois database to determine the IP address range used by your university.</p></li>
<li id="P700101195200000000000000000A02A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A02A"><p id="P700101195200000000000000000A02B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A02B">Describe how an attacker can use whois databases and the nslookup tool to perform reconnaissance on an institution before launching an attack.</p></li>
<li id="P700101195200000000000000000A02C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A02C"><p id="P700101195200000000000000000A02D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A02D">Discuss why whois databases should be publicly available.</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001057" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001057"><div class="question" id="P700101195200000000000000000A02E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A02E"><p id="P700101195200000000000000000A02F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A02F"><span class="lc_labelnum"><span class="label">P</span><span class="number">19.</span></span> In this problem, we use the useful <i>dig</i> tool available on Unix and Linux hosts to explore the hierarchy of DNS servers. Recall that in <a class="xref" href="fileP7001011952000000000000000000C38.xhtml#P7001011952000000000000000000CB9" data-foobar="7"><span class="lc_labelnum"><span class="label">Figure</span> <span class="number">2.19</span></span> </a>, a DNS server in the DNS hierarchy delegates a DNS query to a DNS server lower in the hierarchy, by sending back to the DNS client the name of that lower-level DNS server. First read the man page for <i>dig</i>, and then answer the following questions.</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A030" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A030">
<li id="P700101195200000000000000000A031" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A031"><p id="P700101195200000000000000000A032" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A032">Starting with a root DNS server (from one of the root servers [a-m].root-servers.net), initiate a sequence of queries for the IP address for your department’s Web server by using <i>dig.</i> Show the list of the names of DNS servers in the delegation chain in answering your query.</p></li>
<li id="P700101195200000000000000000A033" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A033"><p id="P700101195200000000000000000A034" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A034">Repeat part (a) for several popular Web sites, such as <a class="ulink" href="http://google.com">google.com</a>, <a class="ulink" href="http://yahoo.com">yahoo.com</a>, or <a class="ulink" href="http://amazon.com">amazon.com</a>.</p></li>
</ol></div></li>
<li class="general-problem" id="P700101195200000000000000000105F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000105F"><div class="question" id="P700101195200000000000000000A035" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A035"><p id="P700101195200000000000000000A036" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A036"><span class="lc_labelnum"><span class="label">P</span><span class="number">20.</span></span> Suppose you can access the caches in the local DNS servers of your department. Can you propose a way to roughly determine the Web servers (outside your department) that are most popular among the users in your department? Explain.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001062" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001062"><div class="question" id="P700101195200000000000000000A037" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A037"><p id="P700101195200000000000000000A038" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A038"><span class="pagebreak" title="179" id="P7001011952000000000000000001065" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001065" epub:type="pagebreak" role="doc-pagebreak"></span><span class="lc_labelnum"><span class="label">P</span><span class="number">21.</span></span> Suppose that your department has a local DNS server for all computers in the department. You are an ordinary user (i.e., not a network/system administrator). Can you determine if an external Web site was likely accessed from a computer in your department a couple of seconds ago? Explain.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001066" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001066"><div class="question" id="P700101195200000000000000000A039" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A039"><p id="P700101195200000000000000000A03A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A03A"><span class="lc_labelnum"><span class="label">P</span><span class="number">22.</span></span> Consider distributing a file of <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="61" altimg-height="13" altimg="../images/ch02math15.png"><m:mrow><m:mi>F</m:mi><m:mo>=</m:mo><m:mn>15</m:mn></m:mrow></m:math></span> Gbits to <i>N</i> peers. The server has an upload rate of <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="64" altimg-height="17" altimg="../images/ch02math16.png"><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>=</m:mo><m:mn>30</m:mn></m:mrow></m:math></span> Mbps, and each peer has a download rate of <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="54" altimg-height="17" altimg="../images/ch02math17.png"><m:mrow><m:msub><m:mi>d</m:mi><m:mi>i</m:mi></m:msub><m:mo>=</m:mo><m:mn>2</m:mn></m:mrow></m:math></span> Mbps and an upload rate of <i>u</i>. For <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="68" altimg-height="16" altimg="../images/ch02math18.png"><m:mrow><m:mi>N</m:mi><m:mo>=</m:mo><m:mn>10</m:mn><m:mo>,</m:mo></m:mrow></m:math></span> 100, and 1,000 and <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="118" altimg-height="17" altimg="../images/ch02math19.png"><m:mrow><m:mi>u</m:mi><m:mo>=</m:mo><m:mn>300</m:mn><m:mtext> Kbps</m:mtext><m:mo>,</m:mo></m:mrow></m:math></span> 700 Kbps, and 2 Mbps, prepare a chart giving the minimum distribution time for each of the combinations of <i>N</i> and <i>u</i> for both client-server distribution and P2P distribution.</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001069" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001069"><div class="question" id="P700101195200000000000000000A03B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A03B"><p id="P700101195200000000000000000A03C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A03C"><span class="lc_labelnum"><span class="label">P</span><span class="number">23.</span></span> Consider distributing a file of <i>F</i> bits to <i>N</i> peers using a client-server architecture. Assume a fluid model where the server can simultaneously transmit to multiple peers, transmitting to each peer at different rates, as long as the combined rate does not exceed <i>u<sub>s</sub></i>.</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A03D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A03D">
<li id="P700101195200000000000000000A03E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A03E"><p id="P700101195200000000000000000A03F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A03F">Suppose that <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="98" altimg-height="17" altimg="../images/ch02math20.png"><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mi>N</m:mi><m:mo>≤</m:mo><m:msub><m:mi>d</m:mi><m:mrow><m:mi>min</m:mi></m:mrow></m:msub><m:mo>.</m:mo></m:mrow></m:math></span> Specify a distribution scheme that has a distribution time of <i>NF</i>/<i>u<sub>s</sub></i>.</p></li>
<li id="P700101195200000000000000000A040" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A040"><p id="P700101195200000000000000000A041" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A041">Suppose that <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="98" altimg-height="17" altimg="../images/ch02math21.png"><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mi>N</m:mi><m:mo>≥</m:mo><m:msub><m:mi>d</m:mi><m:mrow><m:mi>min</m:mi></m:mrow></m:msub><m:mo>.</m:mo></m:mrow></m:math></span> Specify a distribution scheme that has a distribution time of <i>F</i>/<i>d</i><sub>min</sub>.</p></li>
<li id="P700101195200000000000000000A042" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A042"><p id="P700101195200000000000000000A043" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A043">Conclude that the minimum distribution time is in general given by <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="168" altimg-height="20" altimg="../images/ch02math22.png"><m:mrow><m:mi>max</m:mi><m:mrow><m:mo>{</m:mo><m:mrow><m:mi>N</m:mi><m:mi>F</m:mi><m:mo>/</m:mo><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:mi>F</m:mi><m:mo>/</m:mo><m:msub><m:mi>d</m:mi><m:mrow><m:mi>min</m:mi></m:mrow></m:msub></m:mrow><m:mo>}</m:mo></m:mrow><m:mo>.</m:mo></m:mrow></m:math></span></p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001073" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001073"><div class="question" id="P700101195200000000000000000A044" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A044"><p id="P700101195200000000000000000A045" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A045"><span class="lc_labelnum"><span class="label">P</span><span class="number">24.</span></span> Consider distributing a file of <i>F</i> bits to <i>N</i> peers using a P2P architecture. Assume a fluid model. For simplicity assume that dmin is very large, so that peer download bandwidth is never a bottleneck.</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A046" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A046">
<li id="P700101195200000000000000000A047" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A047"><p id="P700101195200000000000000000A048" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A048">Suppose that <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="238" altimg-height="18" altimg="../images/ch02math23.png"><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>≤</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mn>1</m:mn></m:msub><m:mo>+</m:mo><m:mo>…</m:mo><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mi>N</m:mi></m:msub></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>/</m:mo><m:mi>N</m:mi><m:mo>.</m:mo></m:mrow></m:math></span> Specify a distribution scheme that has a distribution time of <i>F</i>/<i>u<sub>s</sub></i>.</p></li>
<li id="P700101195200000000000000000A049" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A049"><p id="P700101195200000000000000000A04A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A04A">Suppose that <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="238" altimg-height="18" altimg="../images/ch02math24.png"><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>≥</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mn>1</m:mn></m:msub><m:mo>+</m:mo><m:mo>…</m:mo><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mi>N</m:mi></m:msub></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>/</m:mo><m:mi>N</m:mi><m:mo>.</m:mo></m:mrow></m:math></span> Specify a distribution scheme that has a distribution time of <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="210" altimg-height="18" altimg="../images/ch02math25.png"><m:mrow><m:mi>N</m:mi><m:mi>F</m:mi><m:mo>/</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mn>1</m:mn></m:msub><m:mo>+</m:mo><m:mo>…</m:mo><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mi>N</m:mi></m:msub></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>.</m:mo></m:mrow></m:math></span></p></li>
<li id="P700101195200000000000000000A04B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A04B"><p id="P700101195200000000000000000A04C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A04C">Conclude that the minimum distribution time is in general given by <span class="inlineequation"><m:math display="inline" alttext="" data-uri="" altimg-width="308" altimg-height="20" altimg="../images/ch02math26.png"><m:mrow><m:mi>max</m:mi><m:mrow><m:mo>{</m:mo><m:mrow><m:mi>F</m:mi><m:mo>/</m:mo><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>,</m:mo><m:mtext> </m:mtext><m:mi>N</m:mi><m:mi>F</m:mi><m:mo>/</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msub><m:mi>u</m:mi><m:mi>s</m:mi></m:msub><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mn>1</m:mn></m:msub><m:mo>+</m:mo><m:mo>…</m:mo><m:mo>+</m:mo><m:msub><m:mi>u</m:mi><m:mi>N</m:mi></m:msub></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow><m:mo>}</m:mo></m:mrow><m:mo>.</m:mo></m:mrow></m:math></span></p></li>
</ol></div></li>
<li class="general-problem" id="P700101195200000000000000000107D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000107D"><div class="question" id="P700101195200000000000000000A04D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A04D"><p id="P700101195200000000000000000A04E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A04E"><span class="lc_labelnum"><span class="label">P</span><span class="number">25.</span></span> Consider an overlay network with <i>N</i> active peers, with each pair of peers having an active TCP connection. Additionally, suppose that the TCP connections pass through a total of <i>M</i> routers. How many nodes and edges are there in the corresponding overlay network?</p></div></li>
<li class="general-problem" id="P7001011952000000000000000001080" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001080"><div class="question" id="P700101195200000000000000000A04F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A04F"><p id="P700101195200000000000000000A050" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A050"><span class="lc_labelnum"><span class="label">P</span><span class="number">26.</span></span> Suppose Bob joins a BitTorrent torrent, but he does not want to upload any data to any other peers (so called free-riding).</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A051" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A051">
<li id="P700101195200000000000000000A052" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A052"><p id="P700101195200000000000000000A053" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A053">Bob claims that he can receive a complete copy of the file that is shared by the swarm. Is Bob’s claim possible? Why or why not?</p></li>
<li id="P700101195200000000000000000A054" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A054"><p id="P700101195200000000000000000A055" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A055">Bob further claims that he can further make his “free-riding” more efficient by using a collection of multiple computers (with distinct IP addresses) in the computer lab in his department. How can he do that?</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001088" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001088"><div class="question" id="P700101195200000000000000000A056" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A056"><p id="P700101195200000000000000000A057" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A057"><span class="pagebreak" title="180" id="P700101195200000000000000000108B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000108B" epub:type="pagebreak" role="doc-pagebreak"></span><span class="lc_labelnum"><span class="label">P</span><span class="number">27.</span></span> Consider a DASH system for which there are <i>N</i> video versions (at <i>N</i> different rates and qualities) and <i>N</i> audio versions (at <i>N</i> different rates and qualities). Suppose we want to allow the player to choose at any time any of the <i>N</i> video versions and any of the <i>N</i> audio versions.</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A058" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A058">
<li id="P700101195200000000000000000A059" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A059"><p id="P700101195200000000000000000A05A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A05A">If we create files so that the audio is mixed in with the video, so server sends only one media stream at given time, how many files will the server need to store (each a different URL)?</p></li>
<li id="P700101195200000000000000000A05B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A05B"><p id="P700101195200000000000000000A05C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A05C">If the server instead sends the audio and video streams separately and has the client synchronize the streams, how many files will the server need to store?</p></li>
</ol></div></li>
<li class="general-problem" id="P7001011952000000000000000001091" data-uri="M02_KURO4140_07_SE_C02.xhtml#P7001011952000000000000000001091"><div class="question" id="P700101195200000000000000000A05D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A05D"><p id="P700101195200000000000000000A05E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A05E"><span class="lc_labelnum"><span class="label">P</span><span class="number">28.</span></span> Install and compile the Python programs TCPClient and UDPClient on one host and TCPServer and UDPServer on another host.</p>
<ol class="ol_lower-alpha" type="a" id="P700101195200000000000000000A05F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A05F">
<li id="P700101195200000000000000000A060" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A060"><p id="P700101195200000000000000000A061" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A061">Suppose you run TCPClient before you run TCPServer. What happens? Why?</p></li>
<li id="P700101195200000000000000000A062" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A062"><p id="P700101195200000000000000000A063" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A063">Suppose you run UDPClient before you run UDPServer. What happens? Why?</p></li>
<li id="P700101195200000000000000000A064" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A064"><p id="P700101195200000000000000000A065" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A065">What happens if you use different port numbers for the client and server sides?</p></li>
</ol></div></li>
<li class="general-problem" id="P700101195200000000000000000109B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000109B"><div class="question" id="P700101195200000000000000000A066" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A066"><p id="P700101195200000000000000000A067" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A067"><span class="lc_labelnum"><span class="label">P</span><span class="number">29.</span></span> Suppose that in UDPClient.py, after we create the socket, we add the line:</p>
<pre id="P700101195200000000000000000A068" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A068"><code id="P700101195200000000000000000A069" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A069">clientSocket.bind((’’, 5432))</code></pre>
<p class="continued" id="P700101195200000000000000000A06A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A06A">Will it become necessary to change UDPServer.py? What are the port numbers for the sockets in UDPClient and UDPServer? What were they before making this change?</p></div></li>
<li class="general-problem" id="P70010119520000000000000000010A1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010A1"><div class="question" id="P700101195200000000000000000A06B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A06B"><p id="P700101195200000000000000000A06C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A06C"><span class="lc_labelnum"><span class="label">P</span><span class="number">30.</span></span> Can you configure your browser to open multiple simultaneous connections to a Web site? What are the advantages and disadvantages of having a large number of simultaneous TCP connections?</p></div></li>
<li class="general-problem" id="P70010119520000000000000000010A4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010A4"><div class="question" id="P700101195200000000000000000A06D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A06D"><p id="P700101195200000000000000000A06E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A06E"><span class="lc_labelnum"><span class="label">P</span><span class="number">31.</span></span> We have seen that Internet TCP sockets treat the data being sent as a byte stream but UDP sockets recognize message boundaries. What are one advantage and one disadvantage of byte-oriented API versus having the API explicitly recognize and preserve application-defined message boundaries?</p></div></li>
<li class="general-problem" id="P70010119520000000000000000010A7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010A7"><div class="question" id="P700101195200000000000000000A06F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A06F"><p id="P700101195200000000000000000A070" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A070"><span class="lc_labelnum"><span class="label">P</span><span class="number">32.</span></span> What is the Apache Web server? How much does it cost? What functionality does it currently have? You may want to look at Wikipedia to answer this question.</p></div></li>
</ol>
<section id="P70010119520000000000000000010AA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010AA" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A071" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A071" epub:type="title"><span class="label">Socket Programming Assignments </span></h1></header>
<p id="P700101195200000000000000000A072" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A072">The Companion Website includes six socket programming assignments. The first four assignments are summarized below. The fifth assignment makes use of the ICMP protocol and is summarized at the end of <a class="xref" href="fileP70010119520000000000000000019C1.xhtml#P70010119520000000000000000019C1" data-foobar="7"><span class="label">Chapter</span> <span class="number">5</span></a>. The sixth <span class="pagebreak" title="181" id="P70010119520000000000000000010AD" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010AD" epub:type="pagebreak" role="doc-pagebreak"></span>assignment employs multimedia protocols and is summarized at the end of <a class="xref" href="fileP70010119520000000000000000033D7.xhtml#P70010119520000000000000000033D7" data-foobar="7"><span class="label">Chapter</span> <span class="number">9</span></a>. It is highly recommended that students complete several, if not all, of these assignments. Students can find full details of these assignments, as well as important snippets of the Python code, at the Web site <a class="ulink" href="http://www.pearsonhighered.com/cs-resources">www.pearsonhighered.com/<wbr></wbr>cs-resources</a>.</p>
</section>
<section id="P70010119520000000000000000010AE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010AE" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A073" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A073" epub:type="title">Assignment 1: Web Server</h1></header>
<p id="P700101195200000000000000000A074" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A074">In this assignment, you will develop a simple Web server in Python that is capable of processing only one request. Specifically, your Web server will (i) create a connection socket when contacted by a client (browser); (ii) receive the HTTP request from this connection; (iii) parse the request to determine the specific file being requested; (iv) get the requested file from the server’s file system; (v) create an HTTP response message consisting of the requested file preceded by header lines; and (vi) send the response over the TCP connection to the requesting browser. If a browser requests a file that is not present in your server, your server should return a “404 Not Found” error message.</p>
<p id="P700101195200000000000000000A075" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A075">In the Companion Website, we provide the skeleton code for your server. Your job is to complete the code, run your server, and then test your server by sending requests from browsers running on different hosts. If you run your server on a host that already has a Web server running on it, then you should use a different port than port 80 for your Web server.</p>
</section>
<section id="P70010119520000000000000000010B2" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010B2" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A076" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A076" epub:type="title">Assignment 2: UDP Pinger</h1></header>
<p id="P700101195200000000000000000A077" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A077">In this programming assignment, you will write a client ping program in Python. Your client will send a simple ping message to a server, receive a corresponding pong message back from the server, and determine the delay between when the client sent the ping message and received the pong message. This delay is called the Round Trip Time (RTT). The functionality provided by the client and server is similar to the functionality provided by standard ping program available in modern operating systems. However, standard ping programs use the Internet Control Message Protocol (ICMP) (which we will study in <a class="xref" href="fileP70010119520000000000000000019C1.xhtml#P70010119520000000000000000019C1" data-foobar="7"><span class="label">Chapter</span> <span class="number">5</span></a>). Here we will create a nonstandard (but simple!) UDP-based ping program.</p>
<p id="P700101195200000000000000000A078" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A078">Your ping program is to send 10 ping messages to the target server over UDP. For each message, your client is to determine and print the RTT when the corresponding pong message is returned. Because UDP is an unreliable protocol, a packet sent by the client or server may be lost. For this reason, the client cannot wait indefinitely for a reply to a ping message. You should have the client wait up to one second for a reply from the server; if no reply is received, the client should assume that the packet was lost and print a message accordingly.</p>
<p id="P700101195200000000000000000A079" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A079">In this assignment, you will be given the complete code for the server (available in the Companion Website). Your job is to write the client code, which will be very <span class="pagebreak" title="182" id="P70010119520000000000000000010B7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010B7" epub:type="pagebreak" role="doc-pagebreak"></span>similar to the server code. It is recommended that you first study carefully the server code. You can then write your client code, liberally cutting and pasting lines from the server code.</p>
</section>
<section id="P70010119520000000000000000010B8" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010B8" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A07A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A07A" epub:type="title">Assignment 3: Mail Client</h1></header>
<p id="P700101195200000000000000000A07B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A07B">The goal of this programming assignment is to create a simple mail client that sends e-mail to any recipient. Your client will need to establish a TCP connection with a mail server (e.g., a Google mail server), dialogue with the mail server using the SMTP protocol, send an e-mail message to a recipient (e.g., your friend) via the mail server, and finally close the TCP connection with the mail server.</p>
<p id="P700101195200000000000000000A07C" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A07C">For this assignment, the Companion Website provides the skeleton code for your client. Your job is to complete the code and test your client by sending e-mail to different user accounts. You may also try sending through different servers (for example, through a Google mail server and through your university mail server).</p>
</section>
<section id="P70010119520000000000000000010BC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010BC" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A07D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A07D" epub:type="title">Assignment 4: Multi-Threaded Web Proxy</h1></header>
<p id="P700101195200000000000000000A07E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A07E">In this assignment, you will develop a Web proxy. When your proxy receives an HTTP request for an object from a browser, it generates a new HTTP request for the same object and sends it to the origin server. When the proxy receives the corresponding HTTP response with the object from the origin server, it creates a new HTTP response, including the object, and sends it to the client. This proxy will be multi-threaded, so that it will be able to handle multiple requests at the same time.</p>
<p id="P700101195200000000000000000A07F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A07F">For this assignment, the Companion Website provides the skeleton code for the proxy server. Your job is to complete the code, and then test it by having different browsers request Web objects via your proxy.</p>
</section>
<section id="P70010119520000000000000000010C0" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010C0" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A080" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A080" epub:type="title"><span class="label">Wireshark Lab: HTTP </span></h1></header>
<p id="P700101195200000000000000000A081" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A081">Having gotten our feet wet with the Wireshark packet sniffer in Lab 1, we’re now ready to use Wireshark to investigate protocols in operation. In this lab, we’ll explore several aspects of the HTTP protocol: the basic GET/reply interaction, HTTP message formats, retrieving large HTML files, retrieving HTML files with embedded URLs, persistent and non-persistent connections, and HTTP authentication and security.</p>
<p id="P700101195200000000000000000A082" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A082">As is the case with all Wireshark labs, the full description of this lab is available at this book’s Web site, <a class="ulink" href="http://www.pearsonhighered.com/cs-resources">www.pearsonhighered.com/<wbr></wbr>cs-resources</a>.</p>
</section>
<section id="P70010119520000000000000000010C4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010C4" class="practicediv level3"><header><h1 class="title" id="P700101195200000000000000000A083" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A083" epub:type="title"><span class="pagebreak" title="183" id="P70010119520000000000000000010C6" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010C6" epub:type="pagebreak" role="doc-pagebreak"></span><span class="label">Wireshark Lab: DNS </span></h1></header>
<p id="P700101195200000000000000000A084" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A084">In this lab, we take a closer look at the client side of the DNS, the protocol that translates Internet hostnames to IP addresses. Recall from <a class="xref" href="fileP7001011952000000000000000000D71.xhtml#P7001011952000000000000000000D71" data-foobar="7"><span class="label">Section</span> <span class="number">2.5</span></a> that the client’s role in the DNS is relatively simple—a client sends a query to its local DNS server and receives a response back. Much can go on under the covers, invisible to the DNS clients, as the hierarchical DNS servers communicate with each other to either recursively or iteratively resolve the client’s DNS query. From the DNS client’s standpoint, however, the protocol is quite simple—a query is formulated to the local DNS server and a response is received from that server. We observe DNS in action in this lab.</p>
<p id="P700101195200000000000000000A085" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A085">As is the case with all Wireshark labs, the full description of this lab is available at this book’s Web site, <a class="ulink" href="http://www.pearsonhighered.com/cs-resources">www.pearsonhighered.com/<wbr></wbr>cs-resources</a>.</p>
</section>
</section>
<aside class="sidebar" id="P70010119520000000000000000010C9" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010C9"><header><h1 class="title" id="P700101195200000000000000000A086" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A086" epub:type="title"><span class="pagebreak" title="184" id="P70010119520000000000000000010CB" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010CB" epub:type="pagebreak" role="doc-pagebreak"></span><span class="label">An Interview With… </span></h1></header>
<section class="read" id="P70010119520000000000000000010CC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010CC">
<div class="authorgroup" id="P700101195200000000000000000A087" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A087"><div class="author" id="P700101195200000000000000000A088" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A088"><div class="name" id="P700101195200000000000000000A089" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A089"><p id="P700101195200000000000000000A08A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A08A"><b>Marc Andreessen</b></p></div></div></div>
<p id="P700101195200000000000000000A08B" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A08B">Marc Andreessen is the co-creator of Mosaic, the Web browser that popularized the World Wide Web in 1993. Mosaic had a clean, easily understood interface and was the first browser to display images in-line with text. In 1994, Marc Andreessen and Jim Clark founded Netscape, whose browser was by far the most popular browser through the mid-1990s. Netscape also developed the Secure Sockets Layer (SSL) protocol and many Internet server products, including mail servers and SSL-based Web servers. He is now a co-founder and general partner of venture capital firm Andreessen Horowitz, overseeing portfolio development with holdings that include Facebook, Foursquare, Groupon, Jawbone, Twitter, and Zynga. He serves on numerous boards, including Bump, eBay, Glam Media, Facebook, and Hewlett-Packard. He holds a BS in Computer Science from the University of Illinois at Urbana-Champaign.</p>
<figure id="P70010119520000000000000000010D2" class="informalfigure" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010D2">
<img alt="A photo of Marc Andreesen." height="288" width="192" id="P700101195200000000000000000A08C" data-uri="P700101195200000000000000000553C" src="../images/4055102030.jpg"></img>
</figure>
</section>
<section id="P70010119520000000000000000010D4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010D4"><header><h1 class="title" id="P700101195200000000000000000A08D" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A08D" epub:type="title">How did you become interested in computing? Did you always know that you wanted to work in information technology?</h1></header>
<p id="P700101195200000000000000000A08E" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A08E">The video game and personal computing revolutions hit right when I was growing up—personal computing was the new technology frontier in the late 70’s and early 80’s. And it wasn’t just Apple and the IBM PC, but hundreds of new companies like Commodore and Atari as well. I taught myself to program out of a book called “Instant Freeze-Dried BASIC” at age 10, and got my first computer (a TRS-80 Color Computer—look it up!) at age 12.</p>
</section>
<section id="P70010119520000000000000000010D7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010D7"><header><h1 class="title" id="P700101195200000000000000000A08F" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A08F" epub:type="title">Please describe one or two of the most exciting projects you have worked on during your career. What were the biggest challenges?</h1></header>
<p id="P700101195200000000000000000A090" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A090">Undoubtedly the most exciting project was the original Mosaic web browser in ’92–’93—and the biggest challenge was getting anyone to take it seriously back then. At the time, everyone thought the interactive future would be delivered as “interactive television” by huge companies, not as the Internet by startups.</p>
</section>
<section id="P70010119520000000000000000010DA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010DA"><header><h1 class="title" id="P700101195200000000000000000A091" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A091" epub:type="title"><span class="pagebreak" title="185" id="P70010119520000000000000000010DC" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010DC" epub:type="pagebreak" role="doc-pagebreak"></span>What excites you about the future of networking and the Internet? What are your biggest concerns?</h1></header>
<p id="P700101195200000000000000000A092" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A092">The most exciting thing is the huge unexplored frontier of applications and services that programmers and entrepreneurs are able to explore—the Internet has unleashed creativity at a level that I don’t think we’ve ever seen before. My biggest concern is the principle of unintended consequences—we don’t always know the implications of what we do, such as the Internet being used by governments to run a new level of surveillance on citizens.</p>
</section>
<section id="P70010119520000000000000000010DE" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010DE"><header><h1 class="title" id="P700101195200000000000000000A093" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A093" epub:type="title">Is there anything in particular students should be aware of as Web technology advances?</h1></header>
<p id="P700101195200000000000000000A094" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A094">The rate of change—the most important thing to learn is how to learn—how to flexibly adapt to changes in the specific technologies, and how to keep an open mind on the new opportunities and possibilities as you move through your career.</p>
</section>
<section id="P70010119520000000000000000010E1" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010E1"><header><h1 class="title" id="P700101195200000000000000000A095" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A095" epub:type="title">What people inspired you professionally?</h1></header>
<p id="P700101195200000000000000000A096" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A096">Vannevar Bush, Ted Nelson, Doug Engelbart, Nolan Bushnell, Bill Hewlett and Dave Packard, Ken Olsen, Steve Jobs, Steve Wozniak, Andy Grove, Grace Hopper, Hedy Lamarr, Alan Turing, Richard Stallman.</p>
</section>
<section id="P70010119520000000000000000010E4" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010E4"><header><h1 class="title" id="P700101195200000000000000000A097" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A097" epub:type="title">What are your recommendations for students who want to pursue careers in computing and information technology?</h1></header>
<p id="P700101195200000000000000000A098" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A098">Go as deep as you possibly can on understanding how technology is created, and then complement with learning how business works.</p>
</section>
<section id="P70010119520000000000000000010E7" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010E7"><header><h1 class="title" id="P700101195200000000000000000A099" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A099" epub:type="title">Can technology solve the world’s problems?</h1></header>
<p id="P700101195200000000000000000A09A" data-uri="M02_KURO4140_07_SE_C02.xhtml#P700101195200000000000000000A09A">No, but we advance the standard of living of people through economic growth, and most economic growth throughout history has come from technology—so that’s as good as it gets.<span class="pagebreak" title="186" id="P70010119520000000000000000010EA" data-uri="M02_KURO4140_07_SE_C02.xhtml#P70010119520000000000000000010EA" epub:type="pagebreak" role="doc-pagebreak"></span></p>
</section>
</aside>
</section></body></html>