<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>10.6 Linux Multiprocessor Schedulers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part110.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part112.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">10.6 Linux Multiprocessor Schedulers</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 93%;text-align: justify;">Interestingly, in the Linux community, no common solution has ap- proached to building a multiprocessor scheduler. Over time, three dif- ferent schedulers arose: the O(1) scheduler, the Completely Fair Sched- uler (CFS), and the BF Scheduler (BFS)<span class="s35">2</span>. See Meehean’s dissertation for</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">an excellent overview of the strengths and weaknesses of said schedulers [M11]; here we just summarize a few of the basics.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Both O(1) and CFS uses multiple queues, whereas BFS uses a single queue, showing that both approaches can be successful. Of course, there are many other details which separate these schedulers. For example, the O(1) scheduler is a priority-based scheduler (similar to the MLFQ dis- cussed before), changing a process’s priority over time and then schedul- ing those with highest priority in order to meet various scheduling objec- tives; interactivity is a particular focus. CFS, in contrast, is a deterministic proportional-share approach (more like Stride scheduling, as discussed earlier). BFS, the only single-queue approach among the three, is also proportional-share, but based on a more complicated scheme known as Earliest Eligible Virtual Deadline First (EEVDF) [SA96]. Read more about these modern algorithms on your own; you should be able to understand how they work now!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part110.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part112.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
