<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part296.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part298.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[D91] “Just Win, Baby: Al Davis and His Raiders” Glenn Dickey, Harcourt 1991</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">There is even an undoubtedly bad book about Al Davis and his famous “just win” quote. Or, we suppose, the book is more about Al Davis and the Raiders, and maybe not just the quote. Read the book to find out?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[D68] “Cooperating sequential processes” Edsger W. Dijkstra, 1968</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF" class="a" target="_blank">Available: </a><a href="http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF" target="_blank">http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF</a></p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">One of the early seminal papers in the area. Discusses how Dijkstra posed the original concurrency problem, and Dekker’s solution.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[H93] “MIPS R4000 Microprocessor User’s Manual”. Joe Heinrich, Prentice-Hall, June 1993</p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_366.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_367.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_368.png"/></span></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="http://cag.csail.mit.edu/raw/" class="a" target="_blank">Available: </a>http://cag.csail.mit.edu/raw/ documents/R4400 Uman book Ed2.pdf</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">[H91] “Wait-free Synchronization” Maurice Herlihy</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">ACM Transactions on Programming Languages and Systems (TOPLAS) Volume 13, Issue 1, January 1991</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">A landmark paper introducing a different approach to building concurrent data structures. However, because of the complexity involved, many of these ideas have been slow to gain acceptance in deployed systems.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">[L81] “Observations on the Development of an Operating System” Hugh Lauer</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">SOSP ’81</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">A must-read retrospective about the development of the Pilot OS, an early PC operating system. Fun and full of insights.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="http://ftp.gnu.org/gnu/glibc/" class="a" target="_blank">[L09] “glibc 2.9 (include Linux pthreads implementation)” Available: </a><a href="http://ftp.gnu.org/gnu/glibc/" target="_blank">http://ftp.gnu.org/gnu/glibc/</a></p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">In particular, take a look at the nptl subdirectory where you will find most of the pthread support in Linux today.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="http://www.ajwm.net/amayer/papers/B5000.html" class="a" target="_blank">[M82] “The Architecture of the Burroughs B5000 20 Years Later and Still Ahead of the Times?” Alastair J.W. Mayer, 1982 </a><a href="http://www.ajwm.net/amayer/papers/B5000.html" target="_blank">www.ajwm.net/amayer/papers/B5000.html</a></p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">From the paper: “One particularly useful instruction is the RDLK (read-lock). It is an indivisible operation which reads from and writes into a memory location.” RDLK is thus an early test-and-set primitive, if not the earliest. Some credit here goes to an engineer named Dave Dahm, who apparently invented a number of these things for the Burroughs systems, including a form of spin locks (called “Buzz Locks” as well as a two-phase lock eponymously called “Dahm Locks.”)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">[MS91] “Algorithms for Scalable Synchronization on Shared-Memory Multiprocessors” John M. Mellor-Crummey and M. L. Scott</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">ACM TOCS, February 1991</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">An excellent survey on different locking algorithms. However, no OS support is used, just fancy hard- ware instructions.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[P81] “Myths About the Mutual Exclusion Problem”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">G.L. Peterson</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Information Processing Letters. 12(3) 1981, 115–116</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Peterson’s algorithm introduced here.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 4pt;padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">[S05] “Guide to porting from Solaris to Linux on x86” Ajay Sood, April 29, 2005</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.ibm.com/developerworks/linux/library/l-solar/" class="a" target="_blank">Available: </a><a href="http://www.ibm.com/developerworks/linux/library/l-solar/" class="s55" target="_blank">http://www.ibm.com/developerworks/linux/library/l-solar/</a></p><p class="s12" style="padding-top: 6pt;padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[S09] “OpenSolaris Thread Library”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="http://src.opensolaris.org/source/xref/onnv/onnv-gate/" class="a" target="_blank">Available: </a>http://src.opensolaris.org/source/xref/onnv/onnv-gate/ usr/src/lib/libc/port/threads/synch.c</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">This is also pretty interesting to look at, though who knows what will happen to it now that Oracle owns Sun. Thanks to Mike Swift for the pointer to the code.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[W09] “Load-Link, Store-Conditional”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Wikipedia entry on said topic, as of October 22, 2009</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://en.wikipedia.org/wiki/Load-Link/Store-Conditional" class="s55">http://en.wikipedia.org/wiki/Load-Link/Store-Conditional</a></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_369.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_370.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_371.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_372.png"/></span></p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">Can you believe we referenced wikipedia? Pretty shabby. But, we found the information there first, and it felt wrong not to cite it. Further, they even listed the instructions for the different architec- tures: <span class="s54">ldl l/stl c </span>and <span class="s54">ldq l/stq c </span>(Alpha), <span class="s54">lwarx/stwcx </span>(PowerPC), <span class="s54">ll/sc </span>(MIPS), and <span class="s54">ldrex/strex </span>(ARM version 6 and above).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: justify;">[WG00] “The SPARC Architecture Manual: Version 9” David L. Weaver and Tom Germond, September 2000 SPARC International, San Jose, California</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.sparc.org/standards/SPARCV9.pdf" class="a" target="_blank">Available: </a><a href="http://www.sparc.org/standards/SPARCV9.pdf" class="s55" target="_blank">http://www.sparc.org/standards/SPARCV9.pdf</a></p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_373.png"/></span></p><p class="s54" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="http://developers.sun.com/solaris/articles/atomic" style=" color: #231F20; font-family:&quot;Book Antiqua&quot;, serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt;" target="_blank">Also see: </a><a href="http://developers.sun.com/solaris/articles/atomic" class="s85" target="_blank">http://developers.sun.com/solaris/articles/atomic</a> sparc/ <span class="s17">for some more details on Sparc atomic operations.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="430" height="57" alt="image" src="Image_374.png"/></span></p><p class="s50" style="padding-top: 6pt;text-indent: 0pt;text-align: right;">29</p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part296.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part298.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
