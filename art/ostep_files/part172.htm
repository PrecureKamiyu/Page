<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>First Fit</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part171.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part173.htm">下一个 &gt;</a></p><p class="s32" style="padding-left: 68pt;text-indent: 0pt;text-align: justify;">First Fit</p><p style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">The <b>first fit </b>method simply finds the first block that is big enough and returns the requested amount to the user. As before, the remaining free space is kept free for subsequent requests.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">First fit has the advantage of speed – no exhaustive search of all the free spaces are necessary – but sometimes pollutes the beginning of the free list with a small objects. Thus, how the allocator manages the free list’s order becomes an issue. One approach is to use <b>address-based or- dering</b>; by keeping the list ordered by the address of the free space, coa- lescing becomes easier, and fragmentation tends to be reduced.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part171.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part173.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
