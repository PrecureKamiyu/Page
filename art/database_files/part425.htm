<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>23.8  Consensus in Distributed Systems</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part424.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part426.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">23.8  <span style=" color: #00AEEF;">Consensus in Distributed Systems</span></p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">In this section we ﬁrst describe the consensus problem in a distributed system, that is, how a set of nodes agree on a decision in a fault-tolerant way. Distributed consensus is</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">a key building block for protocols that update replicated data in a fault-tolerant manner. We outline two consensus protocols, Paxos and Raft. We then describe replicated state machines, which can be used to make services, such as data storage systems and lock managers, fault tolerant. We end the section by describing how consensus can be used to make two-phase commit nonblocking.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">23.8.1 Problem Overview</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Software systems need to make decisions, such as the coordinator’s decision on whether to commit or abort a transaction when using <span class="s44">2PC</span>, or a decision on which node is to act as coordinator, in case a current coordinator fails.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">If the decision is made by a single node, such as the commit/abort decision made by a coordinator node in <span class="s44">2PC</span>, the system may block in case the node fails, since other nodes have no way of determining what decision was made. Thus, to ensure fault tol- erance, multiple nodes must participate in the decision protocol; even if some of these nodes fail, the protocol must be able to reach a decision. A single node may make a proposal for a decision, but it must involve the other nodes to reach a decision in a fault-tolerant manner.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The most basic form of the <span class="s63">distributed consensus problem </span>is thus as follows: a set of <i>n </i>nodes (referred to as <i>participants</i>) need to agree on a decision by executing a protocol such that:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">All participants must “learn” the same value for the decision even if some nodes fail during the execution of the protocol, or messages are lost, or there are network partitions.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">The protocol should not block, and must terminate, as long as some majority of the nodes participating remain alive and can communicate with each other.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Any real system cannot just make a single decision once, but needs to make a series of decisions. A good abstract of the process of making multiple consensus decisions is to treat each decision as <i>adding a record to a log</i>. Each node has a copy of the log, and records are appended to the log at each node. There can potentially be conﬂicts on what record is added at what point in a log. The <span class="s63">multiple consensus protocol </span>viewed from this perspective needs to ensure that the log is uniquely deﬁned.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Most consensus protocols allow temporary divergence of logs across nodes while the protocol is being executed; that is, the same log position at diﬀerent nodes may have diﬀerent records, and the end of the log may be diﬀerent at diﬀerent nodes. Shared- log consensus protocols keep track of an index into the log such that any entry before that index has deﬁnitely been agreed upon. Any entries after that index may be in the process of being agreed upon, or may be entries from failed attempts at consensus. However, the protocols subsequently bring the inconsistent parts of the log logs back in synchronization. To do this, log records at some nodes may be deleted after being inserted; such log records are viewed as not yet committed and cannot be used to make</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">decisions. Only log records in the preﬁx of the log that are in the committed preﬁx may be used to make decisions.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Several protocols have been proposed for distributed consensus. Of these, the Paxos family of protocols is one of the most popular, and it has been implemented in many systems. While the basic Paxos protocol is intuitively easy to understand at a high level, there are a number of details in its implementation that are rather compli- cated, and particularly so in the multiple consensus version. To address this issue, the Raft consensus protocol was developed, with ease of understanding and implementa- tion being key goals, and it has been adopted by many systems. We outline the intuition behind these protocols in this section.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">A key idea behind distributed consensus protocols is the idea of <i>voting </i>to make a decision; a particular decision succeeds only if a majority of the participating nodes vote for it. Note that if two or more diﬀerent values are proposed for a particular deci- sion, at most one of them can be voted for by a majority; thus, it is not possible for two diﬀerent values to be chosen. Even if some nodes fail, if a majority of the participants vote for a value, it gets chosen, thus making the voting fault tolerant as long as a ma- jority of the participants are up and connected to each other. There is, however, a risk that votes may get split between the proposed values, and some nodes may not vote if they fail; as a result, no value may be decided on. In such a case the voting procedure has to be executed again.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: right;">While the above intuition is easy enough to understand, there are many details that make the protocols nontrivial. We study some of these issues in the following sections. We note that although we study some of the features of the Paxos and Raft con- sensus protocols, we omit a number of details that are needed for correct operation to</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">keep our description concise.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">We also note that a number of other consensus protocols have been proposed, and some of them are widely used, such as the Zab protocol which is part of the ZooKeeper distributed coordination service.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">23.8.2 The Paxos Consensus Protocol</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">The basic Paxos protocol for making a single decision has the following participants.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 113pt;text-indent: -16pt;text-align: justify;">1. <span class="p">One or more nodes that can propose a value for the decision; such nodes are called </span>proposers<span class="p">.</span></p><p class="s63" style="padding-top: 6pt;padding-left: 113pt;text-indent: -17pt;text-align: justify;">2. <span class="p">One or more nodes that act as </span>acceptors<span class="p">. An acceptor may get proposals with diﬀerent values from diﬀerent proposers and must choose (vote for) only one of the values.</span></p><p style="padding-left: 113pt;text-indent: 13pt;text-align: justify;">Note that failure of an acceptor does not cause a problem, as long as a majority of the acceptors are live and reachable. Failure or disconnection of a majority would block the consensus protocol.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-top: 4pt;padding-left: 145pt;text-indent: -17pt;text-align: justify;">3. <span class="p">A set of nodes, called </span>learners<span class="p">, query the acceptors to ﬁnd what value each ac- ceptor voted for in a particular round. (Acceptors could also send the value they accepted to the learners, without waiting for a query from the learner.)</span></p><p style="padding-top: 10pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Note that the same node can play the roles of proposer, acceptor, and learner.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">If a majority of the acceptors voted for a particular value, that value is the chosen (consensus) value for that decision. But there are two problems:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 145pt;text-indent: -16pt;text-align: justify;">1. <span class="p">It is possible for votes to be split among multiple proposals, and no proposal is accepted by a majority of the acceptors.</span></p><p style="padding-left: 145pt;text-indent: 14pt;text-align: justify;">If any proposed value is to geta majority, at least some acceptors must change their decision. Thus, we must allow another round of decision making, where ac- ceptors may choose a new value. This may need to be repeated as long as required until one value wins a majority vote.</p><p class="s63" style="padding-top: 6pt;padding-left: 145pt;text-indent: -17pt;text-align: justify;">2. <span class="p">Even if a majority of nodes do accept a value, it is possible that some of these nodes die or get disconnected after accepting a value, but before any learner ﬁnds out about their acceptance, and the remaining acceptors of that value do not constitute a majority.</span></p><p style="padding-left: 145pt;text-indent: 14pt;text-align: justify;">If this is treated as the failure of a round, and a diﬀerent value is chosen in a subsequent round, we have a problem. In particular, a learner that learned about the earlier majority would conclude that a particular value was chosen, while another learner could conclude that a diﬀerent value was chosen, which is not acceptable.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Note also that acceptors must log their decision so when they recover they know what decision they made earlier.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The ﬁrst problem above, namely, split votes, does not aﬀect correctness, but it aﬀects performance. To avoid this problem, Paxos makes use of a coordinator node. Proposers send a proposal to the coordinator, which picks one of the proposed values and follows the preceding steps to get a majority vote. If proposals come from only one coordinator, there is no conﬂict, and the lone proposed value gets a majority vote (modulo network and node failures).</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Note that if the coordinator dies or is unreachable, a new coordinator can be elected, using techniques we saw earlier in Section 23.7, and the new coordinator can then do the same job as the earlier coordinator. Coordinators have no local state, so the new one can take over without any recovery steps.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The second problem, namely, diﬀerent values getting majorities in diﬀerent rounds, is a serious problem and must be avoided by the consensus protocol. To do so, Paxos uses the following steps:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 145pt;text-indent: -16pt;text-align: justify;">1. <span class="p">Each proposal in Paxos has a number; diﬀerent proposals must have diﬀerent numbers.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 113pt;text-indent: -17pt;text-align: justify;"><span class="s63">2. </span>In phase 1a of the protocol, a proposer sends a <i>prepare </i>message to acceptors, with its proposal number <i>n</i>.</p><p style="padding-top: 6pt;padding-left: 113pt;text-indent: -17pt;text-align: justify;"><span class="s63">3. </span>In phase 1b of the protocol, an acceptor that receives a prepare message with number <i>n </i>checks if it has already responded to a message with a number higher than <i>n</i>. If so, it ignores the message. Otherwise, it remembers the number <i>n </i>and</p><p class="s13" style="padding-top: 1pt;padding-left: 113pt;text-indent: 0pt;line-height: 70%;text-align: justify;"><span class="p">responds with the highest proposal number </span>m <span class="s83">&lt; </span>n <span class="p">that it has already accepted, along with the corresponding value </span>v<span class="p">; if it has not accepted any value earlier, it</span></p><p style="padding-left: 113pt;text-indent: 0pt;text-align: justify;">indicates so in its response. (Note that responding is diﬀerent from accepting.)</p><p style="padding-top: 6pt;padding-left: 113pt;text-indent: -17pt;text-align: justify;"><span class="s63">4. </span>In phase 2a, the proposer checks if it got a response from a majority of the ac- ceptors. If it does, it chooses a value <i>v </i>as follows: If none of the acceptors has already accepted any value, the proposer may use whatever value it intended to propose. If at least one of the acceptors responded that it accepted a value <i>v </i>with some number <i>m</i>, the proposer chooses the value <i>v </i>that has the highest associated</p><p style="padding-left: 113pt;text-indent: 0pt;line-height: 16pt;text-align: justify;">number <i>m </i>(note that <i>m </i>must be <span class="s83">&lt; </span><i>n</i>).</p><p style="padding-left: 127pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">The proposer now sends an <i>accept </i>request with the chosen value <i>v </i>and number</p><p class="s13" style="padding-left: 113pt;text-indent: 0pt;text-align: left;">n<span class="p">.</span></p><p style="padding-top: 8pt;padding-left: 113pt;text-indent: -17pt;line-height: 76%;text-align: justify;"><span class="s63">5. </span>In phase 2b, when an acceptor gets an accept request with value <i>v </i>and number <i>n</i>, it checks if it has responded to a prepare message with number <i>n</i><span class="s98">1</span> <span class="s83">&gt; </span><i>n</i>; if so it ignores the accept request. Otherwise, it accepts the proposed value <i>v </i>with</p><p style="padding-top: 1pt;padding-left: 113pt;text-indent: 0pt;text-align: justify;">number <i>n</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;">The above protocol is quite clever, since it ensures the following: if a majority of acceptors accepted a value <i>v </i>(with any number <i>n</i>), then even if there are further pro-</p><p style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;line-height: 70%;text-align: justify;">posals with number <i>n</i><span class="s98">1</span> <span class="s83">&gt; </span><i>n</i>, the value proposed will be value <i>v</i>. Intuitively, the reason is that a value can be accepted with number <i>n </i>only if a majority of nodes respond to</p><p style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">a prepare message with number <i>n</i>; let us call this set of acceptors <i>P</i>. Suppose a value <i>v </i>had been accepted earlier by a majority of nodes with number <i>m</i>; call this set of nodes <i>A</i>. Then <i>A </i>and <i>P </i>must have a node in common, and the common node will respond with value <i>v </i>and number <i>m</i>.</p><p class="s13" style="padding-top: 1pt;padding-left: 88pt;text-indent: 17pt;line-height: 70%;text-align: justify;"><span class="p">Note that some other proposal with a number </span>p <span class="s83">&gt; </span>n <span class="p">may have been made earlier, but if it had been accepted by even one node, then a majority of nodes would have</span></p><p style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">responded to the proposal with number <i>p</i>, and thus will not respond to the proposal with number <i>n</i>. Thus, if a proposal with value <i>v </i>is accepted by a majority of nodes, we can be sure that any further proposal will be for the already chosen value <i>v</i>.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Note that if a learner ﬁnds that no proposal was accepted by a majority of nodes, it can ask any proposer to issue a fresh proposal. If a value <i>v </i>had been accepted by a majority of nodes, it would be found and accepted again, and the learner would now learn about the value. If no value was accepted by a majority of nodes earlier, the new proposal could be accepted.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The above algorithm is for a single decision. Paxos has been extended to allow a series of decisions; the extended algorithm is called Multi-Paxos. Real implementations</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">also need to deal with other issues, such as how to add a node to the set of acceptors, or to remove a node from the set of acceptors if it is down for a long time, without aﬀecting the correctness of the protocol. References with more details about Paxos and Multi-Paxos may be found in the bibliographic notes for this chapter, available online.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">23.8.3 The Raft Consensus Protocol</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">There are several consensus protocols whose goal is to maintain a log, to which records can be appended in a fault-tolerant manner. Each node participating in such a protocol has a replica of the log. Log-based protocols simplify the handling of multiple decisions. The Raft consensus protocol is an example of such a protocol, and it was designed to be (relatively) easy to understand.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A key goal of log-based protocols is to keep the log replicas in sync by presenting a logical view of appending records atomically to all copies of the log. In fact, atomically appending the same entry to all replicas is not possible, due to failures. Recall that failure modes may include a node being temporarily disconnected and missing some updates, without ever realizing it was disconnected. Further, a log append may be done at just a few nodes, and the append process may fail subsequently, leaving other replicas without the record. Thus, ensuring all copies of the log are identical at all times is impossible. Such protocols must ensure the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Even if a log replica is temporarily inconsistent with another, the protocol will bring it back in sync eventually by deleting and replacing log records on some copies.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">A log entry will not be treated as committed until the algorithm guarantees that it will never be deleted.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Protocols such as Raft that are based on log replication can allow each node to run a “state machine,” with log entries used as commands to the state machine; state machines are described in Section 23.8.4.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The Raft algorithm is based on having a coordinator, which is called a <span class="s63">leader </span>in Raft terminology. The other participating nodes are called <span class="s63">followers</span>. Since leaders may die and need to be replaced, time is divided into terms, which are identiﬁed by integers. Each term has a unique leader, although some terms may not have any associated leader. Later terms have higher identiﬁers than earlier terms.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Leaders are elected in Raft using the randomized-retry algorithm outlined in Sec- tion 23.7.2. Recall that the randomized-retry algorithm already incorporates the notion of a term. A node that votes for a leader does so for a speciﬁc term. Nodes keep track of the currentTerm based on messages from leaders or requests for votes.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Note that a leader <i>N</i><span class="s98">1</span> may get temporarily disconnected, but get reconnected after other nodes ﬁnd the leader cannot be reached, and elect a new leader <i>N</i><span class="s98">2</span>. Node <i>N</i><span class="s98">1</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:26pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041" bgcolor="#D4EFFC"><p class="s519" style="padding-top: 7pt;padding-left: 2pt;text-indent: 0pt;text-align: center;">1</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">2</p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">3</p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">4</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">5</p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">6</p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:2pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">7</p></td></tr><tr style="height:26pt"><td style="width:35pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">1</p><p class="s519" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">x <span class="s520">&lt; </span>2</p></td><td style="width:33pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">1</p><p class="s519" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">z <span class="s520">&lt; </span>2</p></td><td style="width:35pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">3</span></p></td><td style="width:37pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">2</p><p class="s521" style="padding-left: 7pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">4</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 2pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">1</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 2pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">y <span class="s199">&lt; </span><span class="s522">6</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:2pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 5pt;text-indent: 0pt;text-align: center;">z <span class="s199">&lt; </span><span class="s522">4</span></p></td></tr></table><p class="s465" style="padding-left: 129pt;text-indent: 0pt;text-align: left;">	</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s523" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">follower 1</p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:25pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">z <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">3</span></p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">2</p><p class="s521" style="padding-left: 7pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">4</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">1</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p class="s258" style="padding-left: 129pt;text-indent: 0pt;text-align: left;"> </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s523" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">follower 2</p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:25pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">z <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">3</span></p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">2</p><p class="s521" style="padding-left: 7pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">4</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">1</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">y <span class="s199">&lt; </span><span class="s522">6</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">z <span class="s199">&lt; </span><span class="s522">4</span></p></td></tr></table><p class="s258" style="padding-left: 129pt;text-indent: 0pt;text-align: left;"> </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s523" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">follower 3</p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:25pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">z <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">3</span></p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p class="s258" style="padding-left: 129pt;text-indent: 0pt;text-align: left;"> </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s523" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">follower 4</p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:25pt"><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">z <span class="s199">&lt; </span><span class="s522">2</span></p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">1</p><p class="s521" style="padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">3</span></p></td><td style="width:37pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">2</p><p class="s521" style="padding-left: 7pt;padding-right: 8pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">4</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 6pt;padding-right: 5pt;text-indent: 0pt;text-align: center;">x <span class="s199">&lt; </span><span class="s522">1</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s519" style="padding-top: 1pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">3</p><p class="s521" style="padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">y <span class="s199">&lt; </span><span class="s522">6</span></p></td><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p class="s258" style="padding-left: 129pt;text-indent: 0pt;text-align: left;"> </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 184pt;text-indent: 0pt;line-height: 4pt;text-align: left;"><span><img width="222" height="6" alt="image" src="Image_3290.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="56" height="75" alt="image" src="Image_3291.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s523" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">leader</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s523" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">log index</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3292.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3293.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3294.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3295.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3296.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3297.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3298.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3299.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3300.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3301.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3302.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3303.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3304.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3305.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3306.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3307.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3308.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3309.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3310.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3311.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3312.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3313.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3314.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3315.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3316.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3317.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3318.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="0" alt="image" src="Image_3319.png"/></span></p><p class="s523" style="padding-left: 56pt;text-indent: 0pt;line-height: 9pt;text-align: center;">committed entries</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 23.9 <span class="s74">Example of Raft logs.</span></p><p style="padding-top: 8pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">does not know that there is a new leader and may continue to execute the actions of a leader. The protocol should be robust to such situations.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: right;">Figure 23.9 shows an example of Raft logs at a leader and four followers. Note that the log index denotes the position of a particular record in a log. The number at the top of each log record is the term in which the log record was created, while the part below it shows the log entry, assumed here to record assignments to diﬀerent variables. Any node that wishes to append a record to the replicated log sends a log append request to the current leader. The leader adds its term as a ﬁeld of the log records and appends the record to its log; it then sends an <i>AppendEntries </i>remote procedure call to</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: left;">the other nodes; the call contains several parameters, including these:</p><p class="s39" style="padding-top: 10pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s13">term</span><span class="p">: the term of the current leader.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s13">previousLogEntryPosition</span><span class="p">: the position in the log of the preceding log entry.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s13">previousLogEntryTerm</span><span class="p">: the term associated with the preceding log entry.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s13">logEntries</span><span class="p">: an array of log records, allowing the call to append multiple log records at the same time.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s13">leaderCommitIndex</span><span class="p">: an index such that all log records at that index or earlier are committed. Recall that a log entry is not considered committed until a leader has conﬁrmed that a majority of nodes have accepted that log entry. The leader keeps, in leaderCommitIndex, a position in the log such that all log records at that index and earlier are committed; this value is sent along with the AppendEntries call so that the nodes learn which log records have been committed.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">If a majority of the nodes respond to the call with a return value true, the leader can report successful log append (along with the position in the log) to the node that initiated the log append. We will shortly see what happens if a majority do not respond with true.</p><p style="padding-left: 137pt;text-indent: 0pt;text-align: justify;">Each follower that receives an AppendEntries message does the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 128pt;text-indent: 0pt;text-align: justify;">1. <span class="p">If the term in the message is less than currentTerm, then Return false.</span></p><p class="s63" style="padding-top: 6pt;padding-left: 145pt;text-indent: -17pt;text-align: justify;">2. <span class="p">If the log does not contain an entry at a previous log entry position, whose term matches the term in the message, then Return false.</span></p><p class="s63" style="padding-top: 6pt;padding-left: 145pt;text-indent: -17pt;text-align: justify;">3. <span class="p">If there is an existing entry at the log position that is diﬀerent from the ﬁrst log record in the AppendEntries message, the existing entry and all subsequent log entries are deleted.</span></p><p class="s63" style="padding-top: 6pt;padding-left: 145pt;text-indent: -17pt;text-align: justify;">4. <span class="p">Any log records in the logEntries parameter that are not already in the log are appended to the log.</span></p><p style="padding-top: 8pt;padding-left: 145pt;text-indent: -17pt;line-height: 76%;text-align: justify;"><span class="s63">5. </span>The follower also keeps track of a local commitIndex to track which records are committed. If the leaderCommitIndex <span class="s83">&gt; </span>commitIndex, set commitIndex <span class="s15">= </span>min(leaderCommitIndex, index of last entry in log).</p><p class="s63" style="padding-top: 6pt;padding-left: 128pt;text-indent: 0pt;text-align: justify;">6. <span class="p">Return true.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Note that the last step keeps track of the last committed log record. It is possible that the leader’s log is ahead of the local log, so commitIndex cannot be blindly set to leaderCommitIndex, and it may need to be set to the local end of log if the leaderCom- mitIndex is ahead of the local end of log.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Figure 23.9 shows that diﬀerent followers may have diﬀerent log states, since some AppendEntries messages may not have reached those nodes. The part of the log up to entry 6 is present at a majority of nodes (namely, the leader, follower 2 and follower 4). On receipt of a true response to the AppendEntries call for the log record at position 6 from these followers, the leader can set leaderCommitIndex to 6.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">It is possible for a node <i>N</i><span class="s98">1</span> to be a leader in some term, and on temporary discon- nection it may get replaced by a new leader <i>N</i><span class="s98">2</span> in the next term. <i>N</i><span class="s98">1</span> may not realize that there is a new leader for some time and may send appendEntry messages to other nodes. However, a majority of the other nodes will know about the new leader, and would have a term higher than that of <i>N</i><span class="s98">1</span>. Thus, these nodes would return false, and include their current term in the response. Node <i>N</i><span class="s98">1</span> would then realize that there is a leader with a new term; it then switches from the role of leader to that of follower.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The protocol must deal with the fact that some nodes may have outdated logs. Note that in step 2 of the follower protocol, the follower returns false if its log is outdated. In such a case, the leader will retry an AppendEntries, sending it all log records from an even earlier point in the log. This may happen several times, until the leader sends log</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">records from a point that is already in the follower log. At this point, the AppendEntries command would succeed.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">A key remaining problem is to ensure that if a leader dies, and another one takes over, the log is brought to a consistent state. Note that the leader may have appended some log entries locally and replicated some of them to some other nodes, but the new leader may or may not have all these records. To deal with this situation, the Raft protocol includes steps to ensure the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 113pt;text-indent: -16pt;text-align: right;"><span class="s63">1. </span>The protocol ensures that any node elected as leader has all the committed log entries. To do so, any candidate must contact a majority of the nodes and send information about its log state when seeking a vote. A node will vote for a can- didate in the election only if it ﬁnds that the candidate’s log state is <i>at least as up-to-date </i>as its own; note that the deﬁnition of “at least as up-to-date” is a little complicated since it involves term identiﬁers in log records, and we omit details. Since the above check is done by a majority of the nodes that voted for the new leader, any committed entry would certainly be present in the log of the newly</p><p style="padding-left: 113pt;text-indent: 0pt;text-align: justify;">elected leader.</p><p class="s63" style="padding-top: 6pt;padding-left: 96pt;text-indent: 0pt;text-align: justify;">2. <span class="p">The protocol then forces all other nodes to replicate the leader’s log.</span></p><p style="padding-left: 113pt;text-indent: 15pt;text-align: justify;">Note that the ﬁrst step above does not actually ﬁnd up to what log record is committed. Some of the log records at the new leader may not have been com- mitted earlier, but may get committed when the new leader’s log is replicated in this step.</p><p style="padding-left: 113pt;text-indent: 14pt;text-align: justify;">There is also a subtle detail in that the new leader cannot count the number of replicas with a particular record from an earlier term, and declare it committed if it is at a majority of the nodes. Intuitively, the problem is because of the deﬁnition of “at least as up-to-date” and the possibility that a leader may fail, recover, and be elected as leader again. We omit details, but note that the way this problem is solved is for the new leader to replicate a new log record in its current term; when that log record is determined to be at a majority of the replicas, it and all earlier log records can be declared to be committed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">It should be clear that although the protocol, like Paxos, seems simple at a high level, there are many subtle details that need to be taken care of to ensure consistency even in the face of multiple failures and restarts. There are further details to be taken care of, including how to change the <i>cluster membership</i>, that is, the set of nodes that form the system, while the system is running (doing so carelessly can result in incon- sistencies). Details of the above steps, including proofs of correctness, may be found in references in the bibliographic notes for this chapter, available online.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">23.8.4 Fault-Tolerant Services Using Replicated State Machines</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">A key requirement in many systems is for a service to be made fault tolerant. A lock manager is an example of such a service, as is a key-value storage system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:19pt"><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">x<span class="s525">&lt; </span><span class="s526">2</span></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">z <span class="s525">&lt; </span><span class="s526">2</span></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">x <span class="s525">&lt; </span><span class="s526">3</span></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">y <span class="s525">&lt; </span><span class="s526">4</span></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">y <span class="s525">&lt; </span><span class="s526">7</span></p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:19pt"><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">x <span class="s525">&lt; </span><span class="s526">2</span></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">z <span class="s525">&lt; </span><span class="s526">2</span></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">x <span class="s525">&lt; </span><span class="s526">3</span></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#F3FAFE;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">y <span class="s525">&lt; </span><span class="s526">4</span></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">y <span class="s525">&lt; </span><span class="s526">7</span></p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:19pt"><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">x <span class="s525">&lt; </span><span class="s526">2</span></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">z <span class="s525">&lt; </span><span class="s526">2</span></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">x <span class="s525">&lt; </span><span class="s526">3</span></p></td><td style="width:20pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">y <span class="s525">&lt; </span><span class="s526">4</span></p></td><td style="width:19pt;border-top-style:solid;border-top-width:1pt;border-top-color:#404041;border-left-style:solid;border-left-width:1pt;border-left-color:#404041;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#404041;border-right-style:solid;border-right-width:1pt;border-right-color:#404041"><p class="s524" style="padding-top: 4pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">y <span class="s525">&lt; </span><span class="s526">7</span></p></td></tr></table><p class="s258" style="padding-left: 129pt;text-indent: 0pt;text-align: left;">		</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="480" height="171" alt="image" src="Image_3320.png"/></span></p><p class="s250" style="text-indent: 0pt;line-height: 9pt;text-align: left;">y <span class="s527">&lt; </span><span class="s514">7</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s514" style="text-indent: 0pt;line-height: 106%;text-align: left;">Consensus Module</p><p style="text-indent: 0pt;text-align: left;"/><p class="s250" style="text-indent: 0pt;line-height: 8pt;text-align: left;">x <span class="s514">3</span></p><p class="s250" style="text-indent: 0pt;text-align: left;">y <span class="s514">7</span></p><p class="s250" style="text-indent: 0pt;text-align: left;">z <span class="s514">3</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s514" style="text-indent: 0pt;line-height: 106%;text-align: left;">Consensus Module</p><p style="text-indent: 0pt;text-align: left;"/><p class="s250" style="text-indent: 0pt;line-height: 8pt;text-align: left;">x <span class="s514">3</span></p><p class="s250" style="text-indent: 0pt;text-align: left;">y <span class="s514">7</span></p><p class="s250" style="text-indent: 0pt;text-align: left;">z <span class="s514">3</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s514" style="text-indent: 0pt;line-height: 106%;text-align: left;">Consensus Module</p><p style="text-indent: 0pt;text-align: left;"/><p class="s250" style="text-indent: 0pt;line-height: 8pt;text-align: left;">x <span class="s514">3</span></p><p class="s250" style="text-indent: 0pt;text-align: left;">y <span class="s514">7</span></p><p class="s250" style="text-indent: 0pt;text-align: left;">z <span class="s514">3</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s514" style="text-indent: 0pt;line-height: 8pt;text-align: left;">Log                Log                Log</p><p style="text-indent: 0pt;text-align: left;"/><p class="s506" style="text-indent: 0pt;line-height: 10pt;text-align: left;">leader</p><p style="text-indent: 0pt;text-align: left;"/><p class="s506" style="text-indent: 0pt;line-height: 10pt;text-align: left;">follower</p><p style="text-indent: 0pt;text-align: left;"/><p class="s506" style="text-indent: 0pt;line-height: 10pt;text-align: left;">follower</p><p style="text-indent: 0pt;text-align: left;"/><p class="s514" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Client</p><p style="text-indent: 0pt;text-align: left;"/><p class="s514" style="padding-top: 4pt;padding-left: 127pt;text-indent: 0pt;line-height: 106%;text-align: left;">Leader declares log record committed after it is replicated at a majority of nodes. Update of state machine at each replica happens only after log record has been committed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 218pt;text-indent: 0pt;text-align: left;">Figure 23.10 <span class="s74">Replicated state machine.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A very powerful approach to making services fault tolerant is to model them as “state machines” and then use the idea of replicated state machines that we describe next.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A <span class="s63">state machine </span>receives inputs and has a stored state; it makes state transitions on each input and may output some results along with the state transition. A <span class="s63">replicated state machine </span>is a state machine that is replicated on multiple nodes to make it fault tolerant. Intuitively, even if one of the nodes fails, the state and output can be obtained from any of the nodes that are alive, provided all the state machines are in a consistent state. The key to ensuring that the state machine replicas are consistent is to (a) require the state machines to be deterministic, and (b) ensure that all replicas get exactly the same input in the same order.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">To ensure that all replicas get exactly the same input in the same order, we just append the inputs to a replicated log, using, for example, techniques we saw earlier in Section 23.8.3. As soon as a log entry is determined to be committed, it can be given as input to the state machine, which can then process it.</p><p style="padding-left: 119pt;text-indent: 17pt;line-height: 94%;text-align: justify;">Figure 23.10 depicts a replicated state machine based on a replicated log. When a client issues a command, such as <i>y </i><span class="s86">← </span>7 in the ﬁgure, the command is sent to the leader, where the command is appended to the log. The leader then replicates the command to the logs at the followers. Once a majority have conﬁrmed that the command has been replicated in their logs, the leader declares the command committed and applies</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">the command to its state machine. It also informs the followers of the commit, and the followers then apply the command to their state machine.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In the example in Figure 23.10, the state machine merely records the value of the updated variable; but in general, the state machine may execute any other actions. The actions are, however, required to be deterministic, so all state machines are in exactly</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">the same state when they have executed the same set of commands; the order of exe- cution of commands will be the same since commands are executed in the log order.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Commands such as lock request must return a status to the caller. The status can be returned from any one of the replicas where the command is performed. Most im- plementations return the status from the leader node, since the request is sent to the leader, and the leader is also the ﬁrst node to know when a log record has been com- mitted (replicated to a majority of the nodes).</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">We now consider two applications that can be made fault-tolerant using the repli- cated state machine concept.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">We ﬁrst consider how to implement a <span class="s63">fault-tolerant lock manager</span>.A lock manager gets commands, namely, lock requests and releases, and maintains a state (lock table). It also gives output (lock grants or rollback requests on deadlock) on processing inputs (lock requests or releases). Lock managers can easily be coded to be deterministic, that is, given the same input, the state and output will be the same even if the code is executed again on a diﬀerent node.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Thus, we can take a centralized implementation of a lock manager and run it on each node. Lock requests and releases are appended to a replicated log using, for ex- ample, the Raft protocol. Once a log entry is committed, the corresponding command (lock request or release) can be processed, in order, by the lock manager code at each replica. Even if some of the replicas fail, the other replicas can continue processing as long as a majority are up and connected.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Now consider the issue of implementing a <span class="s63">fault-tolerant key-value store</span>. A single- node storage system can be modeled as a state machine that supports <span class="s49">put() </span>and <span class="s49">get() </span>operations. The storage system is treated as a state machine, and the state machine is run on multiple nodes.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The <span class="s49">put() </span>operations are appended to the log using a consensus protocol and are processed when the consensus protocol declares the corresponding log records to be committed (i.e., replicated to a majority of the nodes).</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">If the consensus protocol uses leaders, <span class="s49">get() </span>operations need not be logged, and need to be executed only on the leader. To ensure that a <span class="s49">get() </span>operation sees the most recent <span class="s49">put() </span>on the same data item, all <span class="s49">put() </span>operations on the same data item that precede the <span class="s49">get() </span>operation in the log must be committed before the <span class="s49">get() </span>operation is processed. (If a consensus protocol does not use a leader, <span class="s49">get() </span>operations can also be logged and executed by at least one of the replicas which returns the value to the caller.)</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Google’s Spanner is an example of a system that uses the replicated state machine approach to creating a fault-tolerant implementation of a key-value storage system and a lock manager.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">To ensure scalability, Spanner breaks up data into partitions, each of which has a subset of the data. Each partition has its data replicated across multiple nodes. Each node runs two state machines: one for the key-value storage system, and one for the lock manager. The set of replicas for a particular partition are called a <i>Paxos group</i>; one</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">of the nodes in a Paxos group acts as the Paxos group leader. Lock manager operations, as well as key-value store operations for a particular partition, are initiated at the Paxos group leader for that partition. The operations are appended to a log, which is replicated to the other nodes in the Paxos group using the Paxos consensus protocol.<span class="s76">2</span> Requests are applied in order at each member of the Paxos group, once they are committed.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">As an optimization, <span class="s49">get() </span>operations are not logged, and executed only at the leader as described earlier. As a further optimization, Spanner allows reads to run as of a particular point in time, allowing reads to be executed at any replica of the partition (in other words, any other member of the Paxos group) that is suﬃciently up to date, based on the multiversion two-phase locking protocol described earlier in Section 23.5.1.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">23.8.5 Two-Phase Commit Using Consensus</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Given a consensus protocol implementation, we can use it to create a <span class="s63">non-blocking two- phase commit </span>implementation. The idea is simple: instead of a coordinator recording its commit or abort decision locally, it uses a consensus protocol to record its decision in a replicated log. Even if the coordinator subsequently fails, other participants in the consensus protocol know about the decision, so the blocking problem is avoided.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In case the coordinator fails before making a decision for a transaction, a new coordinator can ﬁrst check the log to see if a decision was made earlier, and if not it can make a commit/abort decision and use the consensus protocol to record the decision.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">For example, in the Spanner system developed by Google, a transaction may span multiple partitions. Two-phase commit is initiated by a client and coordinated by the Paxos group leader at one of the partitions where the transaction executed. All other partitions where an update was performed acts as a participant in the two-phase commit protocol. Prepare and commit messages are sent to the Paxos group leader node of each of the partitions; recall that two-phase commit participants as well as coordinators record decisions in their local logs. These decisions are recorded by each leader, using consensus involving all the other nodes in its Paxos group.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">If a Paxos group member other than the leader dies, the leader can continue pro- cessing the two-phase commit steps, as long as a majority of the group nodes are up and connected. If a Paxos group leader fails, one of the other group members takes over as the group leader. Note that all the state information required to continue commit pro- cessing is available to the new leader. Log records written during commit processing are available since the log is replicated. Also, recall from Section 23.8.4 that Spanner makes the lock manager fault tolerant by using the replicated state machine concept. Thus, a consistent replica of the lock table is also available with the new leader. Thus, the two-phase commit steps of both the coordinator and the participants can continue to be executed even if some nodes fail.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="95" height="1" alt="image" src="Image_3321.png"/></span></p><p class="s77" style="padding-top: 3pt;padding-left: 43pt;text-indent: 0pt;text-align: center;">2<span class="s78">The Multi-Paxos version of Paxos is used, but we shall just refer to it as Paxos for simplicity.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part424.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part426.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
