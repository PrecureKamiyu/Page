<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>25.5  Distributed Directory Systems</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part451.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part453.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">25.5  <span style=" color: #00AEEF;">Distributed Directory Systems</span></p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Consider an organization that wishes to make data about its employees available to a variety of people in the organization; examples of the kinds of data include name, designation, employee-id, address, email address, phone number, fax number, and so on. Such data are often shared via directories, which allow users to browse and search for desired information.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">In general, a directory is a listing of information about some class of objects such as persons. Directories can be used to ﬁnd information about a speciﬁc object, or in the reverse direction to ﬁnd objects that meet a certain requirement.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: right;">A major application of directories today is to authenticate users: applications can collect authentication information such as passwords from users and authenticate them using the directory. Details about the user category (e.g., is the user a student or an instructor), as well as authorizations that a user has been given, may also be shared through a directory. Multiple applications in an organization can then authenticate users using a common directory service and user category and authorization informa- tion from the directory to provide users only with data that they are authorized to see. Directories can be used for storing other types of information, much like ﬁle sys- tem directories. For instance, web browsers can store personal bookmarks and other browser settings in a directory system. A user can thus access the same settings from multiple locations, such as at home and at work, without having to share a ﬁle system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">25.5.1 Directory Access Protocols</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Directory information can be made available through web interfaces, as many organi- zations, and phone companies in particular, do. Such interfaces are good for humans. However, programs too need to access directory information.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Several <span class="s63">directory access protocols </span>have been developed to provide a standardized way of accessing data in a directory. The most widely used among them today is the <span class="s63">Lightweight Directory Access Protocol </span>(<span class="s64">LDAP</span>).</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">All the types of data in our examples can be stored without much trouble in a database system and accessed through protocols such as <span class="s44">JDBC </span>or <span class="s44">ODBC</span>. The question then is, why come up with a specialized protocol for accessing directory information? There are at least two answers to the question.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 107pt;text-indent: -16pt;text-align: left;">• <span class="s40">First, directory access protocols are simpliﬁed protocols that cater to a limited type of access to data. They evolved in parallel with the database access protocols.</span></p><p class="s66" style="padding-top: 3pt;padding-left: 316pt;text-indent: 0pt;text-align: left;">25.5 <span style=" color: #00AEEF;">Distributed Directory Systems  </span><span class="s164">1241</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Second, and more important, directory systems provide a simple mechanism to name objects in a hierarchical fashion, similar to ﬁle system directory names, which can be used in a distributed directory system to specify what information is stored in each of the directory servers. For example, a particular directory server may store information for Bell Laboratories employees in Murray Hill, while an- other may store information for Bell Laboratories employees in Bangalore, giving both sites autonomy in controlling their local data. The directory access protocol can be used to obtain data from both directories across a network. More impor- tant, the directory system can be set up to automatically forward queries made at one site to the other site, without user intervention.</span></p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">For these reasons, several organizations have directory systems to make organiza- tional information available online through a directory access protocol. Information in an organizational directory can be used for a variety of purposes, such as to ﬁnd addresses, phone numbers, or email addresses of people, to ﬁnd which departments people are in, and to track department hierarchies.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">As may be expected, several directory implementations ﬁnd it beneﬁcial to use relational databases to store data instead of creating special-purpose storage systems.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">25.5.2 LDAP: Lightweight Directory Access Protocol</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">In general a directory system is implemented as one or more servers, which service mul- tiple clients. Clients use the <span class="s44">API </span>deﬁned by the directory system to communicate with the directory servers. Directory access protocols also deﬁne a data model and access control. The <span class="s63">X.500 directory access protocol</span>, deﬁned by the International Organization for Standardization (<span class="s44">ISO</span>), is a standard for accessing directory information. However, the protocol is rather complex and is not widely used. The <span class="s63">Lightweight Directory Access Protocol </span>(<span class="s64">LDAP</span>) provides many of the X.500 features, but with less complexity, and is widely used. In addition to several open-source implementations, the Microsoft Active Directory system, which is based on <span class="s44">LDAP</span>, is used in a large number of organizations.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In the rest of this section, we shall outline the data model and access protocol details of <span class="s44">LDAP</span>.</p><p class="s183" style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">25.5.2.1 LDAP Data Model</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">In <span class="s44">LDAP</span>, directories store <span class="s63">entries</span>, which are similar to objects. Each entry must have a <span class="s63">distinguished name </span>(<span class="s64">DN</span>), which uniquely identiﬁes the entry. A <span class="s44">DN </span>is in turn made up of a sequence of <span class="s63">relative distinguished names </span>(<span class="s64">RDN</span><span class="s84">s</span>). For example, an entry may have the following distinguished name:</p><p class="s49" style="padding-top: 8pt;padding-left: 157pt;text-indent: 0pt;text-align: left;">cn=<span class="s157">S</span>ilberschatz, ou=Computer Science, o=Yale University, c=<span class="s157">USA</span></p><p style="padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">As you can see, the distinguished name in this example is a combination of a name and (organizational) address, starting with a person’s name, then giving the organizational unit (<span class="s49">ou</span>), the organization (<span class="s49">o</span>), and country (<span class="s49">c</span>). The order of the components of a distinguished name reﬂects the normal postal address order, rather than the reverse</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">order used in specifying path names for ﬁles. The set of <span class="s44">RDN</span>s for a <span class="s44">DN </span>is deﬁned by the schema of the directory system.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Entries can also have attributes. <span class="s44">LDAP </span>provides binary, string, and time types, and additionally the types <span class="s49">tel </span>for telephone numbers, and <span class="s49">PostalAddress </span>for addresses (lines separated by a “$” character). Unlike those in the relational model, attributes are multivalued by default, so it is possible to store multiple telephone numbers or addresses for an entry.</p><p class="s42" style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">LDAP <span class="s43">allows the deﬁnition of </span><span class="s63">object classes </span><span class="p">with attribute names and types. Inher- itance can be used in deﬁning object classes. Moreover, entries can be speciﬁed to be of one or more object classes. It is not necessary that there be a single most-speciﬁc object class to which an entry belongs.</span></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Entries are organized into a <span class="s63">directory information tree </span>(<span class="s64">DIT</span>), according to their dis- tinguished names. Entries at the leaf level of the tree usually represent speciﬁc objects. Entries that are internal nodes represent objects such as organizational units, organi- zations, or countries. The children of a node have a <span class="s44">DN </span>containing all the <span class="s44">RDN</span>s of the parent, and one or more additional <span class="s44">RDN</span>s. For instance, an internal node may have a <span class="s44">DN </span><span class="s49">c=</span><span class="s157">USA</span>, and all entries below it have the value <span class="s151">USA </span>for the <span class="s44">RDN </span><span class="s49">c</span>.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The entire distinguished name need not be stored in an entry. The system can generate the distinguished name of an entry by traversing up the <span class="s44">DIT </span>from the entry, collecting the <span class="s151">RDN</span><span class="s187">=value </span>components to create the full distinguished name.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Entries may have more than one distinguished name — for example, an entry for a person in more than one organization. To deal with such cases, the leaf level of a <span class="s44">DIT </span>can be an <span class="s63">alias </span>that points to an entry in another branch of the tree.</p><p class="s183" style="padding-top: 8pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">25.5.2.2 Data Manipulation</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Unlike <span class="s44">SQL</span>, <span class="s44">LDAP </span>does not deﬁne either a data-deﬁnition language or a data- manipulation language. However, <span class="s44">LDAP </span>deﬁnes a network protocol for carrying out data deﬁnition and manipulation. Users of <span class="s44">LDAP </span>can either use an application- programming interface or use tools provided by various vendors to perform data deﬁni- tion and manipulation. <span class="s44">LDAP </span>also deﬁnes a ﬁle format called <span class="s64">LDAP </span><span class="s84">Data Interchange Format </span>(<span class="s64">LDIF</span>) that can be used for storing and exchanging information.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The querying mechanism in <span class="s44">LDAP </span>is very simple, consisting of just selections and projections, without any join. A query must specify the following:</p><p class="s40" style="padding-top: 7pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>A base— that is, a node within a <span class="s41">DIT </span>— by giving its distinguished name (the path from the root to the node).</p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">A search condition, which can be a Boolean combination of conditions on in- dividual attributes. Equality, matching by wild-card characters, and approximate equality (the exact deﬁnition of approximate equality is system dependent) are supported.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">A scope, which can be just the base, the base and its children, or the entire subtree beneath the base.</span></p><p class="s66" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;"><a name="bookmark557">25.6 </a><span style=" color: #00AEEF;">Summary  </span><span class="s164">1243</span><a name="bookmark587">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">Attributes to return.</span></p><p class="s39" style="padding-top: 2pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">Limits on number of results and resource consumption.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">The query can also specify whether to automatically dereference aliases; if alias deref- erences are turned oﬀ, alias entries can be returned as answers.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">We omit further details of query support in <span class="s44">LDAP </span>but note that <span class="s44">LDAP </span>implemen- tations support an <span class="s44">API </span>for querying/updating <span class="s44">LDAP </span>data and may additionally support web services for querying <span class="s44">LDAP </span>data.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s183" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">25.5.2.3 Distributed Directory Trees</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Information about an organization may be split into multiple <span class="s44">DIT</span>s, each of which stores information about some entries. The <span class="s63">suﬃx </span>of a <span class="s44">DIT </span>is a sequence of <span class="s151">RDN</span><span class="s187">=value </span>pairs that identify what information the <span class="s44">DIT </span>stores; the pairs are concatenated to the rest of the distinguished name generated by traversing from the entry to the root. For instance, the suﬃx of a <span class="s44">DIT </span>may be <span class="s49">o=</span><span class="s157">Nokia, c=</span><span class="s541">USA</span>, while another may have the suﬃx <span class="s49">o=</span><span class="s157">Nokia, c=India</span>. The <span class="s44">DIT</span>s may be organizationally and geographically separated.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A node ina <span class="s44">DIT </span>may contain a <span class="s63">referral </span>to another node in another <span class="s44">DIT</span>; for instance, the organizational unit Bell Labs under <span class="s49">o=</span><span class="s157">Nokia, c=</span><span class="s541">USA </span>may have its own <span class="s44">DIT</span>, in which case the <span class="s44">DIT </span>for <span class="s49">o=</span><span class="s157">Nokia, c=</span><span class="s541">USA </span>would have a node <span class="s49">ou=</span><span class="s157">B</span><span class="s49">ell </span><span class="s157">L</span><span class="s49">abs </span>representing a referral to the <span class="s44">DIT </span>for <span class="s44">B</span>ell <span class="s44">L</span>abs.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Referrals are the key component that help organize a distributed collection of di- rectories into an integrated system. When a server gets a query on a <span class="s44">DIT</span>, it may return a referral to the client, which then issues a query on the referenced <span class="s44">DIT</span>. Access to the referenced <span class="s44">DIT </span>is transparent, proceeding without the user’s knowledge. Alternatively, the server itself may issue the query to the referred <span class="s44">DIT </span>and return the results along with locally computed results.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The hierarchical naming mechanism used by <span class="s44">LDAP </span>helps break up control of in- formation across parts of an organization. The referral facility then helps integrate all the directories in an organization into a single virtual directory.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Although it is not an <span class="s44">LDAP </span>requirement, organizations often choose to break up in- formation either by geography (for instance, an organization may maintain a directory for each site where the organization has a large presence) or by organizational structure (for instance, each organizational unit, such as department, maintains its own direc- tory). Many <span class="s44">LDAP </span>implementations support master–slave and multimaster replication of <span class="s44">DIT</span>s.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part451.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part453.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
