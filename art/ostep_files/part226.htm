<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>22.2 The Optimal Replacement Policy</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part225.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part227.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">22.2 The Optimal Replacement Policy</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">To better understand how a particular replacement policy works, it would be nice to compare it to the best possible replacement policy. As it turns out, such an <b>optimal </b>policy was developed by Belady many years ago [B66] (he originally called it MIN). The optimal replacement policy leads to the fewest number of misses overall. Belady showed that a sim- ple (but, unfortunately, difficult to implement!) approach that replaces the page that will be accessed <i>furthest in the future </i>is the optimal policy, resulting in the fewest-possible cache misses.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 56pt;text-indent: 0pt;line-height: 11pt;text-align: left;">T<span class="s7">IP</span>: C<span class="s7">OMPARING </span>A<span class="s7">GAINST </span>O<span class="s7">PTIMAL IS </span>U<span class="s7">SEFUL</span></p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Although optimal is not very practical as a real policy, it is incredibly useful as a comparison point in simulation or other studies. Saying that your fancy new algorithm has a 80% hit rate isn’t meaningful in isolation; saying that optimal achieves an 82% hit rate (and thus your new approach is quite close to optimal) makes the result more meaningful and gives it context. Thus, in any study you perform, knowing what the optimal is lets you perform a better comparison, showing how much improvement is still possible, and also when you can <i>stop </i>making your policy better, because it is close enough to the ideal [AD03].</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Hopefully, the intuition behind the optimal policy makes sense. Think about it like this: if you have to throw out some page, why not throw out the one that is needed the furthest from now? By doing so, you are essentially saying that all the other pages in the cache are more important than the one furthest out. The reason this is true is simple: you will refer to the other pages before you refer to the one furthest out.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Let’s trace through a simple example to understand the decisions the optimal policy makes. Assume a program accesses the following stream of virtual pages: 0, 1, 2, 0, 1, 3, 0, 3, 1, 2, 1. Table <span style=" color: #00AEEF;">22.1 </span>shows the behavior of optimal, assuming a cache that fits three pages.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">In the table, you can see the following actions. Not surprisingly, the first three accesses are misses, as the cache begins in an empty state; such a miss is sometimes referred to as a <b>cold-start miss </b>(or <b>compulsory miss</b>). Then we refer again to pages 0 and 1, which both hit in the cache. Finally, we reach another miss (to page 3), but this time the cache is full; a re- placement must take place! Which begs the question: which page should we replace? With the optimal policy, we examine the future for each page currently in the cache (0, 1, and 2), and see that 0 is accessed almost imme- diately, 1 is accessed a little later, and 2 is accessed furthest in the future. Thus the optimal policy has an easy choice: evict page 2, resulting in pages 0, 1, and 3 in the cache. The next three references are hits, but then</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:99.988pt" cellspacing="0"><tr style="height:19pt"><td style="width:36pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s123" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Access</p></td><td style="width:48pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s123" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Hit/Miss?</p></td><td style="width:30pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s123" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Evict</p></td><td style="width:54pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F"><p class="s123" style="padding-left: 9pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Resulting</p><p class="s123" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Cache State</p></td></tr><tr style="height:10pt"><td style="width:36pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0</p></td><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Miss</p></td><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">1</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Miss</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0, 1</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 8pt;text-align: center;">2</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: center;">Miss</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: right;">0, 1, 2</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 8pt;text-align: center;">0</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: center;">Hit</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: right;">0, 1, 2</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">1</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Hit</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0, 1, 2</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">3</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Miss</p></td><td style="width:30pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">2</p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0, 1, 3</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Hit</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0, 1, 3</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">3</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Hit</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0, 1, 3</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 9pt;text-align: center;">1</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: center;">Hit</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0, 1, 3</p></td></tr><tr style="height:10pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 8pt;text-align: center;">2</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: center;">Miss</p></td><td style="width:30pt"><p class="s108" style="text-indent: 0pt;line-height: 8pt;text-align: center;">3</p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: right;">0, 1, 2</p></td></tr><tr style="height:9pt"><td style="width:36pt"><p class="s108" style="text-indent: 0pt;line-height: 8pt;text-align: center;">1</p></td><td style="width:48pt"><p class="s108" style="padding-left: 5pt;padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: center;">Hit</p></td><td style="width:30pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt"><p class="s108" style="padding-right: 5pt;text-indent: 0pt;line-height: 8pt;text-align: right;">0, 1, 2</p></td></tr></table><p style="padding-top: 4pt;padding-left: 108pt;text-indent: 0pt;text-align: left;">Table 22.1: <b>Tracing the Optimal Policy</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-top: 6pt;padding-left: 84pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="p">A</span><span class="s7">SIDE</span><span class="p">: </span>T<span class="s45">YPES OF </span>C<span class="s45">ACHE </span>M<span class="s45">ISSES</span></p><p style="padding-left: 8pt;text-indent: 0pt;line-height: 89%;text-align: justify;">In the computer architecture world, architects sometimes find it useful to characterize misses by type, into one of three categories: compulsory, capacity, and conflict misses, sometimes called the <b>Three C’s </b>[H87]. A <b>compulsory miss </b>(or <b>cold-start miss </b>[EF78]) occurs because the cache is empty to begin with and this is the first reference to the item; in con- trast, a <b>capacity miss </b>occurs because the cache ran out of space and had to evict an item to bring a new item into the cache. The third type of miss (a <b>conflict miss</b>) arises in hardware because of limits on where an item can be placed in a hardware cache, due to something known as <b>set- associativity</b>; it does not arise in the OS page cache because such caches are always <b>fully-associative</b>, i.e., there are no restrictions on where in memory a page can be placed. See H&amp;P for details [HP06].</p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">we get to page 2, which we evicted long ago, and suffer another miss. Here the optimal policy again examines the future for each page in the cache (0, 1, and 3), and sees that as long as it doesn’t evict page 1 (which is about to be accessed), we’ll be OK. The example shows page 3 getting evicted, although 0 would have been a fine choice too. Finally, we hit on page 1 and the trace completes.</p><p style="padding-left: 80pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">We can also calculate the hit rate for the cache: with 6 hits and 5 misses,</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 7pt;text-align: justify;">the hit rate is <span class="s92">&nbsp; </span><span class="s124">Hits</span><span class="s125">  </span><span class="s43"> </span>which is <span class="s92">&nbsp;</span><span class="s63">6</span><span class="s126"> </span><span class="s64"> </span>or 54.6%. You can also compute</p><p class="s127" style="padding-left: 125pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Hits<span class="s62">+</span>Misses      <span class="s62">6+5</span></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 9pt;text-align: justify;">the hit rate <i>modulo </i>compulsory misses (i.e., ignore the <i>first </i>miss to a given</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">page), resulting in a 85.7% hit rate.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 94%;text-align: justify;">Unfortunately, as we saw before in the development of scheduling policies, the future is not generally known; you can’t build the optimal policy for a general-purpose operating system<span class="s35">1</span>. Thus, in developing a real, deployable policy, we will focus on approaches that find some other</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">way to decide which page to evict. The optimal policy will thus serve only as a comparison point, to know how close we are to “perfect”.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part225.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part227.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
