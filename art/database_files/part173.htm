<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>8.3   Textual Data</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part172.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part174.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">8.3   <span style=" color: #00AEEF;">Textual Data</span></p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Textual data consists of unstructured text. The term <b>information retrieval </b>generally refers to the querying of unstructured textual data. In the traditional model used in the ﬁeld of information retrieval, textual information is organized into <i>documents</i>. Ina database, a text-valued attribute can be considered a document. In the context of the web, each web page can be considered to be a document.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">8.3.1 Keyword Queries</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: right;">Information retrieval systems support the ability to retrieve documents with some de- sired information. The desired documents are typically described by a set of <span class="s63">keywords</span></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: right;">— for example, the keywords “database system” may be used to locate documents on database systems, and the keywords “stock” and “scandal” may be used to locate arti- cles about stock-market scandals. Documents have associated with them a set of key- words; typically, all the words in the documents are considered keywords. A <span class="s63">keyword query </span>retrieves documents whose set of keywords contains all the keywords in the query. In its simplest form, an information-retrieval system locates and returns all docu- ments that contain all the keywords in the query. More-sophisticated systems estimate the relevance of documents to a query so that the documents can be shown in order of estimated relevance. They use information about keyword occurrences, as well as</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">hyperlink information, to estimate relevance.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Keyword search was originally targeted at document repositories within organi- zations or domain-speciﬁc document repositories such as research publications. But information retrieval is also important for documents stored in a database.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Keyword-based information retrieval can be used not only for retrieving textual data, but also for retrieving other types of data, such as video and audio data, that have descriptive keywords associated with them. For instance, a video movie may have associated with it keywords such as its title, director, actors, and genre, while an image or video clip may have tags, which are keywords describing the image or video clip, associated with it.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Web search engines are, at core, information retrieval systems. They retrieve and store web pages by <i>crawling </i>the web. Users submit keyword queries, and the information retrieval part of the web search engine ﬁnds stored web pages containing the required keyword. Web search engines have today evolved beyond just retrieving web pages. Today, search engines aim to satisfy a user’s information needs by judging what topic a query is about and displaying not only web pages judged as relevant but also other kinds of information about the topic. For example, given a query term “cricket”, a search engine may display scores from ongoing or recent cricket matches, rather than just top-ranked documents related to cricket. As another example, in response to a query “New York”, a search engine may show a map of New York and images of New York in addition to web pages related to New York.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">8.3.2 Relevance Ranking</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">The set of all documents that contain the keywords in a query may be very large; in particular, there are billions of documents on the web, and most keyword queries on a web search engine ﬁnd hundreds of thousands of documents containing some or all of the keywords. Not all the documents are equally relevant to a keyword query. Information-retrieval systems therefore estimate relevance of documents to a query and return only highly ranked documents as answers. Relevance ranking is not an exact science, but there are some well-accepted approaches.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s183" style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">8.3.2.1 Ranking Using TF-IDF</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">The word <span class="s63">term </span>refers to a keyword occurring in a document, or given as part of a query. The ﬁrst question to address is, given a particular term <i>t</i>, how relevant is a particular document <i>d </i>to the term. One approach is to use the number of occurrences of the term in the document as a measure of its relevance, on the assumption that more relevant terms are likely to be mentioned many times in a document. Just counting the number of occurrences of a term is usually not a good indicator: ﬁrst, the number of occur- rences depends on the length of the document, and second, a document containing 10 occurrences of a term may not be 10 times as relevant as a document containing one occurrence.</p><p class="s15" style="text-indent: 0pt;text-align: left;">(    )</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 106pt;text-indent: 0pt;text-align: justify;">One way of measuring <i>TF </i>(<i>d</i>, <i>t</i>), the relevance of a term <i>t </i>to a document <i>d</i>, is:</p><p style="padding-top: 10pt;padding-left: 50pt;text-indent: 0pt;line-height: 17pt;text-align: center;"><i>TF </i>(<i>d</i>, <i>t</i>) <span class="s15">= </span>log 1 <span class="s15">+ </span><u><i>n</i></u><u>(</u><u><i>d</i></u><u>, </u><u><i>t</i></u><u>)</u></p><p class="s13" style="padding-left: 140pt;text-indent: 0pt;line-height: 10pt;text-align: center;">n<span class="p">(</span>d<span class="p">)</span></p><p style="padding-top: 9pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">where <i>n</i>(<i>d</i>) denotes the number of term occurrences in the document and <i>n</i>(<i>d</i>, <i>t</i>) de- notes the number of occurrences of term <i>t </i>in the document <i>d</i>. Observe that this metric takes the length of the document into account. The relevance grows with more occur- rences of a term in the document, although it is not directly proportional to the number of occurrences.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Many systems reﬁne the above metric by using other information. For instance, if the term occurs in the title, or the author list, or the abstract, the document would be considered more relevant to the term. Similarly, if the ﬁrst occurrence of a term is late in the document, the document may be considered less relevant than if the ﬁrst occurrence is early in the document. The above notions can be formalized by extensions of the formula we have shown for <i>TF </i>(<i>d</i>, <i>t</i>). In the information retrieval community, the relevance of a document to a term is referred to as <span class="s63">term frequency </span>(<span class="s64">TF</span>), regardless of the exact formula used.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: right;">A query <i>Q </i>may contain multiple keywords. The relevance of a document to a query with two or more keywords is estimated by combining the relevance measures of the document for each keyword. A simple way of combining the measures is to add them up. However, not all terms used as keywords are equal. Suppose a query uses two terms, one of which occurs frequently, such as “database”, and another that is less frequent, such as “Silberschatz”. A document containing “Silberschatz” but not “database” should be ranked higher than a document containing the term “database” but not “Silberschatz”. To ﬁx this problem, weights are assigned to terms using the <span class="s63">inverse document fre-</span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;"><span class="s63">quency </span>(<span class="s64">IDF</span>), deﬁned as:</p><p class="s13" style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;line-height: 17pt;text-align: center;">IDF <span class="p">(</span>t<span class="p">) </span><span class="s15">= </span><u>&nbsp;1 </u></p><p class="s13" style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: center;">n<span class="p">(</span>t<span class="p">)</span></p><p style="padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">where <i>n</i>(<i>t</i>) denotes the number of documents (among those indexed by the system) that contain the term <i>t</i>. The <span class="s63">relevance </span>of a document <i>d </i>to a set of terms <i>Q </i>is then deﬁned as:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">∑</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="padding-top: 5pt;padding-left: 237pt;text-indent: 0pt;text-align: left;">r<span class="p">(</span>d<span class="p">, </span>Q<span class="p">) </span><span class="s15">=  </span>TF <span class="p">(</span>d<span class="p">, </span>t<span class="p">) </span><span class="s15">∗ </span>IDF <span class="p">(</span>t<span class="p">)</span></p><p class="s109" style="padding-top: 2pt;padding-left: 84pt;text-indent: 0pt;text-align: center;">t<span class="s118">∈</span>Q</p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">This measure can be further reﬁned if the user is permitted to specify weights <i>w</i>(<i>t</i>) for terms in the query, in which case the user-speciﬁed weights are also taken into account by multiplying <i>TF </i>(<i>t</i>) by <i>w</i>(<i>t</i>) in the preceding formula.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The above approach of using term frequency and inverse document frequency as a measure of the relevance of a document is called the <span class="s64">TF–IDF </span>approach.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Almost all text documents (in English) contain words such as “and,” “or,” “a,” and so on, and hence these words are useless for querying purposes since their inverse doc- ument frequency is extremely low. Information-retrieval systems deﬁne a set of words, called <span class="s63">stop words</span>, containing 100 or so of the most common words, and ignore these words when indexing a document. Such words are not used as keywords, and they are discarded if present in the keywords supplied by the user.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Another factor taken into account when a query contains multiple terms is the <span class="s63">proximity </span>of the terms in the document. If the terms occur close to each other in the document, the document will be ranked higher than if they occur far apart. The formula for <i>r</i>(<i>d</i>, <i>Q</i>) can be modiﬁed to take proximity of the terms into account.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Given a query <i>Q</i>, the job of an information-retrieval system is to return documents in descending order of their relevance to <i>Q</i>. Since there may be a very large number of documents that are relevant, information-retrieval systems typically return only the ﬁrst few documents with the highest degree of estimated relevance and permit users to interactively request further documents.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s183" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">8.3.2.2 Ranking Using Hyperlinks</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Hyperlinks between documents can be used to decide on the overall importance of a document, independent of the keyword query; for example, documents linked from many other documents are considered more important.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The web search engine Google introduced <span class="s63">PageRank</span>, which is a measure of pop- ularity of a page based on the popularity of pages that link to the page. Using the PageRank popularity measure to rank answers to a query gave results so much better than previously used ranking techniques that Google became the most widely used search engine in a rather short period of time.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Note that pages that are pointed to from many web pages are more likely to be visited, and thus should have a higher PageRank. Similarly, pages pointed to by web pages with a high PageRank will also have a higher probability of being visited, and thus should have a higher PageRank.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The PageRank of a document <i>d </i>is thus deﬁned (circularly) based on the PageRank of other documents that link to document <i>d</i>. PageRank can be deﬁned by a set of linear equations, as follows: First, web pages are given integer identiﬁers. The jump probability matrix <i>T </i>is deﬁned with <i>T </i>[<i>i</i>, <i>j</i>] set to the probability that a random walker who is following a link out of page <i>i </i>follows the link to page <i>j</i>. Assuming that each link</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;line-height: 90%;text-align: left;">from <i>i </i>has an equal probability of being followed <i>T </i>[<i>i</i>, <i>j</i>] <span class="s15">= </span>1<span class="s15">∕</span><i>N</i><span class="s145">i</span>, where <i>N</i><span class="s145">i </span>is the number of links out of page <i>i</i>. Then the PageRank <i>P</i>[<i>j</i>] for each page <i>j </i>can be deﬁned as:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">∑</p><p style="text-indent: 0pt;text-align: left;"/><p class="s109" style="padding-top: 4pt;padding-left: 58pt;text-indent: 0pt;text-align: center;">N</p><p style="padding-top: 1pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><i>P</i>[<i>j</i>] <span class="s15">= δ∕</span><i>N </i><span class="s15">+ </span>(1 <span class="s15">− δ</span>) <span class="s15">∗  </span>(<i>T </i>[<i>i</i>, <i>j</i>] <span class="s15">∗ </span><i>P</i>[<i>i</i>])</p><p class="s109" style="padding-top: 2pt;padding-left: 84pt;text-indent: 0pt;text-align: center;">i<span class="s118">=</span><span class="s119">1</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 89pt;text-indent: 0pt;text-align: right;">where <span class="s15">δ </span>is a constant between 0 and 1, usually set to 0.15, and <i>N </i>is the number of pages. The set of equations generated as above are usually solved by an iterative technique, starting with each <i>P</i>[<i>i</i>] set to 1<span class="s15">∕</span><i>N </i>. Each step of the iteration computes new values for each <i>P</i>[<i>i</i>] using the <i>P </i>values from the previous iteration. Iteration stops when the</p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 13pt;text-align: justify;">maximum change in any <i>P</i>[<i>i</i>] value in an iteration goes below some cutoﬀ value.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Note that PageRank is a static measure, independent of the keyword query; given a keyword query, it is used in combination with <span class="s44">TF–IDF </span>scores of a document to judge its relevance of the document to the keyword query.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">PageRank is not the only measure of the popularity of a site. Information about how often a site is visited is another useful measure of popularity. Further, search engines track what fraction of times users click on a page when it is returned as an answer. Keywords that occur in the anchor text associated with the hyperlink to a page are viewed as very important and are given a higher term frequency. These and a number of other factors are used to rank answers to a keyword query.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">8.3.3 Measuring Retrieval Effectiveness</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Ranking of results of a keyword query is not an exact science. Two metrics are used to measure how well an information-retrieval system is able to answer queries. The ﬁrst, <span class="s63">precision</span>, measures what percentage of the retrieved documents are actually relevant to the query. The second, <span class="s63">recall</span>, measures what percentage of the documents relevant to the query were retrieved. Since search engines ﬁnd a very large number of answers, and users typically stop after browsing some number (say, 10 or 20) of the answers, the precision and recall numbers are usually measured “@K”, where <i>K </i>is the number of answers viewed. Thus, one can talk of precision@10 or recall@20.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">8.3.4 Keyword Querying on Structured Data and Knowledge Graphs</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Although querying on structured data are typically done using query languages such as <span class="s44">SQL</span>, users who are not familiar with the schema or the query language ﬁnd it diﬃ- cult to get information from such data. Based on the success of keyword querying in the context of information retrieval from the web, techniques have been developed to support keyword queries on structured and semi-structured data.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">One approach is to represent the data using graphs, and then perform keyword queries on the graphs. For example, tuples can be treated as nodes in the graph, and foreign key and other connections between tuples can be treated as edges in the graph. Keyword search is then modeled as ﬁnding tuples containing the given keywords and ﬁnding connecting paths between them in the corresponding graph.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;"><a name="bookmark180">For example, a query “Zhang Katz” on a university database may ﬁnd the </a><i>name </i>“Zhang” occurring in a <i>student </i>tuple, and the <i>name </i>“Katz” in an <i>instructor </i>tuple, a path through the <i>advisor </i>relation connecting the two tuples. Other paths, such as student “Zhang” taking a course taught by “Katz” may also be found in response to this query. Such queries may be used for ad hoc browsing and querying of data when the user does not know the exact schema and does not wish to take the eﬀort to write an <span class="s44">SQL </span>query deﬁning what she is searching for. Indeed it is unreasonable to expect lay users to write queries in a structured query language, whereas keyword querying is quite natural.<a name="bookmark201">&zwnj;</a></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Since queries are not fully deﬁned, they may have many diﬀerent types of answers, which must be ranked. A number of techniques have been proposed to rank answers in such a setting, based on the lengths of connecting paths and on techniques for assigning directions and weights to edges. Techniques have also been proposed for assigning popularity ranks to tuples based on foreign key links. More information on keyword searching of structured data may be found in the bibliographic notes for this chapter, available online.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Further, knowledge graphs can be used along with textual information to answer queries. For example, knowledge graphs can be used to provide unique identiﬁers to entities, which are used to annotate mentions of the entities in textual documents. Now a particular mention of a person in a document may have the phrase “Stonebraker de- veloped PostgreSQL”; from the context, the word Stonebraker may be inferred to be the database researcher “Michael Stonebraker” and annotated by linking the word Stone- braker to the entity “Michael Stonebraker”. The knowledge graph may also record the fact that Stonebraker won the Turing award. A query asking for “turing award post- gresql” can now be answered by using information from the document and the knowl- edge graph.<span class="s76">2</span></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Web search engines today use large knowledge graphs, in addition to crawled doc- uments, to answer user queries.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part172.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part174.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
