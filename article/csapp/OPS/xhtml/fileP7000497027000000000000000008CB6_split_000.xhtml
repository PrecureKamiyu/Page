<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>Preface </title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="frontmatter" class="calibre pcalibre pcalibre1">
<section class="pcalibre halftitlepage pcalibre1" id="P7000497027000000000000000008CB6" epub:type="preface"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P70004970270000000000000000476FE" data-uri="fm.xhtml#P70004970270000000000000000476FE" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000008CB8" title="xix" data-uri="fm.xhtml#P7000497027000000000000000008CB8" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Preface </span></h1></header>
<p id="P70004970270000000000000000476FF" data-uri="fm.xhtml#P70004970270000000000000000476FF" class="pcalibre1 pcalibre calibre2">This book (known as CS:APP) is for computer scientists, computer engineers, and others who want to be able to write better programs by learning what is going on "under the hood" of a computer system.</p>
<p id="P7000497027000000000000000047700" data-uri="fm.xhtml#P7000497027000000000000000047700" class="pcalibre1 pcalibre calibre2">Our aim is to explain the enduring concepts underlying all computer systems, and to show you the concrete ways that these ideas affect the correctness, performance, and utility of your application programs. Many systems books are written from a <i class="calibre5 pcalibre pcalibre1">builder's perspective</i>, describing how to implement the hardware or the systems software, including the operating system, compiler, and network interface. This book is written from a <i class="calibre5 pcalibre pcalibre1">programmer's perspective</i>, describing how application programmers can use their knowledge of a system to write better programs. Of course, learning what a system is supposed to do provides a good first step in learning how to build one, so this book also serves as a valuable introduction to those who go on to implement systems hardware and software. Most systems books also tend to focus on just one aspect of the system, for example, the hardware architecture, the operating system, the compiler, or the network. This book spans all of these aspects, with the unifying theme of a programmer's perspective.</p>
<p id="P7000497027000000000000000047701" data-uri="fm.xhtml#P7000497027000000000000000047701" class="pcalibre1 pcalibre calibre2">If you study and learn the concepts in this book, you will be on your way to becoming the rare <i class="calibre5 pcalibre pcalibre1">power programmer</i> who knows how things work and how to fix them when they break. You will be able to write programs that make better use of the capabilities provided by the operating system and systems software, that operate correctly across a wide range of operating conditions and run-time parameters, that run faster, and that avoid the flaws that make programs vulnerable to cyberattack. You will be prepared to delve deeper into advanced topics such as compilers, computer architecture, operating systems, embedded systems, networking, and cybersecurity.</p>
<section id="P7000497027000000000000000008CBC" data-uri="fm.xhtml#P7000497027000000000000000008CBC" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000047702" data-uri="fm.xhtml#P7000497027000000000000000047702" epub:type="title">Assumptions about the Reader's Background</h1></header>
<p id="P7000497027000000000000000047703" data-uri="fm.xhtml#P7000497027000000000000000047703" class="pcalibre1 pcalibre calibre2">This book focuses on systems that execute x86-64 machine code. x86-64 is the latest in an evolutionary path followed by Intel and its competitors that started with the 8086 microprocessor in 1978. Due to the naming conventions used by Intel for its microprocessor line, this class of microprocessors is referred to colloquially as "x86." As semiconductor technology has evolved to allow more transistors to be integrated onto a single chip, these processors have progressed greatly in their computing power and their memory capacity. As part of this progression, they have gone from operating on 16-bit words, to 32-bit words with the introduction of IA32 processors, and most recently to 64-bit words with x86-64.</p>
<p id="P7000497027000000000000000047704" data-uri="fm.xhtml#P7000497027000000000000000047704" class="pcalibre1 pcalibre calibre2">We consider how these machines execute C programs on Linux. Linux is one of a number of operating systems having their heritage in the Unix operating system developed originally by Bell Laboratories. Other members of this class</p>
<aside class="sidebar pcalibre5 pcalibre" id="P7000497027000000000000000008CC0" data-uri="fm.xhtml#P7000497027000000000000000008CC0"><header class="pcalibre halftitlepage pcalibre1"><h1 class="pcalibre1 title2 pcalibre" id="P7000497027000000000000000047705" data-uri="fm.xhtml#P7000497027000000000000000047705" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000008CC2" title="xx" data-uri="fm.xhtml#P7000497027000000000000000008CC2" epub:type="pagebreak"></span><span class="pcalibre label1 pcalibre1">New to C? </span>Advice on the C programming language</h1></header>
<p id="P7000497027000000000000000047706" data-uri="fm.xhtml#P7000497027000000000000000047706" class="pcalibre calibre3 pcalibre1">To help readers whose background in C programming is weak (or nonexistent), we have also included these special notes to highlight features that are especially important in C. We assume you are familiar with C++ or Java.</p>
</aside>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000047707" data-uri="fm.xhtml#P7000497027000000000000000047707">of operating systems include Solaris, FreeBSD, and MacOS X. In recent years, these operating systems have maintained a high level of compatibility through the efforts of the Posix and Standard Unix Specification standardization efforts. Thus, the material in this book applies almost directly to these "Unix-like" operating systems.</p>
<p id="P7000497027000000000000000047708" data-uri="fm.xhtml#P7000497027000000000000000047708" class="pcalibre1 pcalibre calibre2">The text contains numerous programming examples that have been compiled and run on Linux systems. We assume that you have access to such a machine, and are able to log in and do simple things such as listing files and changing directories. If your computer runs Microsoft Windows, we recommend that you install one of the many different virtual machine environments (such as VirtualBox or VMWare) that allow programs written for one operating system (the guest OS) to run under another (the host OS).</p>
<p id="P7000497027000000000000000047709" data-uri="fm.xhtml#P7000497027000000000000000047709" class="pcalibre1 pcalibre calibre2">We also assume that you have some familiarity with C or C++. If your only prior experience is with Java, the transition will require more effort on your part, but we will help you. Java and C share similar syntax and control statements. However, there are aspects of C (particularly pointers, explicit dynamic memory allocation, and formatted I/O) that do not exist in Java. Fortunately, C is a small language, and it is clearly and beautifully described in the classic "K&amp;R" text by Brian Kernighan and Dennis Ritchie [<a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000B39D.xhtml#P700049702700000000000000000B41C">61</a>]. Regardless of your programming background, consider K&amp;R an essential part of your personal systems library. If your prior experience is with an interpreted language, such as Python, Ruby, or Perl, you will definitely want to devote some time to learning C before you attempt to use this book.</p>
<p id="P700049702700000000000000004770A" data-uri="fm.xhtml#P700049702700000000000000004770A" class="pcalibre1 pcalibre calibre2">Several of the early chapters in the book explore the interactions between C programs and their machine-language counterparts. The machine-language examples were all generated by the GNU <span class="smallcaps pcalibre pcalibre1">gcc</span> compiler running on x86-64 processors. We do not assume any prior experience with hardware, machine language, or assembly-language programming.</p>
</section>
<section id="P7000497027000000000000000008CC8" data-uri="fm.xhtml#P7000497027000000000000000008CC8" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000004770B" data-uri="fm.xhtml#P700049702700000000000000004770B" epub:type="title">How to Read the Book</h1></header>
<p id="P700049702700000000000000004770C" data-uri="fm.xhtml#P700049702700000000000000004770C" class="pcalibre1 pcalibre calibre2">Learning how computer systems work from a programmer's perspective is great fun, mainly because you can do it actively. Whenever you learn something new, you can try it out right away and see the result firsthand. In fact, we believe that the only way to learn systems is to <i class="calibre5 pcalibre pcalibre1">do</i> systems, either working concrete problems or writing and running programs on real systems.</p>
<p id="P700049702700000000000000004770D" data-uri="fm.xhtml#P700049702700000000000000004770D" class="pcalibre1 pcalibre calibre2">This theme pervades the entire book. When a new concept is introduced, it is followed in the text by one or more <i class="calibre5 pcalibre pcalibre1">practice problems</i> that you should work</p>
<p id="P700049702700000000000000004770E" data-uri="fm.xhtml#P700049702700000000000000004770E" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000008CCD" title="xxi" data-uri="fm.xhtml#P7000497027000000000000000008CCD" epub:type="pagebreak"></span></p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000008CCE" data-uri="fm.xhtml#P7000497027000000000000000008CCE">
<p id="P700049702700000000000000004770F" data-uri="fm.xhtml#P700049702700000000000000004770F" class="pcalibre1 pcalibre calibre2">--------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/intro/hello.c</i></p>
<pre id="P7000497027000000000000000047710" data-uri="fm.xhtml#P7000497027000000000000000047710" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000047711" data-uri="fm.xhtml#P7000497027000000000000000047711" class="calibre10 pcalibre pcalibre1">
1	#include &lt;stdio.h&gt;
2
3	int main()
4	{
5           printf("hello, world\n");
6           return 0;
7	}
</code></pre>
<p id="P7000497027000000000000000047712" data-uri="fm.xhtml#P7000497027000000000000000047712" class="pcalibre1 pcalibre calibre2">--------------------------------------------------<i class="calibre5 pcalibre pcalibre1">code/intro/hello.c</i></p>
<figcaption id="P7000497027000000000000000047713" data-uri="fm.xhtml#P7000497027000000000000000047713" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000047714" data-uri="fm.xhtml#P7000497027000000000000000047714" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">1 </span>A typical code example.</h1></header>
</figcaption></figure>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000047715" data-uri="fm.xhtml#P7000497027000000000000000047715">immediately to test your understanding. Solutions to the practice problems are at the end of each chapter. As you read, try to solve each problem on your own and then check the solution to make sure you are on the right track. Each chapter is followed by a set of <i class="calibre5 pcalibre pcalibre1">homework problems</i> of varying difficulty. Your instructor has the solutions to the homework problems in an instructor's manual. For each homework problem, we show a rating of the amount of effort we feel it will require:</p>
<ul class="pcalibre ul_none pcalibre1" id="P7000497027000000000000000047716" data-uri="fm.xhtml#P7000497027000000000000000047716">
<li id="P7000497027000000000000000047717" data-uri="fm.xhtml#P7000497027000000000000000047717" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000047718" data-uri="fm.xhtml#P7000497027000000000000000047718" class="calibre13 pcalibre pcalibre1">♦ Should require just a few minutes. Little or no programming required.</p></li>
<li id="P7000497027000000000000000047719" data-uri="fm.xhtml#P7000497027000000000000000047719" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004771A" data-uri="fm.xhtml#P700049702700000000000000004771A" class="calibre13 pcalibre pcalibre1">♦♦ Might require up to 20 minutes. Often involves writing and testing some code. (Many of these are derived from problems we have given on exams.)</p></li>
<li id="P700049702700000000000000004771B" data-uri="fm.xhtml#P700049702700000000000000004771B" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004771C" data-uri="fm.xhtml#P700049702700000000000000004771C" class="calibre13 pcalibre pcalibre1">♦♦♦ Requires a significant effort, perhaps 1−2 hours. Generally involves writing and testing a significant amount of code.</p></li>
<li id="P700049702700000000000000004771D" data-uri="fm.xhtml#P700049702700000000000000004771D" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000004771E" data-uri="fm.xhtml#P700049702700000000000000004771E" class="calibre13 pcalibre pcalibre1">♦♦♦♦ A lab assignment, requiring up to 10 hours of effort.</p></li>
</ul>
<p id="P700049702700000000000000004771F" data-uri="fm.xhtml#P700049702700000000000000004771F" class="pcalibre1 pcalibre calibre2">Each code example in the text was formatted directly, without any manual intervention, from a C program compiled with <span class="smallcaps pcalibre pcalibre1">gcc</span> and tested on a Linux system. Of course, your system may have a different version of <span class="smallcaps pcalibre pcalibre1">gcc</span>, or a different compiler altogether, so your compiler might generate different machine code; but the overall behavior should be the same. All of the source code is available from the CS:APP Web page ("CS:APP" being our shorthand for the book's title) at csapp.cs.cmu.edu. In the text, the filenames of the source programs are documented in horizontal bars that surround the formatted code. For example, the program in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000008CB6_split_000.xhtml#P7000497027000000000000000008CCE"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">1</span></a> can be found in the file <code id="P7000497027000000000000000047720" data-uri="fm.xhtml#P7000497027000000000000000047720" class="pcalibre1 calibre8 pcalibre">hello.c</code> in directory <code id="P7000497027000000000000000047721" data-uri="fm.xhtml#P7000497027000000000000000047721" class="pcalibre1 calibre8 pcalibre">code/intro/</code>. We encourage you to try running the example programs on your system as you encounter them.</p>
<p id="P7000497027000000000000000047722" data-uri="fm.xhtml#P7000497027000000000000000047722" class="pcalibre1 pcalibre calibre2">To avoid having a book that is overwhelming, both in bulk and in content, we have created a number of <i class="calibre5 pcalibre pcalibre1">Web asides</i> containing material that supplements the main presentation of the book. These asides are referenced within the book with a notation of the form <span class="smallcaps pcalibre pcalibre1">chap:top</span>, where <span class="smallcaps pcalibre pcalibre1">chap</span> is a short encoding of the chapter subject, and <span class="smallcaps pcalibre pcalibre1">top</span> is a short code for the topic that is covered. For example, Web Aside <span class="smallcaps pcalibre pcalibre1">data:bool</span> contains supplementary material on Boolean algebra for the presentation on data representations in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000279.xhtml#P7000497027000000000000000000279"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">2</span></a>, while Web Aside <span class="smallcaps pcalibre pcalibre1">arch:vlog</span> contains <span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000008CE3" title="xxii" data-uri="fm.xhtml#P7000497027000000000000000008CE3" epub:type="pagebreak"></span>material describing processor designs using the Verilog hardware description language, supplementing the presentation of processor design in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000003A76.xhtml#P7000497027000000000000000003A76"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">4</span></a>. All of these Web asides are available from the CS:APP Web page.</p>
</section>
<section id="P7000497027000000000000000008CE4" data-uri="fm.xhtml#P7000497027000000000000000008CE4" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><div class="pcalibre1 calibre14 pcalibre" id="calibre_pb_0"></div>
</header>
</section>
</section></body></html>
