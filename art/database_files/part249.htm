<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>13.4  Data-Dictionary Storage</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part248.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part250.htm">下一个 &gt;</a></p><p class="s65" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">13.4  <span style=" color: #00AEEF;">Data-Dictionary Storage</span></p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">So far, we have considered only the representation of the relations themselves. A rela- tional database system needs to maintain data <i>about </i>the relations, such as the schema of the relations. In general, such “data about data” are referred to as <span class="s63">metadata</span>.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Relational schemas and other metadata about relations are stored in a structure called the <span class="s63">data dictionary </span>or <span class="s63">system catalog</span>. Among the types of information that the system must store are these:</p><p class="s39" style="padding-top: 9pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Names of the relations</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Names of the attributes of each relation</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Domains and lengths of attributes</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Names of views deﬁned on the database, and deﬁnitions of those views</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Integrity constraints (e.g., key constraints)</span></p><p style="padding-top: 11pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">In addition, many systems keep the following data on users of the system:</p><p class="s39" style="padding-top: 10pt;padding-left: 107pt;text-indent: -16pt;text-align: left;">• <span class="s40">Names of users, the default schemas of the users, and passwords or other informa- tion to authenticate users</span></p><p class="s39" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Information about authorizations for each user</span></p><p style="padding-top: 11pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Further, the database may store statistical and descriptive data about the relations and attributes, such as the number of tuples in each relation, or the number of distinct values for each attribute.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The data dictionary may also note the storage organization (heap, sequential, hash, etc.) of relations, and the location where each relation is stored:</p><p class="s39" style="padding-top: 10pt;padding-left: 107pt;text-indent: -16pt;text-align: left;">• <span class="s40">If relations are stored in operating system ﬁles, the dictionary would note the names of the ﬁle (or ﬁles) containing each relation.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: left;">• <span class="s40">If the database stores all relations in a single ﬁle, the dictionary may note the blocks containing records of each relation in a data structure such as a linked list.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">In Chapter 14, in which we study indices, we shall see a need to store information about each index on each of the relations:</p><p class="s39" style="padding-top: 9pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">• <span class="s40">Name of the index</span></p><p class="s66" style="padding-top: 3pt;padding-left: 338pt;text-indent: 0pt;text-align: left;">13.4 <span style=" color: #00AEEF;">Data-Dictionary Storage  </span><span class="s164">603</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">Name of the relation being indexed</span></p><p class="s39" style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">Attributes on which the index is deﬁned</span></p><p class="s39" style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">Type of index formed</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">All this metadata information constitutes, in eﬀect, a miniature database. Some database systems store such metadata by using special-purpose data structures and code. It is generally preferable to store the data about the database as relations in the database itself. By using database relations to store system metadata, we simplify the overall structure of the system and harness the full power of the database for fast access to system data.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The exact choice of how to represent system metadata by relations must be made by the system designers. We show the schema diagram of a toy data dictionary in Figure 13.12, storing part of the information mentioned above. The schema is only illustrative; real implementations store far more information than what the ﬁgure shows. Read the manuals for whichever database you use to see what system metadata it maintains.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2582.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2583.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2584.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2585.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="7" height="10" alt="image" src="Image_2586.png"/></span></p><p class="s99" style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">relation_name <span class="s69"> number_of_attributes storage_organization location</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s69" style="padding-top: 1pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">Relation_metadata</p><p style="text-indent: 0pt;text-align: left;"/><table style="border-collapse:collapse" cellspacing="0"><tr style="height:16pt"><td style="width:61pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s70" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Attribute_metadata</p></td></tr><tr style="height:6pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2"><p class="s236" style="padding-left: 3pt;padding-right: 17pt;text-indent: 0pt;text-align: left;">relation_name<span class="s70"> </span>attribute_name <span class="s70"> domain_type position</span></p><p class="s70" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">length</p></td></tr><tr style="height:56pt"><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">In the metadata representation shown, the attribute <i>index attributes </i>of the relation <i>Index metadata </i>is assumed to contain a list of one or more attributes, which can be represented by a character string such as “<i>dept name</i>, <i>building</i>”. The <i>Index metadata </i>relation is thus not in ﬁrst normal form; it can be normalized, but the preceding repre- sentation is likely to be more eﬃcient to access. The data dictionary is often stored in a nonnormalized form to achieve fast access.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:170.35pt" cellspacing="0"><tr style="height:64pt"><td style="width:106pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="3"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:16pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" bgcolor="#C7EAFB"><p class="s70" style="padding-top: 1pt;padding-left: 15pt;text-indent: 0pt;text-align: left;">Index_metadata</p></td><td style="width:4pt;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20" rowspan="2" bgcolor="#C7EAFB"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#231F20;border-right-style:solid;border-right-width:1pt;border-right-color:#231F20" rowspan="2"><p class="s236" style="padding-top: 1pt;padding-left: 5pt;text-indent: -1pt;text-align: left;"> index_name<span class="s70"> </span>relation_name<span class="s70"> index_type index_attributes</span></p></td></tr><tr style="height:30pt"><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#231F20;border-left-style:solid;border-left-width:1pt;border-left-color:#231F20" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s99" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">view_name <span class="s69"> definition</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s69" style="padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">View_metadata</p><p style="text-indent: 0pt;text-align: left;"/><p class="s99" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">user_name <span class="s69"> encrypted_password group</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s69" style="padding-top: 1pt;padding-left: 17pt;text-indent: 0pt;text-align: left;">User_metadata</p><p style="text-indent: 0pt;text-align: left;"/><p class="s73" style="padding-top: 4pt;padding-left: 141pt;text-indent: 0pt;text-align: left;">Figure 13.12 <span class="s74">Relational schema representing part of the system metadata.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2587.png"/></span></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 17pt;text-align: justify;"><a name="bookmark269">Whenever the database system needs to retrieve records from a relation, it must ﬁrst consult the </a><i>Relation metadata </i>relation to ﬁnd the location and storage organization of the relation, and then fetch records using this information.<a name="bookmark303">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2588.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2589.png"/></span></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">However, the storage organization and location of the <i>Relation metadata </i>relation itself must be recorded elsewhere (e.g., in the database code itself, or in a ﬁxed loca- tion in the database), since we need this information to ﬁnd the contents of <i>Relation metadata</i>.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Since system metadata are frequently accessed, most databases read it from the database into in-memory data structures that can be accessed very eﬃciently. This is done as part of the database startup, before the database starts processing any queries.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part248.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part250.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
