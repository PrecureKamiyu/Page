<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>39.13 Hard Links</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part428.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part430.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">39.13 Hard Links</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 88%;text-align: justify;">We now come back to the mystery of why removing a file is performed via <span class="s41">unlink()</span>, by understanding a new way to make an entry in the file system tree, through a system call known as <span class="s41">link()</span>. The <span class="s41">link() </span>system call takes two arguments, an old pathname and a new one; when you “link” a new file name to an old one, you essentially create another way to refer to the same file. The command-line program <span class="s41">ln </span>is used to do this, as we see in this example:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; echo hello &gt; file prompt&gt; cat file</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">hello</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; ln file file2 prompt&gt; cat file2 hello</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 88%;text-align: justify;">Here we created a file with the word “hello” in it, and called the file <span class="s41">file</span><span class="s35">2</span>. We then create a hard link to that file using the <span class="s41">ln </span>program. After this, we can examine the file by either opening <span class="s41">file </span>or <span class="s41">file2</span>.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The way <span class="s41">link </span>works is that it simply creates another name in the di- rectory you are creating the link to, and refers it to the <i>same </i>inode number (i.e., low-level name) of the original file. The file is not copied in any way; rather, you now just have two human names (<span class="s41">file </span>and <span class="s41">file2</span>) that both refer to the same file. We can even see this in the directory itself, by print- ing out the inode number of each file:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; ls -i file file2 67158084 file</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">67158084 file2 prompt&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">By passing the <span class="s41">-i </span>flag to <span class="s41">ls</span>, it prints out the inode number of each file (as well as the file name). And thus you can see what link really has done: just make a new reference to the same exact inode number (67158084 in this example).</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: left;">By now you might be starting to see why <span class="s41">unlink() </span>is called <span class="s41">unlink()</span>. When you create a file, you are really doing <i>two </i>things. First, you are making a structure (the inode) that will track virtually all relevant infor- mation about the file, including its size, where its blocks are on disk, and so forth. Second, you are <i>linking </i>a human-readable name to that file, and putting that link into a directory.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 88%;text-align: justify;">After creating a hard link to a file, to the file system, there is no dif- ference between the original file name (<span class="s41">file</span>) and the newly created file name (<span class="s41">file2</span>); indeed, they are both just links to the underlying meta- data about the file, which is found in inode number 67158084.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 88%;text-align: justify;">Thus, to remove a file from the file system, we call <span class="s41">unlink()</span>. In the example above, we could for example remove the file named <span class="s41">file</span>, and still access the file without difficulty:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; rm file removed ‘file’ prompt&gt; cat file2 hello</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: left;">The reason this works is because when the file system unlinks file, it checks a <b>reference count </b>within the inode number. This reference count</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="154" height="1" alt="image" src="Image_578.png"/></span></p><p class="s11" style="padding-top: 2pt;padding-left: 41pt;text-indent: 13pt;line-height: 92%;text-align: left;">2<span class="s12">Note how creative the authors of this book are. We also used to have a cat named “Cat” (true story). However, she died, and we now have a hamster named “Hammy.”</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">(sometimes called the <b>link count</b>) allows the file system to track how many different file names have been linked to this particular inode. When <span class="s41">unlink() </span>is called, it removes the “link” between the human-readable name (the file that is being deleted) to the given inode number, and decre- ments the reference count; only when the reference count reaches zero does the file system also free the inode and related data blocks, and thus truly “delete” the file.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">You can see the reference count of a file using <span class="s41">stat() </span>of course. Let’s see what it is when we create and delete hard links to a file. In this exam- ple, we’ll create three links to the same file, and then delete them. Watch the link count!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; echo hello &gt; file prompt&gt; stat file</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">... Inode: 67158084  Links: 1 ...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; ln file file2 prompt&gt; stat file</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">... Inode: 67158084  Links: 2 ...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; stat file2</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">... Inode: 67158084  Links: 2 ...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; ln file2 file3 prompt&gt; stat file</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">... Inode: 67158084  Links: 3 ...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; rm file prompt&gt; stat file2</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">... Inode: 67158084  Links: 2 ...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; rm file2 prompt&gt; stat file3</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">... Inode: 67158084  Links: 1 ...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; rm file3</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part428.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part430.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
