<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Paging: Smaller Tables</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part201.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part203.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 2pt;padding-left: 182pt;text-indent: 0pt;text-align: left;">Paging: Smaller Tables</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">We now tackle the second problem that paging introduces: page tables are too big and thus consume too much memory. Let’s start out with a linear page table. As you might recall<span class="s35">1</span>, linear page tables get pretty big. Assume again a 32-bit address space (<span class="s44">2</span><span class="s101">32</span><span class="s64"> </span>bytes), with 4KB (<span class="s44">2</span><span class="s101">12</span><span class="s64"> </span>byte) pages and a 4-byte page-table entry. An address space thus has roughly</p><p class="s110" style="padding-left: 54pt;text-indent: 0pt;line-height: 4pt;text-align: center;">32</p><p class="s111" style="text-indent: 0pt;line-height: 8pt;text-align: left;">2<span class="s110">12</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 41pt;text-indent: 0pt;line-height: 9pt;text-align: justify;">one million virtual pages in it <span class="s104">( </span><span class="s112">2</span><span class="s113"> </span><span class="s114"> </span><span class="s5">)</span><span class="s115">; multiply by the page-table size and</span></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">you see that our page table is 4MB in size. Recall also: we usually have one page table <i>for every process </i>in the system! With a hundred active pro- cesses (not uncommon on a modern system), we will be allocating hun- dreds of megabytes of memory just for page tables! As a result, we are in search of some techniques to reduce this heavy burden. There are a lot of them, so let’s get going. But not before our crux:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 56pt;text-indent: 0pt;line-height: 11pt;text-align: left;">C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>M<span class="s7">AKE </span>P<span class="s7">AGE </span>T<span class="s7">ABLES </span>S<span class="s7">MALLER</span>?</p><p style="padding-left: 9pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Simple array-based page tables (usually called linear page tables) are too big, taking up far too much memory on typical systems. How can we make page tables smaller? What are the key ideas? What inefficiencies arise as a result of these new data structures?</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part203.htm">20.1 Simple Solution: Bigger Pages</a><a class="toc0" href="part204.htm">20.2 Hybrid Approach: Paging and Segments</a><a class="toc0" href="part205.htm">20.3 Multi-level Page Tables</a><a class="toc1" href="part206.htm">A Detailed Multi-Level Example</a><a class="toc1" href="part207.htm">More Than Two Levels</a><a class="toc1" href="part208.htm">The Translation Process: Remember the TLB</a><a class="toc0" href="part209.htm">20.4 Inverted Page Tables</a><a class="toc0" href="part210.htm">20.5 Swapping the Page Tables to Disk</a><a class="toc0" href="part211.htm">20.6 Summary</a><a class="toc0" href="part212.htm">References</a><a class="toc0" href="part213.htm">Homework</a><a class="toc1" href="part214.htm">Questions</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part201.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part203.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
