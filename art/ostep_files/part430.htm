<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>39.14 Symbolic Links</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part429.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part431.htm">下一个 &gt;</a></p><p class="s40" style="padding-top: 5pt;padding-left: 33pt;text-indent: 0pt;text-align: left;">39.14 Symbolic Links</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">There is one other type of link that is really useful, and it is called a <b>symbolic link </b>or sometimes a <b>soft link</b>. As it turns out, hard links are somewhat limited: you can’t create one to a directory (for fear that you will create a cycle in the directory tree); you can’t hard link to files in other disk partitions (because inode numbers are only unique within a particular file system, not across file systems); etc. Thus, a new type of link called the symbolic link was created.</p><p style="padding-left: 80pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">To create such a link, you can use the same program <span class="s41">ln</span>, but with the</p><p class="s41" style="padding-left: 68pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">-s <span class="p">flag. Here is an example:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; echo hello &gt; file prompt&gt; ln -s file file2 prompt&gt; cat file2</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">hello</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 88%;text-align: justify;">As you can see, creating a soft link looks much the same, and the orig- inal file can now be accessed through the file name <span class="s41">file </span>as well as the symbolic link name <span class="s41">file2</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">However, beyond this surface similarity, symbolic links are actually quite different from hard links. The first difference is that a symbolic link is actually a file itself, of a different type. We’ve already talked about regular files and directories; symbolic links are a third type the file system knows about. A <span class="s41">stat </span>on the symlink reveals all:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; stat file</p><p class="s38" style="padding-left: 41pt;text-indent: 4pt;text-align: left;">... regular file ... prompt&gt; stat file2</p><p class="s38" style="padding-left: 45pt;text-indent: 0pt;line-height: 8pt;text-align: left;">... symbolic link ...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 88%;text-align: justify;">Running <span class="s41">ls </span>also reveals this fact. If you look closely at the first char- acter of the long-form of the output from <span class="s41">ls</span>, you can see that the first character in the left-most column is a <span class="s41">- </span>for regular files, a <span class="s41">d </span>for directo- ries, and an <span class="s41">l </span>for soft links. You can also see the size of the symbolic link (4 bytes in this case), as well as what the link points to (the file named <span class="s41">file</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; ls -al</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">drwxr-x--- 2 remzi remzi  29 May 3 19:10 ./</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">drwxr-x--- 27 remzi remzi 4096 May 3 15:14 ../</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">-rw-r----- 1 remzi remzi  6 May 3 19:10 file</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">lrwxrwxrwx 1 remzi remzi  4 May 3 19:10 file2 -&gt; file</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 88%;text-align: justify;">The reason that <span class="s41">file2 </span>is 4 bytes is because the way a symbolic link is formed is by holding the pathname of the linked-to file as the data of the link file. Because we’ve linked to a file named <span class="s41">file</span>, our link file <span class="s41">file2 </span>is small (4 bytes). If we link to a longer pathname, our link file would be bigger:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; echo hello &gt; alongerfilename prompt&gt; ln -s alongerfilename file3 prompt&gt; ls -al alongerfilename file3</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">-rw-r----- 1 remzi remzi 6 May 3 19:17 alongerfilename</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">lrwxrwxrwx 1 remzi remzi 15 May 3 19:17 file3 -&gt; alongerfilename</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Finally, because of the way symbolic links are created, they leave the possibility for what is known as a <b>dangling reference</b>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; echo hello &gt; file prompt&gt; ln -s file file2 prompt&gt; cat file2</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">hello</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">prompt&gt; rm file prompt&gt; cat file2</p><p class="s38" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">cat: file2: No such file or directory</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">As you can see in this example, quite unlike hard links, removing the original file named <span class="s41">file </span>causes the link to point to a pathname that no longer exists.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part429.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part431.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
