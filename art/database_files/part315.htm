<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>17.5  Transaction Isolation</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part314.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part316.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 72pt;text-indent: 0pt;text-align: left;">17.5  <span style=" color: #00AEEF;">Transaction Isolation</span></p><p style="padding-top: 12pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Transaction-processing systems usually allow multiple transactions to run concurrently. Allowing multiple transactions to update data concurrently causes several complica- tions with consistency of the data, as we saw earlier. Ensuring consistency in spite of</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-left: 43pt;text-indent: 0pt;text-align: center;">Note 17.1 <span class="s146">TRENDS IN CONCURRENCY</span></p><p style="padding-top: 2pt;padding-left: 9pt;text-indent: 2pt;text-align: justify;">Several current trends in the ﬁeld of computing are giving rise to an increase in the amount of concurrency possible. As database systems exploit this concurrency to increase overall system performance, there will necessarily be an increasing num- ber of transactions run concurrently.</p><p style="padding-left: 9pt;text-indent: 17pt;text-align: right;">Early computers had only one processor. Therefore, there was never any real concurrency in the computer. The only concurrency was apparent concurrency created by the operating system as it shared the processor among several distinct tasks or processes. Modern computers are likely to have many processors. Each processor is referred to as a <i>core</i>; a single processor chip may contain several cores, and several such chips may be connected together in a single system, which all share a common system memory. Further, parallel database systems may contain multiple such systems. Parallel database architectures are discussed in Chapter 20. The parallelism provided by multiple processors and cores is used for two pur- poses. One is to execute diﬀerent parts of a single long running query in parallel, to speed up query execution. The other is to allow a large number of queries (often much smaller queries) to execute concurrently, for example to support a very large number of concurrent users. Chapter 21 through Chapter 23 describe algorithms</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: justify;">for building parallel database systems.</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">concurrent execution of transactions requires extra work; it is far easier to insist that transactions run <span class="s63">serially </span>— that is, one at a time, each starting only after the previous one has completed. However, there are two good reasons for allowing concurrency:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>Improved throughput and resource utilization</b>. A transaction consists of many steps. Some involve <span class="s44">I/O </span>activity; others involve <span class="s44">CPU </span>activity. The <span class="s44">CPU </span>and the disks in a computer system can operate in parallel. Therefore, <span class="s44">I/O </span>activity can be done in parallel with processing at the <span class="s44">CPU</span>. The parallelism of the <span class="s44">CPU </span>and the <span class="s44">I/O </span>system can therefore be exploited to run multiple transactions in parallel. While a read or write on behalf of one transaction is in progress on one disk, another transaction can be running in the <span class="s44">CPU</span>, while another disk may be executing a read or write on behalf of a third transaction. All of this increases the <span class="s63">throughput </span>of the system— that is, the number of transactions executed in a given amount of time. Correspondingly, the processor and disk <span class="s63">utilization </span>also increase; in other words, the processor and disk spend less time idle, or not performing any useful work.</p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s46">Reduced waiting time</span><span class="p">. There may be a mix of transactions running on a system, some short and some long. If transactions run serially, a short transaction may have to wait for a preceding long transaction to complete, which can lead to un-</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: 0pt;text-align: justify;">predictable delays in running a transaction. If the transactions are operating on diﬀerent parts of the database, it is better to let them run concurrently, sharing the <span class="s44">CPU </span>cycles and disk accesses among them. Concurrent execution reduces the unpredictable delays in running transactions. Moreover, it also reduces the <span class="s63">average response time</span>: the average time for a transaction to be completed after it has been submitted.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The motivation for using concurrent execution in a database is essentially the same as the motivation for using <span class="s63">multiprogramming </span>in an operating system.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">When several transactions run concurrently, the isolation property may be vio- lated, resulting in database consistency being destroyed despite the correctness of each individual transaction. In this section, we present the concept of schedules to help identify those executions that are guaranteed to ensure the isolation property and thus database consistency.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The database system must control the interaction among the concurrent trans- actions to prevent them from destroying the consistency of the database. It does so through a variety of mechanisms called <span class="s63">concurrency-control schemes</span>. We study concurrency-control schemes in Chapter 18; for now, we focus on the concept of cor- rect concurrent execution.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Consider again the simpliﬁed banking system of Section 17.1, which has several accounts, and a set of transactions that access and update those accounts. Let <i>T</i><span class="s98">1</span> and <i>T</i><span class="s98">2</span> be two transactions that transfer funds from one account to another. Transaction <i>T</i><span class="s98">1</span> transfers $50 from account <i>A </i>to account <i>B</i>. It is deﬁned as:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 271pt;text-indent: 0pt;text-align: left;"><i>T</i><span class="s98">1</span>: <span class="s49">read</span>(<i>A</i>);</p><p class="s13" style="padding-left: 144pt;text-indent: 0pt;text-align: center;">A <span class="p">:= </span>A <span class="s15">− </span><span class="p">50;</span></p><p style="padding-left: 133pt;text-indent: 0pt;text-align: center;"><span class="s49">write</span>(<i>A</i>);</p><p style="padding-left: 130pt;text-indent: 0pt;text-align: center;"><span class="s49">read</span>(<i>B</i>);</p><p class="s13" style="padding-left: 143pt;text-indent: 0pt;text-align: center;">B <span class="p">:= </span>B <span class="p">+ 50;</span></p><p style="padding-left: 133pt;text-indent: 0pt;text-align: center;"><span class="s49">write</span>(<i>B</i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: left;">Transaction <i>T</i><span class="s98">2</span> transfers 10 percent of the balance from account <i>A </i>to account <i>B</i>. It is deﬁned as:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 264pt;text-indent: 0pt;text-align: left;"><i>T</i><span class="s98">2</span>: <span class="s49">read</span>(<i>A</i>);</p><p class="s13" style="padding-left: 283pt;text-indent: 0pt;text-align: left;">temp <span class="p">:= </span>A <span class="p">* 0.1; </span>A <span class="p">:= </span>A <span class="s15">− </span>temp<span class="p">; </span><span class="s49">write</span><span class="p">(</span>A<span class="p">);</span></p><p style="padding-left: 283pt;text-indent: 0pt;text-align: left;"><span class="s49">read</span>(<i>B</i>);</p><p class="s13" style="padding-left: 283pt;text-indent: 0pt;text-align: left;">B <span class="p">:= </span>B <span class="p">+ </span>temp<span class="p">;</span></p><p style="padding-left: 283pt;text-indent: 0pt;text-align: left;"><span class="s49">write</span>(<i>B</i>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:202.374pt" cellspacing="0"><tr style="height:18pt"><td style="width:64pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">1</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 33pt;padding-right: 33pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">2</span></p></td></tr><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:79pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">A <span class="s72">:= </span>A <span class="s365">− </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">+ </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s424" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;">commit</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">temp <span class="s72">:= </span>A <span class="s365">∗ </span><span class="s72">0.1</span></p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;">A <span class="s72">:= </span>A <span class="s365">− </span>temp</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">+ </span>temp</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s424" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">commit</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 17.2 </span>Schedule 1 — a serial schedule in which <span class="s425">T</span><span class="s116">1</span> is followed by <span class="s425">T</span><span class="s116">2</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Suppose the current values of accounts <i>A </i>and <i>B </i>are $1000 and $2000, respectively. Suppose also that the two transactions are executed one at a time in the order <i>T</i><span class="s98">1</span> fol- lowed by <i>T</i><span class="s98">2</span>. This execution sequence appears in Figure 17.2. In the ﬁgure, the sequence of instruction steps is in chronological order from top to bottom, with instructions of <i>T</i><span class="s98">1</span> appearing in the left column and instructions of <i>T</i><span class="s98">2</span> appearing in the right column. The ﬁnal values of accounts <i>A </i>and <i>B</i>, after the execution in Figure 17.2 takes place, are</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">$855 and $2145, respectively. Thus, the total amount of money in accounts <i>A </i>and <i>B </i>— that is, the sum <i>A </i>+ <i>B </i>— is preserved after the execution of both transactions.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Similarly, if the transactions are executed one at a time in the order <i>T</i><span class="s98">2</span> followed by <i>T</i><span class="s98">1</span>, then the corresponding execution sequence is that of Figure 17.3. Again, as expected, the sum <i>A </i>+ <i>B </i>is preserved, and the ﬁnal values of accounts <i>A </i>and <i>B </i>are $850 and $2150, respectively.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">The execution sequences just described are called <span class="s63">schedules</span>. They represent the chronological order in which instructions are executed in the system. Clearly, a sched- ule for a set of transactions must consist of all instructions of those transactions and they must preserve the order in which the instructions appear in each individual trans- action. For example, in transaction <i>T</i><span class="s98">1</span>, the instruction <span class="s49">write</span>(<i>A</i>) must appear before the instruction <span class="s49">read</span>(<i>B</i>), in any valid schedule. Note that we include in our schedules the <b>commit </b>operation to indicate that the transaction has entered the committed state. In the following discussion, we shall refer to the ﬁrst execution sequence (<i>T</i><span class="s98">1</span> followed by <i>T</i><span class="s98">2</span>) as schedule 1, and to the second execution sequence (<i>T</i><span class="s98">2</span> followed by <i>T</i><span class="s98">1</span>) as schedule 2.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:233.814pt" cellspacing="0"><tr style="height:18pt"><td style="width:64pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">1</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 33pt;padding-right: 33pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">2</span></p></td></tr><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">temp <span class="s72">:= </span>A <span class="s365">∗ </span><span class="s72">0.1</span></p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;">A <span class="s72">:= </span>A <span class="s365">− </span>temp</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">+ </span>temp</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s424" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">commit</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">A <span class="s72">:= </span>A <span class="s365">− </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">+ </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s424" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">commit</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-top: 4pt;padding-left: 149pt;text-indent: 0pt;text-align: left;"><span class="s73">Figure 17.3 </span>Schedule 2 — a serial schedule in which <span class="s425">T</span><span class="s116">2</span> is followed by <span class="s425">T</span><span class="s116">1</span>.</p><p style="padding-top: 8pt;padding-left: 119pt;text-indent: 17pt;text-align: justify;">These schedules are <span class="s63">serial</span>: Each serial schedule consists of a sequence of instruc- tions from various transactions, where the instructions belonging to one single trans- action appear together in that schedule. Recalling a well-known formula from combi- natorics, we note that, for a set of <i>n </i>transactions, there exist <i>n </i>factorial (<i>n</i>!) diﬀerent valid serial schedules.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">When the database system executes several transactions concurrently, the corre- sponding schedule no longer needs to be serial. If two transactions are running concur- rently, the operating system may execute one transaction for a little while, then perform a context switch, execute the second transaction for some time, and then switch back to the ﬁrst transaction for some time, and so on. With multiple transactions, the <span class="s44">CPU </span>time is shared among all the transactions.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Several execution sequences are possible, since the various instructions from both transactions may now be interleaved. In general, it is not possible to predict exactly how many instructions of a transaction will be executed before the <span class="s44">CPU </span>switches to another transaction.<span class="s76">1</span></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">Returning to our previous example, suppose that the two transactions are executed concurrently. One possible schedule appears in Figure 17.4. After this execution takes place, we arrive at the same state as the one in which the transactions are executed serially in the order <i>T</i><span class="s98">1</span> followed by <i>T</i><span class="s98">2</span>. The sum <i>A </i>+ <i>B </i>is indeed preserved.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="95" height="1" alt="image" src="Image_2976.png"/></span></p><p class="s111" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;"><span class="s77">1</span><span class="s78">The number of possible schedules for a set of </span>n <span class="s80">transactions is very large. There are </span>n<span class="s80">! diﬀerent serial schedules. Considering all the possible ways that steps of transactions might be interleaved, the total number of possible schedules is much larger than </span>n<span class="s80">!.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:202.374pt" cellspacing="0"><tr style="height:18pt"><td style="width:64pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;line-height: 14pt;text-align: center;"><a name="bookmark372">T</a><span class="s232">1</span><a name="bookmark414">&zwnj;</a></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-top: 2pt;padding-left: 33pt;padding-right: 33pt;text-indent: 0pt;line-height: 14pt;text-align: center;">T<span class="s232">2</span></p></td></tr><tr style="height:17pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td><td style="width:79pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">A <span class="s72">:= </span>A <span class="s365">− </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>A</i>)</p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">temp <span class="s72">:= </span>A <span class="s365">∗ </span><span class="s72">0.1</span></p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;">A <span class="s72">:= </span>A <span class="s365">− </span>temp</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>A</i>)</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s71" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">+ </span><span class="s72">50</span></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s424" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;">commit</p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s424">read</span>(<i>B</i>)</p></td></tr><tr style="height:15pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s71" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">B <span class="s72">:= </span>B <span class="s365">+ </span>temp</p></td></tr><tr style="height:13pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s72" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s424">write</span>(<i>B</i>)</p></td></tr><tr style="height:14pt"><td style="width:64pt;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F"><p class="s424" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">commit</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 17.4 <span class="s74">Schedule 3 — a concurrent schedule equivalent to schedule 1.</span></p><p style="padding-top: 10pt;padding-left: 88pt;text-indent: 17pt;text-align: right;">Not all concurrent executions result in a correct state. To illustrate, consider the schedule of Figure 17.5. After the execution of this schedule, we arrive at a state where the ﬁnal values of accounts <i>A </i>and <i>B </i>are $950 and $2100, respectively. This ﬁnal state is an <i>inconsistent state</i>, since we have gained $50 in the process of the concurrent execu- tion. Indeed, the sum <i>A </i>+ <i>B </i>is not preserved by the execution of the two transactions. If control of concurrent execution is left entirely to the operating system, many possible schedules, including ones that leave the database in an inconsistent state, such as the one just described, are possible. It is the job of the database system to ensure that any schedule that is executed will leave the database in a consistent state. The</p><p class="s63" style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">concurrency-control <span class="p">component of the database system carries out this task.</span></p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">We can ensure consistency of the database under concurrent execution by making sure that any schedule that is executed has the same eﬀect as a schedule that could have occurred without any concurrent execution. That is, the schedule should, in some sense, be equivalent to a serial schedule. Such schedules are called <span class="s63">serializable </span>sched- ules.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part314.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part316.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
