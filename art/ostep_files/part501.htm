<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>44.6 One Last Problem: Lost Writes</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part500.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part502.htm">下一个 &gt;</a></p><p class="s40" style="padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">44.6 One Last Problem: Lost Writes</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Unfortunately, misdirected writes are not the last problem we will address. Specifically, some modern storage devices also have an issue known as a <b>lost write</b>, which occurs when the device informs the upper layer that a write has completed but in fact it never is persisted; thus, what remains is left is the old contents of the block rather than the up- dated new contents.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The obvious question here is: do any of our checksumming strategies from above (e.g., basic checksums, or physical identity) help to detect lost writes? Unfortunately, the answer is no: the old block likely has a matching checksum, and the physical ID used above (disk number and block offset) will also be correct. Thus our final problem:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 73pt;text-indent: 0pt;line-height: 11pt;text-align: left;">C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>H<span class="s7">ANDLE </span>L<span class="s7">OST </span>W<span class="s7">RITES</span></p><p style="padding-left: 20pt;text-indent: 0pt;line-height: 10pt;text-align: left;">How should a storage system or disk controller detect lost writes?</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 11pt;text-align: left;">What additional features are required from the checksum?</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">There are a number of possible solutions that can help [K+08]. One classic approach [BS04] is to perform a <b>write verify </b>or <b>read-after-write</b>; by immediately reading back the data after a write, a system can ensure that the data indeed reached the disk surface. This approach, however, is quite slow, doubling the number of I/Os needed to complete a write.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Some systems add a checksum elsewhere in the system to detect lost writes. For example, Sun’s <b>Zettabyte File System </b>(<b>ZFS</b>) includes a check- sum in each file system inode and indirect block for every block included within a file. Thus, even if the write to a data block itself is lost, the check- sum within the inode will not match the old data. Only if the writes to both the inode and the data are lost simultaneously will such a scheme fail, an unlikely (but unfortunately, possible!) situation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part500.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part502.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
