<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>SPTF: Shortest Positioning Time First</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part388.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part390.htm">下一个 &gt;</a></p><p class="s32" style="padding-top: 7pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">SPTF: Shortest Positioning Time First</p><p style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: left;">Before discussing <b>shortest positioning time first </b>or <b>SPTF </b>scheduling (some- times also called <b>shortest access time first </b>or <b>SATF</b>), which is the solution to our problem, let us make sure we understand the problem in more de- tail. Figure <span style=" color: #00AEEF;">37.6 </span>presents an example.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">In the example, the head is currently positioned over sector 30 on the inner track. The scheduler thus has to decide: should it schedule sector 16 (on the middle track) or sector 8 (on the outer track) for its next request. So which should it service next?</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">The answer, of course, is “it depends”. In engineering, it turns out “it depends” is almost always the answer, reflecting that trade-offs are part of the life of the engineer; such maxims are also good in a pinch, e.g., when you don’t know an answer to your boss’s question, you might want to try this gem. However, it is almost always better to know <i>why </i>it depends, which is what we discuss here.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">What it depends on here is the relative time of seeking as compared to rotation. If, in our example, seek time is much higher than rotational delay, then SSTF (and variants) are just fine. However, imagine if seek is quite a bit faster than rotation. Then, in our example, it would make more sense to seek <i>further </i>to service request 8 on the outer track than it would to perform the shorter seek to the middle track to service 16, which has to rotate all the way around before passing under the disk head.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: left;">On modern drives, as we saw above, both seek and rotation are roughly equivalent (depending, of course, on the exact requests), and thus SPTF is useful and improves performance. However, it is even more difficult to implement in an OS, which generally does not have a good idea where track boundaries are or where the disk head currently is (in a rotational sense). Thus, SPTF is usually performed inside a drive, described below.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;">T<span class="s7">IP</span>: I<span class="s7">T </span>A<span class="s7">LWAYS </span>D<span class="s7">EPENDS </span>(L<span class="s7">IVNY</span>’<span class="s7">S </span>L<span class="s7">AW</span>)</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Almost any question can be answered with “it depends”, as our colleague Miron Livny always says. However, use with caution, as if you answer too many questions this way, people will stop asking you questions alto- gether. For example, somebody asks: “want to go to lunch?” You reply: “it depends, are <i>you </i>coming along?”</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part388.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part390.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
