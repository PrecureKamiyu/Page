<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Evaluating RAID Performance</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part400.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part402.htm">下一个 &gt;</a></p><p class="s32" style="padding-left: 68pt;text-indent: 0pt;text-align: justify;">Evaluating RAID Performance</p><p style="padding-top: 6pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">In analyzing RAID performance, one can consider two different perfor- mance metrics. The first is <i>single-request latency</i>. Understanding the la- tency of a single I/O request to a RAID is useful as it reveals how much parallelism can exist during a single logical I/O operation. The second is <i>steady-state throughput </i>of the RAID, i.e., the total bandwidth of many concurrent requests. Because RAIDs are often used in high-performance environments, the steady-state bandwidth is critical, and thus will be the main focus of our analyses.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">To understand throughput in more detail, we need to put forth some workloads of interest. We will assume, for this discussion, that there are two types of workloads: <b>sequential </b>and <b>random</b>. With a sequential workload, we assume that requests to the array come in large contiguous chunks; for example, a request (or series of requests) that accesses 1 MB of data, starting at block (B) and ending at block (B + 1 MB), would be deemed sequential. Sequential workloads are common in many environ- ments (think of searching through a large file for a keyword), and thus are considered important.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">For random workloads, we assume that each request is rather small, and that each request is to a different random location on disk. For exam- ple, a random stream of requests may first access 4KB at logical address 10, then at logical address 550,000, then at 20,100, and so forth. Some im- portant workloads, such as transactional workloads on a database man- agement system (DBMS), exhibit this type of access pattern, and thus it is considered an important workload.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: right;">Of course, real workloads are not so simple, and often have a mix of sequential and random-seeming components as well as behaviors in- between the two. For simplicity, we just consider these two possibilities. As you can tell, sequential and random workloads will result in widely different performance characteristics from a disk. With sequential access, a disk operates in its most efficient mode, spending little time seeking and waiting for rotation and most of its time transferring data. With random access, just the opposite is true: most time is spent seeking and waiting for rotation and relatively little time is spent transferring data. To capture this difference in our analysis, we will assume that a disk can transfer data at S MB/s under a sequential workload, and R MB/s when under a</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">random workload. In general, S is much greater than R.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">To make sure we understand this difference, let’s do a simple exer- cise. Specifically, lets calculate S and R given the following disk charac- teristics. Assume a sequential transfer of size 10 MB on average, and a random transfer of 10 KB on average. Also, assume the following disk characteristics:</p><p style="padding-left: 47pt;text-indent: 25pt;line-height: 89%;text-align: justify;">Average seek time  7 ms Average rotational delay  3 ms</p><p style="padding-left: 65pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">Transfer rate of disk  50 MB/s</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">To compute S, we need to first figure out how time is spent in a typical 10 MB transfer. First, we spend 7 ms seeking, and then 3 ms rotating. Finally, transfer begins; 10 MB @ 50 MB/s leads to 1/5th of a second, or 200 ms, spent in transfer. Thus, for each 10 MB request, we spend 210 ms completing the request. To compute S, we just need to divide:</p><p class="s162" style="padding-top: 7pt;padding-left: 52pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><span class="s194">S </span>= <span class="s157">Amount of Data</span><span class="s127"> </span>= <span class="s158">10 </span><span class="s157">MB</span><span class="s127"> </span>= 47<span class="s194">.</span>62 <span class="s194">MB/s</span></p><p class="s127" style="padding-left: 76pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Time to access  <span class="s62">210 </span>ms</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">As we can see, because of the large time spent transferring data, S is very near the peak bandwidth of the disk (the seek and rotational costs have been amortized).</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">We can compute R similarly. Seek and rotation are the same; we then compute the time spent in transfer, which is 10 KB @ 50 MB/s, or 0.195 ms.</p><p class="s162" style="padding-top: 5pt;padding-left: 52pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><span class="s194">R </span>= <span class="s157">Amount of Data</span><span class="s127"> </span>= <span class="s168">&nbsp;</span><span class="s158">10 </span><span class="s157">KB </span><span class="s127"> </span>= 0<span class="s194">.</span>981 <span class="s194">MB/s</span></p><p class="s127" style="padding-left: 76pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Time to access  <span class="s62">10</span>.<span class="s62">195 </span>ms</p><p style="padding-top: 4pt;padding-left: 52pt;text-indent: 0pt;text-align: left;">As we can see, R is less than 1 MB/s, and S/R is almost 50.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part400.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part402.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
