<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>25.6  Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part452.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part454.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 72pt;text-indent: 0pt;text-align: left;">25.6  <span style=" color: #00AEEF;">Summary</span></p><p class="s39" style="padding-top: 9pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Tuning of the database-system parameters, as well as the higher-level database de- sign — such as the schema, indices, and transactions — is important for good perfor- mance. Tuning is best done by identifying bottlenecks and eliminating them.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-top: 4pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Database tuning can be done at the level of schema and queries, at the level of database system parameters, and at the level of hardware. Database systems usually have a variety of tunable parameters, such as buﬀer sizes.</span></p><p class="s39" style="padding-top: 2pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">The right choice of indices and materialized views, and the use of horizontal par- titioning can provide signiﬁcant performance beneﬁts. Tools for automated tuning based on workload history can help signiﬁcantly in such tuning. The set of indices and materialized views can be appropriately chosen to minimize overall cost. Ver- tical partitioning, and columnar storage can lead to signiﬁcant beneﬁts in online analytical processing systems.</span></p><p class="s39" style="padding-top: 2pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Transactions can be tuned to minimize lock contention; snapshot isolation and sequence numbering facilities supporting early lock release are useful tools for reducing read-write and write-write contention.</span></p><p class="s40" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>Hardware tuning includes choice of memory size, the use of <span class="s41">SSDs </span>versus magnetic hard disks, and increasingly, the number of <span class="s41">CPU </span>cores.</p><p class="s40" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>Performance benchmarks play an important role in comparisons of database sys- tems, especially as systems become more standards compliant. The <span class="s41">TPC </span>bench- mark suites are widely used, and the diﬀerent <span class="s41">TPC </span>benchmarks are useful for com- paring the performance of databases under diﬀerent workloads.</p><p class="s39" style="padding-top: 2pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Applications need to be tested extensively as they are developed and before they are deployed. Testing is used to catch errors as well as to ensure that performance goals are met.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;">• <span class="s40">Legacy systems are systems based on older-generation technologies such as nonre- lational databases or even directly on ﬁle systems. Interfacing legacy systems with new-generation systems is often important when they run mission-critical systems. Migrating from legacy systems to new-generation systems must be done carefully to avoid disruptions, which can be very expensive.</span></p><p class="s40" style="padding-top: 2pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>Standards are important because of the complexity of database systems and their need for interoperation. Formal standards exist for <span class="s41">SQL</span>. De facto standards, such as <span class="s41">ODBC </span>and <span class="s41">JDBC</span>, and standards adopted by industry groups have played an important role in the growth of client– server database systems.</p><p class="s40" style="padding-top: 2pt;padding-left: 107pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>Distributed directory systems have played an important role in many applications, and can be viewed as distributed databases. <span class="s41">LDAP </span>is widely used for authentication and for tracking employee information in organizations.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part452.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part454.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
