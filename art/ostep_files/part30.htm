<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The Modern Era</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part29.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part31.htm">下一个 &gt;</a></p><p class="s32" style="padding-left: 68pt;text-indent: 0pt;text-align: justify;">The Modern Era</p><p style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Beyond the minicomputer came a new type of machine, cheaper, faster, and for the masses: the <b>personal computer</b>, or <b>PC </b>as we call it today. Led by Apple’s early machines (e.g., the Apple II) and the IBM PC, this new breed of machine would soon become the dominant force in computing, as their low-cost enabled one machine per desktop instead of a shared minicomputer per workgroup.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Unfortunately, for operating systems, the PC at first represented a great leap backwards, as early systems forgot (or never knew of) the lessons learned in the era of minicomputers. For example, early operat- ing systems such as <b>DOS </b>(the <b>Disk Operating System</b>, from <b>Microsoft</b>) didn’t think memory protection was important; thus, a malicious (or per- haps just a poorly-programmed) application could scribble all over mem- ory. The first generations of the <b>Mac OS </b>(v9 and earlier) took a coopera- tive approach to job scheduling; thus, a thread that accidentally got stuck in an infinite loop could take over the entire system, forcing a reboot. The painful list of OS features missing in this generation of systems is long, too long for a full discussion here.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Fortunately, after some years of suffering, the old features of minicom- puter operating systems started to find their way onto the desktop. For example, Mac OS X has U<span class="s7">NIX </span>at its core, including all of the features one would expect from such a mature system. Windows has similarly adopted many of the great ideas in computing history, starting in partic- ular with Windows NT, a great leap forward in Microsoft OS technology. Even today’s cell phones run operating systems (such as Linux) that are</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="154" height="1" alt="image" src="Image_019.png"/></span></p><p class="s11" style="padding-top: 2pt;padding-left: 68pt;text-indent: 11pt;line-height: 92%;text-align: justify;">10<span class="s12">We’ll use asides and other related text boxes to call attention to various items that don’t quite fit the main flow of the text. Sometimes, we’ll even use them just to make a joke, because why not have a little fun along the way? Yes, many of the jokes are bad.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="408" height="499" alt="image" src="Image_020.png"/></span></p><p class="s27" style="padding-left: 113pt;text-indent: 0pt;text-align: left;"><span class="p">A</span><span class="s7">SIDE</span><span class="p">: </span>T<span class="s45">HE </span>I<span class="s45">MPORTANCE OF </span>U<span class="s45">NIX</span></p><p style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">It is difficult to overstate the importance of U<span class="s7">NIX </span>in the history of oper- ating systems. Influenced by earlier systems (in particular, the famous <b>Multics </b>system from MIT), U<span class="s7">NIX </span>brought together many great ideas and made a system that was both simple and powerful.</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Underlying the original “Bell Labs” U<span class="s7">NIX </span>was the unifying principle of building small powerful programs that could be connected together to form larger workflows. The <b>shell</b>, where you type commands, provided primitives such as <b>pipes </b>to enable such meta-level programming, and thus it became easy to string together programs to accomplish a big- ger task. For example, to find lines of a text file that have the word “foo” in them, and then to count how many such lines exist, you would type: <span class="s41">grep foo file.txt|wc -l</span>, thus using the <span class="s41">grep </span>and <span class="s41">wc </span>(word count) programs to achieve your task.</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">The U<span class="s7">NIX </span>environment was friendly for programmers and developers alike, also providing a compiler for the new <b>C programming language</b>. Making it easy for programmers to write their own programs, as well as share them, made U<span class="s7">NIX </span>enormously popular. And it probably helped a lot that the authors gave out copies for free to anyone who asked, an early form of <b>open-source software</b>.</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Also of critical importance was the accessibility and readability of the code. Having a beautiful, small kernel written in C invited others to play with the kernel, adding new and cool features. For example, an enter- prising group at Berkeley, led by <b>Bill Joy</b>, made a wonderful distribution (the <b>Berkeley Systems Distribution</b>, or <b>BSD</b>) which had some advanced virtual memory, file system, and networking subsystems. Joy later co- founded <b>Sun Microsystems</b>.</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Unfortunately, the spread of U<span class="s7">NIX </span>was slowed a bit as companies tried to assert ownership and profit from it, an unfortunate (but common) result of lawyers getting involved. Many companies had their own variants: <b>SunOS </b>from Sun Microsystems, <b>AIX </b>from IBM, <b>HPUX </b>(a.k.a. “H-Pucks”) from HP, and <b>IRIX </b>from SGI. The legal wrangling among AT&amp;T/Bell Labs and these other players cast a dark cloud over U<span class="s7">NIX</span>, and many wondered if it would survive, especially as Windows was introduced and took over much of the PC market...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">much more like what a minicomputer ran in the 1970s than what a PC ran in the 1980s (thank goodness); it is good to see that the good ideas de- veloped in the heyday of OS development have found their way into the modern world. Even better is that these ideas continue to develop, pro- viding more features and making modern systems even better for users and applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-top: 6pt;padding-left: 86pt;text-indent: 0pt;text-align: left;"><span class="p">A</span><span class="s7">SIDE</span><span class="p">: </span>A<span class="s45">ND </span>T<span class="s45">HEN </span>C<span class="s45">AME </span>L<span class="s45">INUX</span></p><p style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Fortunately for U<span class="s7">NIX</span>, a young Finnish hacker named <b>Linus Torvalds </b>de- cided to write his own version of U<span class="s7">NIX </span>which borrowed heavily on the principles and ideas behind the original system, but not from the code base, thus avoiding issues of legality. He enlisted help from many oth- ers around the world, and soon <b>Linux </b>was born (as well as the modern open-source software movement).</p><p style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 89%;text-align: justify;">As the internet era came into place, most companies (such as Google, Amazon, Facebook, and others) chose to run Linux, as it was free and could be readily modified to suit their needs; indeed, it is hard to imag- ine the success of these new companies had such a system not existed. As smart phones became a dominant user-facing platform, Linux found a stronghold there too (via Android), for many of the same reasons. And Steve Jobs took his U<span class="s7">NIX</span>-based <b>NeXTStep </b>operating environment with him to Apple, thus making U<span class="s7">NIX </span>popular on desktops (though many users of Apple technology are probably not even aware of this fact). And thus U<span class="s7">NIX </span>lives on, more important today than ever before. The comput- ing gods, if you believe in them, should be thanked for this wonderful outcome.</p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part29.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part31.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
