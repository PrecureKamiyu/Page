<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part90.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part92.htm">下一个 &gt;</a></p><h4 style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[AD00] “Multilevel Feedback Queue Scheduling in Solaris” Andrea Arpaci-Dusseau</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.cs.wisc.edu/" class="a" target="_blank">Available: </a>http://www.cs.wisc.edu/˜remzi/solaris-notes.pdf</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">A great short set of notes by one of the authors on the details of the Solaris scheduler. OK, we are probably biased in this description, but the notes are pretty darn good.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[B86] “The Design of the U<span class="s18">NIX </span>Operating System”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">M.J. Bach</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Prentice-Hall, 1986</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: left;">One of the classic old books on how a real <span class="s12">U</span><span class="s18">NIX </span>operating system is built; a definite must-read for kernel hackers.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[C+62] “An Experimental Time-Sharing System”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">F. J. Corbato, M. M. Daggett, R. C. Daley IFIPS 1962</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: justify;">A bit hard to read, but the source of many of the first ideas in multi-level feedback scheduling. Much of this later went into Multics, which one could argue was the most influential operating system of all time.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[CS97] “Inside Windows NT”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">Helen Custer and David A. Solomon Microsoft Press, 1997</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">The NT book, if you want to learn about something other than <span class="s12">U</span><span class="s18">NIX</span>. Of course, why would you? OK, we’re kidding; you might actually work for Microsoft some day you know.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[E95] “An Analysis of Decay-Usage Scheduling in Multiprocessors”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">D.H.J. Epema SIGMETRICS ’95</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">A nice paper on the state of the art of scheduling back in the mid 1990s, including a good overview of the basic approach behind decay-usage schedulers.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[LM+89] “The Design and Implementation of the 4.3BSD U<span class="s18">NIX </span>Operating System”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">S.J. Leffler, M.K. McKusick, M.J. Karels, J.S. Quarterman Addison-Wesley, 1989</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Another OS classic, written by four of the main people behind BSD. The later versions of this book, while more up to date, don’t quite match the beauty of this one.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[M06] “Solaris Internals: Solaris 10 and OpenSolaris Kernel Architecture” Richard McDougall</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Prentice-Hall, 2006</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">A good book about Solaris and how it works.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: left;">[O11] “John Ousterhout’s Home Page” John Ousterhout</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.stanford.edu/" class="a" target="_blank">Available: </a>http://www.stanford.edu/˜ouster/</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: justify;">The home page of the famous Professor Ousterhout. The two co-authors of this book had the pleasure of taking graduate operating systems from Ousterhout while in graduate school; indeed, this is where the two co-authors got to know each other, eventually leading to marriage, kids, and even this book. Thus, you really can blame Ousterhout for this entire mess you’re in.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[P+95] “Informed Prefetching and Caching”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">R.H. Patterson, G.A. Gibson, E. Ginting, D. Stodolsky, J. Zelenka SOSP ’95</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 94%;text-align: justify;">A fun paper about some very cool ideas in file systems, including how applications can give the OS advice about what files it is accessing and how it plans to access them.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part90.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part92.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
