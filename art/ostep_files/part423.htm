<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>39.7 Renaming Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part422.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part424.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">39.7 Renaming Files</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Once we have a file, it is sometimes useful to be able to give a file a different name. When typing at the command line, this is accomplished with <span class="s41">mv </span>command; in this example, the file <span class="s41">foo </span>is renamed <span class="s41">bar</span>:</p><p class="s38" style="padding-top: 7pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; mv foo bar</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 80pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">Using <span class="s41">strace</span>, we can see that <span class="s41">mv </span>uses the system call <span class="s41">rename(char</span></p><p class="s41" style="padding-left: 68pt;text-indent: 0pt;line-height: 78%;text-align: justify;"><span class="s86">*</span>old, char <span class="s86">*</span>new)<span class="p">, which takes precisely two arguments: the original name of the file (</span>old<span class="p">) and the new name (</span>new<span class="p">).</span></p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">One interesting guarantee provided by the <span class="s41">rename() </span>call is that it is (usually) implemented as an <b>atomic </b>call with respect to system crashes; if the system crashes during the renaming, the file will either be named the old name or the new name, and no odd in-between state can arise. Thus, <span class="s41">rename() </span>is critical for supporting certain kinds of applications that require an atomic update to file state.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Let’s be a little more specific here. Imagine that you are using a file ed- itor (e.g., emacs), and you insert a line into the middle of a file. The file’s name, for the example, is <span class="s41">foo.txt</span>. The way the editor might update the file to guarantee that the new file has the original contents plus the line inserted is as follows (ignoring error-checking for simplicity):</p><p class="s38" style="padding-top: 7pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">int fd = open(&quot;foo.txt.tmp&quot;, O_WRONLY|O_CREAT|O_TRUNC); write(fd, buffer, size); // write out new version of file fsync(fd);</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">close(fd);</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">rename(&quot;foo.txt.tmp&quot;, &quot;foo.txt&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">What the editor does in this example is simple: write out the new version of the file under temporary name (<span class="s41">foot.txt.tmp</span>), force it to disk with <span class="s41">fsync()</span>, and then, when the application is certain the new file metadata and contents are on the disk, rename the temporary file to the original file’s name. This last step atomically swaps the new file into place, while concurrently deleting the old version of the file, and thus an atomic file update is achieved.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part422.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part424.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
