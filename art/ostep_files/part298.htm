<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Lock-based Concurrent Data Structures</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part297.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part299.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;text-align: center;">Lock-based Concurrent Data Structures</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">Before moving beyond locks, we’ll first describe how to use locks in some common data structures. Adding locks to a data structure to make it us- able by threads makes the structure <b>thread safe</b>. Of course, exactly how such locks are added determines both the correctness and performance of the data structure. And thus, our challenge:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;">C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>A<span class="s7">DD </span>L<span class="s7">OCKS </span>T<span class="s7">O </span>D<span class="s7">ATA </span>S<span class="s7">TRUCTURES</span></p><p style="padding-left: 9pt;text-indent: 11pt;line-height: 89%;text-align: justify;">When given a particular data structure, how should we add locks to it, in order to make it work correctly? Further, how do we add locks such that the data structure yields high performance, enabling many threads to access the structure at once, i.e., <b>concurrently</b>?</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Of course, we will be hard pressed to cover all data structures or all methods for adding concurrency, as this is a topic that has been studied for years, with (literally) thousands of research papers published about it. Thus, we hope to provide a sufficient introduction to the type of think- ing required, and refer you to some good sources of material for further inquiry on your own. We found Moir and Shavit’s survey to be a great source of information [MS04].</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part299.htm">29.1 Concurrent Counters</a><a class="toc1" href="part300.htm">Simple But Not Scalable</a><a class="toc1" href="part301.htm">Scalable Counting</a><a class="toc0" href="part302.htm">29.2 Concurrent Linked Lists</a><a class="toc1" href="part303.htm">Scaling Linked Lists</a><a class="toc0" href="part304.htm">29.3 Concurrent Queues</a><a class="toc0" href="part305.htm">29.4 Concurrent Hash Table</a><a class="toc0" href="part306.htm">29.5 Summary</a><a class="toc0" href="part307.htm">References</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part297.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part299.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
