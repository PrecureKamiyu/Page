<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>7.15 Summary </title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P7000497027000000000000000006524" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P7000497027000000000000000044D2D" data-uri="chapter07.xhtml#P7000497027000000000000000044D2D" epub:type="title"><span class="pcalibre label pcalibre1">7.15 </span><span class="pcalibre label pcalibre1">Summary </span></h1></header>
<p id="P7000497027000000000000000044D2E" data-uri="chapter07.xhtml#P7000497027000000000000000044D2E" class="pcalibre1 pcalibre calibre2">Linking can be performed at compile time by static linkers and at load time and run time by dynamic linkers. Linkers manipulate binary files called object files, which come in three different forms: relocatable, executable, and shared. Relocatable object files are combined by static linkers into an executable object file that can be loaded into memory and executed. Shared object files (shared libraries) are linked and loaded by dynamic linkers at run time, either implicitly when the calling program is loaded and begins executing, or on demand, when the program calls functions from the <code id="P7000497027000000000000000044D2F" data-uri="chapter07.xhtml#P7000497027000000000000000044D2F" class="pcalibre1 calibre8 pcalibre">dlopen</code> library.</p>
<p id="P7000497027000000000000000044D30" data-uri="chapter07.xhtml#P7000497027000000000000000044D30" class="pcalibre1 pcalibre calibre2">The two main tasks of linkers are symbol resolution, where each global symbol in an object file is bound to a unique definition, and relocation, where the ultimate memory address for each symbol is determined and where references to those objects are modified.</p>
<p id="P7000497027000000000000000044D31" data-uri="chapter07.xhtml#P7000497027000000000000000044D31" class="pcalibre1 pcalibre calibre2">Static linkers are invoked by compiler drivers such as <span class="smallcaps pcalibre pcalibre1">gcc</span>. They combine multiple relocatable object files into a single executable object file. Multiple object files can define the same symbol, and the rules that linkers use for silently resolving these multiple definitions can introduce subtle bugs in user programs.</p>
<p id="P7000497027000000000000000044D32" data-uri="chapter07.xhtml#P7000497027000000000000000044D32" class="pcalibre1 pcalibre calibre2">Multiple object files can be concatenated in a single static library. Linkers use libraries to resolve symbol references in other object modules. The left-to-right sequential scan that many linkers use to resolve symbol references is another source of confusing link-time errors.</p>
<p id="P7000497027000000000000000044D33" data-uri="chapter07.xhtml#P7000497027000000000000000044D33" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000652C" title="714" data-uri="chapter07.xhtml#P700049702700000000000000000652C" epub:type="pagebreak"></span>Loaders map the contents of executable files into memory and run the program. Linkers can also produce partially linked executable object files with unresolved references to the routines and data defined in a shared library. At load time, the loader maps the partially linked executable into memory and then calls a dynamic linker, which completes the linking task by loading the shared library and relocating the references in the program.</p>
<p id="P7000497027000000000000000044D34" data-uri="chapter07.xhtml#P7000497027000000000000000044D34" class="pcalibre1 pcalibre calibre2">Shared libraries that are compiled as position-independent code can be loaded anywhere and shared at run time by multiple processes. Applications can also use the dynamic linker at run time in order to load, link, and access the functions and data in shared libraries.</p>
</section></body></html>
