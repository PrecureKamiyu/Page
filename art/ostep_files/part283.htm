<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>28.4 Evaluating Locks</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part282.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part284.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 11pt;text-indent: 0pt;text-align: left;">28.4 Evaluating Locks</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">Before building any locks, we should first understand what our goals are, and thus we ask how to evaluate the efficacy of a particular lock implementation. To evaluate whether a lock works (and works well), we should first establish some basic criteria. The first is whether the lock does its basic task, which is to provide <b>mutual exclusion</b>. Basically, does the lock work, preventing multiple threads from entering a critical section?</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The second is <b>fairness</b>. Does each thread contending for the lock get a fair shot at acquiring it once it is free? Another way to look at this is by examining the more extreme case: does any thread contending for the lock <b>starve </b>while doing so, thus never obtaining it?</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: left;">The final criterion is <b>performance</b>, specifically the time overheads added by using the lock. There are a few different cases that are worth con- sidering here. One is the case of no contention; when a single thread is running and grabs and releases the lock, what is the overhead of do- ing so? Another is the case where multiple threads are contending for the lock on a single CPU; in this case, are there performance concerns? Fi- nally, how does the lock perform when there are multiple CPUs involved, and threads on each contending for the lock? By comparing these differ- ent scenarios, we can better understand the performance impact of using various locking techniques, as described below.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part282.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part284.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
