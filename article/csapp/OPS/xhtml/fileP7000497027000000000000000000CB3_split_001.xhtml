<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>2.3 Integer Arithmetic</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P7000497027000000000000000000CB3" class="pcalibre halftitlepage pcalibre1">
<section id="P7000497027000000000000000000EA4" data-uri="chapter02.xhtml#P7000497027000000000000000000EA4" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003F1FC" data-uri="chapter02.xhtml#P700049702700000000000000003F1FC" epub:type="title"><span class="pcalibre label pcalibre1">2.3.5 </span>Two's-Complement Multiplication</h1></header>
<p id="P700049702700000000000000003F1FD" data-uri="chapter02.xhtml#P700049702700000000000000003F1FD" class="pcalibre1 pcalibre calibre2">Integers <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">y</var> in the range <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="217" altimg-height="24" altimg="../images/ch02-new85.png"><m:mrow><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>≤</m:mo><m:mi>x</m:mi><m:mo>,</m:mo><m:mi>y</m:mi><m:mo>≤</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:math> </span>can be represented as <var class="calibre5 pcalibre pcalibre1">w</var>-bit two's-complement numbers, but their product <var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var> can range between <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="328" altimg-height="23" altimg="../images/ch02-new86.png"><m:mrow><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>⋅</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mn>2</m:mn><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msup><m:mo>+</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="207" altimg-height="19" altimg="../images/ch02-new87.png"><m:mrow><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>⋅</m:mo><m:mo>−</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msup><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mrow><m:mn>2</m:mn><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msup></m:mrow></m:math></span>. This could require as many as 2<var class="calibre5 pcalibre pcalibre1">w</var> bits to represent in two's-complement form. Instead, signed multiplication in C generally is performed by truncating the 2<var class="calibre5 pcalibre pcalibre1">w</var>-bit product to <var class="calibre5 pcalibre pcalibre1">w</var> bits. We denote this value as <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="55" altimg-height="24" altimg="../images/ch02-eq100.png"><m:mrow><m:mi>x</m:mi><m:mtext> </m:mtext><m:mtext> </m:mtext><m:msubsup><m:mo>*</m:mo><m:mi>w</m:mi><m:mtext>t</m:mtext></m:msubsup><m:mtext> </m:mtext><m:mi>y</m:mi></m:mrow></m:math></span>. Truncating a two's-complement number to <var class="calibre5 pcalibre pcalibre1">w</var> bits is equivalent to first computing its value modulo 2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">w</sup></i> and then converting from unsigned to two's complement, giving the following:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F1FE" data-uri="chapter02.xhtml#P700049702700000000000000003F1FE"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F1FF" data-uri="chapter02.xhtml#P700049702700000000000000003F1FF" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F200" data-uri="chapter02.xhtml#P700049702700000000000000003F200" class="pcalibre1 pcalibre calibre2">Two's-complement multiplication</p>
<p id="P700049702700000000000000003F201" data-uri="chapter02.xhtml#P700049702700000000000000003F201" class="pcalibre1 pcalibre calibre2">For <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">y</var> such that <i class="calibre5 pcalibre pcalibre1">TMin<sub class="pcalibre1 calibre47 pcalibre">w</sub></i> ≤ <i class="calibre5 pcalibre pcalibre1">x, y</i> ≤ <i class="calibre5 pcalibre pcalibre1">TMax<sub class="pcalibre1 calibre47 pcalibre">w</sub>:</i></p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000000EAB" data-uri="chapter02.xhtml#P7000497027000000000000000000EAB"><m:math display="block" alttext="" data-uri="" altimg-width="277" altimg-height="25" altimg="../images/ch02-eq101.png"><m:mrow><m:mi>x</m:mi><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>t</m:mi></m:msubsup><m:mi>y</m:mi><m:mo>=</m:mo><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math>
<span class="number3 pcalibre pcalibre1">(2.17)</span>
</div>
</section>
<p id="P700049702700000000000000003F202" data-uri="chapter02.xhtml#P700049702700000000000000003F202" class="pcalibre1 pcalibre calibre2">We claim that the bit-level representation of the product operation is identical for both unsigned and two's-complement multiplication, as stated by the following principle:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F203" data-uri="chapter02.xhtml#P700049702700000000000000003F203"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F204" data-uri="chapter02.xhtml#P700049702700000000000000003F204" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F205" data-uri="chapter02.xhtml#P700049702700000000000000003F205" class="pcalibre1 pcalibre calibre2">Bit-level equivalence of unsigned and two's-complement multiplication</p>
<p id="P700049702700000000000000003F206" data-uri="chapter02.xhtml#P700049702700000000000000003F206" class="pcalibre1 pcalibre calibre2">Let <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="11" altimg-height="17" altimg="../images/ch02-eq102.png"><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="10" altimg-height="21" altimg="../images/ch02-eq103.png"><m:mover accent="true"><m:mi>y</m:mi><m:mo>→</m:mo></m:mover></m:math> </span>be bit vectors of length <i class="calibre5 pcalibre pcalibre1">w.</i> Define integers <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">y</var> as the values represented by these bits in two's-complement form: <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="117" altimg-height="22" altimg="../images/ch02-eq104.png"><m:mrow><m:mi>x</m:mi><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="116" altimg-height="22" altimg="../images/ch02-eq105.png"><m:mrow><m:mi>y</m:mi><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>y</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>. Define nonnegative integers <var class="calibre5 pcalibre pcalibre1">x</var>′ and <var class="calibre5 pcalibre pcalibre1">y</var>′ as the values represented by these bits in unsigned form: <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="123" altimg-height="22" altimg="../images/ch02-eq106.png"><m:mrow><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="123" altimg-height="22" altimg="../images/ch02-eq107.png"><m:mrow><m:msup><m:mi>y</m:mi><m:mo>′</m:mo></m:msup><m:mo>=</m:mo><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mover accent="true"><m:mi>y</m:mi><m:mo>→</m:mo></m:mover><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>. Then</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F207" data-uri="chapter02.xhtml#P700049702700000000000000003F207"><m:math display="block" alttext="" data-uri="" altimg-width="279" altimg-height="25" altimg="../images/ch02-eq108.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>B</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>t</m:mi></m:msubsup><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>B</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>′</m:mo><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>u</m:mi></m:msubsup><m:mi>y</m:mi><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></div>
</section>
<p id="P700049702700000000000000003F208" data-uri="chapter02.xhtml#P700049702700000000000000003F208" class="pcalibre1 pcalibre calibre2">As illustrations, <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000EB5"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.27</span></a> shows the results of multiplying different 3-bit numbers. For each pair of bit-level operands, we perform both unsigned and two's-complement multiplication, yielding 6-bit products, and then truncate these to 3 bits. The unsigned truncated product always equals <var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var> mod 8. The bit-level representations of both truncated products are identical for both unsigned and two's-complement multiplication, even though the full 6-bit representations differ.</p>
<p id="P700049702700000000000000003F209" data-uri="chapter02.xhtml#P700049702700000000000000003F209" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000EB4" title="98" data-uri="chapter02.xhtml#P7000497027000000000000000000EB4" epub:type="pagebreak"></span></p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000EB5" data-uri="chapter02.xhtml#P7000497027000000000000000000EB5">
<table class="pcalibre largetable pcalibre1" id="P700049702700000000000000003F20A" data-uri="chapter02.xhtml#P700049702700000000000000003F20A">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003F20B" data-uri="chapter02.xhtml#P700049702700000000000000003F20B" class="calibre18 pcalibre pcalibre1">Mode</th>
<th colspan="2" id="P700049702700000000000000003F20C" data-uri="chapter02.xhtml#P700049702700000000000000003F20C" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">x</var></th>
<th colspan="2" id="P700049702700000000000000003F20D" data-uri="chapter02.xhtml#P700049702700000000000000003F20D" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">y</var></th>
<th colspan="2" id="P700049702700000000000000003F20E" data-uri="chapter02.xhtml#P700049702700000000000000003F20E" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var></th>
<th colspan="2" id="P700049702700000000000000003F20F" data-uri="chapter02.xhtml#P700049702700000000000000003F20F" class="calibre18 pcalibre pcalibre1">Truncated <var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F210" data-uri="chapter02.xhtml#P700049702700000000000000003F210" class="calibre20 pcalibre pcalibre1">Unsigned</td>
<td id="P700049702700000000000000003F211" data-uri="chapter02.xhtml#P700049702700000000000000003F211" class="calibre20 pcalibre pcalibre1">5</td>
<td id="P700049702700000000000000003F212" data-uri="chapter02.xhtml#P700049702700000000000000003F212" class="calibre20 pcalibre pcalibre1">[101]</td>
<td id="P700049702700000000000000003F213" data-uri="chapter02.xhtml#P700049702700000000000000003F213" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P700049702700000000000000003F214" data-uri="chapter02.xhtml#P700049702700000000000000003F214" class="calibre20 pcalibre pcalibre1">[011]</td>
<td id="P700049702700000000000000003F215" data-uri="chapter02.xhtml#P700049702700000000000000003F215" class="calibre20 pcalibre pcalibre1">15</td>
<td id="P700049702700000000000000003F216" data-uri="chapter02.xhtml#P700049702700000000000000003F216" class="calibre20 pcalibre pcalibre1">[001111]</td>
<td id="P700049702700000000000000003F217" data-uri="chapter02.xhtml#P700049702700000000000000003F217" class="calibre20 pcalibre pcalibre1">7</td>
<td id="P700049702700000000000000003F218" data-uri="chapter02.xhtml#P700049702700000000000000003F218" class="calibre20 pcalibre pcalibre1">[111]</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F219" data-uri="chapter02.xhtml#P700049702700000000000000003F219" class="calibre20 pcalibre pcalibre1">Two's complement</td>
<td id="P700049702700000000000000003F21A" data-uri="chapter02.xhtml#P700049702700000000000000003F21A" class="calibre20 pcalibre pcalibre1">–3</td>
<td id="P700049702700000000000000003F21B" data-uri="chapter02.xhtml#P700049702700000000000000003F21B" class="calibre20 pcalibre pcalibre1">[101]</td>
<td id="P700049702700000000000000003F21C" data-uri="chapter02.xhtml#P700049702700000000000000003F21C" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P700049702700000000000000003F21D" data-uri="chapter02.xhtml#P700049702700000000000000003F21D" class="calibre20 pcalibre pcalibre1">[011]</td>
<td id="P700049702700000000000000003F21E" data-uri="chapter02.xhtml#P700049702700000000000000003F21E" class="calibre20 pcalibre pcalibre1">–9</td>
<td id="P700049702700000000000000003F21F" data-uri="chapter02.xhtml#P700049702700000000000000003F21F" class="calibre20 pcalibre pcalibre1">[110111]</td>
<td id="P700049702700000000000000003F220" data-uri="chapter02.xhtml#P700049702700000000000000003F220" class="calibre20 pcalibre pcalibre1">–1</td>
<td id="P700049702700000000000000003F221" data-uri="chapter02.xhtml#P700049702700000000000000003F221" class="calibre20 pcalibre pcalibre1">[111]</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F222" data-uri="chapter02.xhtml#P700049702700000000000000003F222" class="calibre20 pcalibre pcalibre1">Unsigned complement</td>
<td id="P700049702700000000000000003F223" data-uri="chapter02.xhtml#P700049702700000000000000003F223" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P700049702700000000000000003F224" data-uri="chapter02.xhtml#P700049702700000000000000003F224" class="calibre20 pcalibre pcalibre1">[100]</td>
<td id="P700049702700000000000000003F225" data-uri="chapter02.xhtml#P700049702700000000000000003F225" class="calibre20 pcalibre pcalibre1">7</td>
<td id="P700049702700000000000000003F226" data-uri="chapter02.xhtml#P700049702700000000000000003F226" class="calibre20 pcalibre pcalibre1">[111]</td>
<td id="P700049702700000000000000003F227" data-uri="chapter02.xhtml#P700049702700000000000000003F227" class="calibre20 pcalibre pcalibre1">28</td>
<td id="P700049702700000000000000003F228" data-uri="chapter02.xhtml#P700049702700000000000000003F228" class="calibre20 pcalibre pcalibre1">[011100]</td>
<td id="P700049702700000000000000003F229" data-uri="chapter02.xhtml#P700049702700000000000000003F229" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P700049702700000000000000003F22A" data-uri="chapter02.xhtml#P700049702700000000000000003F22A" class="calibre20 pcalibre pcalibre1">[100]</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F22B" data-uri="chapter02.xhtml#P700049702700000000000000003F22B" class="calibre20 pcalibre pcalibre1">Two's complement</td>
<td id="P700049702700000000000000003F22C" data-uri="chapter02.xhtml#P700049702700000000000000003F22C" class="calibre20 pcalibre pcalibre1">–4</td>
<td id="P700049702700000000000000003F22D" data-uri="chapter02.xhtml#P700049702700000000000000003F22D" class="calibre20 pcalibre pcalibre1">[100]</td>
<td id="P700049702700000000000000003F22E" data-uri="chapter02.xhtml#P700049702700000000000000003F22E" class="calibre20 pcalibre pcalibre1">–1</td>
<td id="P700049702700000000000000003F22F" data-uri="chapter02.xhtml#P700049702700000000000000003F22F" class="calibre20 pcalibre pcalibre1">[111]</td>
<td id="P700049702700000000000000003F230" data-uri="chapter02.xhtml#P700049702700000000000000003F230" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P700049702700000000000000003F231" data-uri="chapter02.xhtml#P700049702700000000000000003F231" class="calibre20 pcalibre pcalibre1">[000100]</td>
<td id="P700049702700000000000000003F232" data-uri="chapter02.xhtml#P700049702700000000000000003F232" class="calibre20 pcalibre pcalibre1">–4</td>
<td id="P700049702700000000000000003F233" data-uri="chapter02.xhtml#P700049702700000000000000003F233" class="calibre20 pcalibre pcalibre1">[100]</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F234" data-uri="chapter02.xhtml#P700049702700000000000000003F234" class="calibre20 pcalibre pcalibre1">Unsigned</td>
<td id="P700049702700000000000000003F235" data-uri="chapter02.xhtml#P700049702700000000000000003F235" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P700049702700000000000000003F236" data-uri="chapter02.xhtml#P700049702700000000000000003F236" class="calibre20 pcalibre pcalibre1">[011]</td>
<td id="P700049702700000000000000003F237" data-uri="chapter02.xhtml#P700049702700000000000000003F237" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P700049702700000000000000003F238" data-uri="chapter02.xhtml#P700049702700000000000000003F238" class="calibre20 pcalibre pcalibre1">[011]</td>
<td id="P700049702700000000000000003F239" data-uri="chapter02.xhtml#P700049702700000000000000003F239" class="calibre20 pcalibre pcalibre1">9</td>
<td id="P700049702700000000000000003F23A" data-uri="chapter02.xhtml#P700049702700000000000000003F23A" class="calibre20 pcalibre pcalibre1">[001001]</td>
<td id="P700049702700000000000000003F23B" data-uri="chapter02.xhtml#P700049702700000000000000003F23B" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F23C" data-uri="chapter02.xhtml#P700049702700000000000000003F23C" class="calibre20 pcalibre pcalibre1">[001]</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F23D" data-uri="chapter02.xhtml#P700049702700000000000000003F23D" class="calibre20 pcalibre pcalibre1">Two's comp.</td>
<td id="P700049702700000000000000003F23E" data-uri="chapter02.xhtml#P700049702700000000000000003F23E" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P700049702700000000000000003F23F" data-uri="chapter02.xhtml#P700049702700000000000000003F23F" class="calibre20 pcalibre pcalibre1">[011]</td>
<td id="P700049702700000000000000003F240" data-uri="chapter02.xhtml#P700049702700000000000000003F240" class="calibre20 pcalibre pcalibre1">3</td>
<td id="P700049702700000000000000003F241" data-uri="chapter02.xhtml#P700049702700000000000000003F241" class="calibre20 pcalibre pcalibre1">[011]</td>
<td id="P700049702700000000000000003F242" data-uri="chapter02.xhtml#P700049702700000000000000003F242" class="calibre20 pcalibre pcalibre1">9</td>
<td id="P700049702700000000000000003F243" data-uri="chapter02.xhtml#P700049702700000000000000003F243" class="calibre20 pcalibre pcalibre1">[001001]</td>
<td id="P700049702700000000000000003F244" data-uri="chapter02.xhtml#P700049702700000000000000003F244" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F245" data-uri="chapter02.xhtml#P700049702700000000000000003F245" class="calibre20 pcalibre pcalibre1">[001]</td>
</tr>
</tbody>
</table>
<figcaption id="P700049702700000000000000003F246" data-uri="chapter02.xhtml#P700049702700000000000000003F246" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003F247" data-uri="chapter02.xhtml#P700049702700000000000000003F247" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.27 </span>Three-bit unsigned and two's-complement multiplication examples.</h1></header><div class="caption pcalibre pcalibre1" id="P700049702700000000000000003F248" data-uri="chapter02.xhtml#P700049702700000000000000003F248"><p id="P700049702700000000000000003F249" data-uri="chapter02.xhtml#P700049702700000000000000003F249" class="pcalibre calibre3 pcalibre1">Although the bit-level representations of the full products may differ, those of the truncated products are identical.</p></div></figcaption>
</figure>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F24A" data-uri="chapter02.xhtml#P700049702700000000000000003F24A"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F24B" data-uri="chapter02.xhtml#P700049702700000000000000003F24B" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003F24C" data-uri="chapter02.xhtml#P700049702700000000000000003F24C" class="pcalibre1 pcalibre calibre2">Bit-level equivalence of unsigned and two's-complement multiplication</p>
<p id="P700049702700000000000000003F24D" data-uri="chapter02.xhtml#P700049702700000000000000003F24D" class="pcalibre1 pcalibre calibre2">From <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P7000497027000000000000000000AE1"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.6</span></a>, we have <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="141" altimg-height="21" altimg="../images/ch02-new88.png"><m:mrow><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>=</m:mo><m:mi>x</m:mi><m:mo>+</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="140" altimg-height="21" altimg="../images/ch02-new89.png"><m:mrow><m:msup><m:mi>y</m:mi><m:mo>′</m:mo></m:msup><m:mo>=</m:mo><m:mi>y</m:mi><m:mo>+</m:mo><m:msub><m:mi>y</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:math></span>. Computing the product of these values modulo 2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">w</sup></i> gives the following:</p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000000EFA" data-uri="chapter02.xhtml#P7000497027000000000000000000EFA"><m:math display="block" alttext="" data-uri="" altimg-width="618" altimg-height="102" altimg="../images/ch02-eq109.png"><m:mrow><m:mtable columnalign="left"><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>′</m:mo><m:mo>⋅</m:mo><m:mi>y</m:mi><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>+</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>⋅</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>y</m:mi><m:mo>+</m:mo><m:msub><m:mi>y</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow><m:mo>]</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi><m:mo>+</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mi>y</m:mi><m:mo>+</m:mo><m:msub><m:mi>y</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mi>x</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>+</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:msup><m:mn>2</m:mn><m:mrow><m:mn>2</m:mn><m:mi>w</m:mi></m:mrow></m:msup></m:mrow><m:mo>]</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:mtd></m:mtr></m:mtable></m:mrow></m:math>
<span class="number3 pcalibre pcalibre1">(2.18)</span>
</div>
<p id="P700049702700000000000000003F24E" data-uri="chapter02.xhtml#P700049702700000000000000003F24E" class="pcalibre1 pcalibre calibre2">The terms with weight 2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">w</sup></i> and 2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">2w</sup></i> drop out due to the modulus operator. By <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000EAB"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.17</span></a>, we have <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="279" altimg-height="23" altimg="../images/ch02-eq110.png"><m:mrow><m:mi>x</m:mi><m:mtext> </m:mtext><m:msubsup><m:mo>*</m:mo><m:mi>w</m:mi><m:mtext>t</m:mtext></m:msubsup><m:mtext> </m:mtext><m:mi>y</m:mi><m:mo>=</m:mo><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></span>. We can apply the operation <i class="calibre5 pcalibre pcalibre1">T2U<sub class="pcalibre1 calibre47 pcalibre">w</sub></i> to both sides to get</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F24F" data-uri="chapter02.xhtml#P700049702700000000000000003F24F"><m:math display="block" alttext="" data-uri="" altimg-width="567" altimg-height="25" altimg="../images/ch02-eq111.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>t</m:mi></m:msubsup><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>T</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:math></div>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003F250" data-uri="chapter02.xhtml#P700049702700000000000000003F250">Combining this result with <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_000.xhtml#P7000497027000000000000000000EA3"><span class="pcalibre label pcalibre1">Equations </span><span class="pcalibre label pcalibre1">2.16</span></a> and <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000EFA"><span class="pcalibre label pcalibre1">2.18</span></a> shows that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="377" altimg-height="23" altimg="../images/ch02-eq112.png"><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mtext> </m:mtext><m:msubsup><m:mo>*</m:mo><m:mi>w</m:mi><m:mtext>t</m:mtext></m:msubsup><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>⋅</m:mo><m:msup><m:mi>y</m:mi><m:mo>′</m:mo></m:msup></m:mrow><m:mo>)</m:mo></m:mrow><m:mtext> </m:mtext><m:mi>mod</m:mi><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup><m:mo>=</m:mo><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mtext> </m:mtext><m:msubsup><m:mo>*</m:mo><m:mi>w</m:mi><m:mtext>u</m:mtext></m:msubsup><m:mtext> </m:mtext><m:msup><m:mi>y</m:mi><m:mo>′</m:mo></m:msup></m:mrow></m:math></span>. We can then apply <i class="calibre5 pcalibre pcalibre1">U2B<sub class="pcalibre1 calibre47 pcalibre">w</sub></i> to both sides to get</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F251" data-uri="chapter02.xhtml#P700049702700000000000000003F251"><m:math display="block" alttext="" data-uri="" altimg-width="499" altimg-height="25" altimg="../images/ch02-eq113.png"><m:mrow><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>B</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>t</m:mi></m:msubsup><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>T</m:mi><m:mn>2</m:mn><m:msub><m:mi>B</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>t</m:mi></m:msubsup><m:mi>y</m:mi></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>U</m:mi><m:mn>2</m:mn><m:msub><m:mi>B</m:mi><m:mi>w</m:mi></m:msub><m:mrow><m:mo>(</m:mo><m:mrow><m:mi>x</m:mi><m:mo>′</m:mo><m:msubsup><m:mo>∗</m:mo><m:mi>w</m:mi><m:mi>t</m:mi></m:msubsup><m:mi>y</m:mi><m:mo>′</m:mo></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow></m:math></div>
</section>
<section id="P7000497027000000000000000000EFF" data-uri="chapter02.xhtml#P7000497027000000000000000000EFF" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F252" data-uri="chapter02.xhtml#P700049702700000000000000003F252" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.34</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001B33">153</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F253" data-uri="chapter02.xhtml#P700049702700000000000000003F253">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F254" data-uri="chapter02.xhtml#P700049702700000000000000003F254">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F255" data-uri="chapter02.xhtml#P700049702700000000000000003F255"><p id="P700049702700000000000000003F256" data-uri="chapter02.xhtml#P700049702700000000000000003F256" class="pcalibre calibre3 pcalibre1">Fill in the following table showing the results of multiplying different 3-bit numbers, in the style of <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000EB5"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.27</span></a>:</p>
<table class="informaltable pcalibre pcalibre1" id="P700049702700000000000000003F257" data-uri="chapter02.xhtml#P700049702700000000000000003F257">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003F258" data-uri="chapter02.xhtml#P700049702700000000000000003F258" class="calibre18 pcalibre pcalibre1">Mode</th>
<th colspan="2" id="P700049702700000000000000003F259" data-uri="chapter02.xhtml#P700049702700000000000000003F259" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">x</var></th>
<th colspan="2" id="P700049702700000000000000003F25A" data-uri="chapter02.xhtml#P700049702700000000000000003F25A" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">y</var></th>
<th colspan="2" id="P700049702700000000000000003F25B" data-uri="chapter02.xhtml#P700049702700000000000000003F25B" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var></th>
<th colspan="2" id="P700049702700000000000000003F25C" data-uri="chapter02.xhtml#P700049702700000000000000003F25C" class="calibre18 pcalibre pcalibre1">Truncated <var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F25D" data-uri="chapter02.xhtml#P700049702700000000000000003F25D" class="calibre20 pcalibre pcalibre1">Unsigned</td>
<td id="P700049702700000000000000003F25E" data-uri="chapter02.xhtml#P700049702700000000000000003F25E" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F25F" data-uri="chapter02.xhtml#P700049702700000000000000003F25F" class="calibre20 pcalibre pcalibre1">[100]</td>
<td id="P700049702700000000000000003F260" data-uri="chapter02.xhtml#P700049702700000000000000003F260" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F261" data-uri="chapter02.xhtml#P700049702700000000000000003F261" class="calibre20 pcalibre pcalibre1">[101]</td>
<td id="P700049702700000000000000003F262" data-uri="chapter02.xhtml#P700049702700000000000000003F262" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F263" data-uri="chapter02.xhtml#P700049702700000000000000003F263" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F264" data-uri="chapter02.xhtml#P700049702700000000000000003F264" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F265" data-uri="chapter02.xhtml#P700049702700000000000000003F265" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F266" data-uri="chapter02.xhtml#P700049702700000000000000003F266" class="calibre20 pcalibre pcalibre1">Two's complement</td>
<td id="P700049702700000000000000003F267" data-uri="chapter02.xhtml#P700049702700000000000000003F267" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F268" data-uri="chapter02.xhtml#P700049702700000000000000003F268" class="calibre20 pcalibre pcalibre1">[100]</td>
<td id="P700049702700000000000000003F269" data-uri="chapter02.xhtml#P700049702700000000000000003F269" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F26A" data-uri="chapter02.xhtml#P700049702700000000000000003F26A" class="calibre20 pcalibre pcalibre1">[101]</td>
<td id="P700049702700000000000000003F26B" data-uri="chapter02.xhtml#P700049702700000000000000003F26B" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F26C" data-uri="chapter02.xhtml#P700049702700000000000000003F26C" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F26D" data-uri="chapter02.xhtml#P700049702700000000000000003F26D" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F26E" data-uri="chapter02.xhtml#P700049702700000000000000003F26E" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F26F" data-uri="chapter02.xhtml#P700049702700000000000000003F26F" class="calibre20 pcalibre pcalibre1">Unsigned</td>
<td id="P700049702700000000000000003F270" data-uri="chapter02.xhtml#P700049702700000000000000003F270" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F271" data-uri="chapter02.xhtml#P700049702700000000000000003F271" class="calibre20 pcalibre pcalibre1">[010]</td>
<td id="P700049702700000000000000003F272" data-uri="chapter02.xhtml#P700049702700000000000000003F272" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F273" data-uri="chapter02.xhtml#P700049702700000000000000003F273" class="calibre20 pcalibre pcalibre1">[111]</td>
<td id="P700049702700000000000000003F274" data-uri="chapter02.xhtml#P700049702700000000000000003F274" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F275" data-uri="chapter02.xhtml#P700049702700000000000000003F275" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F276" data-uri="chapter02.xhtml#P700049702700000000000000003F276" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F277" data-uri="chapter02.xhtml#P700049702700000000000000003F277" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F278" data-uri="chapter02.xhtml#P700049702700000000000000003F278" class="calibre20 pcalibre pcalibre1">Two's complement</td>
<td id="P700049702700000000000000003F279" data-uri="chapter02.xhtml#P700049702700000000000000003F279" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F27A" data-uri="chapter02.xhtml#P700049702700000000000000003F27A" class="calibre20 pcalibre pcalibre1">[010]</td>
<td id="P700049702700000000000000003F27B" data-uri="chapter02.xhtml#P700049702700000000000000003F27B" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F27C" data-uri="chapter02.xhtml#P700049702700000000000000003F27C" class="calibre20 pcalibre pcalibre1">[111]</td>
<td id="P700049702700000000000000003F27D" data-uri="chapter02.xhtml#P700049702700000000000000003F27D" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F27E" data-uri="chapter02.xhtml#P700049702700000000000000003F27E" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F27F" data-uri="chapter02.xhtml#P700049702700000000000000003F27F" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F280" data-uri="chapter02.xhtml#P700049702700000000000000003F280" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F281" data-uri="chapter02.xhtml#P700049702700000000000000003F281" class="calibre20 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000F30" title="99" data-uri="chapter02.xhtml#P7000497027000000000000000000F30" epub:type="pagebreak"></span>Unsigned</td>
<td id="P700049702700000000000000003F282" data-uri="chapter02.xhtml#P700049702700000000000000003F282" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F283" data-uri="chapter02.xhtml#P700049702700000000000000003F283" class="calibre20 pcalibre pcalibre1">[110]</td>
<td id="P700049702700000000000000003F284" data-uri="chapter02.xhtml#P700049702700000000000000003F284" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F285" data-uri="chapter02.xhtml#P700049702700000000000000003F285" class="calibre20 pcalibre pcalibre1">[110]</td>
<td id="P700049702700000000000000003F286" data-uri="chapter02.xhtml#P700049702700000000000000003F286" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F287" data-uri="chapter02.xhtml#P700049702700000000000000003F287" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F288" data-uri="chapter02.xhtml#P700049702700000000000000003F288" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F289" data-uri="chapter02.xhtml#P700049702700000000000000003F289" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F28A" data-uri="chapter02.xhtml#P700049702700000000000000003F28A" class="calibre20 pcalibre pcalibre1">Two's complement</td>
<td id="P700049702700000000000000003F28B" data-uri="chapter02.xhtml#P700049702700000000000000003F28B" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F28C" data-uri="chapter02.xhtml#P700049702700000000000000003F28C" class="calibre20 pcalibre pcalibre1">[110]</td>
<td id="P700049702700000000000000003F28D" data-uri="chapter02.xhtml#P700049702700000000000000003F28D" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F28E" data-uri="chapter02.xhtml#P700049702700000000000000003F28E" class="calibre20 pcalibre pcalibre1">[110]</td>
<td id="P700049702700000000000000003F28F" data-uri="chapter02.xhtml#P700049702700000000000000003F28F" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F290" data-uri="chapter02.xhtml#P700049702700000000000000003F290" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F291" data-uri="chapter02.xhtml#P700049702700000000000000003F291" class="calibre20 pcalibre pcalibre1">___________</td>
<td id="P700049702700000000000000003F292" data-uri="chapter02.xhtml#P700049702700000000000000003F292" class="calibre20 pcalibre pcalibre1">___________</td>
</tr>
</tbody>
</table></div></li></ol>
</section>
<section id="P7000497027000000000000000000F42" data-uri="chapter02.xhtml#P7000497027000000000000000000F42" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F293" data-uri="chapter02.xhtml#P700049702700000000000000003F293" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.35</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001B82">154</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F294" data-uri="chapter02.xhtml#P700049702700000000000000003F294">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F295" data-uri="chapter02.xhtml#P700049702700000000000000003F295">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F296" data-uri="chapter02.xhtml#P700049702700000000000000003F296"><p id="P700049702700000000000000003F297" data-uri="chapter02.xhtml#P700049702700000000000000003F297" class="pcalibre calibre3 pcalibre1">You are given the assignment to develop code for a function <code id="P700049702700000000000000003F298" data-uri="chapter02.xhtml#P700049702700000000000000003F298" class="pcalibre1 calibre8 pcalibre">tmult_ok</code> that will determine whether two arguments can be multiplied without causing overflow. Here is your solution:</p>
<pre id="P700049702700000000000000003F299" data-uri="chapter02.xhtml#P700049702700000000000000003F299" class="calibre9 pcalibre pcalibre1">
<code id="P700049702700000000000000003F29A" data-uri="chapter02.xhtml#P700049702700000000000000003F29A" class="calibre10 pcalibre pcalibre1">/* Determine whether arguments can be multiplied without overflow */
int tmult_ok(int x, int y) {
	int p = x*y;
	/* Either x is zero, or dividing p by x gives y */
	return !x || p/x == y;
}</code></pre>
<p id="P700049702700000000000000003F29B" data-uri="chapter02.xhtml#P700049702700000000000000003F29B" class="pcalibre calibre3 pcalibre1">You test this code for a number of values of <code id="P700049702700000000000000003F29C" data-uri="chapter02.xhtml#P700049702700000000000000003F29C" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F29D" data-uri="chapter02.xhtml#P700049702700000000000000003F29D" class="pcalibre1 calibre8 pcalibre">y</code>, and it seems to work properly. Your coworker challenges you, saying, “If I can't use subtraction to test whether addition has overflowed (see <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001B37"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">2.31</span></a>), then how can you use division to test whether multiplication has overflowed?”</p>
<p id="P700049702700000000000000003F29E" data-uri="chapter02.xhtml#P700049702700000000000000003F29E" class="pcalibre calibre3 pcalibre1">Devise a mathematical justification of your approach, along the following lines. First, argue that the case <var class="calibre5 pcalibre pcalibre1">x</var> = 0 is handled correctly. Otherwise, consider <var class="calibre5 pcalibre pcalibre1">w</var>-bit numbers <var class="calibre5 pcalibre pcalibre1">x</var> (<var class="calibre5 pcalibre pcalibre1">x</var> ≠ 0), <i class="calibre5 pcalibre pcalibre1">y, p</i>, and <var class="calibre5 pcalibre pcalibre1">q</var>, where <var class="calibre5 pcalibre pcalibre1">p</var> is the result of performing two's-complement multiplication on <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">y</var>, and <var class="calibre5 pcalibre pcalibre1">q</var> is the result of dividing <var class="calibre5 pcalibre pcalibre1">p</var> by <i class="calibre5 pcalibre pcalibre1">x.</i></p>
<ol id="P700049702700000000000000003F29F" data-uri="chapter02.xhtml#P700049702700000000000000003F29F" class="calibre72 pcalibre pcalibre1">
<li id="P700049702700000000000000003F2A0" data-uri="chapter02.xhtml#P700049702700000000000000003F2A0" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F2A1" data-uri="chapter02.xhtml#P700049702700000000000000003F2A1" class="pcalibre calibre3 pcalibre1">Show that <var class="calibre5 pcalibre pcalibre1">x</var> · <var class="calibre5 pcalibre pcalibre1">y</var>, the integer product of <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">y</var>, can be written in the form <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="132" altimg-height="19" altimg="../images/ch02-new90.png"><m:mrow><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>y</m:mi><m:mo>=</m:mo><m:mi>p</m:mi><m:mo>+</m:mo><m:mi>t</m:mi><m:msup><m:mn>2</m:mn><m:mi>w</m:mi></m:msup></m:mrow></m:math></span>, where <var class="calibre5 pcalibre pcalibre1">t</var> ≠ 0 if and only if the computation of <var class="calibre5 pcalibre pcalibre1">p</var> overflows.</p></li>
<li id="P700049702700000000000000003F2A2" data-uri="chapter02.xhtml#P700049702700000000000000003F2A2" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F2A3" data-uri="chapter02.xhtml#P700049702700000000000000003F2A3" class="pcalibre calibre3 pcalibre1">Show that <var class="calibre5 pcalibre pcalibre1">p</var> can be written in the form <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="110" altimg-height="17" altimg="../images/ch02-new91.png"><m:mrow><m:mi>p</m:mi><m:mo>=</m:mo><m:mi>x</m:mi><m:mo>⋅</m:mo><m:mi>q</m:mi><m:mo>+</m:mo><m:mi>r</m:mi></m:mrow></m:math></span>, where |<var class="calibre5 pcalibre pcalibre1">r</var>| &lt; |<var class="calibre5 pcalibre pcalibre1">x</var>|.</p></li>
<li id="P700049702700000000000000003F2A4" data-uri="chapter02.xhtml#P700049702700000000000000003F2A4" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F2A5" data-uri="chapter02.xhtml#P700049702700000000000000003F2A5" class="pcalibre calibre3 pcalibre1">Show that <var class="calibre5 pcalibre pcalibre1">q</var> = <var class="calibre5 pcalibre pcalibre1">y</var> if and only if <var class="calibre5 pcalibre pcalibre1">r</var> = <var class="calibre5 pcalibre pcalibre1">t</var> = 0.</p></li>
</ol></div></li></ol>
</section>
<section id="P7000497027000000000000000000F56" data-uri="chapter02.xhtml#P7000497027000000000000000000F56" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F2A6" data-uri="chapter02.xhtml#P700049702700000000000000003F2A6" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.36</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001B82">154</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F2A7" data-uri="chapter02.xhtml#P700049702700000000000000003F2A7">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F2A8" data-uri="chapter02.xhtml#P700049702700000000000000003F2A8">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F2A9" data-uri="chapter02.xhtml#P700049702700000000000000003F2A9"><p id="P700049702700000000000000003F2AA" data-uri="chapter02.xhtml#P700049702700000000000000003F2AA" class="pcalibre calibre3 pcalibre1">For the case where data type <code id="P700049702700000000000000003F2AB" data-uri="chapter02.xhtml#P700049702700000000000000003F2AB" class="pcalibre1 calibre8 pcalibre">int</code> has 32 bits, devise a version of <code id="P700049702700000000000000003F2AC" data-uri="chapter02.xhtml#P700049702700000000000000003F2AC" class="pcalibre1 calibre8 pcalibre">tmult_ok</code> (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000F42"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">2.35</span></a>) that uses the 64-bit precision of data type <code id="P700049702700000000000000003F2AD" data-uri="chapter02.xhtml#P700049702700000000000000003F2AD" class="pcalibre1 calibre8 pcalibre">int64_t</code>, without using division.</p>
</div></li></ol>
</section>
<section id="P7000497027000000000000000000F5F" data-uri="chapter02.xhtml#P7000497027000000000000000000F5F" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F2AE" data-uri="chapter02.xhtml#P700049702700000000000000003F2AE" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.37</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001BD7">155</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F2AF" data-uri="chapter02.xhtml#P700049702700000000000000003F2AF">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F2B0" data-uri="chapter02.xhtml#P700049702700000000000000003F2B0">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F2B1" data-uri="chapter02.xhtml#P700049702700000000000000003F2B1"><p id="P700049702700000000000000003F2B2" data-uri="chapter02.xhtml#P700049702700000000000000003F2B2" class="pcalibre calibre3 pcalibre1">You are given the task of patching the vulnerability in the XDR code shown in the aside on page 100 for the case where both data types <code id="P700049702700000000000000003F2B3" data-uri="chapter02.xhtml#P700049702700000000000000003F2B3" class="pcalibre1 calibre8 pcalibre">int</code> and <code id="P700049702700000000000000003F2B4" data-uri="chapter02.xhtml#P700049702700000000000000003F2B4" class="pcalibre1 calibre8 pcalibre">size_t</code> are 32 bits. You decide to eliminate the possibility of the multiplication overflowing by computing the number of bytes to allocate using data type <code id="P700049702700000000000000003F2B5" data-uri="chapter02.xhtml#P700049702700000000000000003F2B5" class="pcalibre1 calibre8 pcalibre">uint64_t</code>. You replace the original call to <code id="P700049702700000000000000003F2B6" data-uri="chapter02.xhtml#P700049702700000000000000003F2B6" class="pcalibre1 calibre8 pcalibre">malloc</code> (line 9) as follows:</p>
<aside class="sidebar pcalibre5 pcalibre" id="P7000497027000000000000000000F69" data-uri="chapter02.xhtml#P7000497027000000000000000000F69"><header class="pcalibre halftitlepage pcalibre1"><h1 class="pcalibre1 title2 pcalibre" id="P700049702700000000000000003F2B7" data-uri="chapter02.xhtml#P700049702700000000000000003F2B7" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000F6B" title="100" data-uri="chapter02.xhtml#P7000497027000000000000000000F6B" epub:type="pagebreak"></span><span class="pcalibre label1 pcalibre1">Aside </span>Security vulnerability in the XDR library</h1></header>
<p id="P700049702700000000000000003F2B8" data-uri="chapter02.xhtml#P700049702700000000000000003F2B8" class="pcalibre calibre3 pcalibre1">In 2002, it was discovered that code supplied by Sun Microsystems to implement the XDR library, a widely used facility for sharing data structures between programs, had a security vulnerability arising from the fact that multiplication can overflow without any notice being given to the program. Code similar to that containing the vulnerability is shown below:</p>
<pre id="P700049702700000000000000003F2B9" data-uri="chapter02.xhtml#P700049702700000000000000003F2B9" class="calibre9 pcalibre pcalibre1">
<code id="P700049702700000000000000003F2BA" data-uri="chapter02.xhtml#P700049702700000000000000003F2BA" class="calibre10 pcalibre pcalibre1">1 /* Illustration of code vulnerability similar to that found in
2 * Sun's XDR library.
3 */
4 void* copy_elements(void *ele_src[], int ele_cnt, size_t ele_size) {
5 	/*
6	* Allocate buffer for ele_cnt objects, each of ele_size bytes
7	* and copy from locations designated by ele_src
8	*/
9	void *result = malloc(ele_cnt * ele_size);
10	if (result == NULL)
11		/* malloc failed */
12		return NULL;
13	void *next = result;
14	int i;
15	for (i = 0; i &lt; ele_cnt; i++) {
16		/* Copy object i to destination */
17		memcpy(next, ele_src[i], ele_size);
18		/* Move pointer to next memory region */
19		next += ele_size;
20	}
21	return result;
22 }</code></pre>
<p id="P700049702700000000000000003F2BB" data-uri="chapter02.xhtml#P700049702700000000000000003F2BB" class="pcalibre calibre3 pcalibre1">The function <code id="P700049702700000000000000003F2BC" data-uri="chapter02.xhtml#P700049702700000000000000003F2BC" class="pcalibre1 calibre8 pcalibre">copy_elements</code> is designed to copy <code id="P700049702700000000000000003F2BD" data-uri="chapter02.xhtml#P700049702700000000000000003F2BD" class="pcalibre1 calibre8 pcalibre">ele_cnt</code> data structures, each consisting of <code id="P700049702700000000000000003F2BE" data-uri="chapter02.xhtml#P700049702700000000000000003F2BE" class="pcalibre1 calibre8 pcalibre">ele_size</code> bytes into a buffer allocated by the function on line 9. The number of bytes required is computed as <code id="P700049702700000000000000003F2BF" data-uri="chapter02.xhtml#P700049702700000000000000003F2BF" class="pcalibre1 calibre8 pcalibre">ele_cnt * ele_size.</code></p>
<p id="P700049702700000000000000003F2C0" data-uri="chapter02.xhtml#P700049702700000000000000003F2C0" class="pcalibre calibre3 pcalibre1">Imagine, however, that a malicious programmer calls this function with <code id="P700049702700000000000000003F2C1" data-uri="chapter02.xhtml#P700049702700000000000000003F2C1" class="pcalibre1 calibre8 pcalibre">ele_cnt</code> being 1,048,577 (2<sup class="calibre51 pcalibre pcalibre1">20</sup> + 1) and <code id="P700049702700000000000000003F2C2" data-uri="chapter02.xhtml#P700049702700000000000000003F2C2" class="pcalibre1 calibre8 pcalibre">ele_size</code> being 4,096 (2<sup class="calibre51 pcalibre pcalibre1">12</sup>) with the program compiled for 32 bits. Then the multiplication on line 9 will overflow, causing only 4096 bytes to be allocated, rather than the 4,294,971,392 bytes required to hold that much data. The loop starting at line 15 will attempt to copy all of those bytes, overrunning the end of the allocated buffer, and therefore corrupting other data structures. This could cause the program to crash or otherwise misbehave.</p>
<p id="P700049702700000000000000003F2C3" data-uri="chapter02.xhtml#P700049702700000000000000003F2C3" class="pcalibre calibre3 pcalibre1">The Sun code was used by almost every operating system, and in such widely used programs as Internet Explorer and the Kerberos authentication system. The Computer Emergency Response Team (CERT), an organization run by the Carnegie Mellon Software Engineering Institute to track security vulnerabilities and breaches, issued advisory “CA-2002-25,” and many companies rushed to patch their code. Fortunately, there were no reported security breaches caused by this vulnerability.</p>
<p id="P700049702700000000000000003F2C4" data-uri="chapter02.xhtml#P700049702700000000000000003F2C4" class="pcalibre calibre3 pcalibre1">A similar vulnerability existed in many implementations of the library function <code id="P700049702700000000000000003F2C5" data-uri="chapter02.xhtml#P700049702700000000000000003F2C5" class="pcalibre1 calibre8 pcalibre">calloc.</code> These have since been patched. Unfortunately, many programmers call allocation functions, such as <code id="P700049702700000000000000003F2C6" data-uri="chapter02.xhtml#P700049702700000000000000003F2C6" class="pcalibre1 calibre8 pcalibre">malloc</code>, using arithmetic expressions as arguments, without checking these expressions for overflow. Writing a reliable version of <code id="P700049702700000000000000003F2C7" data-uri="chapter02.xhtml#P700049702700000000000000003F2C7" class="pcalibre1 calibre8 pcalibre">calloc</code> is left as an exercise (<a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001498.xhtml#P70004970270000000000000000015E1"><span class="pcalibre label pcalibre1">Problem </span><span class="pcalibre label pcalibre1">2.76</span></a>.)</p>
</aside>
<pre id="P700049702700000000000000003F2C8" data-uri="chapter02.xhtml#P700049702700000000000000003F2C8" class="calibre9 pcalibre pcalibre1"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000F7D" title="101" data-uri="chapter02.xhtml#P7000497027000000000000000000F7D" epub:type="pagebreak"></span><code id="P700049702700000000000000003F2C9" data-uri="chapter02.xhtml#P700049702700000000000000003F2C9" class="calibre10 pcalibre pcalibre1">uint64_t asize =
	ele_cnt * (uint64_t) ele_size;
void *result = malloc(asize);</code></pre>
<p id="P700049702700000000000000003F2CA" data-uri="chapter02.xhtml#P700049702700000000000000003F2CA" class="pcalibre calibre3 pcalibre1">Recall that the argument to <code id="P700049702700000000000000003F2CB" data-uri="chapter02.xhtml#P700049702700000000000000003F2CB" class="pcalibre1 calibre8 pcalibre">malloc</code> has type <code id="P700049702700000000000000003F2CC" data-uri="chapter02.xhtml#P700049702700000000000000003F2CC" class="pcalibre1 calibre8 pcalibre">size_t</code>.</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000003F2CD" data-uri="chapter02.xhtml#P700049702700000000000000003F2CD">
<li id="P7000497027000000000000000000F83" data-uri="chapter02.xhtml#P7000497027000000000000000000F83" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F2CE" data-uri="chapter02.xhtml#P700049702700000000000000003F2CE" class="pcalibre calibre3 pcalibre1">Does your code provide any improvement over the original?</p></li>
<li id="P7000497027000000000000000000F85" data-uri="chapter02.xhtml#P7000497027000000000000000000F85" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F2CF" data-uri="chapter02.xhtml#P700049702700000000000000003F2CF" class="pcalibre calibre3 pcalibre1">How would you change the code to eliminate the vulnerability?</p></li>
</ol></div></li></ol>
</section>
</section>
<section id="P7000497027000000000000000000F87" data-uri="chapter02.xhtml#P7000497027000000000000000000F87" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003F2D0" data-uri="chapter02.xhtml#P700049702700000000000000003F2D0" epub:type="title"><span class="pcalibre label pcalibre1">2.3.6 </span>Multiplying by Constants</h1></header>
<p id="P700049702700000000000000003F2D1" data-uri="chapter02.xhtml#P700049702700000000000000003F2D1" class="pcalibre1 pcalibre calibre2">Historically, the integer multiply instruction on many machines was fairly slow, requiring 10 or more clock cycles, whereas other integer operations—such as addition, subtraction, bit-level operations, and shifting—required only 1 clock cycle. Even on the Intel Core i7 Haswell we use as our reference machine, integer multiply requires 3 clock cycles. As a consequence, one important optimization used by compilers is to attempt to replace multiplications by constant factors with combinations of shift and addition operations. We will first consider the case of multiplying by a power of 2, and then we will generalize this to arbitrary constants.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F2D2" data-uri="chapter02.xhtml#P700049702700000000000000003F2D2"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F2D3" data-uri="chapter02.xhtml#P700049702700000000000000003F2D3" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F2D4" data-uri="chapter02.xhtml#P700049702700000000000000003F2D4" class="pcalibre1 pcalibre calibre2">Multiplication by a power of 2</p>
<p id="P700049702700000000000000003F2D5" data-uri="chapter02.xhtml#P700049702700000000000000003F2D5" class="pcalibre1 pcalibre calibre2">Let <var class="calibre5 pcalibre pcalibre1">x</var> be the unsigned integer represented by bit pattern <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="181" altimg-height="21" altimg="../images/ch02-new92.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. Then for any <var class="calibre5 pcalibre pcalibre1">k</var> ≥ 0, the <var class="calibre5 pcalibre pcalibre1">w</var> + <var class="calibre5 pcalibre pcalibre1">k</var>-bit unsigned representation of <var class="calibre5 pcalibre pcalibre1">x</var>2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">k</sup></i> is given by <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="267" altimg-height="21" altimg="../images/ch02-new93.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, where <var class="calibre5 pcalibre pcalibre1">k</var> zeros have been added to the right.</p>
</section>
<p id="P700049702700000000000000003F2D6" data-uri="chapter02.xhtml#P700049702700000000000000003F2D6" class="pcalibre1 pcalibre calibre2">So, for example, 11 can be represented for <var class="calibre5 pcalibre pcalibre1">w</var> = 4 as [1011]. Shifting this left by <var class="calibre5 pcalibre pcalibre1">k</var> = 2 yields the 6-bit vector [101100], which encodes the unsigned number 11 · 4 = 44.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F2D7" data-uri="chapter02.xhtml#P700049702700000000000000003F2D7"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F2D8" data-uri="chapter02.xhtml#P700049702700000000000000003F2D8" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003F2D9" data-uri="chapter02.xhtml#P700049702700000000000000003F2D9" class="pcalibre1 pcalibre calibre2">Multiplication by a power of 2</p>
<p id="P700049702700000000000000003F2DA" data-uri="chapter02.xhtml#P700049702700000000000000003F2DA" class="pcalibre1 pcalibre calibre2">This property can be derived using <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000088C"><span class="pcalibre label pcalibre1">Equation </span><span class="pcalibre label pcalibre1">2.1</span></a>:</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F2DB" data-uri="chapter02.xhtml#P700049702700000000000000003F2DB"><m:math display="block" alttext="" data-uri="" altimg-width="513" altimg-height="181" altimg="../images/ch02-eq114.png"><m:mrow><m:mtable columnalign="left"><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mrow><m:mi>B</m:mi><m:mn>2</m:mn><m:msub><m:mi>U</m:mi><m:mrow><m:mi>w</m:mi><m:mo>+</m:mo><m:mi>k</m:mi></m:mrow></m:msub><m:mo stretchy="false">(</m:mo><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo stretchy="false">]</m:mo><m:mo stretchy="false">)</m:mo></m:mrow></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mrow><m:mi>i</m:mi><m:mo>+</m:mo><m:mi>k</m:mi></m:mrow></m:msup></m:mrow></m:mstyle></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mstyle displaystyle="true"><m:munderover><m:mo>∑</m:mo><m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:munderover><m:mrow><m:msub><m:mi>x</m:mi><m:mi>i</m:mi></m:msub><m:msup><m:mn>2</m:mn><m:mi>i</m:mi></m:msup></m:mrow></m:mstyle></m:mrow><m:mo>]</m:mo></m:mrow><m:mo>⋅</m:mo><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:mtd></m:mtr><m:mtr columnalign="left"><m:mtd columnalign="left"><m:mtext> </m:mtext></m:mtd><m:mtd columnalign="left"><m:mo>=</m:mo></m:mtd><m:mtd columnalign="left"><m:mrow><m:mi>x</m:mi><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:mtd></m:mtr></m:mtable></m:mrow></m:math></div>
</section>
<p id="P700049702700000000000000003F2DC" data-uri="chapter02.xhtml#P700049702700000000000000003F2DC" class="pcalibre1 pcalibre calibre2">When shifting left by <var class="calibre5 pcalibre pcalibre1">k</var> for a fixed word size, the high-order <var class="calibre5 pcalibre pcalibre1">k</var> bits are discarded, yielding</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F2DD" data-uri="chapter02.xhtml#P700049702700000000000000003F2DD"><m:math display="block" alttext="" data-uri="" altimg-width="307" altimg-height="21" altimg="../images/ch02-eq115.png"><m:mrow><m:mo stretchy="false">[</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo stretchy="false">]</m:mo></m:mrow></m:math></div>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003F2DE" data-uri="chapter02.xhtml#P700049702700000000000000003F2DE"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000F97" title="102" data-uri="chapter02.xhtml#P7000497027000000000000000000F97" epub:type="pagebreak"></span>but this is also the case when performing multiplication on fixed-size words. We can therefore see that shifting a value left is equivalent to performing unsigned multiplication by a power of 2:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F2DF" data-uri="chapter02.xhtml#P700049702700000000000000003F2DF"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F2E0" data-uri="chapter02.xhtml#P700049702700000000000000003F2E0" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F2E1" data-uri="chapter02.xhtml#P700049702700000000000000003F2E1" class="pcalibre1 pcalibre calibre2">Unsigned multiplication by a power of 2</p>
<p id="P700049702700000000000000003F2E2" data-uri="chapter02.xhtml#P700049702700000000000000003F2E2" class="pcalibre1 pcalibre calibre2">For C variables <code id="P700049702700000000000000003F2E3" data-uri="chapter02.xhtml#P700049702700000000000000003F2E3" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F2E4" data-uri="chapter02.xhtml#P700049702700000000000000003F2E4" class="pcalibre1 calibre8 pcalibre">k</code> with unsigned values <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">k</var>, such that 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <var class="calibre5 pcalibre pcalibre1">w</var>, the C expression <code id="P700049702700000000000000003F2E5" data-uri="chapter02.xhtml#P700049702700000000000000003F2E5" class="pcalibre1 calibre8 pcalibre">x</code> &lt;&lt; <code id="P700049702700000000000000003F2E6" data-uri="chapter02.xhtml#P700049702700000000000000003F2E6" class="pcalibre1 calibre8 pcalibre">k</code> yields the value <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="63" altimg-height="26" altimg="../images/ch02-eq116.png"><m:mrow><m:mi>x</m:mi><m:mtext> </m:mtext><m:msubsup><m:mo>*</m:mo><m:mi>w</m:mi><m:mtext>u</m:mtext></m:msubsup><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:math></span>.</p>
</section>
<p id="P700049702700000000000000003F2E7" data-uri="chapter02.xhtml#P700049702700000000000000003F2E7" class="pcalibre1 pcalibre calibre2">Since the bit-level operation of fixed-size two's-complement arithmetic is equivalent to that for unsigned arithmetic, we can make a similar statement about the relationship between left shifts and multiplication by a power of 2 for two's-complement arithmetic:</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F2E8" data-uri="chapter02.xhtml#P700049702700000000000000003F2E8"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F2E9" data-uri="chapter02.xhtml#P700049702700000000000000003F2E9" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F2EA" data-uri="chapter02.xhtml#P700049702700000000000000003F2EA" class="pcalibre1 pcalibre calibre2">Two's-complement multiplication by a power of 2</p>
<p id="P700049702700000000000000003F2EB" data-uri="chapter02.xhtml#P700049702700000000000000003F2EB" class="pcalibre1 pcalibre calibre2">For C variables <code id="P700049702700000000000000003F2EC" data-uri="chapter02.xhtml#P700049702700000000000000003F2EC" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F2ED" data-uri="chapter02.xhtml#P700049702700000000000000003F2ED" class="pcalibre1 calibre8 pcalibre">k</code> with two's-complement value <var class="calibre5 pcalibre pcalibre1">x</var> and unsigned value <var class="calibre5 pcalibre pcalibre1">k</var>, such that 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <var class="calibre5 pcalibre pcalibre1">w</var>, the C expression <code id="P700049702700000000000000003F2EE" data-uri="chapter02.xhtml#P700049702700000000000000003F2EE" class="pcalibre1 calibre8 pcalibre">x</code> &lt;&lt; <code id="P700049702700000000000000003F2EF" data-uri="chapter02.xhtml#P700049702700000000000000003F2EF" class="pcalibre1 calibre8 pcalibre">k</code> yields the value <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="63" altimg-height="26" altimg="../images/ch02-eq117.png"><m:mrow><m:mi>x</m:mi><m:mtext> </m:mtext><m:msubsup><m:mo>*</m:mo><m:mi>w</m:mi><m:mtext>t</m:mtext></m:msubsup><m:mtext> </m:mtext><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:math></span>.</p>
</section>
<p id="P700049702700000000000000003F2F0" data-uri="chapter02.xhtml#P700049702700000000000000003F2F0" class="pcalibre1 pcalibre calibre2">Note that multiplying by a power of 2 can cause overflow with either unsigned or two's-complement arithmetic. Our result shows that even then we will get the same effect by shifting. Returning to our earlier example, we shifted the 4-bit pattern [1011] (numeric value 11) left by two positions to get [101100] (numeric value 44). Truncating this to 4 bits gives [1100] (numeric value 12 = 44 mod 16).</p>
<p id="P700049702700000000000000003F2F1" data-uri="chapter02.xhtml#P700049702700000000000000003F2F1" class="pcalibre1 pcalibre calibre2">Given that integer multiplication is more costly than shifting and adding, many C compilers try to remove many cases where an integer is being multiplied by a constant with combinations of shifting, adding, and subtracting. For example, suppose a program contains the expression <code id="P700049702700000000000000003F2F2" data-uri="chapter02.xhtml#P700049702700000000000000003F2F2" class="pcalibre1 calibre8 pcalibre">x*14</code>. Recognizing that 14 = 2<sup class="calibre51 pcalibre pcalibre1">3</sup> + 2<sup class="calibre51 pcalibre pcalibre1">2</sup> + 2<sup class="calibre51 pcalibre pcalibre1">1</sup>, the compiler can rewrite the multiplication as (<code id="P700049702700000000000000003F2F3" data-uri="chapter02.xhtml#P700049702700000000000000003F2F3" class="pcalibre1 calibre8 pcalibre">x&lt;&lt;3</code>) + (<code id="P700049702700000000000000003F2F4" data-uri="chapter02.xhtml#P700049702700000000000000003F2F4" class="pcalibre1 calibre8 pcalibre">x&lt;&lt;2</code>) + (<code id="P700049702700000000000000003F2F5" data-uri="chapter02.xhtml#P700049702700000000000000003F2F5" class="pcalibre1 calibre8 pcalibre">x&lt;&lt;1</code>), replacing one multiplication with three shifts and two additions. The two computations will yield the same result, regardless of whether <code id="P700049702700000000000000003F2F6" data-uri="chapter02.xhtml#P700049702700000000000000003F2F6" class="pcalibre1 calibre8 pcalibre">x</code> is unsigned or two's complement, and even if the multiplication would cause an overflow. Even better, the compiler can also use the property 14 = 2<sup class="calibre51 pcalibre pcalibre1">4</sup> – 2<sup class="calibre51 pcalibre pcalibre1">1</sup> to rewrite the multiplication as (<code id="P700049702700000000000000003F2F7" data-uri="chapter02.xhtml#P700049702700000000000000003F2F7" class="pcalibre1 calibre8 pcalibre">x&lt;&lt;4</code>) – (<code id="P700049702700000000000000003F2F8" data-uri="chapter02.xhtml#P700049702700000000000000003F2F8" class="pcalibre1 calibre8 pcalibre">x&lt;&lt;1</code>), requiring only two shifts and a subtraction.</p>
<section id="P7000497027000000000000000000FB2" data-uri="chapter02.xhtml#P7000497027000000000000000000FB2" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F2F9" data-uri="chapter02.xhtml#P700049702700000000000000003F2F9" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.38</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001BD7">155</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F2FA" data-uri="chapter02.xhtml#P700049702700000000000000003F2FA">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F2FB" data-uri="chapter02.xhtml#P700049702700000000000000003F2FB">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F2FC" data-uri="chapter02.xhtml#P700049702700000000000000003F2FC"><p id="P700049702700000000000000003F2FD" data-uri="chapter02.xhtml#P700049702700000000000000003F2FD" class="pcalibre calibre3 pcalibre1">As we will see in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001DCE.xhtml#P7000497027000000000000000001DCE"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">3</span></a>, the <span class="smallcaps pcalibre pcalibre1">lea </span>instruction can perform computations of the form <code id="P700049702700000000000000003F2FE" data-uri="chapter02.xhtml#P700049702700000000000000003F2FE" class="pcalibre1 calibre8 pcalibre">(a&lt;&lt;k) + b</code>, where <code id="P700049702700000000000000003F2FF" data-uri="chapter02.xhtml#P700049702700000000000000003F2FF" class="pcalibre1 calibre8 pcalibre">k</code> is either 0, 1, 2, or 3, and <code id="P700049702700000000000000003F300" data-uri="chapter02.xhtml#P700049702700000000000000003F300" class="pcalibre1 calibre8 pcalibre">b</code> is either 0 or some program value. The compiler often uses this instruction to perform multiplications by constant factors. For example, we can compute <code id="P700049702700000000000000003F301" data-uri="chapter02.xhtml#P700049702700000000000000003F301" class="pcalibre1 calibre8 pcalibre">3*a as (a&lt;&lt;1) + a</code>.</p>
<p id="P700049702700000000000000003F302" data-uri="chapter02.xhtml#P700049702700000000000000003F302" class="pcalibre calibre3 pcalibre1">Considering cases where <code id="P700049702700000000000000003F303" data-uri="chapter02.xhtml#P700049702700000000000000003F303" class="pcalibre1 calibre8 pcalibre">b</code> is either 0 or equal to <code id="P700049702700000000000000003F304" data-uri="chapter02.xhtml#P700049702700000000000000003F304" class="pcalibre1 calibre8 pcalibre">a</code>, and all possible values of <code id="P700049702700000000000000003F305" data-uri="chapter02.xhtml#P700049702700000000000000003F305" class="pcalibre1 calibre8 pcalibre">k</code>, what multiples of <code id="P700049702700000000000000003F306" data-uri="chapter02.xhtml#P700049702700000000000000003F306" class="pcalibre1 calibre8 pcalibre">a</code> can be computed with a single <span class="smallcaps pcalibre pcalibre1">lea </span>instruction?</p>
</div></li></ol>
</section>
<p id="P700049702700000000000000003F307" data-uri="chapter02.xhtml#P700049702700000000000000003F307" class="pcalibre1 pcalibre calibre2">Generalizing from our example, consider the task of generating code for the expression <code id="P700049702700000000000000003F308" data-uri="chapter02.xhtml#P700049702700000000000000003F308" class="pcalibre1 calibre8 pcalibre">x</code> * <var class="calibre5 pcalibre pcalibre1">K</var>, for some constant <i class="calibre5 pcalibre pcalibre1">K.</i> The compiler can express the binary representation of <var class="calibre5 pcalibre pcalibre1">K</var> as an alternating sequence of zeros and ones:</p>
<p id="P700049702700000000000000003F309" data-uri="chapter02.xhtml#P700049702700000000000000003F309" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000FC4" title="103" data-uri="chapter02.xhtml#P7000497027000000000000000000FC4" epub:type="pagebreak"></span></p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F30A" data-uri="chapter02.xhtml#P700049702700000000000000003F30A"><m:math display="block" alttext="" data-uri="" altimg-width="339" altimg-height="21" altimg="../images/ch02-eq118.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mn>0</m:mn><m:mo>…</m:mo><m:mn>0</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mn>1</m:mn><m:mo>…</m:mo><m:mn>1</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mrow><m:mo>(</m:mo><m:mrow><m:mn>0</m:mn><m:mo>…</m:mo><m:mn>0</m:mn></m:mrow><m:mo>)</m:mo></m:mrow><m:mo>⋯</m:mo><m:mrow><m:mo>(</m:mo><m:mrow><m:mn>1</m:mn><m:mo>…</m:mo><m:mn>1</m:mn></m:mrow><m:mo>)</m:mo></m:mrow></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></div>
<p id="P700049702700000000000000003F30B" data-uri="chapter02.xhtml#P700049702700000000000000003F30B" class="pcalibre1 pcalibre calibre2">For example, 14 can be written as [(0 ... 0)(111)(0)]. Consider a run of ones from bit position <var class="calibre5 pcalibre pcalibre1">n</var> down to bit position <var class="calibre5 pcalibre pcalibre1">m</var> (<var class="calibre5 pcalibre pcalibre1">n</var> ≥ <var class="calibre5 pcalibre pcalibre1">m</var>). (For the case of 14, we have <var class="calibre5 pcalibre pcalibre1">n</var> = 3 and <var class="calibre5 pcalibre pcalibre1">m</var> = 1.) We can compute the effect of these bits on the product using either of two different forms:</p>
<blockquote id="P700049702700000000000000003F30C" data-uri="chapter02.xhtml#P700049702700000000000000003F30C" class="pcalibre7 pcalibre8 calibre52">
<p id="P700049702700000000000000003F30D" data-uri="chapter02.xhtml#P700049702700000000000000003F30D" class="pcalibre1 pcalibre calibre2">Form A: <code id="P700049702700000000000000003F30E" data-uri="chapter02.xhtml#P700049702700000000000000003F30E" class="calibre10 pcalibre pcalibre1">(x&lt;&lt;<var class="calibre5 pcalibre pcalibre1">n</var>) + (x&lt;&lt; (<var class="calibre5 pcalibre pcalibre1">n</var> – 1)) + ... + (x&lt;&lt;<var class="calibre5 pcalibre pcalibre1">m</var>)</code></p>
<p id="P700049702700000000000000003F30F" data-uri="chapter02.xhtml#P700049702700000000000000003F30F" class="pcalibre calibre3 pcalibre1">Form B: <code id="P700049702700000000000000003F310" data-uri="chapter02.xhtml#P700049702700000000000000003F310" class="calibre10 pcalibre pcalibre1">(x&lt;&lt;(<var class="calibre5 pcalibre pcalibre1">n</var> + 1)) – (x&lt;&lt;<var class="calibre5 pcalibre pcalibre1">m</var>)</code></p>
</blockquote>
<p id="P700049702700000000000000003F311" data-uri="chapter02.xhtml#P700049702700000000000000003F311" class="pcalibre1 pcalibre calibre2">By adding together the results for each run, we are able to compute <code id="P700049702700000000000000003F312" data-uri="chapter02.xhtml#P700049702700000000000000003F312" class="pcalibre1 calibre8 pcalibre">x</code> * <var class="calibre5 pcalibre pcalibre1">K</var> without any multiplications. Of course, the trade-off between using combinations of shifting, adding, and subtracting versus a single multiplication instruction depends on the relative speeds of these instructions, and these can be highly machine dependent. Most compilers only perform this optimization when a small number of shifts, adds, and subtractions suffice.</p>
<section id="P7000497027000000000000000000FCE" data-uri="chapter02.xhtml#P7000497027000000000000000000FCE" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F313" data-uri="chapter02.xhtml#P700049702700000000000000003F313" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.39</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001BF4">156</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F314" data-uri="chapter02.xhtml#P700049702700000000000000003F314">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F315" data-uri="chapter02.xhtml#P700049702700000000000000003F315">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F316" data-uri="chapter02.xhtml#P700049702700000000000000003F316"><p id="P700049702700000000000000003F317" data-uri="chapter02.xhtml#P700049702700000000000000003F317" class="pcalibre calibre3 pcalibre1">How could we modify the expression for form B for the case where bit position <var class="calibre5 pcalibre pcalibre1">n</var> is the most significant bit?</p>
</div></li></ol>
</section>
<section id="P7000497027000000000000000000FD4" data-uri="chapter02.xhtml#P7000497027000000000000000000FD4" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F318" data-uri="chapter02.xhtml#P700049702700000000000000003F318" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.40</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001BF4">156</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F319" data-uri="chapter02.xhtml#P700049702700000000000000003F319">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F31A" data-uri="chapter02.xhtml#P700049702700000000000000003F31A">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F31B" data-uri="chapter02.xhtml#P700049702700000000000000003F31B"><p id="P700049702700000000000000003F31C" data-uri="chapter02.xhtml#P700049702700000000000000003F31C" class="pcalibre calibre3 pcalibre1">For each of the following values of <var class="calibre5 pcalibre pcalibre1">K</var>, find ways to express <code id="P700049702700000000000000003F31D" data-uri="chapter02.xhtml#P700049702700000000000000003F31D" class="pcalibre1 calibre8 pcalibre">x</code> * <var class="calibre5 pcalibre pcalibre1">K</var> using only the specified number of operations, where we consider both additions and subtractions to have comparable cost. You may need to use some tricks beyond the simple form A and B rules we have considered so far.</p>
<table class="informaltable pcalibre pcalibre1" id="P700049702700000000000000003F31E" data-uri="chapter02.xhtml#P700049702700000000000000003F31E">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003F31F" data-uri="chapter02.xhtml#P700049702700000000000000003F31F" class="calibre18 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">K</var></th>
<th id="P700049702700000000000000003F320" data-uri="chapter02.xhtml#P700049702700000000000000003F320" class="calibre18 pcalibre pcalibre1">Shifts</th>
<th id="P700049702700000000000000003F321" data-uri="chapter02.xhtml#P700049702700000000000000003F321" class="calibre18 pcalibre pcalibre1">Add/Subs</th>
<th id="P700049702700000000000000003F322" data-uri="chapter02.xhtml#P700049702700000000000000003F322" class="calibre18 pcalibre pcalibre1">Expression</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F323" data-uri="chapter02.xhtml#P700049702700000000000000003F323" class="calibre20 pcalibre pcalibre1">6</td>
<td id="P700049702700000000000000003F324" data-uri="chapter02.xhtml#P700049702700000000000000003F324" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P700049702700000000000000003F325" data-uri="chapter02.xhtml#P700049702700000000000000003F325" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F326" data-uri="chapter02.xhtml#P700049702700000000000000003F326" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F327" data-uri="chapter02.xhtml#P700049702700000000000000003F327" class="calibre20 pcalibre pcalibre1">31</td>
<td id="P700049702700000000000000003F328" data-uri="chapter02.xhtml#P700049702700000000000000003F328" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F329" data-uri="chapter02.xhtml#P700049702700000000000000003F329" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F32A" data-uri="chapter02.xhtml#P700049702700000000000000003F32A" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F32B" data-uri="chapter02.xhtml#P700049702700000000000000003F32B" class="calibre20 pcalibre pcalibre1">–6</td>
<td id="P700049702700000000000000003F32C" data-uri="chapter02.xhtml#P700049702700000000000000003F32C" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P700049702700000000000000003F32D" data-uri="chapter02.xhtml#P700049702700000000000000003F32D" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F32E" data-uri="chapter02.xhtml#P700049702700000000000000003F32E" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F32F" data-uri="chapter02.xhtml#P700049702700000000000000003F32F" class="calibre20 pcalibre pcalibre1">55</td>
<td id="P700049702700000000000000003F330" data-uri="chapter02.xhtml#P700049702700000000000000003F330" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P700049702700000000000000003F331" data-uri="chapter02.xhtml#P700049702700000000000000003F331" class="calibre20 pcalibre pcalibre1">2</td>
<td id="P700049702700000000000000003F332" data-uri="chapter02.xhtml#P700049702700000000000000003F332" class="calibre20 pcalibre pcalibre1">__________</td>
</tr>
</tbody>
</table></div></li></ol>
</section>
<section id="P7000497027000000000000000000FF0" data-uri="chapter02.xhtml#P7000497027000000000000000000FF0" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F333" data-uri="chapter02.xhtml#P700049702700000000000000003F333" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.41</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001BF4">156</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F334" data-uri="chapter02.xhtml#P700049702700000000000000003F334">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F335" data-uri="chapter02.xhtml#P700049702700000000000000003F335">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F336" data-uri="chapter02.xhtml#P700049702700000000000000003F336"><p id="P700049702700000000000000003F337" data-uri="chapter02.xhtml#P700049702700000000000000003F337" class="pcalibre calibre3 pcalibre1">For a run of ones starting at bit position <var class="calibre5 pcalibre pcalibre1">n</var> down to bit position <var class="calibre5 pcalibre pcalibre1">m</var> (<var class="calibre5 pcalibre pcalibre1">n</var> ≥ <var class="calibre5 pcalibre pcalibre1">m</var>), we saw that we can generate two forms of code, A and B. How should the compiler decide which form to use?</p>
</div></li></ol>
</section>
</section>
<section id="P7000497027000000000000000000FF6" data-uri="chapter02.xhtml#P7000497027000000000000000000FF6" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003F338" data-uri="chapter02.xhtml#P700049702700000000000000003F338" epub:type="title"><span class="pcalibre label pcalibre1">2.3.7 </span>Dividing by Powers of 2</h1></header>
<p id="P700049702700000000000000003F339" data-uri="chapter02.xhtml#P700049702700000000000000003F339" class="pcalibre1 pcalibre calibre2">Integer division on most machines is even slower than integer multiplication—requiring 30 or more clock cycles. Dividing by a power of 2 can also be performed</p>
<p id="P700049702700000000000000003F33A" data-uri="chapter02.xhtml#P700049702700000000000000003F33A" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000FFA" title="104" data-uri="chapter02.xhtml#P7000497027000000000000000000FFA" epub:type="pagebreak"></span></p>
<figure class="pcalibre5 figure pcalibre" id="P7000497027000000000000000000FFB" data-uri="chapter02.xhtml#P7000497027000000000000000000FFB">
<table class="pcalibre largetable pcalibre1" id="P700049702700000000000000003F33B" data-uri="chapter02.xhtml#P700049702700000000000000003F33B">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003F33C" data-uri="chapter02.xhtml#P700049702700000000000000003F33C" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003F33D" data-uri="chapter02.xhtml#P700049702700000000000000003F33D" class="calibre10 pcalibre pcalibre1">k</code></th>
<th id="P700049702700000000000000003F33E" data-uri="chapter02.xhtml#P700049702700000000000000003F33E" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003F33F" data-uri="chapter02.xhtml#P700049702700000000000000003F33F" class="calibre10 pcalibre pcalibre1">&gt;&gt; k</code> (binary)</th>
<th id="P700049702700000000000000003F340" data-uri="chapter02.xhtml#P700049702700000000000000003F340" class="calibre18 pcalibre pcalibre1">decimal</th>
<th id="P700049702700000000000000003F341" data-uri="chapter02.xhtml#P700049702700000000000000003F341" class="calibre18 pcalibre pcalibre1">12,340/2<sup class="pcalibre1 calibre21 pcalibre"><code id="P700049702700000000000000003F342" data-uri="chapter02.xhtml#P700049702700000000000000003F342" class="pcalibre1 pcalibre calibre74">k</code></sup></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F343" data-uri="chapter02.xhtml#P700049702700000000000000003F343" class="calibre20 pcalibre pcalibre1">0</td>
<td id="P700049702700000000000000003F344" data-uri="chapter02.xhtml#P700049702700000000000000003F344" class="calibre20 pcalibre pcalibre1">0011000000110100</td>
<td id="P700049702700000000000000003F345" data-uri="chapter02.xhtml#P700049702700000000000000003F345" class="calibre20 pcalibre pcalibre1">12,340</td>
<td id="P700049702700000000000000003F346" data-uri="chapter02.xhtml#P700049702700000000000000003F346" class="calibre20 pcalibre pcalibre1">12,340.0</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F347" data-uri="chapter02.xhtml#P700049702700000000000000003F347" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F348" data-uri="chapter02.xhtml#P700049702700000000000000003F348" class="calibre20 pcalibre pcalibre1">0001100000011010</td>
<td id="P700049702700000000000000003F349" data-uri="chapter02.xhtml#P700049702700000000000000003F349" class="calibre20 pcalibre pcalibre1">6,170</td>
<td id="P700049702700000000000000003F34A" data-uri="chapter02.xhtml#P700049702700000000000000003F34A" class="calibre20 pcalibre pcalibre1">6,170.0</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F34B" data-uri="chapter02.xhtml#P700049702700000000000000003F34B" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P700049702700000000000000003F34C" data-uri="chapter02.xhtml#P700049702700000000000000003F34C" class="calibre20 pcalibre pcalibre1">0000001100000011</td>
<td id="P700049702700000000000000003F34D" data-uri="chapter02.xhtml#P700049702700000000000000003F34D" class="calibre20 pcalibre pcalibre1">771</td>
<td id="P700049702700000000000000003F34E" data-uri="chapter02.xhtml#P700049702700000000000000003F34E" class="calibre20 pcalibre pcalibre1">771.25</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F34F" data-uri="chapter02.xhtml#P700049702700000000000000003F34F" class="calibre20 pcalibre pcalibre1">8</td>
<td id="P700049702700000000000000003F350" data-uri="chapter02.xhtml#P700049702700000000000000003F350" class="calibre20 pcalibre pcalibre1">0000000000110000</td>
<td id="P700049702700000000000000003F351" data-uri="chapter02.xhtml#P700049702700000000000000003F351" class="calibre20 pcalibre pcalibre1">48</td>
<td id="P700049702700000000000000003F352" data-uri="chapter02.xhtml#P700049702700000000000000003F352" class="calibre20 pcalibre pcalibre1">48.203125</td>
</tr>
</tbody>
</table>
<figcaption id="P700049702700000000000000003F353" data-uri="chapter02.xhtml#P700049702700000000000000003F353" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003F354" data-uri="chapter02.xhtml#P700049702700000000000000003F354" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.28 </span>Dividing unsigned numbers by powers of 2.</h1></header><div class="caption pcalibre pcalibre1" id="P700049702700000000000000003F355" data-uri="chapter02.xhtml#P700049702700000000000000003F355"><p id="P700049702700000000000000003F356" data-uri="chapter02.xhtml#P700049702700000000000000003F356" class="pcalibre calibre3 pcalibre1">The examples illustrate how performing a logical right shift by <code id="P700049702700000000000000003F357" data-uri="chapter02.xhtml#P700049702700000000000000003F357" class="pcalibre1 calibre8 pcalibre">k</code> has the same effect as dividing by <code id="P700049702700000000000000003F358" data-uri="chapter02.xhtml#P700049702700000000000000003F358" class="pcalibre1 calibre8 pcalibre">2<sup class="pcalibre1 calibre21 pcalibre">k</sup></code> and then rounding toward zero.</p></div></figcaption>
</figure>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003F359" data-uri="chapter02.xhtml#P700049702700000000000000003F359">using shift operations, but we use a right shift rather than a left shift. The two different right shifts—logical and arithmetic—serve this purpose for unsigned and two's-complement numbers, respectively.</p>
<p id="P700049702700000000000000003F35A" data-uri="chapter02.xhtml#P700049702700000000000000003F35A" class="pcalibre1 pcalibre calibre2">Integer division always rounds toward zero. To define this precisely, let us introduce some notation. For any real number <var class="calibre5 pcalibre pcalibre1">a</var>, define ⌊<var class="calibre5 pcalibre pcalibre1">a</var>⌋ to be the unique integer <var class="calibre5 pcalibre pcalibre1">a</var>′ such that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="129" altimg-height="19" altimg="../images/ch02-new94.png"><m:mrow><m:msup><m:mi>a</m:mi><m:mo>′</m:mo></m:msup><m:mo>≤</m:mo><m:mi>a</m:mi><m:mo>&lt;</m:mo><m:msup><m:mi>a</m:mi><m:mo>′</m:mo></m:msup><m:mo>+</m:mo><m:mn>1</m:mn></m:mrow></m:math></span>. As examples, <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="337" altimg-height="19" altimg="../images/ch02-new95.png"><m:mrow><m:mrow><m:mo>⌊</m:mo><m:mrow><m:mn>3.14</m:mn></m:mrow><m:mo>⌋</m:mo></m:mrow><m:mo>=</m:mo><m:mn>3</m:mn><m:mo>,</m:mo><m:mtext> </m:mtext><m:mrow><m:mo>⌊</m:mo><m:mrow><m:mo>−</m:mo><m:mn>3.14</m:mn></m:mrow><m:mo>⌋</m:mo></m:mrow><m:mo>=</m:mo><m:mo>−</m:mo><m:mn>4</m:mn><m:mo>,</m:mo><m:mtext> </m:mtext><m:mtext>and</m:mtext><m:mtext> </m:mtext><m:mrow><m:mo>⌊</m:mo><m:mn>3</m:mn><m:mo>⌋</m:mo></m:mrow><m:mo>=</m:mo><m:mn>3</m:mn></m:mrow></m:math></span>. Similarly, define ⌈<var class="calibre5 pcalibre pcalibre1">a</var>⌉ to be the unique integer <var class="calibre5 pcalibre pcalibre1">a</var>′ such that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="129" altimg-height="19" altimg="../images/ch02-new96.png"><m:mrow><m:msup><m:mi>a</m:mi><m:mo>′</m:mo></m:msup><m:mo>−</m:mo><m:mn>1</m:mn><m:mo>&lt;</m:mo><m:mi>a</m:mi><m:mo>≤</m:mo><m:msup><m:mi>a</m:mi><m:mo>′</m:mo></m:msup></m:mrow></m:math></span>. As examples, <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="220" altimg-height="19" altimg="../images/ch02-new97.png"><m:mrow><m:mrow><m:mo>⌈</m:mo><m:mrow><m:mn>3.14</m:mn></m:mrow><m:mo>⌉</m:mo></m:mrow><m:mo>=</m:mo><m:mn>4</m:mn><m:mo>,</m:mo><m:mrow><m:mo>⌈</m:mo><m:mrow><m:mo>−</m:mo><m:mn>3.14</m:mn></m:mrow><m:mo>⌉</m:mo></m:mrow><m:mo>=</m:mo><m:mo>−</m:mo><m:mn>3</m:mn></m:mrow></m:math></span>, and ⌈3⌉ = 3. For <var class="calibre5 pcalibre pcalibre1">x</var> ≥ 0 and <var class="calibre5 pcalibre pcalibre1">y</var> &gt; 0, integer division should yield ⌊<var class="calibre5 pcalibre pcalibre1">x</var>/<var class="calibre5 pcalibre pcalibre1">y</var>⌋, while for <var class="calibre5 pcalibre pcalibre1">x</var> &lt; 0 and <var class="calibre5 pcalibre pcalibre1">y</var> &gt; 0, it should yield ⌈<var class="calibre5 pcalibre pcalibre1">x</var>/<var class="calibre5 pcalibre pcalibre1">y</var>⌉. That is, it should round down a positive result but round up a negative one.</p>
<p id="P700049702700000000000000003F35B" data-uri="chapter02.xhtml#P700049702700000000000000003F35B" class="pcalibre1 pcalibre calibre2">The case for using shifts with unsigned arithmetic is straightforward, in part because right shifting is guaranteed to be performed logically for unsigned values.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F35C" data-uri="chapter02.xhtml#P700049702700000000000000003F35C"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F35D" data-uri="chapter02.xhtml#P700049702700000000000000003F35D" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F35E" data-uri="chapter02.xhtml#P700049702700000000000000003F35E" class="pcalibre1 pcalibre calibre2">Unsigned division by a power of 2</p>
<p id="P700049702700000000000000003F35F" data-uri="chapter02.xhtml#P700049702700000000000000003F35F" class="pcalibre1 pcalibre calibre2">For C variables <code id="P700049702700000000000000003F360" data-uri="chapter02.xhtml#P700049702700000000000000003F360" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F361" data-uri="chapter02.xhtml#P700049702700000000000000003F361" class="pcalibre1 calibre8 pcalibre">k</code> with unsigned values <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">k</var>, such that 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <var class="calibre5 pcalibre pcalibre1">w</var>, the C expression <code id="P700049702700000000000000003F362" data-uri="chapter02.xhtml#P700049702700000000000000003F362" class="pcalibre1 calibre8 pcalibre">x &gt;&gt; k</code> yields the value ⌊<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1">k</sup>⌋.</p>
</section>
<p id="P700049702700000000000000003F363" data-uri="chapter02.xhtml#P700049702700000000000000003F363" class="pcalibre1 pcalibre calibre2">As examples, <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P7000497027000000000000000000FFB"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.28</span></a> shows the effects of performing logical right shifts on a 16-bit representation of 12,340 to perform division by 1, 2, 16, and 256. The zeros shifted in from the left are shown in italics. We also show the result we would obtain if we did these divisions with real arithmetic. These examples show that the result of shifting consistently rounds toward zero, as is the convention for integer division.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F364" data-uri="chapter02.xhtml#P700049702700000000000000003F364"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F365" data-uri="chapter02.xhtml#P700049702700000000000000003F365" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003F366" data-uri="chapter02.xhtml#P700049702700000000000000003F366" class="pcalibre1 pcalibre calibre2">Unsigned division by a power of 2</p>
<p id="P700049702700000000000000003F367" data-uri="chapter02.xhtml#P700049702700000000000000003F367" class="pcalibre1 pcalibre calibre2">Let <var class="calibre5 pcalibre pcalibre1">x</var> be the unsigned integer represented by bit pattern <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="179" altimg-height="21" altimg="../images/ch02-new98.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, and let <var class="calibre5 pcalibre pcalibre1">k</var> be in the range 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <i class="calibre5 pcalibre pcalibre1">w.</i> Let <var class="calibre5 pcalibre pcalibre1">x</var>′ be the unsigned number with <var class="calibre5 pcalibre pcalibre1">w</var> – <var class="calibre5 pcalibre pcalibre1">k</var>-bit representation <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="179" altimg-height="21" altimg="../images/ch02-new99.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mi>k</m:mi></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, and let <var class="calibre5 pcalibre pcalibre1">x</var>″ be the unsigned number with <var class="calibre5 pcalibre pcalibre1">k</var>-bit representation <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="122" altimg-height="21" altimg="../images/ch02-new100.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. We can therefore see that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="119" altimg-height="21" altimg="../images/ch02-new101.png"><m:mrow><m:mi>x</m:mi><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>+</m:mo><m:msup><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>′</m:mo></m:msup></m:mrow></m:math></span>, and that <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="99" altimg-height="22" altimg="../images/ch02-new102.png"><m:mrow><m:mn>0</m:mn><m:mo>≤</m:mo><m:msup><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>′</m:mo></m:msup><m:mo>&lt;</m:mo><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:math></span>. It therefore follows that ⌊<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>⌋ = <var class="calibre5 pcalibre pcalibre1">x</var>′.</p>
<p id="P700049702700000000000000003F368" data-uri="chapter02.xhtml#P700049702700000000000000003F368" class="pcalibre1 pcalibre calibre2">Performing a logical right shift of bit vector <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="181" altimg-height="21" altimg="../images/ch02-new103.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math> </span>by <var class="calibre5 pcalibre pcalibre1">k</var> yields the bit vector</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F369" data-uri="chapter02.xhtml#P700049702700000000000000003F369"><m:math display="block" alttext="" data-uri="" altimg-width="267" altimg-height="21" altimg="../images/ch02-eq119.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:mn mathcolor="#00FFFF">0</m:mn><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mi>k</m:mi></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></div>
<p id="P700049702700000000000000003F36A" data-uri="chapter02.xhtml#P700049702700000000000000003F36A" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000102C" title="105" data-uri="chapter02.xhtml#P700049702700000000000000000102C" epub:type="pagebreak"></span></p>
<figure class="pcalibre5 figure pcalibre" id="P700049702700000000000000000102D" data-uri="chapter02.xhtml#P700049702700000000000000000102D">
<table class="pcalibre largetable pcalibre1" id="P700049702700000000000000003F36B" data-uri="chapter02.xhtml#P700049702700000000000000003F36B">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003F36C" data-uri="chapter02.xhtml#P700049702700000000000000003F36C" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003F36D" data-uri="chapter02.xhtml#P700049702700000000000000003F36D" class="calibre10 pcalibre pcalibre1">k</code></th>
<th id="P700049702700000000000000003F36E" data-uri="chapter02.xhtml#P700049702700000000000000003F36E" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003F36F" data-uri="chapter02.xhtml#P700049702700000000000000003F36F" class="calibre10 pcalibre pcalibre1">&gt;&gt; k</code> (binary)</th>
<th id="P700049702700000000000000003F370" data-uri="chapter02.xhtml#P700049702700000000000000003F370" class="calibre18 pcalibre pcalibre1">decimal</th>
<th id="P700049702700000000000000003F371" data-uri="chapter02.xhtml#P700049702700000000000000003F371" class="calibre18 pcalibre pcalibre1">–12340/2<sup class="pcalibre1 calibre21 pcalibre">k</sup></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F372" data-uri="chapter02.xhtml#P700049702700000000000000003F372" class="calibre20 pcalibre pcalibre1">0</td>
<td id="P700049702700000000000000003F373" data-uri="chapter02.xhtml#P700049702700000000000000003F373" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F374" data-uri="chapter02.xhtml#P700049702700000000000000003F374" class="calibre10 pcalibre pcalibre1">1100111111001100</code></td>
<td id="P700049702700000000000000003F375" data-uri="chapter02.xhtml#P700049702700000000000000003F375" class="calibre20 pcalibre pcalibre1">–12,340</td>
<td id="P700049702700000000000000003F376" data-uri="chapter02.xhtml#P700049702700000000000000003F376" class="calibre20 pcalibre pcalibre1">–12,340.0</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F377" data-uri="chapter02.xhtml#P700049702700000000000000003F377" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F378" data-uri="chapter02.xhtml#P700049702700000000000000003F378" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F379" data-uri="chapter02.xhtml#P700049702700000000000000003F379" class="calibre10 pcalibre pcalibre1">1110011111100110</code></td>
<td id="P700049702700000000000000003F37A" data-uri="chapter02.xhtml#P700049702700000000000000003F37A" class="calibre20 pcalibre pcalibre1">–6,170</td>
<td id="P700049702700000000000000003F37B" data-uri="chapter02.xhtml#P700049702700000000000000003F37B" class="calibre20 pcalibre pcalibre1">–6,170.0</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F37C" data-uri="chapter02.xhtml#P700049702700000000000000003F37C" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P700049702700000000000000003F37D" data-uri="chapter02.xhtml#P700049702700000000000000003F37D" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F37E" data-uri="chapter02.xhtml#P700049702700000000000000003F37E" class="calibre10 pcalibre pcalibre1">1111110011111100</code></td>
<td id="P700049702700000000000000003F37F" data-uri="chapter02.xhtml#P700049702700000000000000003F37F" class="calibre20 pcalibre pcalibre1">–772</td>
<td id="P700049702700000000000000003F380" data-uri="chapter02.xhtml#P700049702700000000000000003F380" class="calibre20 pcalibre pcalibre1">–771.25</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F381" data-uri="chapter02.xhtml#P700049702700000000000000003F381" class="calibre20 pcalibre pcalibre1">8</td>
<td id="P700049702700000000000000003F382" data-uri="chapter02.xhtml#P700049702700000000000000003F382" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F383" data-uri="chapter02.xhtml#P700049702700000000000000003F383" class="calibre10 pcalibre pcalibre1">1111111111001111</code></td>
<td id="P700049702700000000000000003F384" data-uri="chapter02.xhtml#P700049702700000000000000003F384" class="calibre20 pcalibre pcalibre1">–49</td>
<td id="P700049702700000000000000003F385" data-uri="chapter02.xhtml#P700049702700000000000000003F385" class="calibre20 pcalibre pcalibre1">–48.203125</td>
</tr>
</tbody>
</table>
<figcaption id="P700049702700000000000000003F386" data-uri="chapter02.xhtml#P700049702700000000000000003F386" class="calibre11 pcalibre pcalibre1"><header class="calibre71 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F387" data-uri="chapter02.xhtml#P700049702700000000000000003F387" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.29 </span>Applying arithmetic right shift.</h1></header><div class="caption pcalibre pcalibre1" id="P700049702700000000000000003F388" data-uri="chapter02.xhtml#P700049702700000000000000003F388"><p id="P700049702700000000000000003F389" data-uri="chapter02.xhtml#P700049702700000000000000003F389" class="pcalibre calibre3 pcalibre1">The examples illustrate that arithmetic right shift is similar to division by a power of 2, except that it rounds down rather than toward zero.</p></div></figcaption>
</figure>
<p id="P700049702700000000000000003F38A" data-uri="chapter02.xhtml#P700049702700000000000000003F38A" class="pcalibre1 pcalibre calibre2">This bit vector has numeric value <var class="calibre5 pcalibre pcalibre1">x</var>′, which we have seen is the value that would result by computing the expression <code id="P700049702700000000000000003F38B" data-uri="chapter02.xhtml#P700049702700000000000000003F38B" class="pcalibre1 calibre8 pcalibre">x &gt;&gt; k</code>.</p>
</section>
<p id="P700049702700000000000000003F38C" data-uri="chapter02.xhtml#P700049702700000000000000003F38C" class="pcalibre1 pcalibre calibre2">The case for dividing by a power of 2 with two's-complement arithmetic is slightly more complex. First, the shifting should be performed using an <i class="calibre5 pcalibre pcalibre1">arithmetic</i> right shift, to ensure that negative values remain negative. Let us investigate what value such a right shift would produce.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F38D" data-uri="chapter02.xhtml#P700049702700000000000000003F38D"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F38E" data-uri="chapter02.xhtml#P700049702700000000000000003F38E" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F38F" data-uri="chapter02.xhtml#P700049702700000000000000003F38F" class="pcalibre1 pcalibre calibre2">Two's-complement division by a power of 2, rounding down</p>
<p id="P700049702700000000000000003F390" data-uri="chapter02.xhtml#P700049702700000000000000003F390" class="pcalibre1 pcalibre calibre2">Let C variables <code id="P700049702700000000000000003F391" data-uri="chapter02.xhtml#P700049702700000000000000003F391" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F392" data-uri="chapter02.xhtml#P700049702700000000000000003F392" class="pcalibre1 calibre8 pcalibre">k</code> have two's-complement value <var class="calibre5 pcalibre pcalibre1">x</var> and unsigned value <var class="calibre5 pcalibre pcalibre1">k</var>, respectively, such that 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <i class="calibre5 pcalibre pcalibre1">w.</i> The C expression <code id="P700049702700000000000000003F393" data-uri="chapter02.xhtml#P700049702700000000000000003F393" class="pcalibre1 calibre8 pcalibre">x &gt;&gt; k</code>, when the shift is performed arithmetically, yields the value ⌊<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>⌋.</p>
</section>
<p id="P700049702700000000000000003F394" data-uri="chapter02.xhtml#P700049702700000000000000003F394" class="pcalibre1 pcalibre calibre2">For <var class="calibre5 pcalibre pcalibre1">x</var> ≥ 0, variable <code id="P700049702700000000000000003F395" data-uri="chapter02.xhtml#P700049702700000000000000003F395" class="pcalibre1 calibre8 pcalibre">x</code> has 0 as the most significant bit, and so the effect of an arithmetic shift is the same as for a logical right shift. Thus, an arithmetic right shift by <var class="calibre5 pcalibre pcalibre1">k</var> is the same as division by 2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">k</sup></i> for a nonnegative number. As an example of a negative number, <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P700049702700000000000000000102D"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.29</span></a> shows the effect of applying arithmetic right shift to a 16-bit representation of –12,340 for different shift amounts. For the case when no rounding is required (<var class="calibre5 pcalibre pcalibre1">k</var> = 1), the result will be <var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>. When rounding is required, shifting causes the result to be rounded downward. For example, the shifting right by four has the effect of rounding –771.25 down to –772. We will need to adjust our strategy to handle division for negative values of <i class="calibre5 pcalibre pcalibre1">x.</i></p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F396" data-uri="chapter02.xhtml#P700049702700000000000000003F396"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F397" data-uri="chapter02.xhtml#P700049702700000000000000003F397" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003F398" data-uri="chapter02.xhtml#P700049702700000000000000003F398" class="pcalibre1 pcalibre calibre2">Two's-complement division by a power of 2, rounding down</p>
<p id="P700049702700000000000000003F399" data-uri="chapter02.xhtml#P700049702700000000000000003F399" class="pcalibre1 pcalibre calibre2">Let <var class="calibre5 pcalibre pcalibre1">x</var> be the two's-complement integer represented by bit pattern <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="178" altimg-height="21" altimg="../images/ch02-new104.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, and let <var class="calibre5 pcalibre pcalibre1">k</var> be in the range 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <i class="calibre5 pcalibre pcalibre1">w.</i> Let <var class="calibre5 pcalibre pcalibre1">x</var>′ be the two's-complement number represented by the <var class="calibre5 pcalibre pcalibre1">w</var> – <var class="calibre5 pcalibre pcalibre1">k</var> bits <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="180" altimg-height="21" altimg="../images/ch02-new105.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mi>k</m:mi></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>, and let <var class="calibre5 pcalibre pcalibre1">x</var>″ be the <i class="calibre5 pcalibre pcalibre1">unsigned</i> number represented by the low-order <var class="calibre5 pcalibre pcalibre1">k</var> bits <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="121" altimg-height="21" altimg="../images/ch02-new106.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>k</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. By a similar analysis as the unsigned case, we have <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="119" altimg-height="21" altimg="../images/ch02-new107.png"><m:mrow><m:mi>x</m:mi><m:mo>=</m:mo><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>+</m:mo><m:msup><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>′</m:mo></m:msup></m:mrow></m:math> </span>and <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="99" altimg-height="22" altimg="../images/ch02-new108.png"><m:mrow><m:mn>0</m:mn><m:mo>≤</m:mo><m:msup><m:msup><m:mi>x</m:mi><m:mo>′</m:mo></m:msup><m:mo>′</m:mo></m:msup><m:mo>&lt;</m:mo><m:msup><m:mn>2</m:mn><m:mi>k</m:mi></m:msup></m:mrow></m:math></span>, giving <var class="calibre5 pcalibre pcalibre1">x</var>′ = ⌊<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>⌋. Furthermore, observe that shifting bit vector <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="181" altimg-height="21" altimg="../images/ch02-new109.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mn>0</m:mn></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math> </span>right <i class="calibre5 pcalibre pcalibre1">arithmetically</i> by <var class="calibre5 pcalibre pcalibre1">k</var> yields the bit vector</p>
<div class="informalequation pcalibre pcalibre1" id="P700049702700000000000000003F39A" data-uri="chapter02.xhtml#P700049702700000000000000003F39A"><m:math display="block" alttext="" data-uri="" altimg-width="329" altimg-height="21" altimg="../images/ch02-eq120.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi mathcolor="#00FFFF">x</m:mi><m:mrow><m:mi mathcolor="#00FFFF">w</m:mi><m:mo mathcolor="#00FFFF">−</m:mo><m:mn mathcolor="#00FFFF">1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mi>k</m:mi></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></div>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003F39B" data-uri="chapter02.xhtml#P700049702700000000000000003F39B">which is the sign extension from <var class="calibre5 pcalibre pcalibre1">w</var> – <var class="calibre5 pcalibre pcalibre1">k</var> bits to <var class="calibre5 pcalibre pcalibre1">w</var> bits of <span class="inlineequation pcalibre pcalibre1"><m:math display="inline" alttext="" data-uri="" altimg-width="179" altimg-height="21" altimg="../images/ch02-new110.png"><m:mrow><m:mrow><m:mo>[</m:mo><m:mrow><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mrow><m:mi>w</m:mi><m:mo>−</m:mo><m:mn>2</m:mn></m:mrow></m:msub><m:mo>,</m:mo><m:mo>…</m:mo><m:mo>,</m:mo><m:msub><m:mi>x</m:mi><m:mi>k</m:mi></m:msub></m:mrow><m:mo>]</m:mo></m:mrow></m:mrow></m:math></span>. Thus, this shifted bit vector is the two's-complement representation of ⌊<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>⌋.</p>
</section>
<figure class="pcalibre5 figure pcalibre" id="P700049702700000000000000000105F" data-uri="chapter02.xhtml#P700049702700000000000000000105F">
<table class="pcalibre largetable pcalibre1" id="P700049702700000000000000003F39C" data-uri="chapter02.xhtml#P700049702700000000000000003F39C">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P700049702700000000000000003F39D" data-uri="chapter02.xhtml#P700049702700000000000000003F39D" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003F39E" data-uri="chapter02.xhtml#P700049702700000000000000003F39E" class="calibre10 pcalibre pcalibre1">k</code></th>
<th id="P700049702700000000000000003F39F" data-uri="chapter02.xhtml#P700049702700000000000000003F39F" class="calibre18 pcalibre pcalibre1">Bias</th>
<th id="P700049702700000000000000003F3A0" data-uri="chapter02.xhtml#P700049702700000000000000003F3A0" class="calibre18 pcalibre pcalibre1">–12,340 + bias (binary)</th>
<th id="P700049702700000000000000003F3A1" data-uri="chapter02.xhtml#P700049702700000000000000003F3A1" class="calibre18 pcalibre pcalibre1"><code id="P700049702700000000000000003F3A2" data-uri="chapter02.xhtml#P700049702700000000000000003F3A2" class="calibre10 pcalibre pcalibre1">&gt;&gt; k</code> (binary)</th>
<th id="P700049702700000000000000003F3A3" data-uri="chapter02.xhtml#P700049702700000000000000003F3A3" class="calibre18 pcalibre pcalibre1">Decimal</th>
<th id="P700049702700000000000000003F3A4" data-uri="chapter02.xhtml#P700049702700000000000000003F3A4" class="calibre18 pcalibre pcalibre1">–12,340/2<sup class="pcalibre1 calibre21 pcalibre">k</sup></th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F3A5" data-uri="chapter02.xhtml#P700049702700000000000000003F3A5" class="calibre20 pcalibre pcalibre1">0</td>
<td id="P700049702700000000000000003F3A6" data-uri="chapter02.xhtml#P700049702700000000000000003F3A6" class="calibre20 pcalibre pcalibre1">0</td>
<td id="P700049702700000000000000003F3A7" data-uri="chapter02.xhtml#P700049702700000000000000003F3A7" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3A8" data-uri="chapter02.xhtml#P700049702700000000000000003F3A8" class="calibre10 pcalibre pcalibre1">1100111111001100</code></td>
<td id="P700049702700000000000000003F3A9" data-uri="chapter02.xhtml#P700049702700000000000000003F3A9" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3AA" data-uri="chapter02.xhtml#P700049702700000000000000003F3AA" class="calibre10 pcalibre pcalibre1">1100111111001100</code></td>
<td id="P700049702700000000000000003F3AB" data-uri="chapter02.xhtml#P700049702700000000000000003F3AB" class="calibre20 pcalibre pcalibre1">–12,340</td>
<td id="P700049702700000000000000003F3AC" data-uri="chapter02.xhtml#P700049702700000000000000003F3AC" class="calibre20 pcalibre pcalibre1">–12,340.0</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F3AD" data-uri="chapter02.xhtml#P700049702700000000000000003F3AD" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F3AE" data-uri="chapter02.xhtml#P700049702700000000000000003F3AE" class="calibre20 pcalibre pcalibre1">1</td>
<td id="P700049702700000000000000003F3AF" data-uri="chapter02.xhtml#P700049702700000000000000003F3AF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3B0" data-uri="chapter02.xhtml#P700049702700000000000000003F3B0" class="calibre10 pcalibre pcalibre1">110011111100110<i class="calibre5 pcalibre pcalibre1">1</i></code></td>
<td id="P700049702700000000000000003F3B1" data-uri="chapter02.xhtml#P700049702700000000000000003F3B1" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3B2" data-uri="chapter02.xhtml#P700049702700000000000000003F3B2" class="calibre10 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">1</i>110011111100110</code></td>
<td id="P700049702700000000000000003F3B3" data-uri="chapter02.xhtml#P700049702700000000000000003F3B3" class="calibre20 pcalibre pcalibre1">–6,170</td>
<td id="P700049702700000000000000003F3B4" data-uri="chapter02.xhtml#P700049702700000000000000003F3B4" class="calibre20 pcalibre pcalibre1">–6,170.0</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F3B5" data-uri="chapter02.xhtml#P700049702700000000000000003F3B5" class="calibre20 pcalibre pcalibre1">4</td>
<td id="P700049702700000000000000003F3B6" data-uri="chapter02.xhtml#P700049702700000000000000003F3B6" class="calibre20 pcalibre pcalibre1">15</td>
<td id="P700049702700000000000000003F3B7" data-uri="chapter02.xhtml#P700049702700000000000000003F3B7" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3B8" data-uri="chapter02.xhtml#P700049702700000000000000003F3B8" class="calibre10 pcalibre pcalibre1">110011111101<i class="calibre5 pcalibre pcalibre1">1011</i></code></td>
<td id="P700049702700000000000000003F3B9" data-uri="chapter02.xhtml#P700049702700000000000000003F3B9" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3BA" data-uri="chapter02.xhtml#P700049702700000000000000003F3BA" class="calibre10 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">1111</i>110011111101</code></td>
<td id="P700049702700000000000000003F3BB" data-uri="chapter02.xhtml#P700049702700000000000000003F3BB" class="calibre20 pcalibre pcalibre1">–771</td>
<td id="P700049702700000000000000003F3BC" data-uri="chapter02.xhtml#P700049702700000000000000003F3BC" class="calibre20 pcalibre pcalibre1">–771.25</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P700049702700000000000000003F3BD" data-uri="chapter02.xhtml#P700049702700000000000000003F3BD" class="calibre20 pcalibre pcalibre1">8</td>
<td id="P700049702700000000000000003F3BE" data-uri="chapter02.xhtml#P700049702700000000000000003F3BE" class="calibre20 pcalibre pcalibre1">255</td>
<td id="P700049702700000000000000003F3BF" data-uri="chapter02.xhtml#P700049702700000000000000003F3BF" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3C0" data-uri="chapter02.xhtml#P700049702700000000000000003F3C0" class="calibre10 pcalibre pcalibre1">11010000<i class="calibre5 pcalibre pcalibre1">11001011</i></code></td>
<td id="P700049702700000000000000003F3C1" data-uri="chapter02.xhtml#P700049702700000000000000003F3C1" class="calibre20 pcalibre pcalibre1"><code id="P700049702700000000000000003F3C2" data-uri="chapter02.xhtml#P700049702700000000000000003F3C2" class="calibre10 pcalibre pcalibre1"><i class="calibre5 pcalibre pcalibre1">11111111</i>11010000</code></td>
<td id="P700049702700000000000000003F3C3" data-uri="chapter02.xhtml#P700049702700000000000000003F3C3" class="calibre20 pcalibre pcalibre1">–48</td>
<td id="P700049702700000000000000003F3C4" data-uri="chapter02.xhtml#P700049702700000000000000003F3C4" class="calibre20 pcalibre pcalibre1">–48.203125</td>
</tr>
</tbody>
</table>
<figcaption id="P700049702700000000000000003F3C5" data-uri="chapter02.xhtml#P700049702700000000000000003F3C5" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P700049702700000000000000003F3C6" data-uri="chapter02.xhtml#P700049702700000000000000003F3C6" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000108B" title="106" data-uri="chapter02.xhtml#P700049702700000000000000000108B" epub:type="pagebreak"></span><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">2.30 </span>Dividing two's-complement numbers by powers of 2.</h1></header><div class="caption pcalibre pcalibre1" id="P700049702700000000000000003F3C7" data-uri="chapter02.xhtml#P700049702700000000000000003F3C7"><p id="P700049702700000000000000003F3C8" data-uri="chapter02.xhtml#P700049702700000000000000003F3C8" class="pcalibre calibre3 pcalibre1">By adding a bias before the right shift, the result is rounded toward zero.</p></div></figcaption>
</figure>
<p id="P700049702700000000000000003F3C9" data-uri="chapter02.xhtml#P700049702700000000000000003F3C9" class="pcalibre1 pcalibre calibre2">We can correct for the improper rounding that occurs when a negative number is shifted right by “biasing” the value before shifting.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F3CA" data-uri="chapter02.xhtml#P700049702700000000000000003F3CA"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F3CB" data-uri="chapter02.xhtml#P700049702700000000000000003F3CB" epub:type="title"><span class="pcalibre label pcalibre1">Principle: </span></h1></header>
<p id="P700049702700000000000000003F3CC" data-uri="chapter02.xhtml#P700049702700000000000000003F3CC" class="pcalibre1 pcalibre calibre2">Two's-complement division by a power of 2, rounding up</p>
<p id="P700049702700000000000000003F3CD" data-uri="chapter02.xhtml#P700049702700000000000000003F3CD" class="pcalibre1 pcalibre calibre2">Let C variables <code id="P700049702700000000000000003F3CE" data-uri="chapter02.xhtml#P700049702700000000000000003F3CE" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F3CF" data-uri="chapter02.xhtml#P700049702700000000000000003F3CF" class="pcalibre1 calibre8 pcalibre">k</code> have two's-complement value <var class="calibre5 pcalibre pcalibre1">x</var> and unsigned value <var class="calibre5 pcalibre pcalibre1">k</var>, respectively, such that 0 ≤ <var class="calibre5 pcalibre pcalibre1">k</var> &lt; <i class="calibre5 pcalibre pcalibre1">w.</i> The C expression <code id="P700049702700000000000000003F3D0" data-uri="chapter02.xhtml#P700049702700000000000000003F3D0" class="pcalibre1 calibre8 pcalibre">(x + (1 &lt;&lt; k) – 1) &gt;&gt; k</code>, when the shift is performed arithmetically, yields the value ⌈<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>⌉.</p>
</section>
<p id="P700049702700000000000000003F3D1" data-uri="chapter02.xhtml#P700049702700000000000000003F3D1" class="pcalibre1 pcalibre calibre2"><a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_001.xhtml#P700049702700000000000000000105F"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">2.30</span></a> demonstrates how adding the appropriate bias before performing the arithmetic right shift causes the result to be correctly rounded. In the third column, we show the result of adding the bias value to –12,340, with the lower <var class="calibre5 pcalibre pcalibre1">k</var> bits (those that will be shifted off to the right) shown in italics. We can see that the bits to the left of these may or may not be incremented. For the case where no rounding is required (<var class="calibre5 pcalibre pcalibre1">k</var> = 1), adding the bias only affects bits that are shifted off. For the cases where rounding is required, adding the bias causes the upper bits to be incremented, so that the result will be rounded toward zero.</p>
<p id="P700049702700000000000000003F3D2" data-uri="chapter02.xhtml#P700049702700000000000000003F3D2" class="pcalibre1 pcalibre calibre2">The biasing technique exploits the property that ⌈<i class="calibre5 pcalibre pcalibre1">x/y</i>⌉ = ⌊(<var class="calibre5 pcalibre pcalibre1">x</var> + <var class="calibre5 pcalibre pcalibre1">y</var> –1)/<var class="calibre5 pcalibre pcalibre1">y</var>⌋ for integers <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">y</var> such that <var class="calibre5 pcalibre pcalibre1">y</var> &gt; 0. As examples, when <var class="calibre5 pcalibre pcalibre1">x</var> = –30 and <var class="calibre5 pcalibre pcalibre1">y</var> = 4, we have <var class="calibre5 pcalibre pcalibre1">x</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1 = –27 and ⌈–30/4⌉ = –7 = ⌊–27/4⌋. When <var class="calibre5 pcalibre pcalibre1">x</var> = –32 and <var class="calibre5 pcalibre pcalibre1">y</var> = 4, we have <var class="calibre5 pcalibre pcalibre1">x</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1 = –29 and ⌈–32/4⌉ = –8 = ⌊–29/4⌋.</p>
<section class="feature pcalibre pcalibre1" id="P700049702700000000000000003F3D3" data-uri="chapter02.xhtml#P700049702700000000000000003F3D3"><header class="calibre61 pcalibre pcalibre1"><h1 class="pcalibre1 pcalibre title8" id="P700049702700000000000000003F3D4" data-uri="chapter02.xhtml#P700049702700000000000000003F3D4" epub:type="title"><span class="pcalibre label pcalibre1">Derivation: </span></h1></header>
<p id="P700049702700000000000000003F3D5" data-uri="chapter02.xhtml#P700049702700000000000000003F3D5" class="pcalibre1 pcalibre calibre2">Two's-complement division by a power of 2, rounding up</p>
<p id="P700049702700000000000000003F3D6" data-uri="chapter02.xhtml#P700049702700000000000000003F3D6" class="pcalibre1 pcalibre calibre2">To see that ⌈<i class="calibre5 pcalibre pcalibre1">x/y</i>⌉ = ⌊(<var class="calibre5 pcalibre pcalibre1">x</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1)/<var class="calibre5 pcalibre pcalibre1">y</var>⌋, suppose that <var class="calibre5 pcalibre pcalibre1">x</var> = <i class="calibre5 pcalibre pcalibre1">qy</i> + <var class="calibre5 pcalibre pcalibre1">r</var>, where 0 ≤ <var class="calibre5 pcalibre pcalibre1">r</var> &lt; <var class="calibre5 pcalibre pcalibre1">y</var>, giving (<var class="calibre5 pcalibre pcalibre1">x</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1)/<var class="calibre5 pcalibre pcalibre1">y</var> = <var class="calibre5 pcalibre pcalibre1">q</var> + (<var class="calibre5 pcalibre pcalibre1">r</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1)/<var class="calibre5 pcalibre pcalibre1">y</var>, and so ⌊(<var class="calibre5 pcalibre pcalibre1">x</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1)/<var class="calibre5 pcalibre pcalibre1">y</var>⌋ = <var class="calibre5 pcalibre pcalibre1">q</var> + [(<var class="calibre5 pcalibre pcalibre1">r</var> + <var class="calibre5 pcalibre pcalibre1">y</var> – 1)/<var class="calibre5 pcalibre pcalibre1">y</var>⌋. The latter term will equal 0 when <var class="calibre5 pcalibre pcalibre1">r</var> = 0 and 1 when <var class="calibre5 pcalibre pcalibre1">r</var> &gt; 0. That is, by adding a bias of <var class="calibre5 pcalibre pcalibre1">y</var> – 1 to <var class="calibre5 pcalibre pcalibre1">x</var> and then rounding the division downward, we will get <var class="calibre5 pcalibre pcalibre1">q</var> when <var class="calibre5 pcalibre pcalibre1">y</var> divides <var class="calibre5 pcalibre pcalibre1">x</var> and <var class="calibre5 pcalibre pcalibre1">q</var> + 1 otherwise.</p>
<p id="P700049702700000000000000003F3D7" data-uri="chapter02.xhtml#P700049702700000000000000003F3D7" class="pcalibre1 pcalibre calibre2">Returning to the case where <var class="calibre5 pcalibre pcalibre1">y</var> = 2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">k</sup></i>, the C expression <code id="P700049702700000000000000003F3D8" data-uri="chapter02.xhtml#P700049702700000000000000003F3D8" class="pcalibre1 calibre8 pcalibre">x + (1 &lt;&lt; k)</code> — 1 yields the value <var class="calibre5 pcalibre pcalibre1">x</var> + 2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup> – 1. Shifting this right arithmetically by <var class="calibre5 pcalibre pcalibre1">k</var> therefore yields ⌈<var class="calibre5 pcalibre pcalibre1">x</var>/2<sup class="calibre51 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sup>⌉.</p>
</section>
<p id="P700049702700000000000000003F3D9" data-uri="chapter02.xhtml#P700049702700000000000000003F3D9" class="pcalibre1 pcalibre calibre2">These analyses show that for a two's-complement machine using arithmetic right shifts, the C expression</p>
<pre id="P700049702700000000000000003F3DA" data-uri="chapter02.xhtml#P700049702700000000000000003F3DA" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F3DB" data-uri="chapter02.xhtml#P700049702700000000000000003F3DB" class="calibre10 pcalibre pcalibre1">
(x&lt;0 ? x+(1&lt;&lt;k)–1 : x) &gt;&gt; k
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003F3DC" data-uri="chapter02.xhtml#P700049702700000000000000003F3DC">will compute the value <var class="calibre5 pcalibre pcalibre1">x</var>/2<i class="calibre5 pcalibre pcalibre1"><sup class="calibre51 pcalibre pcalibre1">k</sup>.</i></p>
<section id="P70004970270000000000000000010A2" data-uri="chapter02.xhtml#P70004970270000000000000000010A2" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F3DD" data-uri="chapter02.xhtml#P700049702700000000000000003F3DD" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000010A4" title="107" data-uri="chapter02.xhtml#P70004970270000000000000000010A4" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.42</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001BF4">156</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F3DE" data-uri="chapter02.xhtml#P700049702700000000000000003F3DE">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F3DF" data-uri="chapter02.xhtml#P700049702700000000000000003F3DF">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F3E0" data-uri="chapter02.xhtml#P700049702700000000000000003F3E0"><p id="P700049702700000000000000003F3E1" data-uri="chapter02.xhtml#P700049702700000000000000003F3E1" class="pcalibre calibre3 pcalibre1">Write a function <code id="P700049702700000000000000003F3E2" data-uri="chapter02.xhtml#P700049702700000000000000003F3E2" class="pcalibre1 calibre8 pcalibre">div16</code> that returns the value <code id="P700049702700000000000000003F3E3" data-uri="chapter02.xhtml#P700049702700000000000000003F3E3" class="pcalibre1 calibre8 pcalibre">x/16</code> for integer argument <code id="P700049702700000000000000003F3E4" data-uri="chapter02.xhtml#P700049702700000000000000003F3E4" class="pcalibre1 calibre8 pcalibre">x</code>. Your function should not use division, modulus, multiplication, any conditionals (<code id="P700049702700000000000000003F3E5" data-uri="chapter02.xhtml#P700049702700000000000000003F3E5" class="pcalibre1 calibre8 pcalibre">if or ?:</code>), any comparison operators (e.g., &lt;, &gt;, or ==), or any loops. You may assume that data type <code id="P700049702700000000000000003F3E6" data-uri="chapter02.xhtml#P700049702700000000000000003F3E6" class="pcalibre1 calibre8 pcalibre">int</code> is 32 bits long and uses a two's-complement representation, and that right shifts are performed arithmetically.</p>
</div></li></ol>
</section>
<p id="P700049702700000000000000003F3E7" data-uri="chapter02.xhtml#P700049702700000000000000003F3E7" class="pcalibre1 pcalibre calibre2">We now see that division by a power of 2 can be implemented using logical or arithmetic right shifts. This is precisely the reason the two types of right shifts are available on most machines. Unfortunately, this approach does not generalize to division by arbitrary constants. Unlike multiplication, we cannot express division by arbitrary constants <var class="calibre5 pcalibre pcalibre1">K</var> in terms of division by powers of 2.</p>
<section id="P70004970270000000000000000010AF" data-uri="chapter02.xhtml#P70004970270000000000000000010AF" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F3E8" data-uri="chapter02.xhtml#P700049702700000000000000003F3E8" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.43</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001C22">157</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F3E9" data-uri="chapter02.xhtml#P700049702700000000000000003F3E9">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F3EA" data-uri="chapter02.xhtml#P700049702700000000000000003F3EA">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F3EB" data-uri="chapter02.xhtml#P700049702700000000000000003F3EB"><p id="P700049702700000000000000003F3EC" data-uri="chapter02.xhtml#P700049702700000000000000003F3EC" class="pcalibre calibre3 pcalibre1">In the following code, we have omitted the definitions of constants <code id="P700049702700000000000000003F3ED" data-uri="chapter02.xhtml#P700049702700000000000000003F3ED" class="pcalibre1 calibre8 pcalibre">M</code> and <code id="P700049702700000000000000003F3EE" data-uri="chapter02.xhtml#P700049702700000000000000003F3EE" class="pcalibre1 calibre8 pcalibre">N:</code></p>
<pre id="P700049702700000000000000003F3EF" data-uri="chapter02.xhtml#P700049702700000000000000003F3EF" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F3F0" data-uri="chapter02.xhtml#P700049702700000000000000003F3F0" class="calibre10 pcalibre pcalibre1">
#define M		/* Mystery number 1 */
#define N		/* Mystery number 2 */
int arith(int x, int y) {
	int result = 0;
	result = x*M + y/N; /* M and N are mystery numbers. */
	return result;
}
</code></pre>
<p id="P700049702700000000000000003F3F1" data-uri="chapter02.xhtml#P700049702700000000000000003F3F1" class="pcalibre calibre3 pcalibre1">We compiled this code for particular values of <code id="P700049702700000000000000003F3F2" data-uri="chapter02.xhtml#P700049702700000000000000003F3F2" class="pcalibre1 calibre8 pcalibre">M</code> and <code id="P700049702700000000000000003F3F3" data-uri="chapter02.xhtml#P700049702700000000000000003F3F3" class="pcalibre1 calibre8 pcalibre">N</code>. The compiler optimized the multiplication and division using the methods we have discussed. The following is a translation of the generated machine code back into C:</p>
<pre id="P700049702700000000000000003F3F4" data-uri="chapter02.xhtml#P700049702700000000000000003F3F4" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F3F5" data-uri="chapter02.xhtml#P700049702700000000000000003F3F5" class="calibre10 pcalibre pcalibre1">
/* Translation of assembly code for arith */
int optarith(int x, int y) {
	int t = x;
	x &lt;&lt;= 5;
	x-=t;
	if (y &lt; 0) y += 7;
	y &gt;&gt;= 3; /* Arithmetic shift */
	return x+y;
}
</code></pre>
<p id="P700049702700000000000000003F3F6" data-uri="chapter02.xhtml#P700049702700000000000000003F3F6" class="pcalibre calibre3 pcalibre1">What are the values of <code id="P700049702700000000000000003F3F7" data-uri="chapter02.xhtml#P700049702700000000000000003F3F7" class="pcalibre1 calibre8 pcalibre">M</code> and <code id="P700049702700000000000000003F3F8" data-uri="chapter02.xhtml#P700049702700000000000000003F3F8" class="pcalibre1 calibre8 pcalibre">N</code>?</p>
</div></li></ol>
</section>
</section>
<section id="P70004970270000000000000000010C1" data-uri="chapter02.xhtml#P70004970270000000000000000010C1" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P700049702700000000000000003F3F9" data-uri="chapter02.xhtml#P700049702700000000000000003F3F9" epub:type="title"><span class="pcalibre label pcalibre1">2.3.8 </span>Final Thoughts on Integer Arithmetic</h1></header>
<p id="P700049702700000000000000003F3FA" data-uri="chapter02.xhtml#P700049702700000000000000003F3FA" class="pcalibre1 pcalibre calibre2">As we have seen, the “integer” arithmetic performed by computers is really a form of modular arithmetic. The finite word size used to represent numbers <span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000010C4" title="108" data-uri="chapter02.xhtml#P70004970270000000000000000010C4" epub:type="pagebreak"></span>limits the range of possible values, and the resulting operations can overflow. We have also seen that the two's-complement representation provides a clever way to represent both negative and positive values, while using the same bit-level implementations as are used to perform unsigned arithmetic—operations such as addition, subtraction, multiplication, and even division have either identical or very similar bit-level behaviors, whether the operands are in unsigned or two's-complement form.</p>
<p id="P700049702700000000000000003F3FB" data-uri="chapter02.xhtml#P700049702700000000000000003F3FB" class="pcalibre1 pcalibre calibre2">We have seen that some of the conventions in the C language can yield some surprising results, and these can be sources of bugs that are hard to recognize or understand. We have especially seen that the unsigned data type, while conceptually straightforward, can lead to behaviors that even experienced programmers do not expect. We have also seen that this data type can arise in unexpected ways—for example, when writing integer constants and when invoking library routines.</p>
<section id="P70004970270000000000000000010C6" data-uri="chapter02.xhtml#P70004970270000000000000000010C6" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="title5 pcalibre pcalibre1" id="P700049702700000000000000003F3FC" data-uri="chapter02.xhtml#P700049702700000000000000003F3FC" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">2.44</span> (solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP70004970270000000000000000017AE_split_001.xhtml#P7000497027000000000000000001C22">157</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P700049702700000000000000003F3FD" data-uri="chapter02.xhtml#P700049702700000000000000003F3FD">
<li class="general-problem pcalibre pcalibre1" id="P700049702700000000000000003F3FE" data-uri="chapter02.xhtml#P700049702700000000000000003F3FE">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003F3FF" data-uri="chapter02.xhtml#P700049702700000000000000003F3FF"><p id="P700049702700000000000000003F400" data-uri="chapter02.xhtml#P700049702700000000000000003F400" class="pcalibre calibre3 pcalibre1">Assume data type <code id="P700049702700000000000000003F401" data-uri="chapter02.xhtml#P700049702700000000000000003F401" class="pcalibre1 calibre8 pcalibre">int</code> is 32 bits long and uses a two's-complement representation for signed values. Right shifts are performed arithmetically for signed values and logically for unsigned values. The variables are declared and initialized as follows:</p>
<pre id="P700049702700000000000000003F402" data-uri="chapter02.xhtml#P700049702700000000000000003F402" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000003F403" data-uri="chapter02.xhtml#P700049702700000000000000003F403" class="calibre10 pcalibre pcalibre1">
int x = foo();	 /* Arbitrary value */
int y = bar();	 /* Arbitrary value */

unsigned ux = x;
unsigned uy = y;
</code></pre>
<p id="P700049702700000000000000003F404" data-uri="chapter02.xhtml#P700049702700000000000000003F404" class="pcalibre calibre3 pcalibre1">For each of the following C expressions, either (1) argue that it is true (evaluates to 1) for all values of <code id="P700049702700000000000000003F405" data-uri="chapter02.xhtml#P700049702700000000000000003F405" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F406" data-uri="chapter02.xhtml#P700049702700000000000000003F406" class="pcalibre1 calibre8 pcalibre">y</code>, or (2) give values of <code id="P700049702700000000000000003F407" data-uri="chapter02.xhtml#P700049702700000000000000003F407" class="pcalibre1 calibre8 pcalibre">x</code> and <code id="P700049702700000000000000003F408" data-uri="chapter02.xhtml#P700049702700000000000000003F408" class="pcalibre1 calibre8 pcalibre">y</code> for which it is false (evaluates to 0):</p>
<ol class="pcalibre ol_upper-alpha pcalibre1" id="P700049702700000000000000003F409" data-uri="chapter02.xhtml#P700049702700000000000000003F409">
<li id="P70004970270000000000000000010D5" data-uri="chapter02.xhtml#P70004970270000000000000000010D5" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F40A" data-uri="chapter02.xhtml#P700049702700000000000000003F40A" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F40B" data-uri="chapter02.xhtml#P700049702700000000000000003F40B" class="pcalibre1 calibre8 pcalibre">(x &gt; 0) | | (x-1 &lt; 0)</code></p></li>
<li id="P70004970270000000000000000010D8" data-uri="chapter02.xhtml#P70004970270000000000000000010D8" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F40C" data-uri="chapter02.xhtml#P700049702700000000000000003F40C" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F40D" data-uri="chapter02.xhtml#P700049702700000000000000003F40D" class="pcalibre1 calibre8 pcalibre">(x &amp; 7) != 7 | | (x&lt;&lt;29 &lt; 0)</code></p></li>
<li id="P70004970270000000000000000010DB" data-uri="chapter02.xhtml#P70004970270000000000000000010DB" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F40E" data-uri="chapter02.xhtml#P700049702700000000000000003F40E" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F40F" data-uri="chapter02.xhtml#P700049702700000000000000003F40F" class="pcalibre1 calibre8 pcalibre">(x * x) &gt;= 0</code></p></li>
<li id="P70004970270000000000000000010DE" data-uri="chapter02.xhtml#P70004970270000000000000000010DE" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F410" data-uri="chapter02.xhtml#P700049702700000000000000003F410" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F411" data-uri="chapter02.xhtml#P700049702700000000000000003F411" class="pcalibre1 calibre8 pcalibre">x &lt; 0 | | -x &lt;= 0</code></p></li>
<li id="P70004970270000000000000000010E1" data-uri="chapter02.xhtml#P70004970270000000000000000010E1" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F412" data-uri="chapter02.xhtml#P700049702700000000000000003F412" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F413" data-uri="chapter02.xhtml#P700049702700000000000000003F413" class="pcalibre1 calibre8 pcalibre">x &gt; 0 | | -x &gt; = 0</code></p></li>
<li id="P70004970270000000000000000010E4" data-uri="chapter02.xhtml#P70004970270000000000000000010E4" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F414" data-uri="chapter02.xhtml#P700049702700000000000000003F414" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F415" data-uri="chapter02.xhtml#P700049702700000000000000003F415" class="pcalibre1 calibre8 pcalibre">x+y == uy+ux</code></p></li>
<li id="P70004970270000000000000000010E7" data-uri="chapter02.xhtml#P70004970270000000000000000010E7" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003F416" data-uri="chapter02.xhtml#P700049702700000000000000003F416" class="pcalibre calibre3 pcalibre1"><code id="P700049702700000000000000003F417" data-uri="chapter02.xhtml#P700049702700000000000000003F417" class="pcalibre1 calibre8 pcalibre">x*~y + uy*ux == -x</code></p></li>
</ol></div></li></ol>
</section>
</section>
</section></body></html>
