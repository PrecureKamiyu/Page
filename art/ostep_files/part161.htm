<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Questions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part160.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part162.htm">下一个 &gt;</a></p><p class="s32" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">Questions</p><p class="s4" style="padding-top: 4pt;padding-left: 91pt;text-indent: -9pt;line-height: 90%;text-align: left;">• <span class="p">First let’s use a tiny address space to translate some addresses. Here’s a simple set of parameters with a few different random seeds; can you translate the addresses?</span></p><p class="s38" style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">segmentation.py -a 128 -p 512 -b 0 -l 20 -B 512 -L 20 -s 0</p><p class="s38" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">segmentation.py -a 128 -p 512 -b 0 -l 20 -B 512 -L 20 -s 1</p><p class="s38" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">segmentation.py -a 128 -p 512 -b 0 -l 20 -B 512 -L 20 -s 2</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;"><span class="s4">• </span>Now, let’s see if we understand this tiny address space we’ve con- structed (using the parameters from the question above). What is the highest legal virtual address in segment 0? What about the low- est legal virtual address in segment 1? What are the lowest and highest <i>illegal </i>addresses in this entire address space? Finally, how would you run <span class="s41">segmentation.py </span>with the <span class="s41">-A </span>flag to test if you are right?</p><p class="s4" style="padding-left: 91pt;text-indent: -9pt;line-height: 90%;text-align: justify;">• <span class="p">Let’s say we have a tiny 16-byte address space in a 128-byte physical memory. What base and bounds would you set up so as to get the simulator to generate the following translation results for the specified address stream: valid, valid, violation, ..., violation, valid, valid? Assume the following parameters:</span></p><p class="s38" style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">segmentation.py -a 16 -p 128</p><p class="s38" style="padding-left: 100pt;text-indent: 0pt;text-align: left;">-A 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</p><p class="s38" style="padding-left: 100pt;text-indent: 0pt;text-align: left;">--b0 ? --l0 ? --b1 ? --l1 ?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="p">Assuming we want to generate a problem where roughly 90% of the randomly-generated virtual addresses are valid (i.e., not segmenta- tion violations). How should you configure the simulator to do so? Which parameters are important?</span></p><p class="s4" style="padding-left: 91pt;text-indent: -9pt;line-height: 89%;text-align: justify;">• <span class="p">Can you run the simulator such that no virtual addresses are valid? How?</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="430" height="57" alt="image" src="Image_158.png"/></span></p><p class="s50" style="padding-top: 7pt;text-indent: 0pt;text-align: right;">17</p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part160.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part162.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
