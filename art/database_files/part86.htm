<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>3.2   SQL Data Definition</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part85.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part87.htm">下一个 &gt;</a></p><p class="s65" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">3.2   <span style=" color: #00AEEF;">SQL Data Definition</span></p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">The set of relations in a database are speciﬁed using a data-deﬁnition language (<span class="s44">DDL</span>). The <span class="s44">SQL DDL </span>allows speciﬁcation of not only a set of relations, but also information about each relation, including:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-left: 91pt;text-indent: 0pt;text-align: justify;">• <span class="s40">The schema for each relation.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: justify;">• <span class="s40">The types of values associated with each attribute.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s39" style="padding-top: 4pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">The integrity constraints.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">The set of indices to be maintained for each relation.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">The security and authorization information for each relation.</span></p><p class="s39" style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">• <span class="s40">The physical storage structure of each relation on disk.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: left;">We discuss here basic schema deﬁnition and basic types; we defer discussion of the other <span class="s44">SQL DDL </span>features to Chapter 4 and Chapter 5.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: left;">3.2.1 Basic Types</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">The <span class="s44">SQL </span>standard supports a variety of built-in types, including:</p><p style="padding-top: 6pt;padding-left: 123pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="s39">• </span><b>char</b>(<i>n</i>): A ﬁxed-length character string with user-speciﬁed length <i>n</i>. The full form,</p><p class="s46" style="padding-left: 139pt;text-indent: 0pt;line-height: 13pt;text-align: justify;">character<span class="p">, can be used instead.</span></p><p style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span class="s39">• </span><b>varchar</b>(<i>n</i>): A variable-length character string with user-speciﬁed maximum length</p><p style="padding-left: 139pt;text-indent: 0pt;line-height: 13pt;text-align: justify;"><i>n</i>. The full form, <b>character varying</b>, is equivalent.</p><p class="s46" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span>int<span class="p">: An integer (a ﬁnite subset of the integers that is machine dependent). The full form, </span>integer<span class="p">, is equivalent.</span></p><p class="s39" style="padding-top: 4pt;padding-left: 123pt;text-indent: 0pt;text-align: justify;">• <span class="s46">smallint</span><span class="p">: A small integer (a machine-dependent subset of the integer type).</span></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;line-height: 90%;text-align: justify;"><span class="s39">• </span><b>numeric</b>(<i>p</i>, <i>d</i>): A ﬁxed-point number with user-speciﬁed precision. The number consists of <i>p </i>digits (plus a sign), and <i>d </i>of the <i>p </i>digits are to the right of the decimal point. Thus, <b>numeric</b>(3,1) allows 44<span class="s83">.</span>5 to be stored exactly, but neither 444<span class="s83">.</span>5 nor</p><p style="padding-left: 139pt;text-indent: 0pt;line-height: 13pt;text-align: justify;">0<span class="s83">.</span>32 can be stored exactly in a ﬁeld of this type.</p><p class="s39" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;">• <span class="s46">real, double precision</span><span class="p">: Floating-point and double-precision ﬂoating-point numbers with machine-dependent precision.</span></p><p style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;text-align: justify;"><span class="s39">• </span><b>float</b>(<i>n</i>): A ﬂoating-point number with precision of at least <i>n </i>digits.</p><p style="padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">Additional types are covered in Section 4.5.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: right;">Each type may include a special value called the <span class="s63">null </span>value. A null value indicates an absent value that may exist but be unknown or that may not exist at all. In certain cases, we may wish to prohibit null values from being entered, as we shall see shortly. The <b>char </b>data type stores ﬁxed-length strings. Consider, for example, an attribute</p><p style="padding-left: 121pt;text-indent: 0pt;text-align: right;"><i>A </i>of type <b>char</b>(10). If we stored a string “Avi” in this attribute, seven spaces are ap- pended to the string to make it 10 characters long. In contrast, if attribute <i>B </i>were of type <b>varchar</b>(10), and we stored “Avi” in attribute <i>B</i>, no spaces would be added. When comparing two values of type <b>char</b>, if they are of diﬀerent lengths, extra spaces are au- tomatically attached to the shorter one to make them the same size before comparison.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">When comparing a <b>char </b>type with a <b>varchar </b>type, one may expect extra spaces to be added to the <b>varchar </b>type to make the lengths equal, before comparison; however, this may or may not be done, depending on the database system. As a result, even if</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">the same value “Avi” is stored in the attributes <i>A </i>and <i>B </i>above, a comparison <i>A</i>=<i>B </i>may return false. We recommend you always use the <b>varchar </b>type instead of the <b>char </b>type to avoid these problems.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;"><span class="s42">SQL </span><span class="s43">also provides the </span><b>nvarchar </b>type to store multilingual data using the Unicode representation. However, many databases allow Unicode (in the <span class="s44">UTF-8 </span>representation) to be stored even in <b>varchar </b>types.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">3.2.2 Basic Schema Definition</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">We deﬁne an <span class="s44">SQL </span>relation by using the <b>create table </b>command. The following command creates a relation <i>department </i>in the database:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 198pt;text-indent: 0pt;text-align: left;">create table <i>department</i></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_270.png"/></span></p><p style="padding-left: 225pt;text-indent: 0pt;text-align: left;">(<i>dept name </i><b>varchar </b>(20),</p><p class="s13" style="padding-left: 228pt;text-indent: 0pt;text-align: left;">building  <b>varchar </b><span class="p">(15),</span></p><p class="s13" style="padding-left: 228pt;text-indent: 0pt;text-align: left;">budget   <b>numeric </b><span class="p">(12,2),</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_271.png"/></span></p><p style="padding-left: 228pt;text-indent: 0pt;text-align: left;"><b>primary key </b>(<i>dept name</i>));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_272.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_273.png"/></span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">The relation created above has three attributes, <i>dept name</i>, which is a character string of maximum length 20, <i>building</i>, which is a character string of maximum length 15, and <i>budget</i>, which is a number with 12 digits in total, two of which are after the deci- mal point. The <b>create table </b>command also speciﬁes that the <i>dept name </i>attribute is the primary key of the <i>department </i>relation.</p><p style="padding-left: 106pt;text-indent: 0pt;text-align: justify;">The general form of the <b>create table </b>command is:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 79pt;text-indent: 0pt;text-align: center;">create table <i>r</i></p><p class="s13" style="padding-left: 24pt;text-indent: 0pt;line-height: 14pt;text-align: center;"><span class="p">(</span>A<span class="s130">1 </span>D<span class="s130">1</span><span class="s94">,</span></p><p class="s13" style="padding-left: 20pt;text-indent: 0pt;line-height: 13pt;text-align: center;">A<span class="s130">2 </span>D<span class="s130">2</span><span class="s94">,</span></p><p style="padding-left: 237pt;text-indent: 0pt;line-height: 12pt;text-align: left;">..., </p><p class="s15" style="text-indent: 0pt;text-align: left;">⟨         ⟩</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="padding-left: 20pt;text-indent: 0pt;line-height: 14pt;text-align: center;">A<span class="s145">n </span>D<span class="s145">n</span><span class="p">,</span></p><p style="padding-left: 242pt;text-indent: 0pt;line-height: 12pt;text-align: left;">integrity-constraint<span class="s98">1</span> ,</p><p class="s15" style="text-indent: 0pt;text-align: left;">⟨         ⟩</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 237pt;text-indent: 0pt;text-align: left;">… <span class="p">,</span></p><p style="padding-left: 242pt;text-indent: 0pt;text-align: left;">integrity-constraint<span class="s149">k </span>);</p><p style="padding-top: 10pt;padding-left: 88pt;text-indent: 0pt;line-height: 87%;text-align: justify;">where <i>r </i>is the name of the relation, each <i>A</i><span class="s97">i </span>is the name of an attribute in the schema of relation <i>r</i>, and <i>D</i><span class="s97">i </span>is the domain of attribute <i>A</i><span class="s97">i</span>; that is, <i>D</i><span class="s97">i </span>speciﬁes the type of attribute <i>A</i><span class="s97">i </span>along with optional constraints that restrict the set of allowed values for <i>A</i><span class="s97">i</span>.</p><p style="padding-left: 106pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">The semicolon shown at the end of the <b>create table </b>statements, as well as at the end</p><p style="padding-left: 106pt;text-indent: -17pt;text-align: justify;">of other <span class="s44">SQL </span>statements later in this chapter, is optional in many <span class="s44">SQL </span>implementations.</p><p class="s42" style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">SQL <span class="s43">supports a number of diﬀerent integrity constraints. In this section, we discuss only a few of them:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s39">• </span><b>primary key </b>(<i>A</i><span class="s145">j </span>, <i>A</i><span class="s145">j </span>, <span class="s15">… </span>, <i>A</i><span class="s145">j</span></p><p style="padding-top: 6pt;padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">): The <span class="s63">primary-key </span>speciﬁcation says that attributes</p><p class="s150" style="padding-left: 175pt;text-indent: 0pt;line-height: 2pt;text-align: left;">1  2     <i>m</i></p><p style="padding-left: 107pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><i>A</i><span class="s97">j </span>, <i>A</i><span class="s97">j </span>, <span class="s15">… </span>, <i>A</i><span class="s97">j</span></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 10pt;text-align: left;">form the primary key for the relation. The primary-key attributes</p><p class="s150" style="padding-left: 115pt;text-indent: 0pt;line-height: 6pt;text-align: left;">1  2     <i>m</i></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: 0pt;text-align: justify;">are required to be <i>nonnull </i>and <i>unique</i>; that is, no tuple can have a null value for a primary-key attribute, and no two tuples in the relation can be equal on all the primary-key attributes. Although the primary-key speciﬁcation is optional, it is gen- erally a good idea to specify a primary key for each relation.</p><p style="padding-top: 3pt;padding-left: 123pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s39">• </span><b>foreign key </b>(<i>A</i><span class="s145">k </span>, <i>A</i><span class="s145">k </span>, <span class="s15">… </span>, <i>A</i><span class="s145">k </span>) <b>references </b><i>s</i>: The <span class="s63">foreign key </span>speciﬁcation says that</p><p class="s150" style="padding-left: 63pt;text-indent: 0pt;line-height: 2pt;text-align: center;">1   2     <i>n</i></p><p style="padding-left: 139pt;text-indent: 0pt;line-height: 10pt;text-align: left;">the values of attributes (<i>A</i><span class="s97">k </span>, <i>A</i><span class="s97">k </span>, <span class="s15">… </span>, <i>A</i><span class="s97">k </span>) for any tuple in the relation must corre-</p><p class="s150" style="padding-left: 78pt;text-indent: 0pt;line-height: 3pt;text-align: center;">1   2     <i>n</i></p><p style="padding-left: 139pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">spond to values of the primary key attributes of some tuple in relation <i>s</i>.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_274.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_275.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_276.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_277.png"/></span></p><p style="padding-left: 139pt;text-indent: 14pt;text-align: justify;">Figure 3.1 presents a partial <span class="s44">SQL DDL </span>deﬁnition of the university database we use in the text. The deﬁnition of the <i>course </i>table has a declaration “<b>foreign key </b>(<i>dept name</i>) <b>references </b><i>department</i>”. This foreign-key declaration speciﬁes that for each course tuple, the department name speciﬁed in the tuple must exist in the pri- mary key attribute (<i>dept name</i>) of the <i>department </i>relation. Without this constraint, it is possible for a course to specify a nonexistent department name. Figure 3.1 also shows foreign-key constraints on tables <i>section</i>, <i>instructor </i>and <i>teaches</i>. Some database systems, including <span class="s44">M</span>y<span class="s44">SQL</span>, require an alternative syntax, “<b>foreign key </b>(<i>dept name</i>) <b>references </b><i>department</i>(<i>dept name</i>)”, where the referenced attributes in the referenced table are listed explicitly.</p><p style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><b>not null</b>: The <b>not null </b>constraint on an attribute speciﬁes that the null value is not allowed for that attribute; in other words, the constraint excludes the null value from the domain of that attribute. For example, in Figure 3.1, the <b>not null </b>con- straint on the <i>name </i>attribute of the <i>instructor </i>relation ensures that the name of an instructor cannot be null.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">More details on the foreign-key constraint, as well as on other integrity constraints that the <b>create table </b>command may include, are provided later, in Section 4.4.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_278.png"/></span></p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;"><span class="s42">SQL </span><span class="s43">prevents any update to the database that violates an integrity constraint. For example, if a newly inserted or modiﬁed tuple in a relation has null values for any primary-key attribute, or if the tuple has the same value on the primary-key attributes as does another tuple in the relation, </span><span class="s42">SQL </span><span class="s43">ﬂags an error and prevents the update. Sim- ilarly, an insertion of a </span><i>course </i>tuple with a <i>dept name </i>value that does not appear in the <i>department </i>relation would violate the foreign-key constraint on <i>course</i>, and <span class="s44">SQL </span>prevents such an insertion from taking place.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A newly created relation is empty initially. Inserting tuples into a relation, updating them, and deleting them are done by data manipulation statements <b>insert</b>, <b>update</b>, and <b>delete</b>, which are covered in Section 3.9.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">To remove a relation from an <span class="s44">SQL </span>database, we use the <b>drop table </b>command. The <b>drop table </b>command deletes all information about the dropped relation from the database. The command</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 84pt;text-indent: 0pt;text-align: center;">drop table <i>r</i><span class="p">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">is a more drastic action than</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 10pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">create table <i>department</i></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_279.png"/></span></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;">(<i>dept name  </i><b>varchar </b>(20),</p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">building   <b>varchar </b><span class="p">(15),</span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">budget   <b>numeric </b><span class="p">(12,2),</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_280.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>primary key </b>(<i>dept name</i>));</p><p class="s46" style="padding-top: 7pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">create table <i>course</i></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_281.png"/></span></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;">(<i>course id  </i><b>varchar </b>(7),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_282.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_283.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><i>title    </i><b>varchar </b>(50), <i>dept name  </i><b>varchar </b>(20), <i>credits   </i><b>numeric </b>(2,0), <b>primary key </b>(<i>course id</i>),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_284.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>foreign key </b>(<i>dept name</i>) <b>references </b><i>department</i>);</p><p class="s46" style="padding-top: 7pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">create table <i>instructor</i></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;">(<span class="s69">ID     </span><b>varchar </b>(5),</p><p class="s46" style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><i>name    </i>varchar <span class="p">(20) </span>not null<span class="p">,</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_285.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><i>dept name  </i><b>varchar </b>(20), <i>salary    </i><b>numeric </b>(8,2), <b>primary key </b>(<span class="s69">ID</span>),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_286.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>foreign key </b>(<i>dept name</i>) <b>references </b><i>department</i>);</p><p class="s46" style="padding-top: 7pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">create table <i>section</i></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_287.png"/></span></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;">(<i>course id  </i><b>varchar </b>(8),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_288.png"/></span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">sec id    <b>varchar </b><span class="p">(8),</span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">semester   <b>varchar </b><span class="p">(6),</span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">year    <b>numeric </b><span class="p">(4,0),</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_289.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_290.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_291.png"/></span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">building   <b>varchar </b><span class="p">(15), </span>room number <b>varchar </b><span class="p">(7), </span>time slot id  <b>varchar </b><span class="p">(4),</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_292.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_293.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>primary key </b>(<i>course id</i>, <i>sec id</i>, <i>semester</i>, <i>year</i>),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_294.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>foreign key </b>(<i>course id</i>) <b>references </b><i>course</i>);</p><p class="s46" style="padding-top: 7pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">create table <i>teaches</i></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;">(<span class="s69">ID     </span><b>varchar </b>(5),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_295.png"/></span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">course id  <b>varchar </b><span class="p">(8),</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_296.png"/></span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">sec id    <b>varchar </b><span class="p">(8),</span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">semester   <b>varchar </b><span class="p">(6),</span></p><p class="s13" style="padding-left: 149pt;text-indent: 0pt;text-align: left;">year    <b>numeric </b><span class="p">(4,0),</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_297.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_298.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>primary key </b>(<span class="s69">ID</span>, <i>course id</i>, <i>sec id</i>, <i>semester</i>, <i>year</i>),</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_299.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_300.png"/></span></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>foreign key </b>(<i>course id</i>, <i>sec id</i>, <i>semester</i>, <i>year</i>) <b>references </b><i>section</i>,</p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><b>foreign key </b>(<span class="s69">ID</span>) <b>references </b><i>instructor</i>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s73" style="padding-left: 129pt;text-indent: 0pt;text-align: left;">Figure 3.1 <span class="s151">SQL </span><span class="s152">data definition for part of the university database.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 4pt;padding-left: 84pt;text-indent: 0pt;text-align: center;"><a name="bookmark47">delete from </a><i>r</i><span class="p">;</span><a name="bookmark89">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">The latter retains relation <i>r</i>, but deletes all tuples in <i>r</i>. The former deletes not only all tuples of <i>r</i>, but also the schema for <i>r</i>. After <i>r </i>is dropped, no tuples can be inserted into <i>r </i>unless it is re-created with the <b>create table </b>command.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">We use the <b>alter table </b>command to add attributes to an existing relation. All tuples in the relation are assigned <i>null </i>as the value for the new attribute. The form of the <b>alter table </b>command is</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 84pt;text-indent: 0pt;text-align: center;">alter table <i>r </i>add <i>A D</i><span class="p">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">where <i>r </i>is the name of an existing relation, <i>A </i>is the name of the attribute to be added, and <i>D </i>is the type of the added attribute. We can drop attributes from a relation by the command</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 84pt;text-indent: 0pt;text-align: center;">alter table <i>r </i>drop <i>A</i><span class="p">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">where <i>r </i>is the name of an existing relation, and <i>A </i>is the name of an attribute of the relation. Many database systems do not support dropping of attributes, although they will allow an entire table to be dropped.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part85.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part87.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
