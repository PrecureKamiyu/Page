<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Scheduling: Introduction</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part63.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part65.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 3pt;padding-left: 174pt;text-indent: 0pt;text-align: left;">Scheduling: Introduction</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">By now low-level <b>mechanisms </b>of running processes (e.g., context switch- ing) should be clear; if they are not, go back a chapter or two, and read the description of how that stuff works again. However, we have yet to un- derstand the high-level <b>policies </b>that an OS scheduler employs. We will now do just that, presenting a series of <b>scheduling policies </b>(sometimes called <b>disciplines</b>) that various smart and hard-working people have de- veloped over the years.</p><p style="padding-left: 41pt;text-indent: 11pt;line-height: 89%;text-align: justify;">The origins of scheduling, in fact, predate computer systems; early approaches were taken from the field of operations management and ap- plied to computers. This reality should be no surprise: assembly lines and many other human endeavors also require scheduling, and many of the same concerns exist therein, including a laser-like desire for efficiency. And thus, our problem:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;">T<span class="s7">HE </span>C<span class="s7">RUX</span>: H<span class="s7">OW </span>T<span class="s7">O </span>D<span class="s7">EVELOP </span>S<span class="s7">CHEDULING </span>P<span class="s7">OLICY</span></p><p style="padding-left: 9pt;text-indent: 11pt;line-height: 89%;text-align: justify;">How should we develop a basic framework for thinking about scheduling policies? What are the key assumptions? What metrics are important? What basic approaches have been used in the earliest of com- puter systems?</p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part65.htm">7.1 Workload Assumptions</a><a class="toc1" href="part66.htm">a fully-operational scheduling discipline1.</a><a class="toc0" href="part67.htm">7.2 Scheduling Metrics</a><a class="toc0" href="part68.htm">7.3 First In, First Out (FIFO)</a><a class="toc0" href="part69.htm">7.4 Shortest Job First (SJF)</a><a class="toc0" href="part70.htm">7.5 Shortest Time-to-Completion First (STCF)</a><a class="toc0" href="part71.htm">7.6 Round Robin</a><a class="toc0" href="part72.htm">7.7 Incorporating I/O</a><a class="toc0" href="part73.htm">7.8 No More Oracle</a><a class="toc0" href="part74.htm">7.9 Summary</a><a class="toc0" href="part75.htm">References</a><a class="toc0" href="part76.htm">Homework</a><a class="toc1" href="part77.htm">Questions</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part63.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part65.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
