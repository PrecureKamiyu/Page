<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>Chapter 8 Exceptional Control Flow</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section class="pcalibre halftitlepage pcalibre1" id="P700049702700000000000000000666E" epub:type="chapter"><header class="calibre24 pcalibre pcalibre1"><h1 class="title4 pcalibre pcalibre1" id="P7000497027000000000000000044E58" data-uri="chapter08.xhtml#P7000497027000000000000000044E58" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006670" title="721" data-uri="chapter08.xhtml#P7000497027000000000000000006670" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre number1 pcalibre1">8 </span>Exceptional Control Flow</h1></header>

<section class="pcalibre halftitlepage pcalibre1" id="d9e141296">

<nav class="pcalibre halftitlepage pcalibre1" id="P7000497027000000000000000044E59" data-uri="chapter08.xhtml#P7000497027000000000000000044E59" epub:type="toc">
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000044E5A" data-uri="chapter08.xhtml#P7000497027000000000000000044E5A">
<ol class="tocentrylist pcalibre pcalibre1" id="P7000497027000000000000000044E5B" data-uri="chapter08.xhtml#P7000497027000000000000000044E5B">

<li id="P7000497027000000000000000044E5C" data-uri="chapter08.xhtml#P7000497027000000000000000044E5C" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E5D" data-uri="chapter08.xhtml#P7000497027000000000000000044E5D" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000066A6.xhtml#P70004970270000000000000000066A6"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.1 </span>Exceptions 723</span></a></p></li>
<li id="P7000497027000000000000000044E5E" data-uri="chapter08.xhtml#P7000497027000000000000000044E5E" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E5F" data-uri="chapter08.xhtml#P7000497027000000000000000044E5F" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000067D4.xhtml#P70004970270000000000000000067D4"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.2 </span>Processes 732</span></a></p></li>
<li id="P7000497027000000000000000044E60" data-uri="chapter08.xhtml#P7000497027000000000000000044E60" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E61" data-uri="chapter08.xhtml#P7000497027000000000000000044E61" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000683E.xhtml#P700049702700000000000000000683E"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.3 </span>System Call Error Handling 737</span></a></p></li>
<li id="P7000497027000000000000000044E62" data-uri="chapter08.xhtml#P7000497027000000000000000044E62" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E63" data-uri="chapter08.xhtml#P7000497027000000000000000044E63" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000685D.xhtml#P700049702700000000000000000685D"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.4 </span>Process Control 738</span></a></p></li>
<li id="P7000497027000000000000000044E64" data-uri="chapter08.xhtml#P7000497027000000000000000044E64" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E65" data-uri="chapter08.xhtml#P7000497027000000000000000044E65" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006A2D.xhtml#P7000497027000000000000000006A2D"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.5 </span>Signals 756</span></a></p></li>
<li id="P7000497027000000000000000044E66" data-uri="chapter08.xhtml#P7000497027000000000000000044E66" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E67" data-uri="chapter08.xhtml#P7000497027000000000000000044E67" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006DFA.xhtml#P7000497027000000000000000006DFA"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.6 </span>Nonlocal Jumps 781</span></a></p></li>
<li id="P7000497027000000000000000044E68" data-uri="chapter08.xhtml#P7000497027000000000000000044E68" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P7000497027000000000000000044E69" data-uri="chapter08.xhtml#P7000497027000000000000000044E69" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006E64.xhtml#P7000497027000000000000000006E64"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.7 </span>Tools for Manipulating Processes 786</span></a></p></li>
</ol>
</div>
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000044E6A" data-uri="chapter08.xhtml#P7000497027000000000000000044E6A">
<ol class="tocentrylist pcalibre pcalibre1" id="P7000497027000000000000000044E6B" data-uri="chapter08.xhtml#P7000497027000000000000000044E6B">
<li class="tocpreface pcalibre pcalibre1" id="P7000497027000000000000000044E6C" data-uri="chapter08.xhtml#P7000497027000000000000000044E6C"><p id="P7000497027000000000000000044E6D" data-uri="chapter08.xhtml#P7000497027000000000000000044E6D" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006E75.xhtml#P7000497027000000000000000006E75"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">8.8 </span><span class="pcalibre label pcalibre1">Summary</span> 787</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P7000497027000000000000000044E6E" data-uri="chapter08.xhtml#P7000497027000000000000000044E6E"><p id="P7000497027000000000000000044E6F" data-uri="chapter08.xhtml#P7000497027000000000000000044E6F" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006E7E.xhtml#P7000497027000000000000000006E7E"><span class="pcalibre pcalibre1" epub:type="title">Bibliographic Notes 787</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P7000497027000000000000000044E70" data-uri="chapter08.xhtml#P7000497027000000000000000044E70"><p id="P7000497027000000000000000044E71" data-uri="chapter08.xhtml#P7000497027000000000000000044E71" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006E81.xhtml#P7000497027000000000000000006E81"><span class="pcalibre pcalibre1" epub:type="title">Homework Problems 788</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P7000497027000000000000000044E72" data-uri="chapter08.xhtml#P7000497027000000000000000044E72"><p id="P7000497027000000000000000044E73" data-uri="chapter08.xhtml#P7000497027000000000000000044E73" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000006F9A.xhtml#P7000497027000000000000000006F9A"><span class="pcalibre pcalibre1" epub:type="title">Solutions to Practice Problems 795</span></a></p></li>
</ol>
</div>
</nav>

<section id="P7000497027000000000000000044E74" data-uri="chapter08.xhtml#P7000497027000000000000000044E74" epub:type="introduction" class="introduction pcalibre pcalibre1">
<p id="P7000497027000000000000000044E75" data-uri="chapter08.xhtml#P7000497027000000000000000044E75" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000668E" title="722" data-uri="chapter08.xhtml#P700049702700000000000000000668E" epub:type="pagebreak"></span>From the time you first apply power to a processor until the time you shut it off, the program counter assumes a sequence of values</p>
<div class="informalequation pcalibre pcalibre1" id="P7000497027000000000000000044E76" data-uri="chapter08.xhtml#P7000497027000000000000000044E76">
<m:math display="block" alttext="" data-uri="" altimg-width="140" altimg-height="15" altimg="../images/ch08-eq1.png"><m:mrow><m:msub><m:mi>a</m:mi><m:mn>0</m:mn></m:msub><m:mo>,</m:mo><m:msub><m:mi>a</m:mi><m:mn>1</m:mn></m:msub><m:mo>,</m:mo><m:mn>...</m:mn><m:mo>,</m:mo><m:msub><m:mi>a</m:mi><m:mrow><m:mi>n</m:mi><m:mo>−</m:mo><m:mn>1</m:mn></m:mrow></m:msub></m:mrow></m:math>
</div>

<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000044E77" data-uri="chapter08.xhtml#P7000497027000000000000000044E77">where each <i class="calibre5 pcalibre pcalibre1">a<sub class="calibre238 pcalibre pcalibre1">k</sub></i> is the address of some corresponding instruction <i class="calibre5 pcalibre pcalibre1">I<sub class="calibre238 pcalibre pcalibre1">k</sub></i>. Each transition from <i class="calibre5 pcalibre pcalibre1">a<sub class="calibre238 pcalibre pcalibre1">k</sub></i> to <var class="calibre5 pcalibre pcalibre1">a</var><sub class="calibre238 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var>+1</sub> is called a <i class="calibre5 pcalibre pcalibre1">control transfer</i>. A sequence of such control transfers is called the <i class="calibre5 pcalibre pcalibre1">flow of control</i>, or <i class="calibre5 pcalibre pcalibre1">control flow</i>, of the processor.</p>
<p id="P7000497027000000000000000044E78" data-uri="chapter08.xhtml#P7000497027000000000000000044E78" class="pcalibre1 pcalibre calibre2">The simplest kind of control flow is a “smooth” sequence where each <var class="calibre5 pcalibre pcalibre1">I</var><sub class="calibre238 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var></sub> and <var class="calibre5 pcalibre pcalibre1">I</var><sub class="calibre238 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var>+1</sub> are adjacent in memory. Typically, abrupt changes to this smooth flow, where <var class="calibre5 pcalibre pcalibre1">I</var><sub class="calibre238 pcalibre pcalibre1"><var class="calibre5 pcalibre pcalibre1">k</var>+1</sub> is not adjacent to <i class="calibre5 pcalibre pcalibre1">I<sub class="calibre238 pcalibre pcalibre1">k</sub></i>, are caused by familiar program instructions such as jumps, calls, and returns. Such instructions are necessary mechanisms that allow programs to react to changes in internal program state represented by program variables.</p>
<p id="P7000497027000000000000000044E79" data-uri="chapter08.xhtml#P7000497027000000000000000044E79" class="pcalibre1 pcalibre calibre2">But systems must also be able to react to changes in system state that are not captured by internal program variables and are not necessarily related to the execution of the program. For example, a hardware timer goes off at regular intervals and must be dealt with. Packets arrive at the network adapter and must be stored in memory. Programs request data from a disk and then sleep until they are notified that the data are ready. Parent processes that create child processes must be notified when their children terminate.</p>
<p id="P7000497027000000000000000044E7A" data-uri="chapter08.xhtml#P7000497027000000000000000044E7A" class="pcalibre1 pcalibre calibre2">Modern systems react to these situations by making abrupt changes in the control flow. In general, we refer to these abrupt changes as <i class="calibre5 pcalibre pcalibre1">exceptional control flow (ECF</i>). ECF occurs at all levels of a computer system. For example, at the hardware level, events detected by the hardware trigger abrupt control transfers to exception handlers. At the operating systems level, the kernel transfers control from one user process to another via context switches. At the application level, a process can send a <i class="calibre5 pcalibre pcalibre1">signal</i> to another process that abruptly transfers control to a signal handler in the recipient. An individual program can react to errors by sidestepping the usual stack discipline and making nonlocal jumps to arbitrary locations in other functions.</p>
<p id="P7000497027000000000000000044E7B" data-uri="chapter08.xhtml#P7000497027000000000000000044E7B" class="pcalibre1 pcalibre calibre2">As programmers, there are a number of reasons why it is important for you to understand ECF:</p>
<ul id="P7000497027000000000000000044E7C" data-uri="chapter08.xhtml#P7000497027000000000000000044E7C" class="calibre28 pcalibre pcalibre1">
<li id="P7000497027000000000000000044E7D" data-uri="chapter08.xhtml#P7000497027000000000000000044E7D" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044E7E" data-uri="chapter08.xhtml#P7000497027000000000000000044E7E" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Understanding ECF will help you understand important systems concepts. </span>ECF is the basic mechanism that operating systems use to implement I/O, processes, and virtual memory. Before you can really understand these important ideas, you need to understand ECF.</p></li>
<li id="P7000497027000000000000000044E7F" data-uri="chapter08.xhtml#P7000497027000000000000000044E7F" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044E80" data-uri="chapter08.xhtml#P7000497027000000000000000044E80" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Understanding ECF will help you understand how applications interact with the operating system. </span>Applications request services from the operating system by using a form of ECF known as a <i class="calibre5 pcalibre pcalibre1">trap</i> or <i class="calibre5 pcalibre pcalibre1">system call</i>. For example, writing data to a disk, reading data from a network, creating a new process, and terminating the current process are all accomplished by application programs invoking system calls. Understanding the basic system call mechanism will help you understand how these services are provided to applications.</p></li>
<li id="P7000497027000000000000000044E81" data-uri="chapter08.xhtml#P7000497027000000000000000044E81" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044E82" data-uri="chapter08.xhtml#P7000497027000000000000000044E82" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Understanding ECF will help you write interesting new application programs. </span>The operating system provides application programs with powerful ECF <span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000669C" title="723" data-uri="chapter08.xhtml#P700049702700000000000000000669C" epub:type="pagebreak"></span>mechanisms for creating new processes, waiting for processes to terminate, notifying other processes of exceptional events in the system, and detecting and responding to these events. If you understand these ECF mechanisms, then you can use them to write interesting programs such as Unix shells and Web servers.</p></li>
<li id="P7000497027000000000000000044E83" data-uri="chapter08.xhtml#P7000497027000000000000000044E83" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044E84" data-uri="chapter08.xhtml#P7000497027000000000000000044E84" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Understanding ECF will help you understand concurrency. </span>ECF is a basic mechanism for implementing concurrency in computer systems. The following are all examples of concurrency in action: an exception handler that interrupts the execution of an application program; processes and threads whose execution overlap in time; and a signal handler that interrupts the execution of an application program. Understanding ECF is a first step to understanding concurrency. We will return to study it in more detail in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000008060.xhtml#P7000497027000000000000000008060"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">12</span></a>.</p></li>
<li id="P7000497027000000000000000044E85" data-uri="chapter08.xhtml#P7000497027000000000000000044E85" class="calibre12 pcalibre pcalibre1"><p id="P7000497027000000000000000044E86" data-uri="chapter08.xhtml#P7000497027000000000000000044E86" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Understanding ECF will help you understand how software exceptions work. </span>Languages such as C++ and Java provide software exception mechanisms via <code id="P7000497027000000000000000044E87" data-uri="chapter08.xhtml#P7000497027000000000000000044E87" class="calibre25 pcalibre pcalibre1">try, catch</code>, and <code id="P7000497027000000000000000044E88" data-uri="chapter08.xhtml#P7000497027000000000000000044E88" class="calibre25 pcalibre pcalibre1">throw</code> statements. Software exceptions allow the program to make <i class="calibre5 pcalibre pcalibre1">nonlocal</i> jumps (i.e., jumps that violate the usual call/return stack discipline) in response to error conditions. Nonlocal jumps are a form of application-level ECF and are provided in C via the <code id="P7000497027000000000000000044E89" data-uri="chapter08.xhtml#P7000497027000000000000000044E89" class="calibre25 pcalibre pcalibre1">setjmp</code> and <code id="P7000497027000000000000000044E8A" data-uri="chapter08.xhtml#P7000497027000000000000000044E8A" class="calibre25 pcalibre pcalibre1">longjmp</code> functions. Understanding these low-level functions will help you understand how higher-level software exceptions can be implemented.</p></li>
</ul>
<p id="P7000497027000000000000000044E8B" data-uri="chapter08.xhtml#P7000497027000000000000000044E8B" class="pcalibre1 pcalibre calibre2">Up to this point in your study of systems, you have learned how applications interact with the hardware. This chapter is pivotal in the sense that you will begin to learn how your applications interact with the operating system. Interestingly, these interactions all revolve around ECF. We describe the various forms of ECF that exist at all levels of a computer system. We start with exceptions, which lie at the intersection of the hardware and the operating system. We also discuss system calls, which are exceptions that provide applications with entry points into the operating system. We then move up a level of abstraction and describe processes and signals, which lie at the intersection of applications and the operating system. Finally, we discuss nonlocal jumps, which are an application-level form of ECF.</p>
</section>

</section>

<!--EOF:P70004970270000000000000000066A6-->
<!--EOF:P70004970270000000000000000067D4-->
<!--EOF:P700049702700000000000000000683E-->
<!--EOF:P700049702700000000000000000685D-->
<!--EOF:P7000497027000000000000000006A2D-->
<!--EOF:P7000497027000000000000000006DFA-->
<!--EOF:P7000497027000000000000000006E64-->



<!--EOF:P7000497027000000000000000006E75-->
<!--EOF:P7000497027000000000000000006E7E-->
<!--EOF:P7000497027000000000000000006E81-->
<!--EOF:P7000497027000000000000000006F9A-->



</section></body></html>
