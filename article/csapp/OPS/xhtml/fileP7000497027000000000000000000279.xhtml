<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>Chapter 2 Representing and Manipulating Information</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section class="pcalibre halftitlepage pcalibre1" id="P7000497027000000000000000000279" epub:type="chapter"><header class="calibre24 pcalibre pcalibre1"><h1 class="title4 pcalibre pcalibre1" id="P700049702700000000000000003E666" data-uri="chapter02.xhtml#P700049702700000000000000003E666" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000027B" title="31" data-uri="chapter02.xhtml#P700049702700000000000000000027B" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre number1 pcalibre1">2 </span>Representing and Manipulating Information</h1></header>
<section class="pcalibre halftitlepage pcalibre1" id="d9e9195">
<nav class="pcalibre halftitlepage pcalibre1" id="P700049702700000000000000003E667" data-uri="chapter02.xhtml#P700049702700000000000000003E667" epub:type="toc">
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003E668" data-uri="chapter02.xhtml#P700049702700000000000000003E668">
<ol class="tocentrylist pcalibre pcalibre1" id="P700049702700000000000000003E669" data-uri="chapter02.xhtml#P700049702700000000000000003E669">
<li id="P700049702700000000000000003E66A" data-uri="chapter02.xhtml#P700049702700000000000000003E66A" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P700049702700000000000000003E66B" data-uri="chapter02.xhtml#P700049702700000000000000003E66B" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000002AD_split_000.xhtml#P70004970270000000000000000002AD"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">2.1 </span>Information Storage </span><span class="pcalibre pcalibre1" epub:type="pagebreak">34</span></a></p></li>
<li id="P700049702700000000000000003E66C" data-uri="chapter02.xhtml#P700049702700000000000000003E66C" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P700049702700000000000000003E66D" data-uri="chapter02.xhtml#P700049702700000000000000003E66D" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000077D_split_000.xhtml#P700049702700000000000000000077D"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">2.2 </span>Integer Representations </span><span class="pcalibre pcalibre1" epub:type="pagebreak">59</span></a></p></li>
<li id="P700049702700000000000000003E66E" data-uri="chapter02.xhtml#P700049702700000000000000003E66E" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P700049702700000000000000003E66F" data-uri="chapter02.xhtml#P700049702700000000000000003E66F" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000CB3_split_000.xhtml#P7000497027000000000000000000CB3"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">2.3 </span>Integer Arithmetic </span><span class="pcalibre pcalibre1" epub:type="pagebreak">84</span></a></p></li>
<li id="P700049702700000000000000003E670" data-uri="chapter02.xhtml#P700049702700000000000000003E670" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P700049702700000000000000003E671" data-uri="chapter02.xhtml#P700049702700000000000000003E671" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000010EA.xhtml#P70004970270000000000000000010EA"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">2.4 </span>Floating Point </span><span class="pcalibre pcalibre1" epub:type="pagebreak">108</span></a></p></li>
</ol>
</div>
<div class="edition pcalibre pcalibre1" id="P700049702700000000000000003E672" data-uri="chapter02.xhtml#P700049702700000000000000003E672">
<ol class="tocentrylist pcalibre pcalibre1" id="P700049702700000000000000003E673" data-uri="chapter02.xhtml#P700049702700000000000000003E673">
<li class="tocpreface pcalibre pcalibre1" id="P700049702700000000000000003E674" data-uri="chapter02.xhtml#P700049702700000000000000003E674"><p id="P700049702700000000000000003E675" data-uri="chapter02.xhtml#P700049702700000000000000003E675" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001479.xhtml#P7000497027000000000000000001479"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">2.5 </span><span class="pcalibre label pcalibre1">Summary</span> </span><span class="pcalibre pcalibre1" epub:type="pagebreak">126</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P700049702700000000000000003E676" data-uri="chapter02.xhtml#P700049702700000000000000003E676"><p id="P700049702700000000000000003E677" data-uri="chapter02.xhtml#P700049702700000000000000003E677" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001493.xhtml#P7000497027000000000000000001493"><span class="pcalibre pcalibre1" epub:type="title">Bibliographic Notes </span><span class="pcalibre pcalibre1" epub:type="pagebreak">127</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P700049702700000000000000003E678" data-uri="chapter02.xhtml#P700049702700000000000000003E678"><p id="P700049702700000000000000003E679" data-uri="chapter02.xhtml#P700049702700000000000000003E679" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001498.xhtml#P7000497027000000000000000001498"><span class="pcalibre pcalibre1" epub:type="title">Homework Problems	</span><span class="pcalibre pcalibre1" epub:type="pagebreak">128</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P700049702700000000000000003E67A" data-uri="chapter02.xhtml#P700049702700000000000000003E67A"><p id="P700049702700000000000000003E67B" data-uri="chapter02.xhtml#P700049702700000000000000003E67B" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000017AE_split_000.xhtml#P70004970270000000000000000017AE"><span class="pcalibre pcalibre1" epub:type="title">Solutions to Practice Problems </span>143</a></p></li>
</ol>
</div>
</nav>

<section id="P700049702700000000000000003E67C" data-uri="chapter02.xhtml#P700049702700000000000000003E67C" epub:type="introduction" class="introduction pcalibre pcalibre1">
<p id="P700049702700000000000000003E67D" data-uri="chapter02.xhtml#P700049702700000000000000003E67D" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000000293" title="32" data-uri="chapter02.xhtml#P7000497027000000000000000000293" epub:type="pagebreak"></span>Modern computers store and process information represented as two-valued signals. These lowly binary digits, or <i class="calibre5 pcalibre pcalibre1">bits</i>, form the basis of the digital revolution. The familiar decimal, or base-10, representation has been in use for over 1,000 years, having been developed in India, improved by Arab mathematicians in the 12th century, and brought to the West in the 13th century by the Italian mathematician Leonardo Pisano (ca. 1170 to ca. 1250), better known as Fibonacci. Using decimal notation is natural for 10-fingered humans, but binary values work better when building machines that store and process information. Two-valued signals can readily be represented, stored, and transmittedâ€”for example, as the presence or absence of a hole in a punched card, as a high or low voltage on a wire, or as a magnetic domain oriented clockwise or counterclockwise. The electronic circuitry for storing and performing computations on two-valued signals is very simple and reliable, enabling manufacturers to integrate millions, or even billions, of such circuits on a single silicon chip.</p>
<p id="P700049702700000000000000003E67E" data-uri="chapter02.xhtml#P700049702700000000000000003E67E" class="pcalibre1 pcalibre calibre2">In isolation, a single bit is not very useful. When we group bits together and apply some <i class="calibre5 pcalibre pcalibre1">interpretation</i> that gives meaning to the different possible bit patterns, however, we can represent the elements of any finite set. For example, using a binary number system, we can use groups of bits to encode nonnegative numbers. By using a standard character code, we can encode the letters and symbols in a document. We cover both of these encodings in this chapter, as well as encodings to represent negative numbers and to approximate real numbers.</p>
<p id="P700049702700000000000000003E67F" data-uri="chapter02.xhtml#P700049702700000000000000003E67F" class="pcalibre1 pcalibre calibre2">We consider the three most important representations of numbers. <i class="calibre5 pcalibre pcalibre1">Unsigned</i> encodings are based on traditional binary notation, representing numbers greater than or equal to 0. <i class="calibre5 pcalibre pcalibre1">Two's-complement</i> encodings are the most common way to represent <i class="calibre5 pcalibre pcalibre1">signed</i> integers, that is, numbers that may be either positive or negative. <i class="calibre5 pcalibre pcalibre1">Floating-point</i> encodings are a base-2 version of scientific notation for representing real numbers. Computers implement arithmetic operations, such as addition and multiplication, with these different representations, similar to the corresponding operations on integers and real numbers.</p>
<p id="P700049702700000000000000003E680" data-uri="chapter02.xhtml#P700049702700000000000000003E680" class="pcalibre1 pcalibre calibre2">Computer representations use a limited number of bits to encode a number, and hence some operations can <i class="calibre5 pcalibre pcalibre1">overflow</i> when the results are too large to be represented. This can lead to some surprising results. For example, on most of today's computers (those using a 32-bit representation for data type int), computing the expression</p>
<pre id="P700049702700000000000000003E681" data-uri="chapter02.xhtml#P700049702700000000000000003E681" class="calibre26 pcalibre pcalibre1"><code id="P700049702700000000000000003E682" data-uri="chapter02.xhtml#P700049702700000000000000003E682" class="pcalibre1 calibre8 pcalibre">
200 * 300 * 400 * 500
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003E683" data-uri="chapter02.xhtml#P700049702700000000000000003E683">yields â€“884,901,888. This runs counter to the properties of integer arithmeticâ€”computing the product of a set of positive numbers has yielded a negative result.</p>
<p id="P700049702700000000000000003E684" data-uri="chapter02.xhtml#P700049702700000000000000003E684" class="pcalibre1 pcalibre calibre2">On the other hand, integer computer arithmetic satisfies many of the familiar properties of true integer arithmetic. For example, multiplication is associative and commutative, so that computing any of the following C expressions yields â€“884,901,888:</p>
<pre id="P700049702700000000000000003E685" data-uri="chapter02.xhtml#P700049702700000000000000003E685" class="calibre26 pcalibre pcalibre1"><code id="P700049702700000000000000003E686" data-uri="chapter02.xhtml#P700049702700000000000000003E686" class="pcalibre1 calibre8 pcalibre">
(500 * 400) * (300 * 200)
((500 * 400) * 300) * 200
((200 * 500) * 300) * 400
400 * (200 * (300 * 500))
</code></pre>
<p id="P700049702700000000000000003E687" data-uri="chapter02.xhtml#P700049702700000000000000003E687" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000029E" title="33" data-uri="chapter02.xhtml#P700049702700000000000000000029E" epub:type="pagebreak"></span>The computer might not generate the expected result, but at least it is consistent!</p>
<p id="P700049702700000000000000003E688" data-uri="chapter02.xhtml#P700049702700000000000000003E688" class="pcalibre1 pcalibre calibre2">Floating-point arithmetic has altogether different mathematical properties. The product of a set of positive numbers will always be positive, although overflow will yield the special value +âˆž. Floating-point arithmetic is not associative due to the finite precision of the representation. For example, the C expression <code id="P700049702700000000000000003E689" data-uri="chapter02.xhtml#P700049702700000000000000003E689" class="calibre25 pcalibre pcalibre1">(3.14+1e20)-1e20</code> will evaluate to 0.0 on most machines, while <code id="P700049702700000000000000003E68A" data-uri="chapter02.xhtml#P700049702700000000000000003E68A" class="calibre25 pcalibre pcalibre1">3.14+(1e20â€“1e20)</code> will evaluate to 3.14. The different mathematical properties of integer versus. floating-point arithmetic stem from the difference in how they handle the finiteness of their representationsâ€”integer representations can encode a comparatively small range of values, but do so precisely, while floating-point representations can encode a wide range of values, but only approximately.</p>
<p id="P700049702700000000000000003E68B" data-uri="chapter02.xhtml#P700049702700000000000000003E68B" class="pcalibre1 pcalibre calibre2">By studying the actual number representations, we can understand the ranges of values that can be represented and the properties of the different arithmetic operations. This understanding is critical to writing programs that work correctly over the full range of numeric values and that are portable across different combinations of machine, operating system, and compiler. As we will describe, a number of computer security vulnerabilities have arisen due to some of the subtleties of computer arithmetic. Whereas in an earlier era program bugs would only inconvenience people when they happened to be triggered, there are now legions of hackers who try to exploit any bug they can find to obtain unauthorized access to other people's systems. This puts a higher level of obligation on programmers to understand how their programs work and how they can be made to behave in undesirable ways.</p>
<p id="P700049702700000000000000003E68C" data-uri="chapter02.xhtml#P700049702700000000000000003E68C" class="pcalibre1 pcalibre calibre2">Computers use several different binary representations to encode numeric values. You will need to be familiar with these representations as you progress into machine-level programming in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000001DCE.xhtml#P7000497027000000000000000001DCE"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">3</span></a>. We describe these encodings in this chapter and show you how to reason about number representations.</p>
<p id="P700049702700000000000000003E68D" data-uri="chapter02.xhtml#P700049702700000000000000003E68D" class="pcalibre1 pcalibre calibre2">We derive several ways to perform arithmetic operations by directly manipulating the bit-level representations of numbers. Understanding these techniques will be important for understanding the machine-level code generated by compilers in their attempt to optimize the performance of arithmetic expression evaluation.</p>
<p id="P700049702700000000000000003E68E" data-uri="chapter02.xhtml#P700049702700000000000000003E68E" class="pcalibre1 pcalibre calibre2">Our treatment of this material is based on a core set of mathematical principles. We start with the basic definitions of the encodings and then derive such properties as the range of representable numbers, their bit-level representations, and the properties of the arithmetic operations. We believe it is important for you to examine the material from this abstract viewpoint, because programmers need to have a clear understanding of how computer arithmetic relates to the more familiar integer and real arithmetic.</p>
<p id="P700049702700000000000000003E68F" data-uri="chapter02.xhtml#P700049702700000000000000003E68F" class="pcalibre1 pcalibre calibre2">The C++ programming language is built upon C, using the exact same numeric representations and operations. Everything said in this chapter about C also holds for C++. The Java language definition, on the other hand, created a new set of standards for numeric representations and operations. Whereas the C standards are designed to allow a wide range of implementations, the Java standard is quite specific on the formats and encodings of data. We highlight the representations and operations supported by Java at several places in the chapter.</p>
<aside class="sidebar pcalibre5 pcalibre" id="P70004970270000000000000000002A7" data-uri="chapter02.xhtml#P70004970270000000000000000002A7"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title7 pcalibre pcalibre1" id="P700049702700000000000000003E690" data-uri="chapter02.xhtml#P700049702700000000000000003E690" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000002A9" title="34" data-uri="chapter02.xhtml#P70004970270000000000000000002A9" epub:type="pagebreak"></span><span class="label3 pcalibre pcalibre1">Aside </span>How to read this chapter</h1></header>
<p id="P700049702700000000000000003E691" data-uri="chapter02.xhtml#P700049702700000000000000003E691" class="calibre13 pcalibre pcalibre1">In this chapter, we examine the fundamental properties of how numbers and other forms of data are represented on a computer and the properties of the operations that computers perform on these data. This requires us to delve into the language of mathematics, writing formulas and equations and showing derivations of important properties.</p>
<p id="P700049702700000000000000003E692" data-uri="chapter02.xhtml#P700049702700000000000000003E692" class="calibre13 pcalibre pcalibre1">To help you navigate this exposition, we have structured the presentation to first state a property as a <i class="calibre5 pcalibre pcalibre1">principle</i> in mathematical notation. We then illustrate this principle with examples and an informal discussion. We recommend that you go back and forth between the statement of the principle and the examples and discussion until you have a solid intuition for what is being said and what is important about the property. For more complex properties, we also provide a <i class="calibre5 pcalibre pcalibre1">derivation</i>, structured much like a mathematical proof. You should try to understand these derivations eventually, but you could skip over them on first reading.</p>
<p id="P700049702700000000000000003E693" data-uri="chapter02.xhtml#P700049702700000000000000003E693" class="pcalibre calibre3 pcalibre1">We also encourage you to work on the practice problems as you proceed through the presentation. The practice problems engage you in <i class="calibre5 pcalibre pcalibre1">active learning</i>, helping you put thoughts into action. With these as background, you will find it much easier to go back and follow the derivations. Be assured, as well, that the mathematical skills required to understand this material are within reach of someone with a good grasp of high school algebra.</p>
</aside>
</section>

</section>
<!--EOF:P70004970270000000000000000002AD-->
<!--EOF:P700049702700000000000000000077D-->
<!--EOF:P7000497027000000000000000000CB3-->
<!--EOF:P70004970270000000000000000010EA-->

<!--EOF:P7000497027000000000000000001479-->
<!--EOF:P7000497027000000000000000001493-->
<!--EOF:P7000497027000000000000000001498-->
<!--EOF:P70004970270000000000000000017AE-->

</section></body></html>
