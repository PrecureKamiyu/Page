<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Unknown</title>
    
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <div class="tocheadb">
    <h1 class="tochead" id="heading_id_2"><a id="pgfId-1019057"></a>contents</h1>
  </div>

  <p class="calibre16">  </p>

  <p class="fm-head-1toc"><a id="pgfId-1019059"></a><a href="../Text/fm.htm#pgfId-1017768">foreword</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019061"></a><a href="../Text/fm.htm#pgfId-1017778">preface</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019063"></a><a href="../Text/fm.htm#pgfId-1017793">acknowledgments</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019065"></a><a href="../Text/fm.htm#pgfId-1017806">about this book</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019067"></a><a href="../Text/fm.htm#pgfId-1018819">about the author</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019069"></a><a href="../Text/fm.htm#pgfId-1017883">about the cover illustration</a></p>

  <p class="calibre16">  </p>

  <p class="tocchapters">  1 <a id="pgfId-1019071"></a><a href="../Text/ch01.htm#pgfId-998542">Introducing data structures</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019073"></a>1.1  <a href="../Text/ch01.htm#pgfId-998718">Data structures</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019076"></a><a href="../Text/ch01.htm#pgfId-998789">Defining a data structure</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch01.htm#pgfId-999339">Describing a data structure</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch01.htm#pgfId-999445">Algorithms and data structures: Is there a difference?</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019079"></a>1.2  <a href="../Text/ch01.htm#pgfId-999603">Setting goals: Your expectations after reading this book</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019081"></a>1.3  <a href="../Text/ch01.htm#pgfId-999760">Packing your knapsack: Data structures meet the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019084"></a><a href="../Text/ch01.htm#pgfId-999801">Abstracting the problem away</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch01.htm#pgfId-1000404">Looking for solutions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch01.htm#pgfId-1000968">Algorithms to the rescue</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch01.htm#pgfId-1001103">Thinking (literally) outside of the box</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch01.htm#pgfId-1001206">Happy ending</a></p>

  <p class="tocparts">Part 1. <a id="pgfId-1019089"></a><a href="../Text/p1.htm#pgfId-1021490">Improving over basic data structures</a></p>

  <p class="tocchapters">  2 <a id="pgfId-1019091"></a><a href="../Text/ch02.htm#pgfId-998538">Improving priority queues: d-way heaps</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019093"></a>2.1  <a href="../Text/ch02.htm#pgfId-998782">Structure of this chapter</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019095"></a>2.2  <a href="../Text/ch02.htm#pgfId-998876">The problem: Handling priority</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019097"></a><a href="../Text/ch02.htm#pgfId-998944">Priority in practice: Bug tracking</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019099"></a>2.3  <a href="../Text/ch02.htm#pgfId-999421">Solutions at hand: Keeping a sorted list</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019101"></a><a href="../Text/ch02.htm#pgfId-999625">From sorted lists to priority queues</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019103"></a>2.4  <a href="../Text/ch02.htm#pgfId-999698">Describing the data structure API: Priority queues</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019106"></a><a href="../Text/ch02.htm#pgfId-1000217">Priority queue at work</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1000536">Priority matters: Generalize FIFO</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019108"></a>2.5  <a href="../Text/ch02.htm#pgfId-1000604">Concrete data structures</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019111"></a><a href="../Text/ch02.htm#pgfId-1000654">Comparing performance</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1000696">What’s the right concrete data structure?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1001147">Heap</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1001530">Priority, min-heap, and max-heap</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1001931">Advanced variant: d-ary heap</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019116"></a>2.6  <a href="../Text/ch02.htm#pgfId-1002140">How to implement a heap</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019121"></a><a href="../Text/ch02.htm#pgfId-1002461">BubbleUp</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1003268">PushDown</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1003980">Insert</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1004321">Top</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1004814">Update</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1005164">Dealing with duplicates</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1005476">Heapify</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1006030">Beyond API methods: Contains</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1006200">Performance recap</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1007315">From pseudo-code to implementation</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019129"></a>2.7  <a href="../Text/ch02.htm#pgfId-1007389">Use case: Find the k largest elements</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019132"></a><a href="../Text/ch02.htm#pgfId-1007519">The right data structure . . .</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1007623">. . . and the right use</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1007733">Coding it up</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019135"></a>2.8  <a href="../Text/ch02.htm#pgfId-1007979">More use cases</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019138"></a><a href="../Text/ch02.htm#pgfId-1008031">Minimum distance in graphs: Dijkstra</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1008093">More graphs: Prim's algorithm</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1008336">Data compression: Huffman codes</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019141"></a>2.9  <a href="../Text/ch02.htm#pgfId-1009676">Analysis of branching factor</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019145"></a><a href="../Text/ch02.htm#pgfId-1009708">Do we need d-ary heaps?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1009986">Running time</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1010083">Finding the optimal branching factor</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1010217">Branching factor vs memory</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019148"></a>2.10 <a href="../Text/ch02.htm#pgfId-1010289">Performance analysis: Finding the best branching factor</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019152"></a><a href="../Text/ch02.htm#pgfId-1011039">Please welcome profiling</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1011381">Interpreting results</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1011970">The mystery with heapify</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch02.htm#pgfId-1012173">Choosing the best branching factor</a></p>

  <p class="tocchapters">  3 <a id="pgfId-1019155"></a><a href="../Text/ch03.htm#pgfId-998541">Treaps: Using randomization to balance binary search trees</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019157"></a>3.1  <a href="../Text/ch03.htm#pgfId-998849">Problem: Multi-indexing</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019159"></a><a href="../Text/ch03.htm#pgfId-998988">The gist of the solution</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019161"></a>3.2  <a href="../Text/ch03.htm#pgfId-999057">Solution: Description and API</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019163"></a>3.3  <a href="../Text/ch03.htm#pgfId-999403">Treap</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019167"></a><a href="../Text/ch03.htm#pgfId-1000108">Rotations</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1001376">A few design questions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1001592">Implementing search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1001909">Insert</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1002756">Delete</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1003510">Top, peek, and update</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1003725">Min, max</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1003966">Performance recap</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019174"></a>3.4  <a href="../Text/ch03.htm#pgfId-1004426">Applications: Randomized treaps</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019177"></a><a href="../Text/ch03.htm#pgfId-1004811">Balanced trees</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1005214">Introducing randomization</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1005753">Applications of Randomized Treaps</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019180"></a>3.5  <a href="../Text/ch03.htm#pgfId-1005875">Performance analysis and profiling</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019184"></a><a href="../Text/ch03.htm#pgfId-1005978">Theory: Expected height</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1006551">Profiling height</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1007102">Profiling running time</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1007374">Profiling memory usage</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch03.htm#pgfId-1007518">Conclusions</a></p>

  <p class="tocchapters">  4 <a id="pgfId-1019188"></a><a href="../Text/ch04.htm#pgfId-998565">Bloom filters: Reducing the memory for tracking content</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019190"></a>4.1  <a href="../Text/ch04.htm#pgfId-999613">The dictionary problem: Keeping track of things</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019192"></a>4.2  <a href="../Text/ch04.htm#pgfId-1000681">Alternatives to implementing a dictionary</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019194"></a>4.3  <a href="../Text/ch04.htm#pgfId-1001673">Describing the data structure API: Associative array</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019196"></a>4.4  <a href="../Text/ch04.htm#pgfId-1002703">Concrete data structures</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019199"></a><a href="../Text/ch04.htm#pgfId-1003148">Unsorted array: Fast insertion, slow search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1003858">Sorted arrays and binary search: Slow insertion, fast(-ish) search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1004922">Hash table: Constant-time on average, unless you need ordering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1006132">Binary search tree: Every operation is logarithmic</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1008022">Bloom filter: As fast as hash tables, but saves memory (with a catch)</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019204"></a>4.5  <a href="../Text/ch04.htm#pgfId-1008632">Under the hood: How do Bloom filters work?</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019206"></a>4.6  <a href="../Text/ch04.htm#pgfId-1010266">Implementation</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019209"></a><a href="../Text/ch04.htm#pgfId-1010404">Using a Bloom filter</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1012033">Reading and writing bits</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1013999">Find where a key is stored</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1014923">Generating hash functions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1015541">Constructor</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1017374">Checking a key</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1018560">Storing a key</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1020197">Estimating accuracy</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019217"></a>4.7  <a href="../Text/ch04.htm#pgfId-1020527">Applications</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019222"></a><a href="../Text/ch04.htm#pgfId-1020674">Cache</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1021743">Routers</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1021913">Crawler</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1022591">IO fetcher</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1022757">Spell checker</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1022955">Distributed databases and file systems</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019226"></a>4.8  <a href="../Text/ch04.htm#pgfId-1023224">Why Bloom filters work</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019229"></a><a href="../Text/ch04.htm#pgfId-1024647">Why there are no false negatives . . .</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1024956">. . . But there are false positives</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1025655">Bloom filters as randomized algorithms</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019232"></a>4.9  <a href="../Text/ch04.htm#pgfId-1026100">Performance analysis</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019236"></a><a href="../Text/ch04.htm#pgfId-1026317">Running time</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1026495">Constructor</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1026725">Storing an element</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1027350">Looking up an element</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019239"></a>4.10 <a href="../Text/ch04.htm#pgfId-1027502">Estimating Bloom filter precision</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019241"></a><a href="../Text/ch04.htm#pgfId-1028974">Explanation of the false-positive ratio formula</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019243"></a>4.11 <a href="../Text/ch04.htm#pgfId-1030745">Improved variants</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019247"></a><a href="../Text/ch04.htm#pgfId-1030853">Bloomier filter</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1031056">Combining Bloom filters</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1031589">Layered Bloom filter</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1032299">Compressed Bloom filter</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch04.htm#pgfId-1033016">Scalable Bloom filter</a></p>

  <p class="tocchapters">  5 <a id="pgfId-1019251"></a><a href="../Text/ch05.htm#pgfId-998571">Disjoint sets: Sub-linear time processing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019253"></a>5.1  <a href="../Text/ch05.htm#pgfId-999398">The distinct subsets problem</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019255"></a>5.2  <a href="../Text/ch05.htm#pgfId-1001037">Reasoning on solutions</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019257"></a>5.3  <a href="../Text/ch05.htm#pgfId-1002351">Describing the data structure API: Disjoint set</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019259"></a>5.4  <a href="../Text/ch05.htm#pgfId-1003556">Naïve solution</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019261"></a><a href="../Text/ch05.htm#pgfId-1004448">Implementing naïve solution</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019263"></a>5.5  <a href="../Text/ch05.htm#pgfId-1008090">Using a tree-like structure</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019266"></a><a href="../Text/ch05.htm#pgfId-1008227">From list to trees</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch05.htm#pgfId-1009462">Implementing the tree version</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019268"></a>5.6  <a href="../Text/ch05.htm#pgfId-1011833">Heuristics to improve the running time</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019271"></a><a href="../Text/ch05.htm#pgfId-1012779">Path compression</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch05.htm#pgfId-1014329">Implementing balancing and path compression</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019273"></a>5.7  <a href="../Text/ch05.htm#pgfId-1017346">Applications</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019276"></a><a href="../Text/ch05.htm#pgfId-1017413">Graphs: Connected components</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch05.htm#pgfId-1018037">Graphs: Kruskal’s algorithm for minimum spanning tree</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch05.htm#pgfId-1018673">Clustering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch05.htm#pgfId-1019518">Unification</a></p>

  <p class="tocchapters">  6 <a id="pgfId-1019280"></a><a href="../Text/ch06.htm#pgfId-998565">Trie, radix trie: Efficient string search</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019282"></a>6.1  <a href="../Text/ch06.htm#pgfId-998770">Spell-check</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019284"></a><a href="../Text/ch06.htm#pgfId-998869">A prncess, a Damon, and an elf walkz into a bar</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-999137">Compression is the key</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-999190">Description and API</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019288"></a>6.2  <a href="../Text/ch06.htm#pgfId-999506">Trie</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019292"></a><a href="../Text/ch06.htm#pgfId-1000110">Why is it better again?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1000478">Search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1001596">Insert</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1002301">Remove</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1003204">Longest prefix</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1003760">Keys matching a prefix</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1004367">When should we use tries?</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019298"></a>6.3  <a href="../Text/ch06.htm#pgfId-1005566">Radix tries</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019302"></a><a href="../Text/ch06.htm#pgfId-1005847">Nodes and edges</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1006523">Search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1007141">Insert</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1007712">Remove</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1008329">Longest common prefix</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1008750">Keys starting with a prefix</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019307"></a>6.4  <a href="../Text/ch06.htm#pgfId-1009204">Applications</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019311"></a><a href="../Text/ch06.htm#pgfId-1009252">Spell-checker</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1009638">String similarity</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1009807">String sorting</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1009919">T9</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch06.htm#pgfId-1010115">Autocomplete</a></p>

  <p class="tocchapters">  7 <a id="pgfId-1019315"></a><a href="../Text/ch07.htm#pgfId-998637">Use case: LRU cache</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019317"></a>7.1  <a href="../Text/ch07.htm#pgfId-998793">Don’t compute things twice</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019319"></a>7.2  <a href="../Text/ch07.htm#pgfId-999130">First attempt: Remembering values</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019323"></a><a href="../Text/ch07.htm#pgfId-999299">Description and API</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-999382">Fresh data, please</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-999705">Handling asynchronous calls</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-999844">Marking cache values as “Loading”</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019326"></a>7.3  <a href="../Text/ch07.htm#pgfId-999925">Memory is not enough (literally)</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019328"></a>7.4  <a href="../Text/ch07.htm#pgfId-1000182">Getting rid of stale data: LRU cache</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019331"></a><a href="../Text/ch07.htm#pgfId-1000845">Sometimes you have to double down on problems</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1000982">Temporal ordering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1002267">Performance</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019334"></a>7.5  <a href="../Text/ch07.htm#pgfId-1002676">When fresher data is more valuable: LFU</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019337"></a><a href="../Text/ch07.htm#pgfId-1002826">So how do we choose?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1002878">What makes LFU different</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1003547">Performance</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1004011">Problems with LFU</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019341"></a>7.6  <a href="../Text/ch07.htm#pgfId-1004171">How to use cache is just as important</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019343"></a>7.7  <a href="../Text/ch07.htm#pgfId-1004413">Introducing synchronization</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019346"></a><a href="../Text/ch07.htm#pgfId-1004822">Solving concurrency (in Java)</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1005041">Introducing locks</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1005199">Acquiring a lock</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1005569">Reentrant locks</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1005656">Read locks</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch07.htm#pgfId-1006347">Other approaches to concurrency</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019352"></a>7.8  <a href="../Text/ch07.htm#pgfId-1006449">Cache applications</a></p>

  <p class="tocparts">Part 2. <a id="pgfId-1019354"></a><a href="../Text/p2.htm#pgfId-1010509">Multidimensional queries</a></p>

  <p class="tocchapters">  8 <a id="pgfId-1019356"></a><a href="../Text/ch08.htm#pgfId-998662">Nearest neighbors search</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019358"></a>8.1  <a href="../Text/ch08.htm#pgfId-999343">The nearest neighbors search problem</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019360"></a>8.2  <a href="../Text/ch08.htm#pgfId-1000132">Solutions</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019363"></a><a href="../Text/ch08.htm#pgfId-1000632">First attempts</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch08.htm#pgfId-1000853">Sometimes caching is not the answer</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch08.htm#pgfId-1001394">Simplifying things to get a hint</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch08.htm#pgfId-1002135">Carefully choose a data structure</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019367"></a>8.3  <a href="../Text/ch08.htm#pgfId-1003305">Description and API</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019369"></a>8.4  <a href="../Text/ch08.htm#pgfId-1004636">Moving to k-dimensional spaces</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019372"></a><a href="../Text/ch08.htm#pgfId-1005355">Unidimensional binary search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch08.htm#pgfId-1005681">Moving to higher dimensions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch08.htm#pgfId-1006798">Modeling 2-D partitions with a data structure</a></p>

  <p class="tocchapters">  9 <a id="pgfId-1019375"></a><a href="../Text/ch09.htm#pgfId-998685">K-d trees: Multidimensional data indexing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019377"></a>9.1  <a href="../Text/ch09.htm#pgfId-998780">Right where we left off</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019379"></a>9.2  <a href="../Text/ch09.htm#pgfId-998878">Moving to k-D spaces: Cycle through dimensions</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019383"></a><a href="../Text/ch09.htm#pgfId-999191">Constructing the BST</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-999599">Invariants</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-999722">The importance of being balanced</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019385"></a>9.3  <a href="../Text/ch09.htm#pgfId-999822">Methods</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019389"></a><a href="../Text/ch09.htm#pgfId-1000186">Search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-1000929">Insert</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-1001481">Balanced tree</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-1002278">Remove</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-1004094">Nearest neighbor</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-1005894">Region search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch09.htm#pgfId-1006979">A recap of all methods</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-1019395"></a>9.4  <a href="../Text/ch09.htm#pgfId-1008037">Limits and possible improvements</a></p>

  <p class="tocchapters">10 <a id="pgfId-1019397"></a><a href="../Text/ch10.htm#pgfId-998637">Similarity Search Trees: Approximate nearest neighbors search for image retrieval</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019399"></a>10.1  <a href="../Text/ch10.htm#pgfId-998799">Right where we left off</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019402"></a><a href="../Text/ch10.htm#pgfId-998929">A new (more complex) example</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-999100">Overcoming k-d trees’ flaws</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019404"></a>10.2  <a href="../Text/ch10.htm#pgfId-999196">R-tree</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019407"></a><a href="../Text/ch10.htm#pgfId-999255">A step back: Introducing B-trees</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-999498">From B-Tree to R-tree</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-999980">Inserting points in an R-tree</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1000315">Search</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019411"></a>10.3  <a href="../Text/ch10.htm#pgfId-1000523">Similarity search tree</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019415"></a><a href="../Text/ch10.htm#pgfId-1001299">SS-tree search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1002146">Insert</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1003562">Insertion: Variance, means, and projections</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1004648">Insertion: Split nodes</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1005844">Delete</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019419"></a>10.4  <a href="../Text/ch10.htm#pgfId-1007959">Similarity Search</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019422"></a><a href="../Text/ch10.htm#pgfId-1008009">Nearest neighbor search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1008665">Region search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1009014">Approximated similarity search</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019425"></a>10.5  <a href="../Text/ch10.htm#pgfId-1009443">SS+-tree</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019428"></a><a href="../Text/ch10.htm#pgfId-1009481">Are SS-trees better?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1010871">Mitigating hyper-sphere limitations</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1011000">Improved split heuristic</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch10.htm#pgfId-1011172">Reducing overlap</a></p>

  <p class="tocchapters">11 <a id="pgfId-1019432"></a><a href="../Text/ch11.htm#pgfId-998541">Applications of nearest neighbor search</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019434"></a>11.1  <a href="../Text/ch11.htm#pgfId-998649">An application: Find nearest hub</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019437"></a><a href="../Text/ch11.htm#pgfId-998733">Sketching a solution</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-999446">Trouble in paradise</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019439"></a>11.2  <a href="../Text/ch11.htm#pgfId-999604">Centralized application</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019442"></a><a href="../Text/ch11.htm#pgfId-999653">Filtering points</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-1000275">Complex decisions</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019444"></a>11.3  <a href="../Text/ch11.htm#pgfId-1001109">Moving to a distributed application</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019447"></a><a href="../Text/ch11.htm#pgfId-1001225">Issues handling HTTP communication</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-1001422">Keeping the inventory in sync</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-1001539">Lessons learned</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019450"></a>11.4  <a href="../Text/ch11.htm#pgfId-1001597">Other applications</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019453"></a><a href="../Text/ch11.htm#pgfId-1001635">Color reduction</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-1001950">Particle interaction</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-1002361">Multidimensional DB queries optimization</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch11.htm#pgfId-1003098">Clustering</a></p>

  <p class="tocchapters">12 <a id="pgfId-1019457"></a><a href="../Text/ch12.htm#pgfId-998661">Clustering</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019459"></a>12.1  <a href="../Text/ch12.htm#pgfId-998848">Intro to clustering</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019462"></a><a href="../Text/ch12.htm#pgfId-998942">Types of learning</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-999146">Types of clustering</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019464"></a>12.2  <a href="../Text/ch12.htm#pgfId-999773">K-means</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019467"></a><a href="../Text/ch12.htm#pgfId-1001213">Issues with k-means</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1001404">The curse of dimensionality strikes again</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1001590">K-means performance analysis</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1001791">Boosting k-means with k-d trees</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1002596">Final remarks on k-means</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019472"></a>12.3  <a href="../Text/ch12.htm#pgfId-1002700">DBSCAN</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019475"></a><a href="../Text/ch12.htm#pgfId-1002803">Directly vs density-reachable</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1003022">From definitions to an algorithm</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1003487">And finally, an implementation</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1004138">Pros and cons of DBSCAN</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019479"></a>12.4  <a href="../Text/ch12.htm#pgfId-1004491">OPTICS</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019483"></a><a href="../Text/ch12.htm#pgfId-1004635">Definitions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1004793">OPTICS algorithm</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1006166">From reachability distance to clustering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1006967">Hierarchical clustering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch12.htm#pgfId-1007504">Performance analysis and final considerations</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019487"></a>12.5  <a href="../Text/ch12.htm#pgfId-1007629">Evaluating clustering results: Evaluation metrics</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019489"></a><a href="../Text/ch12.htm#pgfId-1008234">Interpreting the results</a></p>

  <p class="tocchapters">13 <a id="pgfId-1019491"></a><a href="../Text/ch13.htm#pgfId-998781">Parallel clustering: MapReduce and canopy clustering</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019493"></a>13.1  <a href="../Text/ch13.htm#pgfId-998941">Parallelization</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019496"></a><a href="../Text/ch13.htm#pgfId-999048">Parallel vs distributed</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-999284">Parallelizing k-means</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-999284">Canopy clustering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-999952">Applying canopy clustering</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019500"></a>13.2  <a href="../Text/ch13.htm#pgfId-1000142">MapReduce</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019503"></a><a href="../Text/ch13.htm#pgfId-1000201">Imagine you are Donald Duck . . .</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-1000578">First map, then reduce</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-1000885">There is more under the hood</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019506"></a>13.3  <a href="../Text/ch13.htm#pgfId-1000943">MapReduce k-means</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019509"></a><a href="../Text/ch13.htm#pgfId-1001696">Parallelizing canopy clustering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-1001898">Centroid initialization with canopy clustering</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch13.htm#pgfId-1002430">MapReduce canopy clustering</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019512"></a>13.4  <a href="../Text/ch13.htm#pgfId-1003124">MapReduce DBSCAN</a></p>

  <p class="tocparts">Part 3. <a id="pgfId-1019514"></a><a href="../Text/p3.htm#pgfId-1014406">Planar graphs and minimum crossing number</a></p>

  <p class="tocchapters">14 <a id="pgfId-1019516"></a><a href="../Text/ch14.htm#pgfId-998805">An introduction to graphs: Finding paths of minimum distance</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019518"></a>14.1  <a href="../Text/ch14.htm#pgfId-999047">Definitions</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019521"></a><a href="../Text/ch14.htm#pgfId-999356">Implementing graphs</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1000363">Graphs as algebraic types</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1000593">Pseudo-code</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019524"></a>14.2  <a href="../Text/ch14.htm#pgfId-1001180">Graph properties</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019528"></a><a href="../Text/ch14.htm#pgfId-1001284">Undirected</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1001396">Connected</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1001581">Acyclic</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019530"></a>14.3  <a href="../Text/ch14.htm#pgfId-1001806">Graph traversal: BFS and DFS</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019533"></a><a href="../Text/ch14.htm#pgfId-1001873">Optimizing delivery routes</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1002108">Breadth first search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1002865">Reconstructing the path to target</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1003314">Depth first search</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1004117">It’s queue vs stack again</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1004184">Best route to deliver a parcel</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019539"></a>14.4  <a href="../Text/ch14.htm#pgfId-1004276">Shortest path in weighted graphs: Dijkstra</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019542"></a><a href="../Text/ch14.htm#pgfId-1004345">Differences with BFS</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1004513">Implementation</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1005034">Analysis</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1005922">Shortest route for deliveries</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019546"></a>14.5  <a href="../Text/ch14.htm#pgfId-1006112">Beyond Dijkstra’s algorithm: A*</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019549"></a><a href="../Text/ch14.htm#pgfId-1007055">How good is A* search?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch14.htm#pgfId-1007600">Heuristics as a way to balance real-time data</a></p>

  <p class="tocchapters">15 <a id="pgfId-1019551"></a><a href="../Text/ch15.htm#pgfId-998829">Graph embeddings and planarity: Drawing graphs with minimal edge intersections</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019553"></a>15.1  <a href="../Text/ch15.htm#pgfId-999026">Graph embeddings</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019556"></a><a href="../Text/ch15.htm#pgfId-999261">Some basic definitions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-999512">Complete and bipartite graphs</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019558"></a>15.2  <a href="../Text/ch15.htm#pgfId-999817">Planar graphs</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019561"></a><a href="../Text/ch15.htm#pgfId-999997">Using Kuratowski’s theorem in practice</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1000221">Planarity testing</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1000539">A naïve algorithm for planarity testing</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1002211">Improving performance</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1003046">Efficient algorithms</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019566"></a>15.3  <a href="../Text/ch15.htm#pgfId-1003227">Non-planar graphs</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019569"></a><a href="../Text/ch15.htm#pgfId-1003589">Finding the crossing number</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1003880">Rectilinear crossing number</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019571"></a>15.4  <a href="../Text/ch15.htm#pgfId-1004211">Edge intersections</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019575"></a><a href="../Text/ch15.htm#pgfId-1004261">Straight-line segments</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1005293">Polylines</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1005351">Bézier curves</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1005865">Intersections between quadratic Bézier curves</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch15.htm#pgfId-1006386">Vertex-vertex and edge-vertex intersections</a></p>

  <p class="tocchapters">16 <a id="pgfId-1019579"></a><a href="../Text/ch16.htm#pgfId-998853">Gradient descent: Optimization problems (not just) on graphs</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019581"></a>16.1  <a href="../Text/ch16.htm#pgfId-999091">Heuristics for the crossing number</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019584"></a><a href="../Text/ch16.htm#pgfId-999167">Did you just say heuristics?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1000759">Extending to curve-line edges</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019586"></a>16.2  <a href="../Text/ch16.htm#pgfId-1000959">How optimization works</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019589"></a><a href="../Text/ch16.htm#pgfId-1001094">Cost functions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1001378">Step functions and local minima</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1001480">Optimizing random sampling</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019592"></a>16.3  <a href="../Text/ch16.htm#pgfId-1001798">Gradient descent</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019595"></a><a href="../Text/ch16.htm#pgfId-1001947">The math of gradient descent</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1002217">Geometrical interpretation</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1002645">When is gradient descent appliable?</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1002758">Problems with gradient descent</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019599"></a>16.4  <a href="../Text/ch16.htm#pgfId-1003022">Applications of gradient descent</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019601"></a><a href="../Text/ch16.htm#pgfId-1003196">An example: Linear regression</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019603"></a>16.5  <a href="../Text/ch16.htm#pgfId-1003564">Gradient descent for graph embedding</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019606"></a><a href="../Text/ch16.htm#pgfId-1003688">A different criterion</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch16.htm#pgfId-1003999">Implementation</a></p>

  <p class="tocchapters">17 <a id="pgfId-1019608"></a><a href="../Text/ch17.htm#pgfId-998541">Simulated annealing: Optimization beyond local minima</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019610"></a>17.1  <a href="../Text/ch17.htm#pgfId-998774">Simulated annealing</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019612"></a><a href="../Text/ch17.htm#pgfId-998966">Sometimes you need to climb up to get to the bottom</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-999183">Implementation</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-999476">Why simulated annealing works</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-999839">Short-range vs long-range transitions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1000114">Variants</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1000309">Simulated annealing vs gradient descent: Which one should I use?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019619"></a>17.2  <a href="../Text/ch17.htm#pgfId-1000460">Simulated annealing + traveling salesman</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019622"></a><a href="../Text/ch17.htm#pgfId-1000711">Exact vs approximated solutions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1000894">Visualizing cost</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1001051">Pruning the domain</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1001231">State transitions</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1002960">Adjacent vs random swaps</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1003073">Applications of TSP</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019628"></a>17.3  <a href="../Text/ch17.htm#pgfId-1003135">Simulated annealing and graph embedding</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019631"></a><a href="../Text/ch17.htm#pgfId-1003203">Minimum edge crossing</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch17.htm#pgfId-1003549">Force-directed drawing</a></p>

  <p class="tocchapters">18 <a id="pgfId-1019633"></a><a href="../Text/ch18.htm#pgfId-998733">Genetic algorithms: Biologically inspired, fast-converging optimization</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019635"></a>18.1  <a href="../Text/ch18.htm#pgfId-998925">Genetic algorithms</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019639"></a><a href="../Text/ch18.htm#pgfId-999133">Inspired by nature</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-999984">Chromosomes</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1000364">Population</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1000699">Fitness</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1000829">Natural selection</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1001346">Selecting individuals for mating</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1002478">Crossover</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1003074">Mutations</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1003382">The genetic algorithm template</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1003620">When does the genetic algorithm work best?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019648"></a>18.2  <a href="../Text/ch18.htm#pgfId-1003939">TSP</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019651"></a><a href="../Text/ch18.htm#pgfId-1004029">Fitness, chromosomes, and initialization</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1004127">Mutations</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1004410">Crossover</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1004746">Results and parameters tuning</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1006304">Beyond TSP: Optimizing the routes of the whole fleet</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019656"></a>18.3  <a href="../Text/ch18.htm#pgfId-1006405">Minimum vertex cover</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019659"></a><a href="../Text/ch18.htm#pgfId-1006645">Applications of vertex cover</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1006744">Implementing a genetic algorithm</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1019661"></a>18.4  <a href="../Text/ch18.htm#pgfId-1007162">Other applications of the genetic algorithm</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1019665"></a><a href="../Text/ch18.htm#pgfId-1007198">Maximum flow</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1007607">Protein folding</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1007762">Beyond genetic algorithms</a></p>

  <p class="fm-head-2toc"><a href="../Text/ch18.htm#pgfId-1007911">Algorithms, beyond this book</a></p>

  <p class="calibre16">  </p>

  <p class="tocchapters">appendix A. <a id="pgfId-1019668"></a><a href="../Text/A.htm#pgfId-998542">A quick guide to pseudo-code</a></p>

  <p class="tocchapters">appendix B. <a id="pgfId-1019671"></a><a href="../Text/B.htm#pgfId-998542">Big-O notation</a></p>

  <p class="tocchapters">appendix C. <a id="pgfId-1019674"></a><a href="../Text/C.htm#pgfId-998517">Core data structures</a></p>

  <p class="tocchapters">appendix D. <a id="pgfId-1019677"></a><a href="../Text/D.htm#pgfId-998529">Containers as priority queues</a></p>

  <p class="tocchapters">appendix E. <a id="pgfId-1019680"></a><a href="../Text/E.htm#pgfId-998517">Recursion</a></p>

  <p class="tocchapters">appendix F. <a id="pgfId-1019682"></a><a href="../Text/F.htm#pgfId-998517">Classification problems and randomnized algorithm metrics</a></p>

  <p class="calibre16">  </p>

  <p class="tocchapters"><a id="pgfId-1019685"></a><a href="../Text/index.htm#pgfId-503251">index</a></p>
</body>
</html>
