<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Project Suggestions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part195.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part197.htm">下一个 &gt;</a></p><p class="s45" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">Project Suggestions</p><p style="padding-top: 12pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Each of the following is a large project, which can be a semester-long project done by a group of students. The diﬃculty of the project can be adjusted easily by adding or deleting features.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">You can choose to use either a web front-end using <span class="s44">HTML</span>5, or a mobile front-end on Android or iOS for your project.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.1 <span class="p">Pick your favorite interactive web site, such as Bebo, Blogger, Facebook, Flickr, Last.FM, Twitter, Wikipedia; these are just a few examples, there are many more. Most of these sites manage a large amount of data and use databases to store and process the data. Implement a subset of the functionality of the web site you picked. Implementing even a signiﬁcant subset of the features of such a site is well beyond a course project, but it is possible to ﬁnd a set of features that is interesting to implement yet small enough for a course project.</span></p><p style="padding-left: 116pt;text-indent: 14pt;text-align: justify;">Most of today’s popular web sites make extensive use of Javascript to create rich interfaces. You may wish to go easy on this for your project, at least initially, since it takes time to build such interfaces, and then add more features to your interfaces, as time permits.</p><p style="padding-left: 116pt;text-indent: 0pt;text-align: justify;">Make use of web application development frameworks, or Javascript libraries available on the web, such as the jQuery library, to speed up your front-end de- velopment. Alternatively, implement the application as a mobile app on Android or iOS.</p><p style="padding-top: 6pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;"><b>Project 9.2 </b>Create a “mashup” which uses web services such as Google or Yahoo map <span class="s44">API</span>s to create an interactive web site. For example, the map <span class="s44">API</span>s provide a way to display a map on the web page, with other information overlaid on the maps. You could implement a restaurant recommendation system, with users contributing information about restaurants such as location, cuisine, price range, and ratings. Results of user searches could be displayed on the map. You could allow Wikipedia-like features, such as allowing users to add information and edit</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 147pt;text-indent: 0pt;text-align: justify;">information added by other users, along with moderators who can weed out malicious updates. You could also implement social features, such as giving more importance to ratings provided by your friends.</p><p class="s46" style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;">Project 9.3 <span class="p">Your university probably uses a course-management system such as Moo- dle, Blackboard, or WebCT. Implement a subset of the functionality of such a course-management system. For example, you can provide assignment submis- sion and grading functionality, including mechanisms for students and teach- ers/teaching assistants to discuss grading of a particular assignment. You could also provide polls and other mechanisms for getting feedback.</span></p><p style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;"><b>Project 9.4 </b>Consider the <span class="s44">E-R </span>schema of Practice Exercise 6.3 (Chapter 6), which rep- resents information about teams in a league. Design and implement a web-based system to enter, update, and view the data.</p><p style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;"><b>Project 9.5 </b>Design and implement a shopping cart system that lets shoppers collect items into a shopping cart (you can decide what information is to be supplied for each item) and purchased together. You can extend and use the <span class="s44">E-R </span>schema of Exercise 6.21 of Chapter 6. You should check for availability of the item and deal with nonavailable items as you feel appropriate.</p><p class="s46" style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;">Project 9.6 <span class="p">Design and implement a web-based system to record student registration and grade information for courses at a university.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;">Project 9.7 <span class="p">Design and implement a system that permits recording of course perfor- mance information— speciﬁcally, the marks given to each student in each assign- ment or exam of a course, and computation of a (weighted) sum of marks to get the total course marks. The number of assignments/exams should not be predeﬁned; that is, more assignments/exams can be added at any time. The sys- tem should also support grading, permitting cutoﬀs to be speciﬁed for various grades.</span></p><p style="padding-left: 147pt;text-indent: 16pt;text-align: justify;">You may also wish to integrate it with the student registration system of Project 9.6 (perhaps being implemented by another project team).</p><p class="s46" style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;">Project 9.8 <span class="p">Design and implement a web-based system for booking classrooms at your university. Periodic booking (ﬁxed days/times each week for a whole semester) must be supported. Cancellation of speciﬁc lectures in a periodic booking should also be supported.</span></p><p style="padding-left: 147pt;text-indent: 16pt;text-align: justify;">You may also wish to integrate it with the student registration system of Project 9.6 (perhaps being implemented by another project team) so that class- rooms can be booked for courses, and cancellations of a lecture or addition of extra lectures can be noted at a single interface and will be reﬂected in the class- room booking and communicated to students via email.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s46" style="padding-top: 4pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.9 <span class="p">Design and implement a system for managing online multiple-choice tests. You should support distributed contribution of questions (by teaching assistants, for example), editing of questions by whoever is in charge of the course, and creation of tests from the available set of questions. You should also be able to administer tests online, either at a ﬁxed time for all students or at any time but with a time limit from start to ﬁnish (support one or both), and the system should give students feedback on their scores at the end of the allotted time.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.10 <span class="p">Design and implement a system for managing email customer service. Incoming mail goes to a common pool. There is a set of customer service agents who reply to email. If the email is part of an ongoing series of replies (tracked using the in-reply-to ﬁeld of email) the mail should preferably be replied to by the same agent who replied earlier. The system should track all incoming mail and replies, so an agent can see the history of questions from a customer before replying to an email.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.11 <span class="p">Design and implement a simple electronic marketplace where items can be listed for sale or for purchase under various categories (which should form a hierarchy). You may also wish to support alerting services, whereby a user can register interest in items in a particular category, perhaps with other constraints as well, without publicly advertising her interest, and is notiﬁed when such an item is listed for sale.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.12 <span class="p">Design and implement a web-based system for managing a sports “lad- der.” Many people register and may be given some initial rankings (perhaps based on past performance). Anyone can challenge anyone else to a match, and the rankings are adjusted according to the result. One simple system for adjust- ing rankings just moves the winner ahead of the loser in the rank order, in case the winner was behind earlier. You can try to invent more complicated rank- adjustment systems.</span></p><p class="s46" style="padding-top: 6pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.13 <span class="p">Design and implement a publication-listing service. The service should permit entering of information about publications, such as title, authors, year, where the publication appeared, and pages. Authors should be a separate entity with attributes such as name, institution, department, email, address, and home page.</span></p><p style="padding-left: 116pt;text-indent: 15pt;text-align: justify;">Your application should support multiple views on the same data. For in- stance, you should provide all publications by a given author (sorted by year, for example), or all publications by authors from a given institution or department. You should also support search by keywords, on the overall database as well as within each of the views.</p><p class="s46" style="padding-top: 6pt;padding-left: 116pt;text-indent: -28pt;text-align: justify;">Project 9.14 <span class="p">A common task in any organization is to collect structured information from a group of people. For example, a manager may need to ask employees to enter their vacation plans, a professor may wish to collect feedback on a particu-</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 147pt;text-indent: 0pt;text-align: justify;">lar topic from students, or a student organizing an event may wish to allow other students to register for the event, or someone may wish to conduct an online vote on some topic. Google Forms can be used for such activities; your task is to create something like Google Forms, but with authorization on who can ﬁll a form.</p><p style="padding-left: 147pt;text-indent: 14pt;text-align: justify;">Speciﬁcally, create a system that will allow users to easily create information collection events. When creating an event, the event creator must deﬁne who is eligible to participate; to do so, your system must maintain user information and allow predicates deﬁning a subset of users. The event creator should be able to specify a set of inputs (with types, default values, and validation checks) that the users will have to provide. The event should have an associated deadline, and the system should have the ability to send reminders to users who have not yet sub- mitted their information. The event creator may be given the option of automatic enforcement of the deadline based on a speciﬁed date/time, or choosing to login and declare the deadline is over. Statistics about the submissions should be gen- erated— to do so, the event creator may be allowed to create simple summaries on the entered information. The event creator may choose to make some of the summaries public, viewable by all users, either continually (e.g., how many peo- ple have responded) or after the deadline (e.g., what was the average feedback score).</p><p style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;"><b>Project 9.15 </b>Create a library of functions to simplify creation of web interfaces, us- ing jQuery. You must implement at least the following functions: a function to display a <span class="s44">JDBC </span>result set (with tabular formatting), functions to create diﬀerent types of text and numeric inputs (with validation criteria such as input type and optional range, enforced at the client by appropriate JavaScript code), and func- tions to create menu items based on a result set. Also implement functions to get input for speciﬁed ﬁelds of speciﬁed relations, ensuring that database constraints such as type and foreign-key constraints are enforced at the client side. Foreign key constraints can also be used to provide either autocomplete or drop-down menus, to ease the task of data entry for the ﬁelds.</p><p style="padding-left: 147pt;text-indent: 14pt;text-align: justify;">For extra credit, use support <span class="s44">CSS </span>styles which allow the user to change style parameters such as colors and fonts. Build a sample database application to illustrate the use of these functions.</p><p class="s46" style="padding-top: 6pt;padding-left: 147pt;text-indent: -28pt;text-align: justify;">Project 9.16 <span class="p">Design and implement a web-based multiuser calendar system. The sys- tem must track appointments for each person, including multioccurrence events, such as weekly meetings, and shared events (where an update made by the event creator gets reﬂected to all those who share the event). Provide interfaces to schedule multiuser events, where an event creator can add a number of users who are invited to the event. Provide email notiﬁcation of events. For extra cred- its implement a web service that can be used by a reminder program running on the client machine.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part195.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part197.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
