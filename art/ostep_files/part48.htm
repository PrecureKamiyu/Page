<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>5.5 Other Parts of the API</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part47.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part49.htm">下一个 &gt;</a></p><p class="s40" style="padding-top: 4pt;padding-left: 44pt;text-indent: 0pt;text-align: left;">5.5 Other Parts of the API</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Beyond <span class="s41">fork()</span>, <span class="s41">exec()</span>, and <span class="s41">wait()</span>, there are a lot of other inter- faces for interacting with processes in U<span class="s7">NIX </span>systems. For example, the <span class="s41">kill() </span>system call is used to send <b>signals </b>to a process, including direc- tives to go to sleep, die, and other useful imperatives. In fact, the entire signals subsystem provides a rich infrastructure to deliver external events to processes, including ways to receive and process those signals.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">There are many command-line tools that are useful as well. For exam- ple, using the <span class="s41">ps </span>command allows you to see which processes are run- ning; read the <b>man pages </b>for some useful flags to pass to <span class="s41">ps</span>. The tool <span class="s41">top </span>is also quite helpful, as it displays the processes of the system and how much CPU and other resources they are eating up. Humorously, many times when you run it, <span class="s41">top </span>claims it is the top resource hog; per- haps it is a bit of an egomaniac. Finally, there are many different kinds of CPU meters you can use to get a quick glance understanding of the load on your system; for example, we always keep <b>MenuMeters </b>(from Raging Menace software) running on our Macintosh toolbars, so we can see how much CPU is being utilized at any moment in time. In general, the more information about what is going on, the better.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part47.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part49.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
