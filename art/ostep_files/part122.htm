<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part121.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part123.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[BH70] “The Nucleus of a Multiprogramming System” Per Brinch Hansen</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Communications of the ACM, 13:4, April 1970</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">The first paper to suggest that the OS, or kernel, should be a minimal and flexible substrate for building customized operating systems; this theme is revisited throughout OS research history.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">[CV65] “Introduction and Overview of the Multics System”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">F. J. Corbato and V. A. Vyssotsky</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">Fall Joint Computer Conference, 1965</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">A great early Multics paper. Here is the great quote about time sharing: “The impetus for time-sharing first arose from professional programmers because of their constant frustration in debugging programs at batch processing installations. Thus, the original goal was to time-share computers to allow simulta- neous access by several persons while giving to each of them the illusion of having the whole machine at his disposal.”</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">[DV66] “Programming Semantics for Multiprogrammed Computations” Jack B. Dennis and Earl C. Van Horn</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Communications of the ACM, Volume 9, Number 3, March 1966</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">An early paper (but not the first) on multiprogramming.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[L60] “Man-Computer Symbiosis”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">J. C. R. Licklider</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">IRE Transactions on Human Factors in Electronics, HFE-1:1, March 1960</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">A funky paper about how computers and people are going to enter into a symbiotic age; clearly well ahead of its time but a fascinating read nonetheless.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">[M62] “Time-Sharing Computer Systems”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">J. McCarthy</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">Management and the Computer of the Future, MIT Press, Cambridge, Mass, 1962</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;"><a href="http://www-formal.stanford.edu/jmc/" style=" color: #231F20; font-family:&quot;Book Antiqua&quot;, serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt;" target="_blank">Probably McCarthy’s earliest recorded paper on time sharing. However, in another paper [M83], he claims to have been thinking of the idea since 1957. McCarthy left the systems area and went on to be- come a giant in Artificial Intelligence at Stanford, including the creation of the LISP programming lan- guage. See McCarthy’s home page for more info: </a><a href="http://www-formal.stanford.edu/jmc/" class="s85" target="_blank">http://www-formal.stanford.edu/jmc/</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[M+63] “A Time-Sharing Debugging System for a Small Computer”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">J. McCarthy, S. Boilen, E. Fredkin, J. C. R. Licklider AFIPS ’63 (Spring), May, 1963, New York, USA</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">A great early example of a system that swapped program memory to the “drum” when the program wasn’t running, and then back into “core” memory when it was about to be run.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[M83] “Reminiscences on the History of Time Sharing” John McCarthy</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Winter or Spring of 1983</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html" class="a" target="_blank">Available: </a><a href="http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html" target="_blank">http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html</a></p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">A terrific historical note on where the idea of time-sharing might have come from, including some doubts towards those who cite Strachey’s work [S59] as the pioneering work in this area.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">[R+89] “Mach: A System Software kernel”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: justify;">Richard Rashid, Daniel Julin, Douglas Orr, Richard Sanzi, Robert Baron, Alessandro Forin, David Golub, Michael Jones</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: justify;">COMPCON 89, February 1989</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">Although not the first project on microkernels per se, the Mach project at CMU was well-known and influential; it still lives today deep in the bowels of Mac OS X.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[S59] “Time Sharing in Large Fast Computers”</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">C. Strachey</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Proceedings of the International Conference on Information Processing, UNESCO, June 1959</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">One of the earliest references on time sharing.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 92%;text-align: left;">[S+03] “Improving the Reliability of Commodity Operating Systems” Michael M. Swift, Brian N. Bershad, Henry M. Levy</p><p class="s12" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">SOSP 2003</p><p class="s17" style="padding-left: 41pt;text-indent: 0pt;line-height: 8pt;text-align: left;">The first paper to show how microkernel-like thinking can improve operating system reliability.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="430" height="57" alt="image" src="Image_133.png"/></span></p><p class="s50" style="padding-top: 6pt;text-indent: 0pt;text-align: right;">14</p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part121.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part123.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
