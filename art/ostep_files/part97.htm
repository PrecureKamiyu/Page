<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>9.3 Implementation</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part96.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part98.htm">下一个 &gt;</a></p><p class="s40" style="padding-top: 3pt;padding-left: 44pt;text-indent: 0pt;text-align: left;">9.3 Implementation</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Probably the most amazing thing about lottery scheduling is the sim- plicity of its implementation. All you need is a good random number generator to pick the winning ticket, a data structure to track the pro- cesses of the system (e.g., a list), and the total number of tickets.</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">Let’s assume we keep the processes in a list. Here is an example com- prised of three processes, A, B, and C, each with some number of tickets.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="181" height="36" alt="image" src="Image_104.png"/></span></p><p class="s46" style="padding-left: 2pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Job:A</p><p class="s46" style="text-indent: 0pt;line-height: 7pt;text-align: left;">Tix:100</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="text-indent: 0pt;line-height: 6pt;text-align: left;">Job:B</p><p class="s46" style="text-indent: 0pt;line-height: 7pt;text-align: left;">Tix:50</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="padding-left: 2pt;text-indent: 0pt;line-height: 6pt;text-align: left;">Job:C</p><p class="s46" style="text-indent: 0pt;line-height: 7pt;text-align: left;">Tix:250</p><p style="text-indent: 0pt;text-align: left;"/><p class="s46" style="padding-top: 4pt;padding-left: 104pt;text-indent: 0pt;text-align: left;">head                     NULL</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 68pt;text-indent: 12pt;line-height: 93%;text-align: justify;">To make a scheduling decision, we first have to pick a random number (the winner) from the total number of tickets (400)<span class="s35">2</span> Let’s say we pick the number 300. Then, we simply traverse the list, with a simple counter used to help us find the winner (Figure <span style=" color: #00AEEF;">9.1</span>).</p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 88%;text-align: left;">The code walks the list of processes, adding each ticket value to <span class="s41">counter </span>until the value exceeds <span class="s41">winner</span>. Once that is the case, the current list el- ement is the winner. With our example of the winning ticket being 300, the following takes place. First, <span class="s41">counter </span>is incremented to 100 to ac- count for A’s tickets; because 100 is less than 300, the loop continues. Then <span class="s41">counter </span>would be updated to 150 (B’s tickets), still less than 300 and thus again we continue. Finally, <span class="s41">counter </span>is updated to 400 (clearly greater than 300), and thus we break out of the loop with <span class="s41">current </span>point- ing at C (the winner).</p><p style="padding-bottom: 4pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: left;">To make this process most efficient, it might generally be best to or- ganize the list in sorted order, from the highest number of tickets to the</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="154" height="1" alt="image" src="Image_105.png"/></span></p><p class="s11" style="padding-top: 2pt;padding-left: 68pt;text-indent: 13pt;line-height: 91%;text-align: justify;">2<a href="http://stackoverflow.com/questions/2509679/" class="a" target="_blank">Surprisingly, as pointed out by Bjo¨ rn Lindberg, this can be challenging to do correctly; for more details, see </a><span class="s38">http://stackoverflow.com/questions/2509679/ how-to-generate-a-random-number-from-within-a-range</span><span class="s12">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-top: 3pt;padding-left: 38pt;text-indent: 0pt;text-align: right;">1.0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-left: 1pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Unfairness (Average)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s47" style="padding-left: 38pt;text-indent: 0pt;text-align: right;">0.8</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-left: 38pt;text-indent: 0pt;text-align: right;">0.6</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-left: 38pt;text-indent: 0pt;text-align: right;">0.4</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-left: 38pt;text-indent: 0pt;text-align: right;">0.2</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-left: 38pt;text-indent: 0pt;text-align: right;">0.0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="176" height="176" alt="image" src="Image_106.png"/></span></p><p class="s47" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">1     10     100    1000</p><p class="s47" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">Job Length</p><p style="padding-top: 1pt;padding-left: 116pt;text-indent: 0pt;text-align: left;">Figure 9.2: <b>Lottery Fairness Study</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 89%;text-align: justify;">lowest. The ordering does not affect the correctness of the algorithm; however, it does ensure in general that the fewest number of list itera- tions are taken, especially if there are a few processes that possess most of the tickets.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part96.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part98.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
