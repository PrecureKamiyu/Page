<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part448.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part450.htm">下一个 &gt;</a></p><h4 style="padding-top: 2pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">References</h4><p class="s12" style="padding-top: 7pt;padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[A+07] Nitin Agrawal, William J. Bolosky, John R. Douceur, Jacob R. Lorch A Five-Year Study of File-System Metadata</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">FAST ’07, pages 31–45, February 2007, San Jose, CA</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">An excellent recent analysis of how file systems are actually used. Use the bibliography within to follow the trail of file-system analysis papers back to the early 1980s.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[B07] “ZFS: The Last Word in File Systems” Jeff Bonwick and Bill Moore</p><p style="text-indent: 0pt;text-align: left;"><span><img width="3" height="1" alt="image" src="Image_594.png"/></span></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://opensolaris.org/os/community/zfs/docs/zfs" class="a" target="_blank">Available: </a>http://opensolaris.org/os/community/zfs/docs/zfs last.pdf</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">One of the most recent important file systems, full of features and awesomeness. We should have a chapter on it, and perhaps soon will.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[B02] “The FAT File System” Andries Brouwer September, 2002</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.win.tue.nl/" class="a" target="_blank">Available: </a>http://www.win.tue.nl/˜aeb/linux/fs/fat/fat.html</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: left;">A nice clean description of FAT. The file system kind, not the bacon kind. Though you have to admit, bacon fat probably tastes better.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">[C94] “Inside the Windows NT File System” Helen Custer</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Microsoft Press, 1994</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">A short book about NTFS; there are probably ones with more technical details elsewhere.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[H+88] “Scale and Performance in a Distributed File System”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">John H. Howard, Michael L. Kazar, Sherri G. Menees, David A. Nichols, M. Satyanarayanan, Robert N. Sidebotham, Michael J. West.</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">ACM Transactions on Computing Systems (ACM TOCS), page 51-81, Volume 6, Number 1, February 1988</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">A classic distributed file system; we’ll be learning more about it later, don’t worry.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">[P09] “The Second Extended File System: Internal Layout” Dave Poirier, 2009</p><p style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.nongnu.org/ext2-doc/ext2.html" class="a" target="_blank">Available: </a><a href="http://www.nongnu.org/ext2-doc/ext2.html" target="_blank">http://www.nongnu.org/ext2-doc/ext2.html</a></p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">Some details on ext2, a very simple Linux file system based on FFS, the Berkeley Fast File System. We’ll be reading about it in the next chapter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[RT74] “The U<span class="s18">NIX </span>Time-Sharing System”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">M. Ritchie and K. Thompson</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">CACM, Volume 17:7, pages 365-375, 1974</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">The original paper about <span class="s12">U</span><span class="s18">NIX</span>. Read it to see the underpinnings of much of modern operating systems.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 91%;text-align: left;">[S00] “UBC: An Efficient Unified I/O and Memory Caching Subsystem for NetBSD” Chuck Silvers</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">FREENIX, 2000</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">A nice paper about NetBSD’s integration of file-system buffer caching and the virtual-memory page cache. Many other systems do the same type of thing.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">[S+96] “Scalability in the XFS File System”</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 92%;text-align: left;">Adan Sweeney, Doug Doucette, Wei Hu, Curtis Anderson, Mike Nishimoto, Geoff Peck</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 8pt;text-align: left;">USENIX ’96, January 1996, San Diego, CA</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;line-height: 94%;text-align: justify;">The first attempt to make scalability of operations, including things like having millions of files in a directory, a central focus. A great example of pushing an idea to the extreme. The key idea behind this file system: everything is a tree. We should have a chapter on this file system too.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part448.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part450.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
