<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>7.2 Static Linking</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P7000497027000000000000000006034" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P70004970270000000000000000447C4" data-uri="chapter07.xhtml#P70004970270000000000000000447C4" epub:type="title"><span class="pcalibre label pcalibre1">7.2 </span>Static Linking</h1></header>
<p id="P70004970270000000000000000447C5" data-uri="chapter07.xhtml#P70004970270000000000000000447C5" class="pcalibre1 pcalibre calibre2"><i class="calibre5 pcalibre pcalibre1">Static linkers</i> such as the Linux <span class="smallcaps pcalibre pcalibre1">ld </span>program take as input a collection of relocatable object files and command-line arguments and generate as output a fully linked executable object file that can be loaded and run. The input relocatable object files consist of various code and data sections, where each section is a contiguous sequence of bytes. Instructions are in one section, initialized global variables are in another section, and uninitialized variables are in yet another section.</p>
<p id="P70004970270000000000000000447C6" data-uri="chapter07.xhtml#P70004970270000000000000000447C6" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006038" title="673" data-uri="chapter07.xhtml#P7000497027000000000000000006038" epub:type="pagebreak"></span>To build the executable, the linker must perform two main tasks:</p>
<ol class="pcalibre1 steplist pcalibre" id="P70004970270000000000000000447C7" data-uri="chapter07.xhtml#P70004970270000000000000000447C7">
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000447C8" data-uri="chapter07.xhtml#P70004970270000000000000000447C8"> 
<p id="P70004970270000000000000000447C9" data-uri="chapter07.xhtml#P70004970270000000000000000447C9" class="pcalibre calibre3 pcalibre1"><span class="pcalibre label pcalibre1">Step </span><span class="pcalibre label pcalibre1">1. </span><span class="pcalibre leadin pcalibre1">Symbol resolution. </span>Object files define and reference <i class="calibre5 pcalibre pcalibre1">symbols</i>, where each symbol corresponds to a function, a global variable, or a <i class="calibre5 pcalibre pcalibre1">static variable</i> (i.e., any C variable declared with the <code id="P70004970270000000000000000447CA" data-uri="chapter07.xhtml#P70004970270000000000000000447CA" class="pcalibre1 calibre8 pcalibre">static</code> attribute). The purpose of symbol resolution is to associate each symbol <i class="calibre5 pcalibre pcalibre1">reference</i> with exactly one symbol <i class="calibre5 pcalibre pcalibre1">definition</i>.</p></li>
<li class="calibre12 pcalibre pcalibre1" id="P70004970270000000000000000447CB" data-uri="chapter07.xhtml#P70004970270000000000000000447CB"> 
<p id="P70004970270000000000000000447CC" data-uri="chapter07.xhtml#P70004970270000000000000000447CC" class="pcalibre calibre3 pcalibre1"><span class="pcalibre label pcalibre1">Step </span><span class="pcalibre label pcalibre1">2. </span><span class="pcalibre leadin pcalibre1">Relocation. </span>Compilers and assemblers generate code and data sections that start at address 0. The linker <i class="calibre5 pcalibre pcalibre1">relocates</i> these sections by associating a memory location with each symbol definition, and then modifying all of the references to those symbols so that they point to this memory location. The linker blindly performs these relocations using detailed instructions, generated by the assembler, called <i class="calibre5 pcalibre pcalibre1">relocation entries</i>.</p></li>
</ol>
<p id="P70004970270000000000000000447CD" data-uri="chapter07.xhtml#P70004970270000000000000000447CD" class="pcalibre1 pcalibre calibre2">The sections that follow describe these tasks in more detail. As you read, keep in mind some basic facts about linkers: Object files are merely collections of blocks of bytes. Some of these blocks contain program code, others contain program data, and others contain data structures that guide the linker and loader. A linker concatenates blocks together, decides on run-time locations for the concatenated blocks, and modifies various locations within the code and data blocks. Linkers have minimal understanding of the target machine. The compilers and assemblers that generate the object files have already done most of the work.</p>
</section></body></html>
