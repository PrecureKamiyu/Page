<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>10.3 Opening and Closing Files</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <script src="js/format_lg_obj.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P70004970270000000000000000078E1" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P70004970270000000000000000463D5" data-uri="chapter10.xhtml#P70004970270000000000000000463D5" epub:type="title"><span class="pcalibre label pcalibre1">10.3 </span>Opening and Closing Files</h1></header>
<p id="P70004970270000000000000000463D6" data-uri="chapter10.xhtml#P70004970270000000000000000463D6" class="pcalibre1 pcalibre calibre2">A process opens an existing file or creates a new file by calling the open function.</p>
<pre id="P70004970270000000000000000463D7" data-uri="chapter10.xhtml#P70004970270000000000000000463D7" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000463D8" data-uri="chapter10.xhtml#P70004970270000000000000000463D8" class="calibre10 pcalibre pcalibre1">
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
int open(char *filename, int flags, mode_t mode);
				Returns: new file descriptor if OK, âˆ’1 on error
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P70004970270000000000000000463D9" data-uri="chapter10.xhtml#P70004970270000000000000000463D9">The <code id="P70004970270000000000000000463DA" data-uri="chapter10.xhtml#P70004970270000000000000000463DA" class="pcalibre1 calibre8 pcalibre">open</code> function converts a <code id="P70004970270000000000000000463DB" data-uri="chapter10.xhtml#P70004970270000000000000000463DB" class="pcalibre1 calibre8 pcalibre">filename</code> to a file descriptor and returns the descriptor number. The descriptor returned is always the smallest descriptor that is not currently open in the process. The <code id="P70004970270000000000000000463DC" data-uri="chapter10.xhtml#P70004970270000000000000000463DC" class="pcalibre1 calibre8 pcalibre">flags</code> argument indicates how the process intends to access the file:</p>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000463DD" data-uri="chapter10.xhtml#P70004970270000000000000000463DD">
<li id="P70004970270000000000000000463DE" data-uri="chapter10.xhtml#P70004970270000000000000000463DE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000463DF" data-uri="chapter10.xhtml#P70004970270000000000000000463DF" class="calibre13 pcalibre pcalibre1">O_RDONLY. Reading only</p></li>
<li id="P70004970270000000000000000463E0" data-uri="chapter10.xhtml#P70004970270000000000000000463E0" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000463E1" data-uri="chapter10.xhtml#P70004970270000000000000000463E1" class="calibre13 pcalibre pcalibre1">O_WRONLY. Writing only</p></li>
<li id="P70004970270000000000000000463E2" data-uri="chapter10.xhtml#P70004970270000000000000000463E2" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000463E3" data-uri="chapter10.xhtml#P70004970270000000000000000463E3" class="calibre13 pcalibre pcalibre1">O_RDWR. Reading and writing</p></li>
</ul>
<p class="pcalibre1 pcalibre calibre2" id="P70004970270000000000000000463E4" data-uri="chapter10.xhtml#P70004970270000000000000000463E4">For example, here is how to open an existing file for reading:</p>
<pre id="P70004970270000000000000000463E5" data-uri="chapter10.xhtml#P70004970270000000000000000463E5" class="calibre9 pcalibre pcalibre1"><code id="P70004970270000000000000000463E6" data-uri="chapter10.xhtml#P70004970270000000000000000463E6" class="calibre10 pcalibre pcalibre1">fd = Open("foo.txt", O_RDONLY, 0);</code></pre>
<p id="P70004970270000000000000000463E7" data-uri="chapter10.xhtml#P70004970270000000000000000463E7" class="pcalibre1 pcalibre calibre2">The <code id="P70004970270000000000000000463E8" data-uri="chapter10.xhtml#P70004970270000000000000000463E8" class="pcalibre1 calibre8 pcalibre">flags</code> argument can also be <span class="smallcaps pcalibre pcalibre1">or</span>ed with one or more bit masks that provide additional instructions for writing:</p>
<ul class="pcalibre ul_none pcalibre1" id="P70004970270000000000000000463E9" data-uri="chapter10.xhtml#P70004970270000000000000000463E9">
<li id="P70004970270000000000000000463EA" data-uri="chapter10.xhtml#P70004970270000000000000000463EA" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000463EB" data-uri="chapter10.xhtml#P70004970270000000000000000463EB" class="calibre13 pcalibre pcalibre1">O_CREAT. If the file doesn't exist, then create a <i class="calibre5 pcalibre pcalibre1">truncated</i> (empty) version of it.</p></li>
<li id="P70004970270000000000000000463EC" data-uri="chapter10.xhtml#P70004970270000000000000000463EC" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000463ED" data-uri="chapter10.xhtml#P70004970270000000000000000463ED" class="calibre13 pcalibre pcalibre1">O_TRUNC. If the file already exists, then truncate it.</p></li>
<li id="P70004970270000000000000000463EE" data-uri="chapter10.xhtml#P70004970270000000000000000463EE" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000463EF" data-uri="chapter10.xhtml#P70004970270000000000000000463EF" class="calibre13 pcalibre pcalibre1">O_APPEND. Before each write operation, set the file position to the end of the file.</p></li>
</ul>
<figure class="pcalibre5 figure pcalibre" id="P70004970270000000000000000078FD" data-uri="chapter10.xhtml#P70004970270000000000000000078FD">
<span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000078FE" title="894" data-uri="chapter10.xhtml#P70004970270000000000000000078FE" epub:type="pagebreak"></span>
<table id="P70004970270000000000000000463F0" data-uri="chapter10.xhtml#P70004970270000000000000000463F0" class="pcalibre largetable pcalibre1">
<thead class="pcalibre1 pcalibre calibre16">
<tr class="pcalibre calibre17 pcalibre1">
<th id="P70004970270000000000000000463F1" data-uri="chapter10.xhtml#P70004970270000000000000000463F1" class="calibre18 pcalibre pcalibre1">Mask</th>
<th id="P70004970270000000000000000463F2" data-uri="chapter10.xhtml#P70004970270000000000000000463F2" class="calibre18 pcalibre pcalibre1">Description</th>
</tr>
</thead>
<tbody class="calibre19 pcalibre pcalibre1">
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463F3" data-uri="chapter10.xhtml#P70004970270000000000000000463F3" class="calibre20 pcalibre pcalibre1">S_IRUSR</td>
<td id="P70004970270000000000000000463F4" data-uri="chapter10.xhtml#P70004970270000000000000000463F4" class="calibre20 pcalibre pcalibre1">User (owner) can read this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463F5" data-uri="chapter10.xhtml#P70004970270000000000000000463F5" class="calibre20 pcalibre pcalibre1">S_IWUSR</td>
<td id="P70004970270000000000000000463F6" data-uri="chapter10.xhtml#P70004970270000000000000000463F6" class="calibre20 pcalibre pcalibre1">User (owner) can write this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463F7" data-uri="chapter10.xhtml#P70004970270000000000000000463F7" class="calibre20 pcalibre pcalibre1">S_IXUSR</td>
<td id="P70004970270000000000000000463F8" data-uri="chapter10.xhtml#P70004970270000000000000000463F8" class="calibre20 pcalibre pcalibre1">User (owner) can execute this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463F9" data-uri="chapter10.xhtml#P70004970270000000000000000463F9" class="calibre20 pcalibre pcalibre1">S_IRGRP</td>
<td id="P70004970270000000000000000463FA" data-uri="chapter10.xhtml#P70004970270000000000000000463FA" class="calibre20 pcalibre pcalibre1">Members of the owner's group can read this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463FB" data-uri="chapter10.xhtml#P70004970270000000000000000463FB" class="calibre20 pcalibre pcalibre1">S_IWGRP</td>
<td id="P70004970270000000000000000463FC" data-uri="chapter10.xhtml#P70004970270000000000000000463FC" class="calibre20 pcalibre pcalibre1">Members of the owner's group can write this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463FD" data-uri="chapter10.xhtml#P70004970270000000000000000463FD" class="calibre20 pcalibre pcalibre1">S_IXGRP</td>
<td id="P70004970270000000000000000463FE" data-uri="chapter10.xhtml#P70004970270000000000000000463FE" class="calibre20 pcalibre pcalibre1">Members of the owner's group can execute this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P70004970270000000000000000463FF" data-uri="chapter10.xhtml#P70004970270000000000000000463FF" class="calibre20 pcalibre pcalibre1">S_IROTH</td>
<td id="P7000497027000000000000000046400" data-uri="chapter10.xhtml#P7000497027000000000000000046400" class="calibre20 pcalibre pcalibre1">Others (anyone) can read this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000046401" data-uri="chapter10.xhtml#P7000497027000000000000000046401" class="calibre20 pcalibre pcalibre1">S_IWOTH</td>
<td id="P7000497027000000000000000046402" data-uri="chapter10.xhtml#P7000497027000000000000000046402" class="calibre20 pcalibre pcalibre1">Others (anyone) can write this file</td>
</tr>
<tr class="pcalibre calibre17 pcalibre1">
<td id="P7000497027000000000000000046403" data-uri="chapter10.xhtml#P7000497027000000000000000046403" class="calibre20 pcalibre pcalibre1">S_IXOTH</td>
<td id="P7000497027000000000000000046404" data-uri="chapter10.xhtml#P7000497027000000000000000046404" class="calibre20 pcalibre pcalibre1">Others (anyone) can execute this file</td>
</tr>
</tbody>
</table>
<figcaption id="P7000497027000000000000000046405" data-uri="chapter10.xhtml#P7000497027000000000000000046405" class="calibre11 pcalibre pcalibre1"><header class="pcalibre halftitlepage pcalibre1"><h1 class="title3 pcalibre pcalibre1" id="P7000497027000000000000000046406" data-uri="chapter10.xhtml#P7000497027000000000000000046406" epub:type="title"><span class="pcalibre1 label2 pcalibre">Figure </span><span class="number pcalibre pcalibre1">10.2 </span>Access permission bits.</h1></header>
<div class="caption pcalibre pcalibre1" id="P7000497027000000000000000046407" data-uri="chapter10.xhtml#P7000497027000000000000000046407"><p id="P7000497027000000000000000046408" data-uri="chapter10.xhtml#P7000497027000000000000000046408" class="pcalibre calibre3 pcalibre1">Defined in <code id="P7000497027000000000000000046409" data-uri="chapter10.xhtml#P7000497027000000000000000046409" class="pcalibre1 calibre8 pcalibre">sys/stat.h.</code></p></div></figcaption>
</figure>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000004640A" data-uri="chapter10.xhtml#P700049702700000000000000004640A">For example, here is how you might open an existing file with the intent of appending some data:</p>
<pre id="P700049702700000000000000004640B" data-uri="chapter10.xhtml#P700049702700000000000000004640B" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004640C" data-uri="chapter10.xhtml#P700049702700000000000000004640C" class="calibre10 pcalibre pcalibre1">fd = Open("foo.txt", O_WRONLY|O_APPEND, 0);</code></pre>
<p id="P700049702700000000000000004640D" data-uri="chapter10.xhtml#P700049702700000000000000004640D" class="pcalibre1 pcalibre calibre2">The <code id="P700049702700000000000000004640E" data-uri="chapter10.xhtml#P700049702700000000000000004640E" class="pcalibre1 calibre8 pcalibre">mode</code> argument specifies the access permission bits of new files. The symbolic names for these bits are shown in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="#P70004970270000000000000000078FD"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">10.2</span></a>.</p>
<p id="P700049702700000000000000004640F" data-uri="chapter10.xhtml#P700049702700000000000000004640F" class="pcalibre1 pcalibre calibre2">As part of its context, each process has a <code id="P7000497027000000000000000046410" data-uri="chapter10.xhtml#P7000497027000000000000000046410" class="pcalibre1 calibre8 pcalibre">umask</code> that is set by calling the <code id="P7000497027000000000000000046411" data-uri="chapter10.xhtml#P7000497027000000000000000046411" class="pcalibre1 calibre8 pcalibre">umask</code> function. When a process creates a new file by calling the <code id="P7000497027000000000000000046412" data-uri="chapter10.xhtml#P7000497027000000000000000046412" class="pcalibre1 calibre8 pcalibre">open</code> function with some <code id="P7000497027000000000000000046413" data-uri="chapter10.xhtml#P7000497027000000000000000046413" class="pcalibre1 calibre8 pcalibre">mode</code> argument, then the access permission bits of the file are set to <code id="P7000497027000000000000000046414" data-uri="chapter10.xhtml#P7000497027000000000000000046414" class="pcalibre1 calibre8 pcalibre">mode &amp; ~umask</code>. For example, suppose we are given the following default values for <code id="P7000497027000000000000000046415" data-uri="chapter10.xhtml#P7000497027000000000000000046415" class="pcalibre1 calibre8 pcalibre">mode</code> and <code id="P7000497027000000000000000046416" data-uri="chapter10.xhtml#P7000497027000000000000000046416" class="pcalibre1 calibre8 pcalibre">umask</code>:</p>
<pre id="P7000497027000000000000000046417" data-uri="chapter10.xhtml#P7000497027000000000000000046417" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000046418" data-uri="chapter10.xhtml#P7000497027000000000000000046418" class="calibre10 pcalibre pcalibre1">
#define DEF_MODE S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH
#define DEF_UMASK S_IWGRP|S_IWOTH
</code></pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000046419" data-uri="chapter10.xhtml#P7000497027000000000000000046419">Then the following code fragment creates a new file in which the owner of the file has read and write permissions, and all other users have read permissions:</p>
<pre id="P700049702700000000000000004641A" data-uri="chapter10.xhtml#P700049702700000000000000004641A" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004641B" data-uri="chapter10.xhtml#P700049702700000000000000004641B" class="calibre10 pcalibre pcalibre1">
umask(DEF_UMASK);
fd = Open("foo.txt", O_CREAT|O_TRUNC|O_WRONLY, DEF_MODE);
</code></pre>
<p id="P700049702700000000000000004641C" data-uri="chapter10.xhtml#P700049702700000000000000004641C" class="pcalibre1 pcalibre calibre2">Finally, a process closes an open file by calling the <code id="P700049702700000000000000004641D" data-uri="chapter10.xhtml#P700049702700000000000000004641D" class="pcalibre1 calibre8 pcalibre">close</code> function.</p>
<pre id="P700049702700000000000000004641E" data-uri="chapter10.xhtml#P700049702700000000000000004641E" class="calibre9 pcalibre pcalibre1"><code id="P700049702700000000000000004641F" data-uri="chapter10.xhtml#P700049702700000000000000004641F" class="calibre10 pcalibre pcalibre1">
#include &lt;unistd.h&gt;
int close(int fd);
							Returns: 0 if OK, âˆ’1 on error
</code>
</pre>
<p class="pcalibre1 pcalibre calibre2" id="P7000497027000000000000000046420" data-uri="chapter10.xhtml#P7000497027000000000000000046420"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000007930" title="895" data-uri="chapter10.xhtml#P7000497027000000000000000007930" epub:type="pagebreak"></span>Closing a descriptor that is already closed is an error.</p>
<section id="P7000497027000000000000000007931" data-uri="chapter10.xhtml#P7000497027000000000000000007931" epub:type="practice" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title1 pcalibre1" id="P7000497027000000000000000046421" data-uri="chapter10.xhtml#P7000497027000000000000000046421" epub:type="title"><span class="pcalibre label pcalibre1">Practice Problem </span><span class="pcalibre label pcalibre1">10.1 </span>(solution page <a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" epub:type="pagebreak" href="fileP7000497027000000000000000007B24.xhtml#P7000497027000000000000000007B41">915</a>)</h1></header>
<ol class="practicelist pcalibre pcalibre1" id="P7000497027000000000000000046422" data-uri="chapter10.xhtml#P7000497027000000000000000046422">
<li class="general-problem pcalibre pcalibre1" id="P7000497027000000000000000046423" data-uri="chapter10.xhtml#P7000497027000000000000000046423">
<div class="edition pcalibre pcalibre1" id="P7000497027000000000000000046424" data-uri="chapter10.xhtml#P7000497027000000000000000046424"><p id="P7000497027000000000000000046425" data-uri="chapter10.xhtml#P7000497027000000000000000046425" class="pcalibre calibre3 pcalibre1">What is the output of the following program?</p>
<pre id="P7000497027000000000000000046426" data-uri="chapter10.xhtml#P7000497027000000000000000046426" class="calibre9 pcalibre pcalibre1"><code id="P7000497027000000000000000046427" data-uri="chapter10.xhtml#P7000497027000000000000000046427" class="calibre10 pcalibre pcalibre1">
1	#include "csapp.h"
2	
3	int main()
4	{
5		int fd1, fd2;
6	
7		fd1 = Open("foo.txt", O_RDONLY, 0);
8		Close(fd1);
9		fd2 = Open("baz.txt", O_RDONLY, 0);
10		printf("fd2 = %d\n", fd2);
11		exit(0);
12	}
</code></pre>
</div></li>
</ol>
</section>
</section></body></html>
