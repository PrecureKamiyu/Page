<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>1.1 Information Is Bits + Context</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section id="P70004970270000000000000000000BB" class="pcalibre halftitlepage pcalibre1"><header class="calibre1 pcalibre pcalibre1"><h1 class="pcalibre title pcalibre1" id="P700049702700000000000000003E4BF" data-uri="chapter01.xhtml#P700049702700000000000000003E4BF" epub:type="title"><span class="pcalibre label pcalibre1">1.1 </span>Information Is Bits + Context</h1></header>
<p id="P700049702700000000000000003E4C0" data-uri="chapter01.xhtml#P700049702700000000000000003E4C0" class="pcalibre1 pcalibre calibre2">Our <code id="P700049702700000000000000003E4C1" data-uri="chapter01.xhtml#P700049702700000000000000003E4C1" class="pcalibre1 calibre8 pcalibre">hello</code> program begins life as a <i class="calibre5 pcalibre pcalibre1">source program</i> (or <i class="calibre5 pcalibre pcalibre1">source file</i>) that the programmer creates with an editor and saves in a text file called <code id="P700049702700000000000000003E4C2" data-uri="chapter01.xhtml#P700049702700000000000000003E4C2" class="pcalibre1 calibre8 pcalibre">hello.c.</code> The source program is a sequence of bits, each with a value of 0 or 1, organized in 8-bit chunks called <i class="calibre5 pcalibre pcalibre1">bytes</i>. Each byte represents some text character in the program.</p>
<p id="P700049702700000000000000003E4C3" data-uri="chapter01.xhtml#P700049702700000000000000003E4C3" class="pcalibre1 pcalibre calibre2">Most computer systems represent text characters using the ASCII standard that represents each character with a unique byte-size integer value.<a class="noteref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" id="r__P7000497027000000000000000000271" epub:type="noteref" href="#P7000497027000000000000000000271">1</a> For example, <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000007F.xhtml#P70004970270000000000000000000B4"><span class="pcalibre label pcalibre1">Figure </span><span class="pcalibre label pcalibre1">1.2</span></a> shows the ASCII representation of the <code id="P700049702700000000000000003E4C4" data-uri="chapter01.xhtml#P700049702700000000000000003E4C4" class="pcalibre1 calibre8 pcalibre">hello.c</code> program.</p><aside class="footnote pcalibre5 pcalibre" id="P7000497027000000000000000000271" data-uri="chapter01.xhtml#P7000497027000000000000000000271" epub:type="footnote"><p class="pcalibre calibre3 pcalibre1"><span class="pcalibre1 number2 pcalibre"><a href="#r__P7000497027000000000000000000271" class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1">1. </a></span>Other encoding methods are used to represent text in non-English languages. See the aside on page 50 for a discussion on this.</p></aside>
<p id="P700049702700000000000000003E4C5" data-uri="chapter01.xhtml#P700049702700000000000000003E4C5" class="pcalibre1 pcalibre calibre2">The <code id="P700049702700000000000000003E4C6" data-uri="chapter01.xhtml#P700049702700000000000000003E4C6" class="pcalibre1 calibre8 pcalibre">hello.c</code> program is stored in a file as a sequence of bytes. Each byte has an integer value that corresponds to some character. For example, the first byte has the integer value 35, which corresponds to the character `<code id="P700049702700000000000000003E4C7" data-uri="chapter01.xhtml#P700049702700000000000000003E4C7" class="pcalibre1 calibre8 pcalibre">#</code>'. The second byte has the integer value 105, which corresponds to the character <code id="P700049702700000000000000003E4C8" data-uri="chapter01.xhtml#P700049702700000000000000003E4C8" class="pcalibre1 calibre8 pcalibre">'i'</code>, and so on. Notice that each text line is terminated by the invisible <i class="calibre5 pcalibre pcalibre1">newline</i> character <code id="P700049702700000000000000003E4C9" data-uri="chapter01.xhtml#P700049702700000000000000003E4C9" class="pcalibre1 calibre8 pcalibre">`\n'</code>, which is represented by the integer value 10. Files such as <code id="P700049702700000000000000003E4CA" data-uri="chapter01.xhtml#P700049702700000000000000003E4CA" class="pcalibre1 calibre8 pcalibre">hello.c</code> that consist exclusively of ASCII characters are known as <i class="calibre5 pcalibre pcalibre1">text files</i>. All other files are known as <i class="calibre5 pcalibre pcalibre1">binary files</i>.</p>
<p id="P700049702700000000000000003E4CB" data-uri="chapter01.xhtml#P700049702700000000000000003E4CB" class="pcalibre1 pcalibre calibre2">The representation of <code id="P700049702700000000000000003E4CC" data-uri="chapter01.xhtml#P700049702700000000000000003E4CC" class="pcalibre1 calibre8 pcalibre">hello.c</code> illustrates a fundamental idea: All information in a system—including disk files, programs stored in memory, user data stored in memory, and data transferred across a network—is represented as a bunch of bits. The only thing that distinguishes different data objects is the context in which we view them. For example, in different contexts, the same sequence of bytes might represent an integer, floating-point number, character string, or machine instruction.</p>
<p id="P700049702700000000000000003E4CD" data-uri="chapter01.xhtml#P700049702700000000000000003E4CD" class="pcalibre1 pcalibre calibre2">As programmers, we need to understand machine representations of numbers because they are not the same as integers and real numbers. They are finite</p>
<aside class="sidebar pcalibre5 pcalibre" id="P70004970270000000000000000000CB" data-uri="chapter01.xhtml#P70004970270000000000000000000CB"><header class="pcalibre halftitlepage pcalibre1"><h1 class="pcalibre1 title2 pcalibre" id="P700049702700000000000000003E4CE" data-uri="chapter01.xhtml#P700049702700000000000000003E4CE" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P70004970270000000000000000000CD" title="4" data-uri="chapter01.xhtml#P70004970270000000000000000000CD" epub:type="pagebreak"></span><span class="pcalibre label1 pcalibre1">Aside </span>Origins of the C programming language</h1></header>
<p id="P700049702700000000000000003E4CF" data-uri="chapter01.xhtml#P700049702700000000000000003E4CF" class="calibre13 pcalibre pcalibre1">C was developed from 1969 to 1973 by Dennis Ritchie of Bell Laboratories. The American National Standards Institute (ANSI) ratified the ANSI C standard in 1989, and this standardization later became the responsibility of the International Standards Organization (ISO). The standards define the C language and a set of library functions known as the <i class="calibre5 pcalibre pcalibre1">C standard library</i>. Kernighan and Ritchie describe ANSI C in their classic book, which is known affectionately as "K&amp;R" [<a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000B39D.xhtml#P700049702700000000000000000B41C">61</a>]. In Ritchie's words [<a class="ulink pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000B39D.xhtml#P700049702700000000000000000B45C">92</a>], C is "quirky, flawed, and an enormous success." So why the success?</p>
<ul id="P700049702700000000000000003E4D0" data-uri="chapter01.xhtml#P700049702700000000000000003E4D0" class="calibre28 pcalibre pcalibre1">
<li id="P700049702700000000000000003E4D1" data-uri="chapter01.xhtml#P700049702700000000000000003E4D1" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E4D2" data-uri="chapter01.xhtml#P700049702700000000000000003E4D2" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">C was closely tied with the Unix operating system. </span>C was developed from the beginning as the system programming language for Unix. Most of the Unix kernel (the core part of the operating system), and all of its supporting tools and libraries, were written in C. As Unix became popular in universities in the late 1970s and early 1980s, many people were exposed to C and found that they liked it. Since Unix was written almost entirely in C, it could be easily ported to new machines, which created an even wider audience for both C and Unix.</p></li>
<li id="P700049702700000000000000003E4D3" data-uri="chapter01.xhtml#P700049702700000000000000003E4D3" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E4D4" data-uri="chapter01.xhtml#P700049702700000000000000003E4D4" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">C is a small, simple language. </span>The design was controlled by a single person, rather than a committee, and the result was a clean, consistent design with little baggage. The K&amp;R book describes the complete language and standard library, with numerous examples and exercises, in only 261 pages. The simplicity of C made it relatively easy to learn and to port to different computers.</p></li>
<li id="P700049702700000000000000003E4D5" data-uri="chapter01.xhtml#P700049702700000000000000003E4D5" class="calibre12 pcalibre pcalibre1"><p id="P700049702700000000000000003E4D6" data-uri="chapter01.xhtml#P700049702700000000000000003E4D6" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">C was designed for a practical purpose. </span>C was designed to implement the Unix operating system. Later, other people found that they could write the programs they wanted, without the language getting in the way.</p></li>
</ul>
<p id="P700049702700000000000000003E4D7" data-uri="chapter01.xhtml#P700049702700000000000000003E4D7" class="pcalibre calibre3 pcalibre1">C is the language of choice for system-level programming, and there is a huge installed base of application-level programs as well. However, it is not perfect for all programmers and all situations. C pointers are a common source of confusion and programming errors. C also lacks explicit support for useful abstractions such as classes, objects, and exceptions. Newer languages such as C++ and Java address these issues for application-level programs.</p>
</aside>
<p class="pcalibre1 pcalibre calibre2" id="P700049702700000000000000003E4D8" data-uri="chapter01.xhtml#P700049702700000000000000003E4D8">approximations that can behave in unexpected ways. This fundamental idea is explored in detail in <a class="pcalibre xref1 pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000000279.xhtml#P7000497027000000000000000000279"><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre label pcalibre1">2</span></a>.</p>
</section></body></html>
