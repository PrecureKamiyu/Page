<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>39.9 Removing Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part424.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part426.htm">下一个 &gt;</a></p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">39.9 Removing Files</p><p style="padding-top: 7pt;padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: justify;">At this point, we know how to create files and access them, either se- quentially or not. But how do you delete files? If you’ve used U<span class="s7">NIX</span>, you probably think you know: just run the program <span class="s41">rm</span>. But what system call does <span class="s41">rm </span>use to remove a file?</p><p style="padding-left: 68pt;text-indent: 11pt;line-height: 88%;text-align: justify;">Let’s use our old friend <span class="s41">strace </span>again to find out. Here we remove that pesky file “foo”:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">prompt&gt; strace rm foo</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">...</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">unlink(&quot;foo&quot;)           = 0</p><p class="s38" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 68pt;text-indent: 12pt;line-height: 89%;text-align: left;">We’ve removed a bunch of unrelated cruft from the traced output, leaving just a single call to the mysteriously-named system call <span class="s41">unlink()</span>. As you can see, <span class="s41">unlink() </span>just takes the name of the file to be removed, and returns zero upon success. But this leads us to a great puzzle: why is this system call named “unlink”? Why not just “remove” or “delete”. To understand the answer to this puzzle, we must first understand more than just files, but also directories.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part424.htm">&lt; 上一个</a><span> | </span><a href="../ostep.html">内容</a><span> | </span><a href="part426.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
