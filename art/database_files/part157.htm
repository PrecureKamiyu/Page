<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>7.6   Decomposition Using Multivalued Dependencies</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part156.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part158.htm">下一个 &gt;</a></p><p class="s65" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark139">7.6   </a><span style=" color: #00AEEF;">Decomposition Using Multivalued Dependencies</span><a name="bookmark167">&zwnj;</a></p><p style="padding-top: 11pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">Some relation schemas, even though they are in <span class="s44">BCNF</span>, do not seem to be suﬃciently normalized, in the sense that they still suﬀer from the problem of repetition of infor- mation. Consider a variation of the university organization where an instructor may be associated with multiple departments, and we have a relation:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2045.png"/></span></p><p style="padding-left: 63pt;text-indent: 0pt;text-align: center;"><i>inst </i>(<span class="s69">ID</span>, <i>dept name</i>, <i>name</i>, <i>street</i>, <i>city</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">The astute reader will recognize this schema as a non-<span class="s44">BCNF </span>schema because of the functional dependency</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 63pt;text-indent: 0pt;text-align: center;"><span class="s69">ID </span><span class="s86">→ </span>name<span class="p">, </span>street<span class="p">, </span>city</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">and because <span class="s69">ID </span>is not a key for <i>inst</i>.</p><p style="padding-top: 1pt;padding-left: 88pt;text-indent: 17pt;line-height: 92%;text-align: justify;">Further assume that an instructor may have several addresses (say, a winter home and a summer home). Then, we no longer wish to enforce the functional dependency “<span class="s69">ID</span><span class="s86">→ </span><i>street</i>, <i>city</i>”, though, we still want to enforce “<span class="s69">ID </span><span class="s86">→ </span><i>name</i>” (i.e., the university is not dealing with instructors who operate under multiple aliases!). Following the <span class="s44">BCNF</span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">decomposition algorithm, we obtain two schemas:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 213pt;text-indent: 0pt;text-align: left;"><i>r</i><span class="s98">1</span> (<span class="s69">ID</span>, <i>name</i>)</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2046.png"/></span></p><p style="padding-left: 213pt;text-indent: 0pt;text-align: left;"><i>r</i><span class="s98">2</span> (<span class="s69">ID</span>, <i>dept name</i>, <i>street</i>, <i>city</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: left;">Both of these are in <span class="s44">BCNF </span>(recall that an instructor can be associated with multiple departments and a department may have several instructors, and therefore, neither “<span class="s69">ID</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2047.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2048.png"/></span></p><p class="s13" style="padding-left: 88pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span class="s86">→ </span>dept name<span class="p">” nor “</span>dept name <span class="s86">→ </span><span class="s69">ID</span><span class="p">” hold).</span></p><p style="padding-left: 106pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Despite <i>r</i><span class="s98">2</span> being in <span class="s44">BCNF</span>, there is redundancy. We repeat the address information</p><p style="padding-left: 88pt;text-indent: 0pt;text-align: left;">of each residence of an instructor once for each department with which the instructor is associated. We could solve this problem by decomposing <i>r</i><span class="s98">2</span> further into:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2049.png"/></span></p><p style="padding-left: 63pt;text-indent: 0pt;text-align: center;"><i>r</i><span class="s98">21</span> (<i>dept name</i>, <span class="s69">ID</span>)</p><p style="padding-left: 62pt;text-indent: 0pt;text-align: center;"><i>r</i><span class="s98">22</span> (<span class="s69">ID</span>, <i>street</i>, <i>city</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">but there is no constraint that leads us to do this.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">To deal with this problem, we must deﬁne a new form of constraint, called a <i>mul- tivalued dependency</i>. As we did for functional dependencies, we shall use multivalued dependencies to deﬁne a normal form for relation schemas. This normal form, called <b>fourth normal form </b>(<span class="s44">4NF</span>), is more restrictive than <span class="s44">BCNF</span>. We shall see that every <span class="s44">4NF </span>schema is also in <span class="s44">BCNF </span>but there are <span class="s44">BCNF </span>schemas that are not in <span class="s44">4NF</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:216.944pt" cellspacing="0"><tr style="height:12pt"><td style="width:18pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C7EAFB"><p class="s242" style="text-indent: 0pt;line-height: 10pt;text-align: center;">α</p></td><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C7EAFB"><p class="s242" style="padding-right: 3pt;text-indent: 0pt;line-height: 10pt;text-align: center;">β</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C7EAFB"><p class="s243" style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><span class="s70">R </span>― <i>α </i>― <i>β</i></p></td></tr><tr style="height:24pt"><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C7EAFB"><p class="s70" style="padding-left: 5pt;text-indent: 0pt;line-height: 9pt;text-align: left;">t<span class="s244">1</span></p><p class="s70" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">t<span class="s244">2</span></p></td><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">a<span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">i</span></p><p class="s70" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">a<span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">i</span></p></td><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 8pt;text-indent: 0pt;line-height: 9pt;text-align: left;">a<span class="s245">i</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">j</span></p><p class="s70" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">b<span class="s245">i</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>b<span class="s245">j</span></p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 8pt;text-indent: 0pt;line-height: 9pt;text-align: left;">a<span class="s245">j</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">n</span></p><p class="s70" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">b<span class="s245">j</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>b<span class="s245">n</span></p></td></tr><tr style="height:24pt"><td style="width:18pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C7EAFB"><p class="s70" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">t<span class="s244">3</span></p><p class="s70" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">t<span class="s244">4</span></p></td><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 6pt;text-indent: 0pt;line-height: 10pt;text-align: left;">a<span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">i</span></p><p class="s70" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">a<span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">i</span></p></td><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 8pt;text-indent: 0pt;line-height: 10pt;text-align: left;">a<span class="s245">i</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">j</span></p><p class="s70" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">b<span class="s245">i</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>b<span class="s245">j</span></p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s70" style="padding-left: 8pt;text-indent: 0pt;line-height: 10pt;text-align: left;">b<span class="s245">j</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>b<span class="s245">n</span></p><p class="s70" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">a<span class="s245">j</span> <span class="s245">+</span> <span class="s244">1</span><span class="s243"> ... </span>a<span class="s245">n</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s112" style="padding-top: 4pt;padding-left: 84pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 7.13 </span><span class="s74">Tabular representation of </span>α <span class="s246">→→ </span>β<span class="s74">.</span></p><p class="s68" style="padding-top: 9pt;padding-left: 119pt;text-indent: 0pt;text-align: left;">7.6.1 Multivalued Dependencies</p><p class="s13" style="padding-top: 5pt;padding-left: 119pt;text-indent: 0pt;line-height: 93%;text-align: justify;"><span class="p">Functional dependencies rule out certain tuples from being in a relation. If </span>A <span class="s86">→ </span>B<span class="p">, then we cannot have two tuples with the same </span>A <span class="p">value but diﬀerent </span>B <span class="p">values. Multival- ued dependencies, on the other hand, do not rule out the existence of certain tuples.</span></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">Instead, they <i>require </i>that other tuples of a certain form be present in the relation. For this reason, functional dependencies sometimes are referred to as <span class="s63">equality-generating dependencies</span>, and multivalued dependencies are referred to as <span class="s63">tuple-generating depen- dencies</span>.</p><p style="padding-left: 137pt;text-indent: 0pt;line-height: 19pt;text-align: justify;">Let <i>r</i>(<i>R</i>) bea relation schema and let <span class="s15">α </span><span class="s83">⊆ </span><i>R </i>and <span class="s15">β </span><span class="s83">⊆ </span><i>R</i>. The <span class="s63">multivalued dependency</span></p><p class="s15" style="padding-top: 6pt;padding-left: 84pt;text-indent: 0pt;text-align: center;">α <span class="s86">→→ </span>β</p><p style="padding-top: 12pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">holds on <i>R </i>if, in any legal instance of relation <i>r</i>(<i>R</i>), for all pairs of tuples <i>t</i><span class="s98">1</span> and <i>t</i><span class="s98">2</span> in <i>r</i></p><p class="s13" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;"><span class="p">such that </span>t<span class="s130">1</span><span class="s94">[</span><span class="s15">α</span><span class="p">] </span><span class="s15">= </span>t<span class="s130">2</span><span class="s94">[</span><span class="s15">α</span><span class="p">], there exist tuples </span>t<span class="s130">3 </span><span class="s94">and </span>t<span class="s130">4 </span><span class="s94">in </span>r <span class="p">such that</span></p><p class="s15" style="padding-top: 13pt;padding-left: 243pt;text-indent: 0pt;line-height: 86%;text-align: left;"><span class="s13">t</span><span class="s130">1</span><span class="s94">[</span>α<span class="p">] </span>= <span class="s13">t</span><span class="s130">2</span><span class="s94">[</span>α<span class="p">] </span>= <span class="s13">t</span><span class="s130">3</span><span class="s94">[</span>α<span class="p">] </span>= <span class="s13">t</span><span class="s130">4</span><span class="s94">[</span>α<span class="p">] </span><span class="s13">t</span><span class="s98">3</span><span class="p">[</span>β<span class="p">] </span>= <span class="s13">t</span><span class="s98">1</span><span class="p">[</span>β<span class="p">]</span></p><p class="s13" style="padding-left: 243pt;text-indent: 0pt;text-align: left;">t<span class="s98">3</span><span class="p">[</span>R <span class="s15">− β</span><span class="p">] </span><span class="s15">= </span>t<span class="s98">2</span><span class="p">[</span>R <span class="s15">− β</span><span class="p">]</span></p><p style="padding-left: 243pt;text-indent: 0pt;text-align: left;"><i>t</i><span class="s98">4</span>[<span class="s15">β</span>] <span class="s15">= </span><i>t</i><span class="s98">2</span>[<span class="s15">β</span>]</p><p class="s13" style="padding-left: 243pt;text-indent: 0pt;text-align: left;">t<span class="s98">4</span><span class="p">[</span>R <span class="s15">− β</span><span class="p">] </span><span class="s15">= </span>t<span class="s98">1</span><span class="p">[</span>R <span class="s15">− β</span><span class="p">]</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 119pt;text-indent: 0pt;line-height: 85%;text-align: justify;"><span class="p">This deﬁnition is less complicated than it appears to be. Figure 7.13 gives a tabular picture of </span><span class="s13">t</span><span class="s130">1</span><span class="s94">, </span><span class="s13">t</span><span class="s130">2</span><span class="s94">, </span><span class="s13">t</span><span class="s130">3</span><span class="s94">, and </span><span class="s13">t</span><span class="s130">4</span><span class="s94">. Intuitively, the multivalued dependency </span>α <span class="s86">→→ </span>β <span class="p">says that the relationship between </span>α <span class="p">and </span>β <span class="p">is independent of the relationship between </span>α <span class="p">and </span><span class="s13">R </span>− β<span class="p">. If the multivalued dependency </span>α <span class="s86">→→ </span>β <span class="p">is satisﬁed by all relations on schema </span><span class="s13">R</span><span class="p">, then </span>α <span class="s86">→→ </span>β <span class="p">is a </span><span class="s13">trivial </span><span class="p">multivalued dependency on schema </span><span class="s13">R</span><span class="p">. Thus, </span>α <span class="s86">→→ </span>β <span class="p">is trivial if</span></p><p class="s15" style="padding-left: 119pt;text-indent: 0pt;line-height: 65%;text-align: justify;">β <span class="s83">⊆ </span>α <span class="p">or </span>β∪α = <span class="s13">R</span><span class="p">. This can be seen by looking at Figure 7.13 and considering the two special cases </span>β <span class="s83">⊆ </span>α <span class="p">and </span>β∪α = <span class="s13">R</span><span class="p">. In each case, the table reduces to just two columns and we see that </span><span class="s13">t</span><span class="s130">1 </span><span class="s94">and </span><span class="s13">t</span><span class="s130">2 </span><span class="s94">are able to serve in the roles of </span><span class="s13">t</span><span class="s130">3 </span><span class="s94">and </span><span class="s13">t</span><span class="s130">4</span><span class="s94">.</span></p><p style="padding-left: 137pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">To illustrate the diﬀerence between functional and multivalued dependencies, we</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">consider the schema <i>r</i><span class="s98">2</span> again, and an example relation on that schema is shown in Fig- ure 7.14. We must repeat the department name once for each address that an instructor has, and we must repeat the address for each department with which an instructor is associated. This repetition is unnecessary, since the relationship between an instructor</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:164.464pt" cellspacing="0"><tr style="height:17pt"><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s70" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">ID</p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">dept name</p></td><td style="width:44pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-left: 3pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">street</p></td><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">city</p></td></tr><tr style="height:16pt"><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">22222</p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Physics</p></td><td style="width:44pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;line-height: 12pt;text-align: center;">North</p></td><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Rye</p></td></tr><tr style="height:13pt"><td style="width:45pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">22222</p></td><td style="width:61pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Physics</p></td><td style="width:44pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;line-height: 12pt;text-align: center;">Main</p></td><td style="width:69pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Manchester</p></td></tr><tr style="height:14pt"><td style="width:45pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">12121</p></td><td style="width:61pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Finance</p></td><td style="width:44pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 2pt;padding-right: 7pt;text-indent: 0pt;line-height: 12pt;text-align: center;">Lake</p></td><td style="width:69pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Horseneck</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2050.png"/></span></p><p class="s74" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 7.14 </span>An example of redundancy in a relation on a <span class="s157">BCNF </span>schema.</p><p style="padding-top: 8pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">and his address is independent of the relationship between that instructor and a de- partment. If an instructor with <span class="s69">ID </span>22222 is associated with the Physics department, we want that department to be associated with all of that instructor’s addresses. Thus, the relation of Figure 7.15 is illegal. To make this relation legal, we need to add the tuples (Physics, 22222, Main, Manchester) and (Math, 22222, North, Rye) to the relation of Figure 7.15.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">Comparing the preceding example with our deﬁnition of multivalued dependency, we see that we want the multivalued dependency:</p><p class="s13" style="padding-top: 4pt;padding-left: 236pt;text-indent: 0pt;text-align: justify;"><span class="s69">ID </span><span class="s86">→→ </span>street<span class="p">, </span>city</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2051.png"/></span></p><p style="padding-top: 4pt;padding-left: 88pt;text-indent: 0pt;line-height: 86%;text-align: justify;">to hold. (The multivalued dependency <span class="s69">ID </span><span class="s86">→→ </span><i>dept name </i>will do as well. We shall soon see that they are equivalent.)</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">As with functional dependencies, we shall use multivalued dependencies in two ways:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 113pt;text-indent: -16pt;text-align: justify;">1. <span class="p">To test relations to determine whether they are legal under a given set of func- tional and multivalued dependencies.</span></p><p style="padding-top: 6pt;padding-left: 113pt;text-indent: -17pt;text-align: justify;"><span class="s63">2. </span>To specify constraints on the set of legal relations; we shall thus concern ourselves with <i>only </i>those relations that satisfy a given set of functional and multivalued dependencies.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: right;">Note that, if a relation <i>r </i>fails to satisfy a given multivalued dependency, we can con- struct a relation <i>r</i><span class="s181">′</span><span class="s15"> </span>that <i>does </i>satisfy the multivalued dependency by adding tuples to <i>r</i>. Let <i>D </i>denote a set of functional and multivalued dependencies. The closure <i>D</i><span class="s181">+</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2052.png"/></span></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">of <i>D </i>is the set of all functional and multivalued dependencies logically implied by <i>D</i>. As we did for functional dependencies, we can compute <i>D</i><span class="s181">+</span><span class="s15"> </span>from <i>D</i>, using the formal deﬁnitions of functional dependencies and multivalued dependencies. We can manage</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:164.464pt" cellspacing="0"><tr style="height:17pt"><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s70" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">ID</p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">dept name</p></td><td style="width:44pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-left: 3pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">street</p></td><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F" bgcolor="#C6E9FA"><p class="s71" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">city</p></td></tr><tr style="height:16pt"><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">22222</p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Physics</p></td><td style="width:44pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 6pt;padding-right: 6pt;text-indent: 0pt;line-height: 12pt;text-align: center;">North</p></td><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-top-color:#221E1F;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Rye</p></td></tr><tr style="height:14pt"><td style="width:45pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">22222</p></td><td style="width:61pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Math</p></td><td style="width:44pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;line-height: 12pt;text-align: center;">Main</p></td><td style="width:69pt;border-left-style:solid;border-left-width:1pt;border-left-color:#221E1F;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#221E1F;border-right-style:solid;border-right-width:1pt;border-right-color:#221E1F"><p class="s72" style="padding-left: 8pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Manchester</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s74" style="padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: center;"><span class="s73">Figure 7.15 </span>An illegal <span class="s190">r</span><span class="s116">2</span> relation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">with such reasoning for very simple multivalued dependencies. Luckily, multivalued dependencies that occur in practice appear to be quite simple. For complex dependen- cies, it is better to reason about sets of dependencies by using a system of inference rules.</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 17pt;line-height: 84%;text-align: justify;">From the deﬁnition of multivalued dependency, we can derive the following rules for <span class="s15">α</span>, <span class="s15">β </span><span class="s83">⊆ </span><i>R</i>:</p><p class="s15" style="padding-top: 4pt;padding-left: 139pt;text-indent: -16pt;line-height: 86%;text-align: justify;"><span class="s39">• </span><span class="s40">If </span>α <span class="s86">→ </span>β<span class="p">, then </span>α <span class="s86">→→ </span>β<span class="p">. In other words, every functional dependency is also a multivalued dependency.</span></p><p class="s15" style="padding-top: 4pt;padding-left: 123pt;text-indent: 0pt;text-align: justify;"><span class="s39">• </span><span class="s40">If </span>α <span class="s86">→→ </span>β<span class="p">, then </span>α <span class="s86">→→ </span><span class="s13">R </span>− α − β </p><p style="padding-top: 7pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Section 28.1.1 outlines a system of inference rules for multivalued dependencies.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">7.6.2 Fourth Normal Form</p><p style="padding-top: 6pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">Consider again our example of the <span class="s44">BCNF </span>schema:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2053.png"/></span></p><p style="padding-top: 9pt;padding-left: 244pt;text-indent: 0pt;text-align: left;"><i>r</i><span class="s98">2</span> (<span class="s69">ID</span>, <i>dept name</i>, <i>street</i>, <i>city</i>)</p><p style="padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;line-height: 93%;text-align: justify;">in which the multivalued dependency <span class="s69">ID </span><span class="s86">→→ </span><i>street</i>, <i>city </i>holds. We saw in the opening paragraphs of Section 7.6 that, although this schema is in <span class="s44">BCNF</span>, the design is not ideal, since we must repeat an instructor’s address information for each department. We shall</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">see that we can use the given multivalued dependency to improve the database design by decomposing this schema into a <b>fourth normal form </b>decomposition.</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 17pt;line-height: 91%;text-align: justify;">A relation schema <i>R </i>is in <span class="s63">fourth normal form </span>(<span class="s64">4NF</span>) with respect to a set <i>D </i>of functional and multivalued dependencies if, for all multivalued dependencies in <i>D</i><span class="s181">+</span><span class="s15"> </span>of the form <span class="s15">α </span><span class="s86">→→ </span><span class="s15">β</span>, where <span class="s15">α </span><span class="s83">⊆ </span><i>R </i>and <span class="s15">β </span><span class="s83">⊆ </span><i>R</i>, at least one of the following holds:</p><p class="s15" style="padding-top: 4pt;padding-left: 123pt;text-indent: 0pt;text-align: justify;"><span class="s39">• </span>α <span class="s86">→→ </span>β <span class="p">is a trivial multivalued dependency.</span></p><p style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: justify;"><span class="s39">• </span><span class="s15">α </span>is a superkey for <i>R</i>.</p><p style="padding-top: 11pt;padding-left: 119pt;text-indent: 0pt;text-align: justify;">A database design is in <span class="s44">4NF </span>if each member of the set of relation schemas that consti- tutes the design is in 4NF.</p><p style="padding-left: 119pt;text-indent: 17pt;line-height: 94%;text-align: justify;">Note that the deﬁnition of <span class="s44">4NF </span>diﬀers from the deﬁnition of <span class="s44">BCNF </span>in only the use of multivalued dependencies. Every <span class="s44">4NF </span>schema is in <span class="s44">BCNF</span>. To see this fact, we note that, if a schema <i>R </i>is not in <span class="s44">BCNF</span>, then there is a nontrivial functional dependency <span class="s15">α </span><span class="s86">→ </span><span class="s15">β </span>holding on <i>R</i>, where <span class="s15">α </span>is not a superkey. Since <span class="s15">α </span><span class="s86">→ </span><span class="s15">β </span>implies <span class="s15">α </span><span class="s86">→→ </span><span class="s15">β</span>, <i>R </i>cannot be in <span class="s44">4NF</span>.</p><p style="padding-top: 1pt;padding-left: 119pt;text-indent: 17pt;line-height: 88%;text-align: justify;">Let <i>R </i>be a relation schema, and let <i>R</i><span class="s98">1</span>, <i>R</i><span class="s98">2</span>, <span class="s15">… </span>, <i>R</i><span class="s97">n </span>be a decomposition of <i>R</i>. To check if each relation schema <i>R</i><span class="s97">i </span>in the decomposition is in <span class="s44">4NF</span>, we need to ﬁnd what multivalued dependencies hold on each <i>R</i><span class="s145">i</span>. Recall that, fora set <i>F </i>of functional depen- dencies, the restriction <i>F</i><span class="s145">i </span>of <i>F </i>to <i>R</i><span class="s145">i </span>is all functional dependencies in <i>F </i><span class="s181">+</span><span class="s15"> </span>that include <i>only </i>attributes of <i>R</i><span class="s97">i</span>. Now consider a set <i>D </i>of both functional and multivalued depen- dencies. The <span class="s63">restriction </span>of <i>D </i>to <i>R</i><span class="s97">i </span>is the set <i>D</i><span class="s97">i </span>consisting of:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 97pt;text-indent: 0pt;text-align: left;"><span class="s63">1. </span>All functional dependencies in <i>D</i><span class="s181">+</span><span class="s15"> </span>that include only attributes of <i>R</i><span class="s97">i</span>.</p><p class="s63" style="padding-top: 4pt;padding-left: 96pt;text-indent: 0pt;text-align: left;">2. <span class="p">All multivalued dependencies of the form:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 84pt;text-indent: 0pt;text-align: center;">α <span class="s86">→→ </span>β ∩ <span class="s13">R</span><span class="s145">i</span></p><p style="padding-top: 8pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">where <span class="s15">α </span><span class="s83">⊆ </span><i>R</i><span class="s145">i </span>and <span class="s15">α </span><span class="s86">→→ </span><span class="s15">β </span>is in <i>D</i><span class="s181">+</span>.</p><p class="s68" style="padding-top: 7pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">7.6.3 4NF Decomposition</p><p style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: justify;">The analogy between <span class="s44">4NF </span>and <span class="s44">BCNF </span>applies to the algorithm for decomposing a schema into <span class="s44">4NF</span>. Figure 7.16 shows the <span class="s44">4NF </span>decomposition algorithm. It is identical to the <span class="s44">BCNF </span>decomposition algorithm of Figure 7.11, except that it uses multivalued dependencies and uses the restriction of <i>D</i><span class="s181">+</span><span class="s15"> </span>to <i>R</i><span class="s97">i</span>.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2054.png"/></span></p><p style="padding-left: 106pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">If we apply the algorithm of Figure 7.16 to (<span class="s69">ID</span>, <i>dept name</i>, <i>street</i>, <i>city</i>), we ﬁnd that</p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2055.png"/></span></p><p class="s69" style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;line-height: 85%;text-align: justify;">ID<span class="s86">→→ </span><span class="s13">dept name </span><span class="p">is a nontrivial multivalued dependency, and </span>ID <span class="p">is not a superkey for the schema. Following the algorithm, we replace it with two schemas:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="4" height="1" alt="image" src="Image_2056.png"/></span></p><p style="padding-left: 249pt;text-indent: 0pt;text-align: center;">(<span class="s69">ID</span>, <i>dept name</i>) (<span class="s69">ID</span>, <i>street</i>, <i>city</i>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;text-align: justify;">This pair of schemas, which is in <span class="s44">4NF</span>, eliminates the redundancy we encountered ear- lier.</p><p style="padding-left: 88pt;text-indent: 17pt;text-align: justify;">As was the case when we were dealing solely with functional dependencies, we are interested in decompositions that are lossless and that preserve dependencies. The fol- lowing fact about multivalued dependencies and losslessness shows that the algorithm of Figure 7.16 generates only lossless decompositions:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2057.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 5pt;padding-left: 114pt;text-indent: 0pt;text-align: left;">result <span class="p">:</span><span class="s15">= </span><span class="s95">{</span>R<span class="s95">}</span><span class="p">;</span></p><p style="padding-left: 114pt;text-indent: 0pt;text-align: left;"><i>done </i>:<span class="s15">= </span>false;</p><p class="s13" style="padding-left: 114pt;text-indent: 0pt;line-height: 14pt;text-align: left;">compute D<span class="s181">+</span><span class="p">; Given schema </span>R<span class="s97">i</span><span class="p">, let </span>D<span class="s97">i </span><span class="p">denote the restriction of </span>D<span class="s181">+</span><span class="s15"> </span><span class="p">to </span>R<span class="s97">i</span></p><p class="s46" style="padding-left: 114pt;text-indent: 0pt;line-height: 12pt;text-align: left;">while <span class="p">(</span>not <i>done</i><span class="p">) </span>do</p><p style="padding-left: 126pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><b>if </b>(there is a schema <i>R</i><span class="s97">i </span>in <i>result </i>that is not in <span class="s224">4NF w.r.t. </span><span class="s200">D</span><span class="s247">i </span>)</p><p class="s46" style="padding-left: 135pt;text-indent: 0pt;line-height: 11pt;text-align: left;">then begin</p><p style="padding-top: 2pt;padding-left: 171pt;text-indent: 0pt;line-height: 77%;text-align: left;">let <span class="s15">α </span><span class="s86">→→ </span><span class="s15">β </span>be a nontrivial multivalued dependency that holds on <i>R</i><span class="s145">i </span>such that <span class="s15">α </span><span class="s86">→ </span><i>R</i><span class="s145">i </span>is not in <i>D</i><span class="s145">i</span>, and <span class="s15">α ∩ β = ∅</span>;</p><p style="padding-left: 171pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><i>result </i>:<span class="s15">= </span>(<i>result </i><span class="s15">− </span><i>R</i><span class="s97">i</span>) <span class="s15">∪ </span>(<i>R</i><span class="s97">i </span><span class="s15">− β</span>) <span class="s15">∪ </span>(<span class="s15">α</span>, <span class="s15">β</span>);</p><p class="s46" style="padding-left: 156pt;text-indent: 0pt;line-height: 12pt;text-align: left;">end</p><p style="padding-left: 135pt;text-indent: 0pt;text-align: left;"><b>else </b><i>done </i>:<span class="s15">= </span>true;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 88pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="494" height="1" alt="image" src="Image_2058.png"/></span></p><p class="s73" style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;text-align: center;">Figure 7.16 <span class="s74">4NF decomposition algorithm.</span></p><p class="s66" style="padding-top: 3pt;padding-left: 119pt;text-indent: 0pt;text-align: right;"><a name="bookmark140">7.7 </a><span style=" color: #00AEEF;">More Normal Forms  </span><span class="s164">341</span><a name="bookmark168">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 139pt;text-indent: -16pt;text-align: justify;"><span class="s39">• </span><span class="s40">Let </span>r<span class="p">(</span>R<span class="p">) be a relation schema, and let </span>D <span class="p">be a set of functional and multivalued dependencies on </span>R<span class="p">. Let </span>r<span class="s130">1</span><span class="s94">(</span>R<span class="s130">1</span><span class="s94">) and </span>r<span class="s130">2</span><span class="s94">(</span>R<span class="s130">2</span><span class="s94">) form a decomposition of </span>R<span class="p">. This de- composition of </span>R <span class="p">is lossless if and only if at least one of the following multivalued dependencies is in </span>D<span class="s181">+</span><span class="p">:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 6pt;padding-left: 287pt;text-indent: 0pt;line-height: 77%;text-align: center;">R<span class="s93">1 </span><span class="s15">∩ </span>R<span class="s93">2 </span><span class="s86">→→ </span>R<span class="s93">1 </span>R<span class="s93">1 </span><span class="s15">∩ </span>R<span class="s93">2 </span><span class="s86">→→ </span>R<span class="s93">2</span></p><p class="s13" style="padding-top: 11pt;padding-left: 119pt;text-indent: 0pt;line-height: 91%;text-align: justify;"><span class="p">Recall that we stated in Section 7.2.3 that, if </span>R<span class="s130">1 </span><span class="s15">∩ </span>R<span class="s130">2 </span><span class="s86">→ </span>R<span class="s130">1 </span><span class="s94">or </span>R<span class="s130">1 </span><span class="s15">∩ </span>R<span class="s130">2 </span><span class="s86">→ </span>R<span class="s130">2</span><span class="s94">, then </span>r<span class="s130">1</span><span class="s94">(</span>R<span class="s130">1</span><span class="s94">) and </span>r<span class="s130">2</span><span class="s94">(</span>R<span class="s130">2</span><span class="s94">) forms a lossless decomposition of </span>r<span class="p">(</span>R<span class="p">). The preceding fact about multivalued dependencies is a more general statement about losslessness. It says that, for </span>every <span class="p">lossless decomposition of </span>r<span class="p">(</span>R<span class="p">) into two schemas </span>r<span class="s93">1</span><span class="s94">(</span>R<span class="s93">1</span><span class="s94">) and </span>r<span class="s93">2</span><span class="s94">(</span>R<span class="s93">2</span><span class="s94">), one of</span></p><p class="s13" style="padding-left: 119pt;text-indent: 0pt;line-height: 13pt;text-align: justify;"><span class="p">the two dependencies </span>R<span class="s93">1 </span><span class="s15">∩ </span>R<span class="s93">2 </span><span class="s86">→→ </span>R<span class="s93">1 </span><span class="s94">or </span>R<span class="s93">1 </span><span class="s15">∩ </span>R<span class="s93">2 </span><span class="s86">→→ </span>R<span class="s93">2 </span><span class="s94">must hold. To see that this</span></p><p style="padding-left: 119pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">is true, we need to show ﬁrst that if at least one of these dependencies holds, then</p><p class="s13" style="padding-left: 119pt;text-indent: 0pt;line-height: 11pt;text-align: justify;"><span class="s15">Π</span><span class="s123">R</span> <span class="p">(</span>r<span class="p">) </span><span class="s86">⋈ </span><span class="s15">Π</span><span class="s123">R</span> <span class="p">(</span>r<span class="p">) </span><span class="s15">= </span>r <span class="p">and next we need to show that if </span><span class="s15">Π</span><span class="s123">R</span> <span class="p">(</span>r<span class="p">) </span><span class="s86">⋈ </span><span class="s15">Π</span><span class="s123">R</span> <span class="p">(</span>r<span class="p">) </span><span class="s15">= </span>r <span class="p">then </span>r<span class="p">(</span>R<span class="p">)</span></p><p class="s150" style="padding-left: 132pt;text-indent: 0pt;line-height: 3pt;text-align: left;">1       2                               1       2</p><p style="padding-left: 119pt;text-indent: 0pt;text-align: justify;">must satisfy at least one of these dependencies. See the Further Reading section for references to a full proof.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">The issue of dependency preservation when we decompose a relation schema be- comes more complicated in the presence of multivalued dependencies. Section 28.1.2 pursues this topic.</p><p style="padding-left: 119pt;text-indent: 17pt;text-align: justify;">A further complication arises from the fact that it is possible for a multivalued dependency to hold only on a proper subset of the given schema, with no way to express that multivalued dependency on that given schema. Such a multivalued dependency may appear as the result of a decomposition. Fortunately, such cases, called <span class="s63">embedded multivalued dependencies</span>, are rare. See the Further Reading section for details.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part156.htm">&lt; 上一个</a><span> | </span><a href="../database.html">内容</a><span> | </span><a href="part158.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
