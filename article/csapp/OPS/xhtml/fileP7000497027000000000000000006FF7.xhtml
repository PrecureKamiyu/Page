<?xml version='1.0' encoding='utf-8'?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
  <head>
    <meta name="dcterms.conformsTo" content="PXE Basic 1.0"/>
    <meta name="generator" content="PXE Tools version 1.39.52"/>
    <!--Created by pxe.pl for standard version PXE Basic 1.0,data-profile-product=standard by PXE Tools 1.39.52, partial=false-->
    <title>Chapter 9 Virtual Memory</title>
    <link rel="alternate stylesheet" type="text/css" title="night" href="../css/theme/night.css"/>
    <link rel="alternate stylesheet" type="text/css" title="sepia" href="../css/theme/sepia.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body epub:type="bodymatter" class="calibre pcalibre pcalibre1">
<section class="pcalibre halftitlepage pcalibre1" id="P7000497027000000000000000006FF7" epub:type="chapter"><header class="calibre24 pcalibre pcalibre1"><h1 class="title4 pcalibre pcalibre1" id="P70004970270000000000000000457BB" data-uri="chapter09.xhtml#P70004970270000000000000000457BB" epub:type="title"><span class="pcalibre pagebreak pcalibre1" id="P7000497027000000000000000006FF9" title="801" data-uri="chapter09.xhtml#P7000497027000000000000000006FF9" epub:type="pagebreak"></span><span class="pcalibre label pcalibre1">Chapter </span><span class="pcalibre number1 pcalibre1">9 </span>Virtual Memory</h1></header>
<section class="pcalibre halftitlepage pcalibre1" id="d9e150648">
<nav class="pcalibre halftitlepage pcalibre1" id="P70004970270000000000000000457BC" data-uri="chapter09.xhtml#P70004970270000000000000000457BC" epub:type="toc">
<div class="edition pcalibre pcalibre1" id="P70004970270000000000000000457BD" data-uri="chapter09.xhtml#P70004970270000000000000000457BD">
<ol class="tocentrylist pcalibre pcalibre1" id="P70004970270000000000000000457BE" data-uri="chapter09.xhtml#P70004970270000000000000000457BE">
<li id="P70004970270000000000000000457BF" data-uri="chapter09.xhtml#P70004970270000000000000000457BF" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457C0" data-uri="chapter09.xhtml#P70004970270000000000000000457C0" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000702F.xhtml#P700049702700000000000000000702F"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.1 </span>Physical and Virtual Addressing </span><span class="pcalibre pcalibre1" epub:type="pagebreak">803</span></a></p></li>
<li id="P70004970270000000000000000457C1" data-uri="chapter09.xhtml#P70004970270000000000000000457C1" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457C2" data-uri="chapter09.xhtml#P70004970270000000000000000457C2" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000703D.xhtml#P700049702700000000000000000703D"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.2 </span>Address Spaces </span><span class="pcalibre pcalibre1" epub:type="pagebreak">804</span></a></p></li>
<li id="P70004970270000000000000000457C3" data-uri="chapter09.xhtml#P70004970270000000000000000457C3" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457C4" data-uri="chapter09.xhtml#P70004970270000000000000000457C4" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000007062.xhtml#P7000497027000000000000000007062"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.3 </span>VM as a Tool for Caching </span><span class="pcalibre pcalibre1" epub:type="pagebreak">805</span></a></p></li>
<li id="P70004970270000000000000000457C5" data-uri="chapter09.xhtml#P70004970270000000000000000457C5" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457C6" data-uri="chapter09.xhtml#P70004970270000000000000000457C6" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000070D3.xhtml#P70004970270000000000000000070D3"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.4 </span>VM as a Tool for Memory Management </span><span class="pcalibre pcalibre1" epub:type="pagebreak">811</span></a></p></li>
<li id="P70004970270000000000000000457C7" data-uri="chapter09.xhtml#P70004970270000000000000000457C7" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457C8" data-uri="chapter09.xhtml#P70004970270000000000000000457C8" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000070EA.xhtml#P70004970270000000000000000070EA"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.5 </span>VM as a Tool for Memory Protection </span><span class="pcalibre pcalibre1" epub:type="pagebreak">812</span></a></p></li>
<li id="P70004970270000000000000000457C9" data-uri="chapter09.xhtml#P70004970270000000000000000457C9" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457CA" data-uri="chapter09.xhtml#P70004970270000000000000000457CA" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000070F6.xhtml#P70004970270000000000000000070F6"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.6 </span>Address Translation </span><span class="pcalibre pcalibre1" epub:type="pagebreak">813</span></a></p></li>
<li id="P70004970270000000000000000457CB" data-uri="chapter09.xhtml#P70004970270000000000000000457CB" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457CC" data-uri="chapter09.xhtml#P70004970270000000000000000457CC" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000007216.xhtml#P7000497027000000000000000007216"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.7 </span>Case Study: The Intel Core i7/Linux Memory System </span><span class="pcalibre pcalibre1" epub:type="pagebreak">825</span></a></p></li>
<li id="P70004970270000000000000000457CD" data-uri="chapter09.xhtml#P70004970270000000000000000457CD" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457CE" data-uri="chapter09.xhtml#P70004970270000000000000000457CE" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000072B5.xhtml#P70004970270000000000000000072B5"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.8 </span>Memory Mapping </span><span class="pcalibre pcalibre1" epub:type="pagebreak">833</span></a></p></li>
<li id="P70004970270000000000000000457CF" data-uri="chapter09.xhtml#P70004970270000000000000000457CF" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457D0" data-uri="chapter09.xhtml#P70004970270000000000000000457D0" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000733C.xhtml#P700049702700000000000000000733C"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.9 </span>Dynamic Memory Allocation </span><span class="pcalibre pcalibre1" epub:type="pagebreak">839</span></a></p></li>
<li id="P70004970270000000000000000457D1" data-uri="chapter09.xhtml#P70004970270000000000000000457D1" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457D2" data-uri="chapter09.xhtml#P70004970270000000000000000457D2" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000007565.xhtml#P7000497027000000000000000007565"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.10 </span>Garbage Collection </span><span class="pcalibre pcalibre1" epub:type="pagebreak">865</span></a></p></li>
<li id="P70004970270000000000000000457D3" data-uri="chapter09.xhtml#P70004970270000000000000000457D3" class="tocpreface pcalibre pcalibre1" data-class="toclevel1"><p id="P70004970270000000000000000457D4" data-uri="chapter09.xhtml#P70004970270000000000000000457D4" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP70004970270000000000000000075E8.xhtml#P70004970270000000000000000075E8"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.11 </span>Common Memory-Related Bugs in C Programs </span><span class="pcalibre pcalibre1" epub:type="pagebreak">870</span></a></p></li>
</ol>
</div>
<div class="edition pcalibre pcalibre1" id="P70004970270000000000000000457D5" data-uri="chapter09.xhtml#P70004970270000000000000000457D5">
<ol class="tocentrylist pcalibre pcalibre1" id="P70004970270000000000000000457D6" data-uri="chapter09.xhtml#P70004970270000000000000000457D6">
<li class="tocpreface pcalibre pcalibre1" id="P70004970270000000000000000457D7" data-uri="chapter09.xhtml#P70004970270000000000000000457D7"><p id="P70004970270000000000000000457D8" data-uri="chapter09.xhtml#P70004970270000000000000000457D8" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000007654.xhtml#P7000497027000000000000000007654"><span class="pcalibre pcalibre1" epub:type="title"><span class="pcalibre label pcalibre1">9.12 </span><span class="pcalibre label pcalibre1">Summary</span> </span><span class="pcalibre pcalibre1" epub:type="pagebreak">875</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P70004970270000000000000000457D9" data-uri="chapter09.xhtml#P70004970270000000000000000457D9"><p id="P70004970270000000000000000457DA" data-uri="chapter09.xhtml#P70004970270000000000000000457DA" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000765E.xhtml#P700049702700000000000000000765E"><span class="pcalibre pcalibre1" epub:type="title">Bibliographic Notes</span> <span class="pcalibre pcalibre1" epub:type="pagebreak">876</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P70004970270000000000000000457DB" data-uri="chapter09.xhtml#P70004970270000000000000000457DB"><p id="P70004970270000000000000000457DC" data-uri="chapter09.xhtml#P70004970270000000000000000457DC" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP7000497027000000000000000007663.xhtml#P7000497027000000000000000007663"><span class="pcalibre pcalibre1" epub:type="title">Homework Problems </span><span class="pcalibre pcalibre1" epub:type="pagebreak">876</span></a></p></li>
<li class="tocpreface pcalibre pcalibre1" id="P70004970270000000000000000457DD" data-uri="chapter09.xhtml#P70004970270000000000000000457DD"><p id="P70004970270000000000000000457DE" data-uri="chapter09.xhtml#P70004970270000000000000000457DE" class="pcalibre calibre3 pcalibre1"><a class="xref pcalibre pcalibre4 pcalibre2 pcalibre3 pcalibre1" href="fileP700049702700000000000000000777C.xhtml#P700049702700000000000000000777C"><span class="pcalibre pcalibre1" epub:type="title">Solutions to Practice Problems </span><span class="pcalibre pcalibre1" epub:type="pagebreak">880</span></a></p></li>
</ol></div>
</nav>

<section id="P70004970270000000000000000457DF" data-uri="chapter09.xhtml#P70004970270000000000000000457DF" epub:type="introduction" class="introduction pcalibre pcalibre1">
<p id="P70004970270000000000000000457E0" data-uri="chapter09.xhtml#P70004970270000000000000000457E0" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000701F" title="802" data-uri="chapter09.xhtml#P700049702700000000000000000701F" epub:type="pagebreak"></span>Processes in a system share the CPU and main memory with other processes. However, sharing the main memory poses some special challenges. As demand on the CPU increases, processes slow down in some reasonably smooth way. But if too many processes need too much memory, then some of them will simply not be able to run. When a program is out of space, it is out of luck. Memory is also vulnerable to corruption. If some process inadvertently writes to the memory used by another process, that process might fail in some bewildering fashion totally unrelated to the program logic.</p>
<p id="P70004970270000000000000000457E1" data-uri="chapter09.xhtml#P70004970270000000000000000457E1" class="pcalibre1 pcalibre calibre2">In order to manage memory more efficiently and with fewer errors, modern systems provide an abstraction of main memory known as <i class="calibre5 pcalibre pcalibre1">virtual memory (VM).</i> Virtual memory is an elegant interaction of hardware exceptions, hardware address translation, main memory, disk files, and kernel software that provides each process with a large, uniform, and private address space. With one clean mechanism, virtual memory provides three important capabilities: (1) It uses main memory efficiently by treating it as a cache for an address space stored on disk, keeping only the active areas in main memory and transferring data back and forth between disk and memory as needed. (2) It simplifies memory management by providing each process with a uniform address space. (3) It protects the address space of each process from corruption by other processes.</p>
<p id="P70004970270000000000000000457E2" data-uri="chapter09.xhtml#P70004970270000000000000000457E2" class="pcalibre1 pcalibre calibre2">Virtual memory is one of the great ideas in computer systems. A major reason for its success is that it works silently and automatically, without any intervention from the application programmer. Since virtual memory works so well behind the scenes, why would a programmer need to understand it? There are several reasons.</p>
<ul id="P70004970270000000000000000457E3" data-uri="chapter09.xhtml#P70004970270000000000000000457E3" class="calibre28 pcalibre pcalibre1">
<li id="P70004970270000000000000000457E4" data-uri="chapter09.xhtml#P70004970270000000000000000457E4" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000457E5" data-uri="chapter09.xhtml#P70004970270000000000000000457E5" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Virtual memory is central. </span>Virtual memory pervades all levels of computer systems, playing key roles in the design of hardware exceptions, assemblers, linkers, loaders, shared objects, files, and processes. Understanding virtual memory will help you better understand how systems work in general.</p></li>
<li id="P70004970270000000000000000457E6" data-uri="chapter09.xhtml#P70004970270000000000000000457E6" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000457E7" data-uri="chapter09.xhtml#P70004970270000000000000000457E7" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Virtual memory is powerful. </span>Virtual memory gives applications powerful capabilities to create and destroy chunks of memory, map chunks of memory to portions of disk files, and share memory with other processes. For example, did you know that you can read or modify the contents of a disk file by reading and writing memory locations? Or that you can load the contents of a file into memory without doing any explicit copying? Understanding virtual memory will help you harness its powerful capabilities in your applications.</p></li>
<li id="P70004970270000000000000000457E8" data-uri="chapter09.xhtml#P70004970270000000000000000457E8" class="calibre12 pcalibre pcalibre1"><p id="P70004970270000000000000000457E9" data-uri="chapter09.xhtml#P70004970270000000000000000457E9" class="pcalibre calibre3 pcalibre1"><span class="pcalibre leadin pcalibre1">Virtual memory is dangerous. </span>Applications interact with virtual memory every time they reference a variable, dereference a pointer, or make a call to a dynamic allocation package such as <code id="P70004970270000000000000000457EA" data-uri="chapter09.xhtml#P70004970270000000000000000457EA" class="calibre25 pcalibre pcalibre1">malloc</code>. If virtual memory is used improperly, applications can suffer from perplexing and insidious memory-related bugs. For example, a program with a bad pointer can crash immediately with a "segmentation fault" or a "protection fault," run silently for hours before crashing, or scariest of all, run to completion with incorrect results. Understanding virtual memory, and the allocation packages such as <code id="P70004970270000000000000000457EB" data-uri="chapter09.xhtml#P70004970270000000000000000457EB" class="calibre25 pcalibre pcalibre1">malloc</code> that manage it, can help you avoid these errors.</p></li>
</ul>
<p id="P70004970270000000000000000457EC" data-uri="chapter09.xhtml#P70004970270000000000000000457EC" class="pcalibre1 pcalibre calibre2"><span class="pcalibre pagebreak pcalibre1" id="P700049702700000000000000000702C" title="803" data-uri="chapter09.xhtml#P700049702700000000000000000702C" epub:type="pagebreak"></span>This chapter looks at virtual memory from two angles. The first half of the chapter describes how virtual memory works. The second half describes how virtual memory is used and managed by applications. There is no avoiding the fact that VM is complicated, and the discussion reflects this in places. The good news is that if you work through the details, you will be able to simulate the virtual memory mechanism of a small system by hand, and the virtual memory idea will be forever demystified.</p>
<p id="P70004970270000000000000000457ED" data-uri="chapter09.xhtml#P70004970270000000000000000457ED" class="pcalibre1 pcalibre calibre2">The second half builds on this understanding, showing you how to use and manage virtual memory in your programs. You will learn how to manage virtual memory via explicit memory mapping and calls to dynamic storage allocators such as the <code id="P70004970270000000000000000457EE" data-uri="chapter09.xhtml#P70004970270000000000000000457EE" class="calibre25 pcalibre pcalibre1">malloc</code> package. You will also learn about a host of common memory-related errors in C programs and how to avoid them.</p>
</section>

</section>
<!--EOF:P700049702700000000000000000702F-->
<!--EOF:P700049702700000000000000000703D-->
<!--EOF:P7000497027000000000000000007062-->
<!--EOF:P70004970270000000000000000070D3-->
<!--EOF:P70004970270000000000000000070EA-->
<!--EOF:P70004970270000000000000000070F6-->
<!--EOF:P7000497027000000000000000007216-->
<!--EOF:P70004970270000000000000000072B5-->
<!--EOF:P700049702700000000000000000733C-->
<!--EOF:P7000497027000000000000000007565-->
<!--EOF:P70004970270000000000000000075E8-->

<!--EOF:P7000497027000000000000000007654-->
<!--EOF:P700049702700000000000000000765E-->
<!--EOF:P7000497027000000000000000007663-->
<!--EOF:P700049702700000000000000000777C-->


</section></body></html>
